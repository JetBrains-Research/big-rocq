{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/imm/src/hardware/Power_ppo.v","fileSamples":[{"statement":"(WF : Wf G) : ctrli ⊆ ⦗E⦘ ⨾ ctrli ⨾ ⦗E⦘.","conclusion":"ctrli ⊆ ⦗E⦘ ⨾ ctrli ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ctrli.\nsin_rewrite (wf_ctrlE WF).\nsin_rewrite (wf_sbE).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb ⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ ⦗E⦘.","conclusion":"⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb ⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (wf_ctrlE WF).\nsin_rewrite (wf_sbE).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗F^isync⦘ ⨾ sb\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ ⦗E⦘.","conclusion":"⦗R⦘ ⨾ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗F^isync⦘ ⨾ sb\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (wf_sbE).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗F^isync⦘ ⨾ ⦗E⦘ ⨾ sb ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ ⦗E⦘.","conclusion":"⦗R⦘ ⨾ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗F^isync⦘ ⨾ ⦗E⦘ ⨾ sb ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : rdw ⊆ ⦗E⦘ ⨾ rdw ⨾ ⦗E⦘.","conclusion":"rdw ⊆ ⦗E⦘ ⨾ rdw ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold rdw.\nsin_rewrite (wf_freE WF).\nsin_rewrite (wf_rfeE WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : (fre ⨾ rfe) ∩ sb ⊆ ⦗E⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗E⦘.","conclusion":"(fre ⨾ rfe) ∩ sb ⊆ ⦗E⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (wf_freE WF).\nsin_rewrite (wf_rfeE WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ((⦗E⦘ ⨾ fre ⨾ ⦗E⦘) ⨾ rfe) ∩ sb ⊆ ⦗E⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗E⦘.","conclusion":"((⦗E⦘ ⨾ fre ⨾ ⦗E⦘) ⨾ rfe) ∩ sb ⊆ ⦗E⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (wf_rfeE WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ((⦗E⦘ ⨾ fre ⨾ ⦗E⦘) ⨾ ⦗E⦘ ⨾ rfe ⨾ ⦗E⦘) ∩ sb ⊆ ⦗E⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗E⦘.","conclusion":"((⦗E⦘ ⨾ fre ⨾ ⦗E⦘) ⨾ ⦗E⦘ ⨾ rfe ⨾ ⦗E⦘) ∩ sb ⊆ ⦗E⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ii0 ⊆ ⦗E⦘ ⨾ ii0 ⨾ ⦗E⦘.","conclusion":"ii0 ⊆ ⦗E⦘ ⨾ ii0 ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ii0.\nrewrite (wf_addrE WF) at 1.\nrewrite (wf_dataE WF) at 1.\nrewrite (wf_rdwE WF) at 1.\nrewrite (wf_rfiE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : addr ∪ data ∪ rdw ∪ rfi ⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘.","conclusion":"addr ∪ data ∪ rdw ∪ rfi ⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_addrE WF) at 1.\nrewrite (wf_dataE WF) at 1.\nrewrite (wf_rdwE WF) at 1.\nrewrite (wf_rfiE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ data ∪ rdw ∪ rfi ⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ data ∪ rdw ∪ rfi ⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_dataE WF) at 1.\nrewrite (wf_rdwE WF) at 1.\nrewrite (wf_rfiE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ rdw ∪ rfi\n⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ rdw ∪ rfi\n⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rdwE WF) at 1.\nrewrite (wf_rfiE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rdw ⨾ ⦗E⦘ ∪ rfi\n⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rdw ⨾ ⦗E⦘ ∪ rfi\n⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfiE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rdw ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rfi ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ addr ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rdw ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rfi ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ci0 ⊆ ⦗E⦘ ⨾ ci0 ⨾ ⦗E⦘.","conclusion":"ci0 ⊆ ⦗E⦘ ⨾ ci0 ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ci0.\nrewrite (wf_ctrliE WF) at 1.\nrewrite (wf_detourE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗E⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗E⦘.","conclusion":"ctrli ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗E⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_ctrliE WF) at 1.\nrewrite (wf_detourE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ ctrli ⨾ ⦗E⦘) ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗E⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ ctrli ⨾ ⦗E⦘) ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗E⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_detourE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ ctrli ⨾ ⦗E⦘) ⨾ ⦗RW⦘ ∪ ⦗E⦘ ⨾ detour ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ ctrli ⨾ ⦗E⦘) ⨾ ⦗RW⦘ ∪ ⦗E⦘ ⨾ detour ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : cc0 ⊆ ⦗E⦘ ⨾ cc0 ⨾ ⦗E⦘.","conclusion":"cc0 ⊆ ⦗E⦘ ⨾ cc0 ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold cc0.\nrewrite (wf_dataE WF) at 1.\nrewrite (wf_ctrlE WF) at 1.\nrewrite (wf_addrE WF) at 1.\nrewrite (wf_sbE) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘.","conclusion":"data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_dataE WF) at 1.\nrewrite (wf_ctrlE WF) at 1.\nrewrite (wf_addrE WF) at 1.\nrewrite (wf_sbE) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_ctrlE WF) at 1.\nrewrite (wf_addrE WF) at 1.\nrewrite (wf_sbE) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_addrE WF) at 1.\nrewrite (wf_sbE) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗RW⦘\n∪ (⦗E⦘ ⨾ addr ⨾ ⦗E⦘) ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗RW⦘\n∪ (⦗E⦘ ⨾ addr ⨾ ⦗E⦘) ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_sbE) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗RW⦘\n∪ (⦗E⦘ ⨾ addr ⨾ ⦗E⦘) ⨾ (⦗E⦘ ⨾ sb ⨾ ⦗E⦘)^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ data ⨾ ⦗E⦘ ∪ (⦗E⦘ ⨾ ctrl ⨾ ⦗E⦘) ⨾ ⦗RW⦘\n∪ (⦗E⦘ ⨾ addr ⨾ ⦗E⦘) ⨾ (⦗E⦘ ⨾ sb ⨾ ⦗E⦘)^? ⨾ ⦗RW⦘\n⊆ ⦗E⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : doma ii0 E ->\ndomb ii0 E ->\nforall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y).","conclusion":"doma ii0 E ->\ndomb ii0 E ->\nforall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y)","hypotheses":"(WF : Wf G)","proofString":"generalize (dom_to_doma (wf_ci0E WF)) (dom_to_domb (wf_ci0E WF)).\ngeneralize (dom_to_doma (wf_cc0E WF)) (dom_to_domb (wf_cc0E WF)).\nunfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : doma ci0 E ->\ndomb ci0 E ->\ndoma ii0 E ->\ndomb ii0 E ->\nforall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y).","conclusion":"doma ci0 E ->\ndomb ci0 E ->\ndoma ii0 E ->\ndomb ii0 E ->\nforall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y)","hypotheses":"(WF : Wf G)","proofString":"generalize (dom_to_doma (wf_cc0E WF)) (dom_to_domb (wf_cc0E WF)).\nunfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : doma cc0 E ->\ndomb cc0 E ->\ndoma ci0 E ->\ndomb ci0 E ->\ndoma ii0 E ->\ndomb ii0 E ->\nforall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y).","conclusion":"doma cc0 E ->\ndomb cc0 E ->\ndoma ci0 E ->\ndomb ci0 E ->\ndoma ii0 E ->\ndomb ii0 E ->\nforall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y)","hypotheses":"(WF : Wf G)","proofString":"unfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) (A1 : forall x y : actid, cc0 x y -> E x) (A2 : forall x y : actid, cc0 x y -> E y) (A3 : forall x y : actid, ci0 x y -> E x) (A4 : forall x y : actid, ci0 x y -> E y) (A5 : forall x y : actid, ii0 x y -> E x) (A6 : forall x y : actid, ii0 x y -> E y) : forall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y).","conclusion":"forall x y : actid,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\ (ci x y -> E x /\\ E y) /\\ (cc x y -> E x /\\ E y)","hypotheses":"(WF : Wf G) (A1 : forall x y : actid, cc0 x y -> E x) (A2 : forall x y : actid, cc0 x y -> E y) (A3 : forall x y : actid, ci0 x y -> E x) (A4 : forall x y : actid, ci0 x y -> E y) (A5 : forall x y : actid, ii0 x y -> E x) (A6 : forall x y : actid, ii0 x y -> E y)","proofString":"apply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : ii ⊆ ⦗E⦘ ⨾ ii ⨾ ⦗E⦘.","conclusion":"ii ⊆ ⦗E⦘ ⨾ ii ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply wf_helperE in H; desf."},{"statement":"(WF : Wf G) : ic ⊆ ⦗E⦘ ⨾ ic ⨾ ⦗E⦘.","conclusion":"ic ⊆ ⦗E⦘ ⨾ ic ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply wf_helperE in H; desf."},{"statement":"(WF : Wf G) : ci ⊆ ⦗E⦘ ⨾ ci ⨾ ⦗E⦘.","conclusion":"ci ⊆ ⦗E⦘ ⨾ ci ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply wf_helperE in H; desf."},{"statement":"(WF : Wf G) : cc ⊆ ⦗E⦘ ⨾ cc ⨾ ⦗E⦘.","conclusion":"cc ⊆ ⦗E⦘ ⨾ cc ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply wf_helperE in H; desf."},{"statement":"(WF : Wf G) : ppo ⊆ ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘.","conclusion":"ppo ⊆ ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ppo.\nrewrite (wf_iiE WF) at 1.\nrewrite (wf_icE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_iiE WF) at 1.\nrewrite (wf_icE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (⦗E⦘ ⨾ ii ⨾ ⦗E⦘) ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗R⦘ ⨾ (⦗E⦘ ⨾ ii ⨾ ⦗E⦘) ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_icE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (⦗E⦘ ⨾ ii ⨾ ⦗E⦘) ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ (⦗E⦘ ⨾ ic ⨾ ⦗E⦘) ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗R⦘ ⨾ (⦗E⦘ ⨾ ii ⨾ ⦗E⦘) ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ (⦗E⦘ ⨾ ic ⨾ ⦗E⦘) ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : rdw ⊆ ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘.","conclusion":"rdw ⊆ ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘","hypotheses":"(WF : Wf G)","proofString":"unfold rdw.\nsin_rewrite (wf_freD WF).\nsin_rewrite (wf_rfeD WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : (fre ⨾ rfe) ∩ sb ⊆ ⦗R⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗R⦘.","conclusion":"(fre ⨾ rfe) ∩ sb ⊆ ⦗R⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗R⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (wf_freD WF).\nsin_rewrite (wf_rfeD WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ((⦗R⦘ ⨾ fre ⨾ ⦗W⦘) ⨾ rfe) ∩ sb ⊆ ⦗R⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗R⦘.","conclusion":"((⦗R⦘ ⨾ fre ⨾ ⦗W⦘) ⨾ rfe) ∩ sb ⊆ ⦗R⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗R⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (wf_rfeD WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ((⦗R⦘ ⨾ fre ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ∩ sb ⊆ ⦗R⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗R⦘.","conclusion":"((⦗R⦘ ⨾ fre ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ∩ sb ⊆ ⦗R⦘ ⨾ (fre ⨾ rfe) ∩ sb ⨾ ⦗R⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ppo ⊆ ⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘.","conclusion":"ppo ⊆ ⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ppo.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"type_solver 42."},{"statement":"(WF : Wf G) : ii0 ⊆ ⦗RW⦘ ⨾ ii0 ⨾ ⦗RW⦘.","conclusion":"ii0 ⊆ ⦗RW⦘ ⨾ ii0 ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ii0.\nrewrite (wf_addrD WF) at 1.\nrewrite (wf_dataD WF) at 1.\nrewrite (wf_rdwD WF) at 1.\nrewrite (wf_rfiD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : addr ∪ data ∪ rdw ∪ rfi ⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘.","conclusion":"addr ∪ data ∪ rdw ∪ rfi ⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_addrD WF) at 1.\nrewrite (wf_dataD WF) at 1.\nrewrite (wf_rdwD WF) at 1.\nrewrite (wf_rfiD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ data ∪ rdw ∪ rfi\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ data ∪ rdw ∪ rfi\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_dataD WF) at 1.\nrewrite (wf_rdwD WF) at 1.\nrewrite (wf_rfiD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ rdw ∪ rfi\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ rdw ∪ rfi\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rdwD WF) at 1.\nrewrite (wf_rfiD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ∪ rfi\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ∪ rfi\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfiD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ∪ ⦗W⦘ ⨾ rfi ⨾ ⦗R⦘\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ∪ ⦗W⦘ ⨾ rfi ⨾ ⦗R⦘\n⊆ ⦗RW⦘ ⨾ (addr ∪ data ∪ rdw ∪ rfi) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"type_solver 42."},{"statement":"(WF : Wf G) : ci0 ⊆ ⦗RW⦘ ⨾ ci0 ⨾ ⦗RW⦘.","conclusion":"ci0 ⊆ ⦗RW⦘ ⨾ ci0 ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ci0.\nrewrite wf_ctrliD at 1.\nrewrite (wf_detourD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗RW⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗RW⦘.","conclusion":"ctrli ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗RW⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite wf_ctrliD at 1.\nrewrite (wf_detourD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗RW⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗RW⦘.","conclusion":"(⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour ⊆ ⦗RW⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_detourD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ detour ⨾ ⦗R⦘\n⊆ ⦗RW⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗RW⦘.","conclusion":"(⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ detour ⨾ ⦗R⦘\n⊆ ⦗RW⦘ ⨾ (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : cc0 ⊆ ⦗RW⦘ ⨾ cc0 ⨾ ⦗RW⦘.","conclusion":"cc0 ⊆ ⦗RW⦘ ⨾ cc0 ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfold cc0.\nrewrite (wf_dataD WF) at 1.\nrewrite (wf_ctrlD WF) at 1.\nrewrite (wf_addrD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘.","conclusion":"data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_dataD WF) at 1.\nrewrite (wf_ctrlD WF) at 1.\nrewrite (wf_addrD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_ctrlD WF) at 1.\nrewrite (wf_addrD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ (⦗R⦘ ⨾ ctrl) ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ (⦗R⦘ ⨾ ctrl) ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_addrD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ (⦗R⦘ ⨾ ctrl) ⨾ ⦗RW⦘ ∪ (⦗R⦘ ⨾ addr ⨾ ⦗RW⦘) ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ (⦗R⦘ ⨾ ctrl) ⨾ ⦗RW⦘ ∪ (⦗R⦘ ⨾ addr ⨾ ⦗RW⦘) ⨾ sb^? ⨾ ⦗RW⦘\n⊆ ⦗RW⦘ ⨾ (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : doma ii0 RW ->\ndomb ii0 RW ->\nforall x y : actid,\n(ii x y -> RW x /\\ RW y) /\\\n(ic x y -> RW x /\\ RW y) /\\\n(ci x y -> RW x /\\ RW y) /\\ (cc x y -> RW x /\\ RW y).","conclusion":"doma ii0 RW ->\ndomb ii0 RW ->\nforall x y : actid,\n(ii x y -> RW x /\\ RW y) /\\\n(ic x y -> RW x /\\ RW y) /\\\n(ci x y -> RW x /\\ RW y) /\\ (cc x y -> RW x /\\ RW y)","hypotheses":"(WF : Wf G)","proofString":"generalize (dom_to_doma (wf_ci0D WF)) (dom_to_domb (wf_ci0D WF)).\ngeneralize (dom_to_doma (wf_cc0D WF)) (dom_to_domb (wf_cc0D WF)).\nunfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : doma ci0 RW ->\ndomb ci0 RW ->\ndoma ii0 RW ->\ndomb ii0 RW ->\nforall x y : actid,\n(ii x y -> RW x /\\ RW y) /\\\n(ic x y -> RW x /\\ RW y) /\\\n(ci x y -> RW x /\\ RW y) /\\ (cc x y -> RW x /\\ RW y).","conclusion":"doma ci0 RW ->\ndomb ci0 RW ->\ndoma ii0 RW ->\ndomb ii0 RW ->\nforall x y : actid,\n(ii x y -> RW x /\\ RW y) /\\\n(ic x y -> RW x /\\ RW y) /\\\n(ci x y -> RW x /\\ RW y) /\\ (cc x y -> RW x /\\ RW y)","hypotheses":"(WF : Wf G)","proofString":"generalize (dom_to_doma (wf_cc0D WF)) (dom_to_domb (wf_cc0D WF)).\nunfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : doma cc0 RW ->\ndomb cc0 RW ->\ndoma ci0 RW ->\ndomb ci0 RW ->\ndoma ii0 RW ->\ndomb ii0 RW ->\nforall x y : actid,\n(ii x y -> RW x /\\ RW y) /\\\n(ic x y -> RW x /\\ RW y) /\\\n(ci x y -> RW x /\\ RW y) /\\ (cc x y -> RW x /\\ RW y).","conclusion":"doma cc0 RW ->\ndomb cc0 RW ->\ndoma ci0 RW ->\ndomb ci0 RW ->\ndoma ii0 RW ->\ndomb ii0 RW ->\nforall x y : actid,\n(ii x y -> RW x /\\ RW y) /\\\n(ic x y -> RW x /\\ RW y) /\\\n(ci x y -> RW x /\\ RW y) /\\ (cc x y -> RW x /\\ RW y)","hypotheses":"(WF : Wf G)","proofString":"unfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) (A1 : forall x y : actid, cc0 x y -> is_r lab x \\/ is_w lab x) (A2 : forall x y : actid, cc0 x y -> is_r lab y \\/ is_w lab y) (A3 : forall x y : actid, ci0 x y -> is_r lab x \\/ is_w lab x) (A4 : forall x y : actid, ci0 x y -> is_r lab y \\/ is_w lab y) (A5 : forall x y : actid, ii0 x y -> is_r lab x \\/ is_w lab x) (A6 : forall x y : actid, ii0 x y -> is_r lab y \\/ is_w lab y) : forall x y : actid,\n(ii x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y)) /\\\n(ic x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y)) /\\\n(ci x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y)) /\\\n(cc x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y)).","conclusion":"forall x y : actid,\n(ii x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y)) /\\\n(ic x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y)) /\\\n(ci x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y)) /\\\n(cc x y -> (is_r lab x \\/ is_w lab x) /\\ (is_r lab y \\/ is_w lab y))","hypotheses":"(WF : Wf G) (A1 : forall x y : actid, cc0 x y -> is_r lab x \\/ is_w lab x) (A2 : forall x y : actid, cc0 x y -> is_r lab y \\/ is_w lab y) (A3 : forall x y : actid, ci0 x y -> is_r lab x \\/ is_w lab x) (A4 : forall x y : actid, ci0 x y -> is_r lab y \\/ is_w lab y) (A5 : forall x y : actid, ii0 x y -> is_r lab x \\/ is_w lab x) (A6 : forall x y : actid, ii0 x y -> is_r lab y \\/ is_w lab y)","proofString":"apply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : ii ⊆ ⦗RW⦘ ⨾ ii ⨾ ⦗RW⦘.","conclusion":"ii ⊆ ⦗RW⦘ ⨾ ii ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto."},{"statement":"(WF : Wf G) : ic ⊆ ⦗RW⦘ ⨾ ic ⨾ ⦗RW⦘.","conclusion":"ic ⊆ ⦗RW⦘ ⨾ ic ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto."},{"statement":"(WF : Wf G) : ci ⊆ ⦗RW⦘ ⨾ ci ⨾ ⦗RW⦘.","conclusion":"ci ⊆ ⦗RW⦘ ⨾ ci ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto."},{"statement":"(WF : Wf G) : cc ⊆ ⦗RW⦘ ⨾ cc ⨾ ⦗RW⦘.","conclusion":"cc ⊆ ⦗RW⦘ ⨾ cc ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb ⊆ sb.","conclusion":"⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"rewrite (ctrl_in_sb WF).\ngeneralize (@sb_trans G); basic_solver."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ sb ⨾ ⦗F^isync⦘ ⨾ sb ⊆ sb.","conclusion":"⦗R⦘ ⨾ sb ⨾ ⦗F^isync⦘ ⨾ sb ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_trans G); basic_solver."},{"statement":"(⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ sb ⊆ ⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb.","conclusion":"(⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb) ⨾ sb ⊆ ⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb","hypotheses":"","proofString":"generalize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb ⊆ ctrl.","conclusion":"⦗R⦘ ⨾ ctrl ⨾ ⦗F^isync⦘ ⨾ sb ⊆ ctrl","hypotheses":"(WF : Wf G)","proofString":"generalize (ctrl_sb WF); basic_solver."},{"statement":"(WF : Wf G) : addr ∪ data ∪ ((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ∪ rf ∩ sb ⊆ sb.","conclusion":"addr ∪ data ∪ ((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ∪ rf ∩ sb ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"rewrite addr_in_sb, data_in_sb; try done.\nbasic_solver 42."},{"statement":"(WF : Wf G) : sb ∪ sb ∪ ((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ∪ rf ∩ sb ⊆ sb.","conclusion":"sb ∪ sb ∪ ((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ∪ rf ∩ sb ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗RW⦘ ∪ (coe ⨾ rfe) ∩ sb ⊆ sb.","conclusion":"ctrli ⨾ ⦗RW⦘ ∪ (coe ⨾ rfe) ∩ sb ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"rewrite ctrli_in_sb; try done.\nbasic_solver 42."},{"statement":"(WF : Wf G) : sb ⨾ ⦗RW⦘ ∪ (coe ⨾ rfe) ∩ sb ⊆ sb.","conclusion":"sb ⨾ ⦗RW⦘ ∪ (coe ⨾ rfe) ∩ sb ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘ ⊆ sb.","conclusion":"data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘ ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"rewrite addr_in_sb, data_in_sb, ctrl_in_sb; try done.\ngeneralize (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : sb ∪ sb ⨾ ⦗RW⦘ ∪ sb ⨾ sb^? ⨾ ⦗RW⦘ ⊆ sb.","conclusion":"sb ∪ sb ⨾ ⦗RW⦘ ∪ sb ⨾ sb^? ⨾ ⦗RW⦘ ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : transitive sb -> sb ∪ sb ⨾ ⦗RW⦘ ∪ sb ⨾ sb^? ⨾ ⦗RW⦘ ⊆ sb.","conclusion":"transitive sb -> sb ∪ sb ⨾ ⦗RW⦘ ∪ sb ⨾ sb^? ⨾ ⦗RW⦘ ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ii0 ⊆ sb ->\nci0 ⊆ sb ->\ncc0 ⊆ sb ->\nforall x y : actid,\n(ii x y -> sb x y) /\\\n(ic x y -> sb x y) /\\ (ci x y -> sb x y) /\\ (cc x y -> sb x y).","conclusion":"ii0 ⊆ sb ->\nci0 ⊆ sb ->\ncc0 ⊆ sb ->\nforall x y : actid,\n(ii x y -> sb x y) /\\\n(ic x y -> sb x y) /\\ (ci x y -> sb x y) /\\ (cc x y -> sb x y)","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_trans G).\nunfolder; intros A A1 A2 A3.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : transitive sb ->\nii0 ⊆ sb ->\nci0 ⊆ sb ->\ncc0 ⊆ sb ->\nforall x y : actid,\n(ii x y -> sb x y) /\\\n(ic x y -> sb x y) /\\ (ci x y -> sb x y) /\\ (cc x y -> sb x y).","conclusion":"transitive sb ->\nii0 ⊆ sb ->\nci0 ⊆ sb ->\ncc0 ⊆ sb ->\nforall x y : actid,\n(ii x y -> sb x y) /\\\n(ic x y -> sb x y) /\\ (ci x y -> sb x y) /\\ (cc x y -> sb x y)","hypotheses":"(WF : Wf G)","proofString":"unfolder; intros A A1 A2 A3.\napply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) (A : forall x y z : actid, sb x y -> sb y z -> sb x z) (A1 : forall x y : actid, ii0 x y -> sb x y) (A2 : forall x y : actid, ci0 x y -> sb x y) (A3 : forall x y : actid, cc0 x y -> sb x y) : forall x y : actid,\n(ii x y -> sb x y) /\\\n(ic x y -> sb x y) /\\ (ci x y -> sb x y) /\\ (cc x y -> sb x y).","conclusion":"forall x y : actid,\n(ii x y -> sb x y) /\\\n(ic x y -> sb x y) /\\ (ci x y -> sb x y) /\\ (cc x y -> sb x y)","hypotheses":"(WF : Wf G) (A : forall x y z : actid, sb x y -> sb y z -> sb x z) (A1 : forall x y : actid, ii0 x y -> sb x y) (A2 : forall x y : actid, ci0 x y -> sb x y) (A3 : forall x y : actid, cc0 x y -> sb x y)","proofString":"apply ppo_comp_ind; basic_solver."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ sb.","conclusion":"⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"rewrite ii_in_sb, ic_in_sb; try done.\nbasic_solver."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ sb.","conclusion":"⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"basic_solver."},{"statement":"(WF : Wf G) : rdw ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"rdw ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rdwD WF).\nrewrite <- ii0_in_ii.\nunfold ii0; basic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite <- ii0_in_ii.\nunfold ii0; basic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ⊆ ⦗R⦘ ⨾ ii0 ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ rdw ⨾ ⦗R⦘ ⊆ ⦗R⦘ ⨾ ii0 ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"unfold ii0; basic_solver 42."},{"statement":"rfi ⊆ ii0.","conclusion":"rfi ⊆ ii0","hypotheses":"","proofString":"unfold ii0; basic_solver 42."},{"statement":"detour ⊆ ci0.","conclusion":"detour ⊆ ci0","hypotheses":"","proofString":"unfold ci0; basic_solver 42."},{"statement":"data ⊆ ii0.","conclusion":"data ⊆ ii0","hypotheses":"","proofString":"unfold ii0; basic_solver 42."},{"statement":"addr ⊆ ii0.","conclusion":"addr ⊆ ii0","hypotheses":"","proofString":"unfold ii0; basic_solver 42."},{"statement":"ctrl ⨾ ⦗RW⦘ ⊆ cc0.","conclusion":"ctrl ⨾ ⦗RW⦘ ⊆ cc0","hypotheses":"","proofString":"unfold cc0; basic_solver 42."},{"statement":"addr ⨾ sb^? ⨾ ⦗RW⦘ ⊆ cc0.","conclusion":"addr ⨾ sb^? ⨾ ⦗RW⦘ ⊆ cc0","hypotheses":"","proofString":"unfold cc0; basic_solver 42."},{"statement":"(WF : Wf G) : (data ∪ addr ∪ ctrl) ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"(data ∪ addr ∪ ctrl) ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_dataD WF), (wf_addrD WF), (wf_ctrlD WF).\nrewrite data_in_ii, addr_in_ii.\ngeneralize ii_in_ic cc_in_ic ctrl_in_cc.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ ctrl) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"(⦗R⦘ ⨾ data ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ addr ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ ctrl) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite data_in_ii, addr_in_ii.\ngeneralize ii_in_ic cc_in_ic ctrl_in_cc.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ii ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ ctrl) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"(⦗R⦘ ⨾ ii ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ ctrl) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"generalize ii_in_ic cc_in_ic ctrl_in_cc.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ii ⊆ ic ->\ncc ⊆ ic ->\nctrl ⨾ ⦗RW⦘ ⊆ cc ->\n(⦗R⦘ ⨾ ii ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ ctrl) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"ii ⊆ ic ->\ncc ⊆ ic ->\nctrl ⨾ ⦗RW⦘ ⊆ cc ->\n(⦗R⦘ ⨾ ii ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ ctrl) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : addr ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"addr ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite <- cc_in_ic, <- cc0_in_cc.\nrewrite (wf_addrD WF) at 1.\nunfold cc0; basic_solver 42."},{"statement":"(WF : Wf G) : addr ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ cc0 ⨾ ⦗W⦘.","conclusion":"addr ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ cc0 ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_addrD WF) at 1.\nunfold cc0; basic_solver 42."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ addr ⨾ ⦗RW⦘) ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ cc0 ⨾ ⦗W⦘.","conclusion":"(⦗R⦘ ⨾ addr ⨾ ⦗RW⦘) ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ cc0 ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"unfold cc0; basic_solver 42."},{"statement":"(WF : Wf G) : ((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ⨾ fr ∩ sb ⊆ fr ∩ sb.","conclusion":"((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ⨾ fr ∩ sb ⊆ fr ∩ sb","hypotheses":"(WF : Wf G)","proofString":"generalize (rf_fr WF) (fr_co WF) (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : rf ⨾ fr ⊆ co ->\nfr ⨾ co ⊆ fr ->\ntransitive sb -> ((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ⨾ fr ∩ sb ⊆ fr ∩ sb.","conclusion":"rf ⨾ fr ⊆ co ->\nfr ⨾ co ⊆ fr ->\ntransitive sb -> ((fr \\ sb) ⨾ (rf \\ sb)) ∩ sb ⨾ fr ∩ sb ⊆ fr ∩ sb","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ci0.","conclusion":"ctrli ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ci0","hypotheses":"(WF : Wf G)","proofString":"arewrite (⦗R⦘ ⨾ fri ⊆ sb).\nby ie_unfolder; basic_solver.\nsin_rewrite ctrli_sb.\nunfold ci0; type_solver."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ fri ⊆ sb.","conclusion":"⦗R⦘ ⨾ fri ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"by ie_unfolder; basic_solver."},{"statement":"(WF : Wf G) : ctrli ⨾ sb ⨾ ⦗W⦘ ⊆ ci0.","conclusion":"ctrli ⨾ sb ⨾ ⦗W⦘ ⊆ ci0","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite ctrli_sb.\nunfold ci0; type_solver."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗W⦘ ⊆ ci0.","conclusion":"ctrli ⨾ ⦗W⦘ ⊆ ci0","hypotheses":"(WF : Wf G)","proofString":"unfold ci0; type_solver."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ cc0.","conclusion":"ctrli ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ cc0","hypotheses":"(WF : Wf G)","proofString":"arewrite (⦗R⦘ ⨾ fri ⊆ sb).\nby ie_unfolder; basic_solver.\nsin_rewrite ctrli_sb.\nrewrite (ctrli_in_ctrl WF).\nunfold cc0; basic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ fri ⊆ sb.","conclusion":"⦗R⦘ ⨾ fri ⊆ sb","hypotheses":"(WF : Wf G)","proofString":"by ie_unfolder; basic_solver."},{"statement":"(WF : Wf G) : ctrli ⨾ sb ⨾ ⦗W⦘ ⊆ cc0.","conclusion":"ctrli ⨾ sb ⨾ ⦗W⦘ ⊆ cc0","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite ctrli_sb.\nrewrite (ctrli_in_ctrl WF).\nunfold cc0; basic_solver 12."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗W⦘ ⊆ cc0.","conclusion":"ctrli ⨾ ⦗W⦘ ⊆ cc0","hypotheses":"(WF : Wf G)","proofString":"rewrite (ctrli_in_ctrl WF).\nunfold cc0; basic_solver 12."},{"statement":"(WF : Wf G) : ctrl ⨾ ⦗W⦘ ⊆ cc0.","conclusion":"ctrl ⨾ ⦗W⦘ ⊆ cc0","hypotheses":"(WF : Wf G)","proofString":"unfold cc0; basic_solver 12."},{"statement":"⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite <- ci_in_ic, <- ci0_in_ci.\nbasic_solver."},{"statement":"⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"(x y : actid) (H : L x y) : (ii ∪ ic ∪ ci ∪ cc) x y.","conclusion":"(ii ∪ ic ∪ ci ∪ cc) x y","hypotheses":"(x y : actid) (H : L x y)","proofString":"apply L_rec with (x:=x)   (P:=fun y => (ii ∪ ic ∪ ci ∪ cc) x y) (P0:=fun y => (ii ∪ ci) x y);  auto; ins; try vauto; try (by unfolder in *; desf; (right + left); vauto).\nleft; left; right; unfolder in *; desf; vauto.\nassert (ci ⊆ ic) by (unfolder; vauto).\napply H3 in H1; vauto."},{"statement":"(x y : actid) (H : L x y) (y0 z : actid) (H0 : L x z) (H1 : (ii ∪ ic ∪ ci ∪ cc) x z) (H2 : cc0 z y0) : (ii ∪ ic ∪ ci ∪ cc) x y0.","conclusion":"(ii ∪ ic ∪ ci ∪ cc) x y0","hypotheses":"(x y : actid) (H : L x y) (y0 z : actid) (H0 : L x z) (H1 : (ii ∪ ic ∪ ci ∪ cc) x z) (H2 : cc0 z y0)","proofString":"left; left; right; unfolder in *; desf; vauto.\nassert (ci ⊆ ic) by (unfolder; vauto).\napply H3 in H1; vauto."},{"statement":"(x y : actid) (H : L x y) (y0 z : actid) (H0 : L x z) (H1 : ci x z) (H2 : cc0 z y0) : ic x y0.","conclusion":"ic x y0","hypotheses":"(x y : actid) (H : L x y) (y0 z : actid) (H0 : L x z) (H1 : ci x z) (H2 : cc0 z y0)","proofString":"assert (ci ⊆ ic) by (unfolder; vauto).\napply H3 in H1; vauto."},{"statement":"(x y : actid) (H : L x y) (y0 z : actid) (H0 : L x z) (H1 : ci x z) (H2 : cc0 z y0) (H3 : ci ⊆ ic) : ic x y0.","conclusion":"ic x y0","hypotheses":"(x y : actid) (H : L x y) (y0 z : actid) (H0 : L x z) (H1 : ci x z) (H2 : cc0 z y0) (H3 : ci ⊆ ic)","proofString":"apply H3 in H1; vauto."},{"statement":"(A : Type) (r r' r'' : relation A) : (forall x y : A, r' x y -> forall z : A, r z x -> r'' z y) -> r ⨾ r' ⊆ r''.","conclusion":"(forall x y : A, r' x y -> forall z : A, r z x -> r'' z y) -> r ⨾ r' ⊆ r''","hypotheses":"(A : Type) (r r' r'' : relation A)","proofString":"ins; red; ins; unfold seq in H0; desf; eapply H; eauto; edone."},{"statement":"(A : Type) (r r' r'' : relation A) : r ⨾ r' ⊆ r'' -> forall x y : A, r' x y -> forall z : A, r z x -> r'' z y.","conclusion":"r ⨾ r' ⊆ r'' -> forall x y : A, r' x y -> forall z : A, r z x -> r'' z y","hypotheses":"(A : Type) (r r' r'' : relation A)","proofString":"unfolder; ins; apply H; eexists; splits; eauto."},{"statement":"(forall x y : actid, ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n(forall x y : actid, ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n(forall x y : actid, ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n(forall x y : actid, cc x y -> forall z : actid, L^? z x -> L z y).","conclusion":"(forall x y : actid, ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n(forall x y : actid, ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n(forall x y : actid, ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n(forall x y : actid, cc x y -> forall z : actid, L^? z x -> L z y)","hypotheses":"","proofString":"cut (forall x y,     (ii x y -> forall z, Li^? z x -> Li z y) /\\     (ic x y -> forall z, Li^? z x -> L z y) /\\    (ci x y -> forall z, L^? z x -> Li z y) /\\    (cc x y -> forall z, L^? z x -> L z y)).\nins; splits; ins; desf;    specialize (H x y); desf; eauto.\napply ppo_comp_ind with   (*ii*) (P:=fun x y => forall z, (Li^?) z x -> Li z y)  (*ic*) (P0:=fun x y => forall z, (Li^?) z x -> L z y)  (*ci*) (P1:=fun x y => forall z, (L^?) z x -> Li z y)  (*cc*) (P2:=fun x y => forall z, (L^?) z x -> L z y);  rewrite ?seq_alt;  (* base cases *)  try (by unfolder; ins; desf; vauto);  ins;  (* single derivations *)  try (by apply H2; right; apply H0);  (* double derivations *)  try (by apply H0; red in H1; desf; (left + right); vauto);  by apply L_Li, H0."},{"statement":"(forall x y : actid,\n (ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n (ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n (ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n (cc x y -> forall z : actid, L^? z x -> L z y)) ->\n(forall x y : actid, ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n(forall x y : actid, ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n(forall x y : actid, ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n(forall x y : actid, cc x y -> forall z : actid, L^? z x -> L z y).","conclusion":"(forall x y : actid,\n (ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n (ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n (ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n (cc x y -> forall z : actid, L^? z x -> L z y)) ->\n(forall x y : actid, ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n(forall x y : actid, ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n(forall x y : actid, ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n(forall x y : actid, cc x y -> forall z : actid, L^? z x -> L z y)","hypotheses":"","proofString":"ins; splits; ins; desf;    specialize (H x y); desf; eauto."},{"statement":"forall x y : actid,\n(ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n(ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n(ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n(cc x y -> forall z : actid, L^? z x -> L z y).","conclusion":"forall x y : actid,\n(ii x y -> forall z : actid, Li^? z x -> Li z y) /\\\n(ic x y -> forall z : actid, Li^? z x -> L z y) /\\\n(ci x y -> forall z : actid, L^? z x -> Li z y) /\\\n(cc x y -> forall z : actid, L^? z x -> L z y)","hypotheses":"","proofString":"apply ppo_comp_ind with   (*ii*) (P:=fun x y => forall z, (Li^?) z x -> Li z y)  (*ic*) (P0:=fun x y => forall z, (Li^?) z x -> L z y)  (*ci*) (P1:=fun x y => forall z, (L^?) z x -> Li z y)  (*cc*) (P2:=fun x y => forall z, (L^?) z x -> L z y);  rewrite ?seq_alt;  (* base cases *)  try (by unfolder; ins; desf; vauto);  ins;  (* single derivations *)  try (by apply H2; right; apply H0);  (* double derivations *)  try (by apply H0; red in H1; desf; (left + right); vauto);  by apply L_Li, H0."},{"statement":"Li ⊆ ii.","conclusion":"Li ⊆ ii","hypotheses":"","proofString":"arewrite (Li ⊆ ii ∪ ci) by apply L_Li_in_ppo_components.\nrewrite ci_in_ii.\nbasic_solver."},{"statement":"ii ∪ ci ⊆ ii.","conclusion":"ii ∪ ci ⊆ ii","hypotheses":"","proofString":"rewrite ci_in_ii.\nbasic_solver."},{"statement":"ii ∪ ii ⊆ ii.","conclusion":"ii ∪ ii ⊆ ii","hypotheses":"","proofString":"basic_solver."},{"statement":"ii ⊆ Li.","conclusion":"ii ⊆ Li","hypotheses":"","proofString":"generalize basic_to_transitional.\nbasic_solver 12."},{"statement":"Li^? ⨾ ii ⊆ Li /\\ Li^? ⨾ ic ⊆ L /\\ L^? ⨾ ci ⊆ Li /\\ L^? ⨾ cc ⊆ L -> ii ⊆ Li.","conclusion":"Li^? ⨾ ii ⊆ Li /\\ Li^? ⨾ ic ⊆ L /\\ L^? ⨾ ci ⊆ Li /\\ L^? ⨾ cc ⊆ L -> ii ⊆ Li","hypotheses":"","proofString":"basic_solver 12."},{"statement":"L ⊆ ic.","conclusion":"L ⊆ ic","hypotheses":"","proofString":"arewrite (L ⊆ ii ∪ ic ∪ ci ∪ cc) by apply L_Li_in_ppo_components.\nrewrite ii_in_ic, ci_in_ic, cc_in_ic; basic_solver."},{"statement":"ii ∪ ic ∪ ci ∪ cc ⊆ ic.","conclusion":"ii ∪ ic ∪ ci ∪ cc ⊆ ic","hypotheses":"","proofString":"rewrite ii_in_ic, ci_in_ic, cc_in_ic; basic_solver."},{"statement":"ic ⊆ L.","conclusion":"ic ⊆ L","hypotheses":"","proofString":"red; ins.\nassert (Li^? ⨾ ic ⊆ L) by apply basic_to_transitional.\napply H0; eexists; splits; eauto."},{"statement":"(x y : actid) (H : ic x y) : L x y.","conclusion":"L x y","hypotheses":"(x y : actid) (H : ic x y)","proofString":"assert (Li^? ⨾ ic ⊆ L) by apply basic_to_transitional.\napply H0; eexists; splits; eauto."},{"statement":"(x y : actid) (H : ic x y) (H0 : Li^? ⨾ ic ⊆ L) : L x y.","conclusion":"L x y","hypotheses":"(x y : actid) (H : ic x y) (H0 : Li^? ⨾ ic ⊆ L)","proofString":"apply H0; eexists; splits; eauto."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ ii ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_iiD WF) at 1.\ngeneralize ii_in_ic.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ⦗RW⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ ⦗RW⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"generalize ii_in_ic.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ii ⊆ ic -> ⦗R⦘ ⨾ ⦗RW⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"ii ⊆ ic -> ⦗R⦘ ⨾ ⦗RW⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L.","conclusion":"⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L","hypotheses":"(WF : Wf G)","proofString":"rewrite L_is_ic, ii_in_ic.\nrewrite (wf_icD WF) at 3.\nbasic_solver."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ic ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ic.","conclusion":"⦗R⦘ ⨾ ic ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ic","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_icD WF) at 3.\nbasic_solver."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ic ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗RW⦘ ⨾ ic ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ ic ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗RW⦘ ⨾ ic ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘) ⨾ ⦗R⦘ ⊆ ⦗R⦘ ⨾ ii.","conclusion":"(⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘) ⨾ ⦗R⦘ ⊆ ⦗R⦘ ⨾ ii","hypotheses":"(WF : Wf G)","proofString":"unfold ppo; type_solver 12."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘) ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ic.","conclusion":"(⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘) ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ic","hypotheses":"(WF : Wf G)","proofString":"unfold ppo; type_solver 12."},{"statement":"deps ⨾ ⦗RW⦘ ⊆ cc0.","conclusion":"deps ⨾ ⦗RW⦘ ⊆ cc0","hypotheses":"","proofString":"unfold Execution.deps, cc0; basic_solver 42."},{"statement":"deps ⨾ ⦗RW⦘ ⊆ cc.","conclusion":"deps ⨾ ⦗RW⦘ ⊆ cc","hypotheses":"","proofString":"by apply deps_in_cc."},{"statement":"(WF : Wf G) : ctrl ⨾ (⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ⊆ ii.","conclusion":"ctrl ⨾ (⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ⊆ ii","hypotheses":"(WF : Wf G)","proofString":"unfolder; ins; desc.\neapply CI, CC_CI.\napply CC0; unfold cc0; basic_solver 12.\napply CI0; unfold ci0; basic_solver 12."},{"statement":"(WF : Wf G) (x y z : actid) (H : ctrl x z) (H0 : is_r lab z) (H1 : ctrli z y) (H2 : is_r lab y \\/ is_w lab y) : ii x y.","conclusion":"ii x y","hypotheses":"(WF : Wf G) (x y z : actid) (H : ctrl x z) (H0 : is_r lab z) (H1 : ctrli z y) (H2 : is_r lab y \\/ is_w lab y)","proofString":"eapply CI, CC_CI.\napply CC0; unfold cc0; basic_solver 12.\napply CI0; unfold ci0; basic_solver 12."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ctrl) ⨾ ctrli ⨾ ⦗RW⦘ ⊆ ppo.","conclusion":"(⦗R⦘ ⨾ ctrl) ⨾ ctrli ⨾ ⦗RW⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"arewrite (⦗RW⦘ ⊆ ⦗RW⦘ ⨾ ⦗RW⦘) by basic_solver.\nsin_rewrite (ctrl_ctrli_in_ii WF).\nunfold ppo.\ngeneralize ii_in_ic.\nbasic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ctrl ⨾ ctrli ⨾ ⦗RW⦘ ⨾ ⦗RW⦘ ⊆ ppo.","conclusion":"⦗R⦘ ⨾ ctrl ⨾ ctrli ⨾ ⦗RW⦘ ⨾ ⦗RW⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (ctrl_ctrli_in_ii WF).\nunfold ppo.\ngeneralize ii_in_ic.\nbasic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ppo.","conclusion":"⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"unfold ppo.\ngeneralize ii_in_ic.\nbasic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"generalize ii_in_ic.\nbasic_solver 12."},{"statement":"(WF : Wf G) : ii ⊆ ic -> ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"ii ⊆ ic -> ⦗R⦘ ⨾ ii ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"ctrli ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite wf_ctrliD.\ngeneralize ctrli_RW_in_ic, ctrli_R_in_ii.\nbasic_solver 12."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"(⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"generalize ctrli_RW_in_ic, ctrli_R_in_ii.\nbasic_solver 12."},{"statement":"(WF : Wf G) : ctrli ⨾ ⦗RW⦘ ⊆ ic ->\nctrli ⨾ ⦗RW⦘ ⊆ ii -> (⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"ctrli ⨾ ⦗RW⦘ ⊆ ic ->\nctrli ⨾ ⦗RW⦘ ⊆ ii -> (⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 12."},{"statement":"forall x y z : actid,\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ii z0 z1 /\\ z1 = y /\\ is_r lab z1)) \\/\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ic z0 z1 /\\ z1 = y /\\ is_w lab z1)) ->\n(exists z0 : actid,\n   (y = z0 /\\ is_r lab y) /\\\n   (exists z1 : actid, ii z0 z1 /\\ z1 = z /\\ is_r lab z1)) \\/\n(exists z0 : actid,\n   (y = z0 /\\ is_r lab y) /\\\n   (exists z1 : actid, ic z0 z1 /\\ z1 = z /\\ is_w lab z1)) ->\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ii z0 z1 /\\ z1 = z /\\ is_r lab z1)) \\/\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ic z0 z1 /\\ z1 = z /\\ is_w lab z1)).","conclusion":"forall x y z : actid,\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ii z0 z1 /\\ z1 = y /\\ is_r lab z1)) \\/\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ic z0 z1 /\\ z1 = y /\\ is_w lab z1)) ->\n(exists z0 : actid,\n   (y = z0 /\\ is_r lab y) /\\\n   (exists z1 : actid, ii z0 z1 /\\ z1 = z /\\ is_r lab z1)) \\/\n(exists z0 : actid,\n   (y = z0 /\\ is_r lab y) /\\\n   (exists z1 : actid, ic z0 z1 /\\ z1 = z /\\ is_w lab z1)) ->\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ii z0 z1 /\\ z1 = z /\\ is_r lab z1)) \\/\n(exists z0 : actid,\n   (x = z0 /\\ is_r lab x) /\\\n   (exists z1 : actid, ic z0 z1 /\\ z1 = z /\\ is_w lab z1))","hypotheses":"","proofString":"ins; desf; try type_solver.\nby left; exists z2; split; auto; exists z; vauto.\nby right; exists z2; split; auto; exists z; splits; vauto."},{"statement":"(z z2 : actid) (H8 : is_r lab z2) (z0 : actid) (H7 : true) (H5 : ii z2 z0) (H4 : is_r lab z0) (H1 : ii z0 z) (H3 : is_r lab z) : (exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ii z1 z3 /\\ z3 = z /\\ is_r lab z3)) \\/\n(exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ic z1 z3 /\\ z3 = z /\\ is_w lab z3)).","conclusion":"(exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ii z1 z3 /\\ z3 = z /\\ is_r lab z3)) \\/\n(exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ic z1 z3 /\\ z3 = z /\\ is_w lab z3))","hypotheses":"(z z2 : actid) (H8 : is_r lab z2) (z0 : actid) (H7 : true) (H5 : ii z2 z0) (H4 : is_r lab z0) (H1 : ii z0 z) (H3 : is_r lab z)","proofString":"by left; exists z2; split; auto; exists z; vauto."},{"statement":"(z z2 : actid) (H8 : is_r lab z2) (z0 : actid) (H7 : true) (H5 : ii z2 z0) (H4 : is_r lab z0) (H1 : ic z0 z) (H3 : is_w lab z) : (exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ii z1 z3 /\\ z3 = z /\\ is_r lab z3)) \\/\n(exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ic z1 z3 /\\ z3 = z /\\ is_w lab z3)).","conclusion":"(exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ii z1 z3 /\\ z3 = z /\\ is_r lab z3)) \\/\n(exists z1 : actid,\n   (z2 = z1 /\\ true) /\\\n   (exists z3 : actid, ic z1 z3 /\\ z3 = z /\\ is_w lab z3))","hypotheses":"(z z2 : actid) (H8 : is_r lab z2) (z0 : actid) (H7 : true) (H5 : ii z2 z0) (H4 : is_r lab z0) (H1 : ic z0 z) (H3 : is_w lab z)","proofString":"by right; exists z2; split; auto; exists z; splits; vauto."},{"statement":"(WF : Wf G) : good_ctx (fun r : relation actid => r ⨾ ⦗RW⦘).","conclusion":"good_ctx (fun r : relation actid => r ⨾ ⦗RW⦘)","hypotheses":"(WF : Wf G)","proofString":"by eauto with hahn."},{"statement":"(WF : Wf G) : (ppo ∪ ctrli) ⨾ ⦗RW⦘ ⊆ ppo.","conclusion":"(ppo ∪ ctrli) ⨾ ⦗RW⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"generalize ctrli_RW_in_ppo; basic_solver."},{"statement":"(WF : Wf G) : forall k : relation actid, k ⨾ ⦗RW⦘ ⊆ ppo -> ((ppo ∪ ctrli) ⨾ k) ⨾ ⦗RW⦘ ⊆ ppo.","conclusion":"forall k : relation actid, k ⨾ ⦗RW⦘ ⊆ ppo -> ((ppo ∪ ctrli) ⨾ k) ⨾ ⦗RW⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"ins; rewrite !seqA, H.\nrewrite (dom_l (wf_ppoD WF)) at 2.\nrelsf.\narewrite (ctrli ⨾ ⦗R⦘ ⊆ ppo).\nby generalize ctrli_RW_in_ppo; basic_solver.\ngeneralize ppo_trans; basic_solver."},{"statement":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo) : (ppo ∪ ctrli) ⨾ ppo ⊆ ppo.","conclusion":"(ppo ∪ ctrli) ⨾ ppo ⊆ ppo","hypotheses":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo)","proofString":"rewrite (dom_l (wf_ppoD WF)) at 2.\nrelsf.\narewrite (ctrli ⨾ ⦗R⦘ ⊆ ppo).\nby generalize ctrli_RW_in_ppo; basic_solver.\ngeneralize ppo_trans; basic_solver."},{"statement":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo) : (ppo ∪ ctrli) ⨾ ⦗R⦘ ⨾ ppo ⊆ ppo.","conclusion":"(ppo ∪ ctrli) ⨾ ⦗R⦘ ⨾ ppo ⊆ ppo","hypotheses":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo)","proofString":"relsf.\narewrite (ctrli ⨾ ⦗R⦘ ⊆ ppo).\nby generalize ctrli_RW_in_ppo; basic_solver.\ngeneralize ppo_trans; basic_solver."},{"statement":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo) : ppo ⨾ ⦗R⦘ ⨾ ppo ∪ ctrli ⨾ ⦗R⦘ ⨾ ppo ⊆ ppo.","conclusion":"ppo ⨾ ⦗R⦘ ⨾ ppo ∪ ctrli ⨾ ⦗R⦘ ⨾ ppo ⊆ ppo","hypotheses":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo)","proofString":"arewrite (ctrli ⨾ ⦗R⦘ ⊆ ppo).\nby generalize ctrli_RW_in_ppo; basic_solver.\ngeneralize ppo_trans; basic_solver."},{"statement":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo) : ctrli ⨾ ⦗R⦘ ⊆ ppo.","conclusion":"ctrli ⨾ ⦗R⦘ ⊆ ppo","hypotheses":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo)","proofString":"by generalize ctrli_RW_in_ppo; basic_solver."},{"statement":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo) : ppo ⨾ ⦗R⦘ ⨾ ppo ∪ ppo ⨾ ppo ⊆ ppo.","conclusion":"ppo ⨾ ⦗R⦘ ⨾ ppo ∪ ppo ⨾ ppo ⊆ ppo","hypotheses":"(WF : Wf G) (k : relation actid) (H : k ⨾ ⦗RW⦘ ⊆ ppo)","proofString":"generalize ppo_trans; basic_solver."},{"statement":"(WF : Wf G) : (deps ∪ addr ⨾ sb) ⨾ ⦗R⦘ ⊆ ctrl ∪ addr ⨾ sb^?.","conclusion":"(deps ∪ addr ⨾ sb) ⨾ ⦗R⦘ ⊆ ctrl ∪ addr ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"by unfold Execution.deps; rewrite (wf_dataD WF); type_solver 42."},{"statement":"(WF : Wf G) : (ctrl ∪ addr ⨾ sb^?) ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"(ctrl ∪ addr ⨾ sb^?) ⨾ sb ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"relsf.\nsin_rewrite (ctrl_sb WF).\narewrite (ctrl ⊆ deps).\ngeneralize (addrsbW_in_ppo WF) (deps_in_ppo WF).\ngeneralize (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ctrl ⨾ sb ⨾ ⦗W⦘ ∪ (addr ⨾ sb^?) ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"ctrl ⨾ sb ⨾ ⦗W⦘ ∪ (addr ⨾ sb^?) ⨾ sb ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (ctrl_sb WF).\narewrite (ctrl ⊆ deps).\ngeneralize (addrsbW_in_ppo WF) (deps_in_ppo WF).\ngeneralize (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ctrl ⨾ ⦗W⦘ ∪ (addr ⨾ sb^?) ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"ctrl ⨾ ⦗W⦘ ∪ (addr ⨾ sb^?) ⨾ sb ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"arewrite (ctrl ⊆ deps).\ngeneralize (addrsbW_in_ppo WF) (deps_in_ppo WF).\ngeneralize (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : deps ⨾ ⦗W⦘ ∪ addr ⨾ sb^? ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"deps ⨾ ⦗W⦘ ∪ addr ⨾ sb^? ⨾ sb ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"generalize (addrsbW_in_ppo WF) (deps_in_ppo WF).\ngeneralize (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : addr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo ->\ndeps ⨾ ⦗W⦘ ⊆ ppo -> deps ⨾ ⦗W⦘ ∪ addr ⨾ sb^? ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"addr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo ->\ndeps ⨾ ⦗W⦘ ⊆ ppo -> deps ⨾ ⦗W⦘ ∪ addr ⨾ sb^? ⨾ sb ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : transitive sb ->\naddr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo ->\ndeps ⨾ ⦗W⦘ ⊆ ppo -> deps ⨾ ⦗W⦘ ∪ addr ⨾ sb^? ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"transitive sb ->\naddr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo ->\ndeps ⨾ ⦗W⦘ ⊆ ppo -> deps ⨾ ⦗W⦘ ∪ addr ⨾ sb^? ⨾ sb ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : (ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ fri ⊆ ppo ∪ co.","conclusion":"(ctrli ⨾ ⦗RW⦘ ∪ detour) ⨾ fri ⊆ ppo ∪ co","hypotheses":"(WF : Wf G)","proofString":"rewrite wf_ctrliD at 1.\nrewrite (wf_friD WF) at 1.\ngeneralize (ctrli_fri_in_ci0 WF), (R_ci0_W_in_ppo).\ngeneralize (detour_fr_in_co WF).\nie_unfolder.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ fri ⊆ ppo ∪ co.","conclusion":"((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ fri ⊆ ppo ∪ co","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_friD WF) at 1.\ngeneralize (ctrli_fri_in_ci0 WF), (R_ci0_W_in_ppo).\ngeneralize (detour_fr_in_co WF).\nie_unfolder.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ co.","conclusion":"((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ co","hypotheses":"(WF : Wf G)","proofString":"generalize (ctrli_fri_in_ci0 WF), (R_ci0_W_in_ppo).\ngeneralize (detour_fr_in_co WF).\nie_unfolder.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ctrli ⨾ fri ⊆ ci0 ->\n⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ppo ->\n((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ co.","conclusion":"ctrli ⨾ fri ⊆ ci0 ->\n⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ppo ->\n((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ co","hypotheses":"(WF : Wf G)","proofString":"generalize (detour_fr_in_co WF).\nie_unfolder.\nbasic_solver 42."},{"statement":"(WF : Wf G) : detour ⨾ fr ⊆ co ->\nctrli ⨾ fri ⊆ ci0 ->\n⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ppo ->\n((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ co.","conclusion":"detour ⨾ fr ⊆ co ->\nctrli ⨾ fri ⊆ ci0 ->\n⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ppo ->\n((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ co","hypotheses":"(WF : Wf G)","proofString":"ie_unfolder.\nbasic_solver 42."},{"statement":"(WF : Wf G) : detour ⨾ fr ⊆ co ->\nctrli ⨾ fr ∩ sb ⊆ ci0 ->\n⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ppo ->\n((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fr ∩ sb ⨾ ⦗W⦘ ⊆ ppo ∪ co.","conclusion":"detour ⨾ fr ⊆ co ->\nctrli ⨾ fr ∩ sb ⊆ ci0 ->\n⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ppo ->\n((⦗R⦘ ⨾ ctrli) ⨾ ⦗RW⦘ ∪ detour) ⨾ ⦗R⦘ ⨾ fr ∩ sb ⨾ ⦗W⦘ ⊆ ppo ∪ co","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ L ⨾ ctrli ⨾ fri ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"⦗R⦘ ⨾ L ⨾ ctrli ⨾ fri ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"rewrite <- L_in_ppo.\nrewrite (ctrli_in_ctrl WF).\narewrite (fri ⊆ sb).\nsin_rewrite (ctrl_sb WF).\nunfolder; splits; auto; desf.\napply L_L_cc with z; auto.\nunfold cc0; basic_solver 20."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ L ⨾ ctrli ⨾ fri ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ L ⨾ ctrli ⨾ fri ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (ctrli_in_ctrl WF).\narewrite (fri ⊆ sb).\nsin_rewrite (ctrl_sb WF).\nunfolder; splits; auto; desf.\napply L_L_cc with z; auto.\nunfold cc0; basic_solver 20."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ L ⨾ ctrl ⨾ fri ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ L ⨾ ctrl ⨾ fri ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"arewrite (fri ⊆ sb).\nsin_rewrite (ctrl_sb WF).\nunfolder; splits; auto; desf.\napply L_L_cc with z; auto.\nunfold cc0; basic_solver 20."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ L ⨾ ctrl ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ L ⨾ ctrl ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (ctrl_sb WF).\nunfolder; splits; auto; desf.\napply L_L_cc with z; auto.\nunfold cc0; basic_solver 20."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ L ⨾ ctrl ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ L ⨾ ctrl ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"unfolder; splits; auto; desf.\napply L_L_cc with z; auto.\nunfold cc0; basic_solver 20."},{"statement":"(WF : Wf G) (x y : actid) (H : is_r lab x) (z : actid) (H0 : L x z) (H1 : ctrl z y) (H2 : is_w lab y) : L x y.","conclusion":"L x y","hypotheses":"(WF : Wf G) (x y : actid) (H : is_r lab x) (z : actid) (H0 : L x z) (H1 : ctrl z y) (H2 : is_w lab y)","proofString":"apply L_L_cc with z; auto.\nunfold cc0; basic_solver 20."},{"statement":"(WF : Wf G) (x y : actid) (H : is_r lab x) (z : actid) (H0 : L x z) (H1 : ctrl z y) (H2 : is_w lab y) : cc0 z y.","conclusion":"cc0 z y","hypotheses":"(WF : Wf G) (x y : actid) (H : is_r lab x) (z : actid) (H0 : L x z) (H1 : ctrl z y) (H2 : is_w lab y)","proofString":"unfold cc0; basic_solver 20."},{"statement":"(WF : Wf G) : ppo ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ ppo ⨾ co ∪ co ∪ fri.","conclusion":"ppo ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ ppo ⨾ co ∪ co ∪ fri","hypotheses":"(WF : Wf G)","proofString":"rels.\nsin_rewrite ppo_R_in_R_Li; auto.\nred; ins.\nunfolder in H; desf.\nunfolder in H; desf; subst.\nrename y into c, x into a, z into b.\napply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\ncut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\nred in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\nunfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\nunfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) : ppo ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ ppo ⨾ co ∪ co ∪ fri.","conclusion":"ppo ⨾ ⦗R⦘ ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ ppo ⨾ co ∪ co ∪ fri","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite ppo_R_in_R_Li; auto.\nred; ins.\nunfolder in H; desf.\nunfolder in H; desf; subst.\nrename y into c, x into a, z into b.\napply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\ncut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\nred in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\nunfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\nunfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ Li) ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ ppo ⨾ co ∪ co ∪ fri.","conclusion":"(⦗R⦘ ⨾ Li) ⨾ fri ⨾ ⦗W⦘ ⊆ ppo ∪ ppo ⨾ co ∪ co ∪ fri","hypotheses":"(WF : Wf G)","proofString":"red; ins.\nunfolder in H; desf.\nunfolder in H; desf; subst.\nrename y into c, x into a, z into b.\napply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\ncut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\nred in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\nunfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\nunfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (x y : actid) (H : ((⦗R⦘ ⨾ Li) ⨾ fri ⨾ ⦗W⦘) x y) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) x y.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) x y","hypotheses":"(WF : Wf G) (x y : actid) (H : ((⦗R⦘ ⨾ Li) ⨾ fri ⨾ ⦗W⦘) x y)","proofString":"unfolder in H; desf.\nunfolder in H; desf; subst.\nrename y into c, x into a, z into b.\napply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\ncut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\nred in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\nunfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\nunfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (x y z : actid) (H : is_r lab x) (H2 : Li x z) (H0 : fri z y) (H1 : is_w lab y) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) x y.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) x y","hypotheses":"(WF : Wf G) (x y z : actid) (H : is_r lab x) (H2 : Li x z) (H0 : fri z y) (H1 : is_w lab y)","proofString":"unfolder in H; desf; subst.\nrename y into c, x into a, z into b.\napply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\ncut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\nred in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\nunfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\nunfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (x y z : actid) (H : is_r lab x) (H2 : Li x z) (H0 : fri z y) (H1 : is_w lab y) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) x y.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) x y","hypotheses":"(WF : Wf G) (x y z : actid) (H : is_r lab x) (H2 : Li x z) (H0 : fri z y) (H1 : is_w lab y)","proofString":"rename y into c, x into a, z into b.\napply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\ncut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\nred in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\nunfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\nunfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c)","proofString":"apply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\ncut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\nred in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\nunfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\nunfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c)","proofString":"cut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c) : (ppo ∪ co) a c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ co) a c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c)","proofString":"by basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c) : (ppo ∪ co) a c.","conclusion":"(ppo ∪ co) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c)","proofString":"generalize (ci0_fri WF).\nbasic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c) : ci0 ⨾ fri ⊆ ppo ∪ co -> (ppo ∪ co) a c.","conclusion":"ci0 ⨾ fri ⊆ ppo ∪ co -> (ppo ∪ co) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ci0 a y) (H4 : fri y c)","proofString":"basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ii0 a y) (H4 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : ii0 a y) (H4 : fri y c)","proofString":"red in H3; unfolder in H3; desf.\ngeneralize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\nexfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF); basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : fri y c)","proofString":"generalize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : fri y c) : addr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"addr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : fri y c)","proofString":"ie_unfolder.\nunfolder in *.\nbasic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : (fr ∩ sb) y c) : addr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo -> (ppo ∪ ppo ⨾ co ∪ co ∪ fr ∩ sb) a c.","conclusion":"addr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo -> (ppo ∪ ppo ⨾ co ∪ co ∪ fr ∩ sb) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : (fr ∩ sb) y c)","proofString":"unfolder in *.\nbasic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fr b c /\\ sb b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : fr y c /\\ sb y c) : (forall x y0 : actid,\n (exists z : actid, addr x z /\\ sb z y0 /\\ is_w lab y0) -> ppo x y0) ->\n((ppo a c \\/ (exists z : actid, ppo a z /\\ co z c)) \\/ co a c) \\/\nfr a c /\\ sb a c.","conclusion":"(forall x y0 : actid,\n (exists z : actid, addr x z /\\ sb z y0 /\\ is_w lab y0) -> ppo x y0) ->\n((ppo a c \\/ (exists z : actid, ppo a z /\\ co z c)) \\/ co a c) \\/\nfr a c /\\ sb a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fr b c /\\ sb b c) (H1 : is_w lab c) (y : actid) (H3 : addr a y) (H4 : fr y c /\\ sb y c)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : data a y) (H4 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : data a y) (H4 : fri y c)","proofString":"exfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : data a y) (H4 : fri y c) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : data a y) (H4 : fri y c)","proofString":"apply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) a y) (H4 : fri y c) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) a y) (H4 : fri y c)","proofString":"apply (wf_friD WF) in H4.\nunfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) a y) (H4 : (⦗R⦘ ⨾ fri ⨾ ⦗W⦘) y c) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) a y) (H4 : (⦗R⦘ ⨾ fri ⨾ ⦗W⦘) y c)","proofString":"unfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : rdw a y) (H4 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : rdw a y) (H4 : fri y c)","proofString":"generalize (rdw_rbi_in_rbi WF); basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : rfi a y) (H4 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : rfi a y) (H4 : fri y c)","proofString":"generalize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : rfi a y) (H4 : fri y c) : rf ⨾ fr ⊆ co -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"rf ⨾ fr ⊆ co -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y : actid) (H3 : rfi a y) (H4 : fri y c)","proofString":"ie_unfolder.\nunfolder in *;  basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y : actid) (H3 : (rf ∩ sb) a y) (H4 : (fr ∩ sb) y c) : rf ⨾ fr ⊆ co -> (ppo ∪ ppo ⨾ co ∪ co ∪ fr ∩ sb) a c.","conclusion":"rf ⨾ fr ⊆ co -> (ppo ∪ ppo ⨾ co ∪ co ∪ fr ∩ sb) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y : actid) (H3 : (rf ∩ sb) a y) (H4 : (fr ∩ sb) y c)","proofString":"unfolder in *;  basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H5 : ci0 z y) (H6 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H5 : ci0 z y) (H6 : fri y c)","proofString":"unfold ci0 in *; unfolder in *; desf.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\ngeneralize (L_ctrli_fri WF); basic_solver 12.\napply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : ctrli z y) (H7 : is_r lab y) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : ctrli z y) (H7 : is_r lab y)","proofString":"generalize (L_ctrli_fri WF); basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : ctrli z y) (H7 : is_w lab y) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : ctrli z y) (H7 : is_w lab y)","proofString":"generalize (L_ctrli_fri WF); basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : detour z y) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : detour z y)","proofString":"apply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) z y) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) z y)","proofString":"generalize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) z y) : detour ⨾ fr ⊆ co ->\n⦗R⦘ ⨾ L ⨾ ⦗W⦘ ⊆ ppo ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"detour ⨾ fr ⊆ co ->\n⦗R⦘ ⨾ L ⨾ ⦗W⦘ ⊆ ppo ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : fri y c) (H5 : (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) z y)","proofString":"ie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : (fr ∩ sb) y c) (H5 : (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) z y) : detour ⨾ fr ⊆ co ->\n⦗R⦘ ⨾ L ⨾ ⦗W⦘ ⊆ ppo ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/\n(fr ∩ sb) a c.","conclusion":"detour ⨾ fr ⊆ co ->\n⦗R⦘ ⨾ L ⨾ ⦗W⦘ ⊆ ppo ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/\n(fr ∩ sb) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y z : actid) (H3 H4 : L a z) (H6 : (fr ∩ sb) y c) (H5 : (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) z y)","proofString":"unfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c) (H5 : ii0 z y) (H6 : fri y c) : (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c.","conclusion":"(ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c) (H5 : ii0 z y) (H6 : fri y c)","proofString":"unfold ii0 in *; unfolder in *; desf.\nhahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\nexfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\ngeneralize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\ndo 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : fri y c) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : fri y c)","proofString":"hahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c)","proofString":"do 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c) : ppo a c.","conclusion":"ppo a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c)","proofString":"apply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c) : (⦗R⦘ ⨾ L ⨾ ⦗W⦘) a c.","conclusion":"(⦗R⦘ ⨾ L ⨾ ⦗W⦘) a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c)","proofString":"unfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c) : is_r lab a /\\ L a c /\\ is_w lab c.","conclusion":"is_r lab a /\\ L a c /\\ is_w lab c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c)","proofString":"splits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c) : L a c.","conclusion":"L a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c)","proofString":"apply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : true) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c) : cc0 z c.","conclusion":"cc0 z c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : true) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c)","proofString":"unfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : true) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c) : (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) z c.","conclusion":"(data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) z c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : true) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : fri y c) (H8 : is_w lab c)","proofString":"ie_unfolder.\nunfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : true) (y z : actid) (H3 : Li a z) (H4 : (fr ∩ sb) z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/\n(fr ∩ sb) a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : (fr ∩ sb) y c) (H8 : is_w lab c) : (data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) z c.","conclusion":"(data ∪ ctrl ⨾ ⦗RW⦘ ∪ addr ⨾ sb^? ⨾ ⦗RW⦘) z c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : true) (y z : actid) (H3 : Li a z) (H4 : (fr ∩ sb) z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/\n(fr ∩ sb) a c) (H5 : addr z y) (H6 : is_r lab y) (H7 : (fr ∩ sb) y c) (H8 : is_w lab c)","proofString":"unfolder in *; basic_solver 42."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : data z y) (H6 : fri y c) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : data z y) (H6 : fri y c)","proofString":"exfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : data z y) (H6 : fri y c) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : data z y) (H6 : fri y c)","proofString":"apply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) z y) (H6 : fri y c) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) z y) (H6 : fri y c)","proofString":"apply (wf_friD WF) in H6.\nunfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) z y) (H6 : (⦗R⦘ ⨾ fri ⨾ ⦗W⦘) y c) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : (⦗R⦘ ⨾ data ⨾ ⦗W⦘) z y) (H6 : (⦗R⦘ ⨾ fri ⨾ ⦗W⦘) y c)","proofString":"unfolder in *; type_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rdw z y) (H6 : fri y c) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rdw z y) (H6 : fri y c)","proofString":"generalize (rdw_rbi_in_rbi WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rdw z y) (H6 : fri y c) : rdw ⨾ fri ⊆ fri ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"rdw ⨾ fri ⊆ fri ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rdw z y) (H6 : fri y c)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rfi z y) (H6 : fri y c) : ((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c.","conclusion":"((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rfi z y) (H6 : fri y c)","proofString":"do 2 left; right.\neexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rfi z y) (H6 : fri y c) : exists z0 : actid, ppo a z0 /\\ co z0 c.","conclusion":"exists z0 : actid, ppo a z0 /\\ co z0 c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rfi z y) (H6 : fri y c)","proofString":"eexists.\nsplit.\ngeneralize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\ngeneralize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rfi z y) (H6 : fri y c) : rf ⨾ fr ⊆ co -> co z c.","conclusion":"rf ⨾ fr ⊆ co -> co z c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : fri b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : fri z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/ fri a c) (H5 : rfi z y) (H6 : fri y c)","proofString":"ie_unfolder.\nunfolder in *; basic_solver."},{"statement":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : (fr ∩ sb) z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/\n(fr ∩ sb) a c) (H5 : (rf ∩ sb) z y) (H6 : (fr ∩ sb) y c) : rf ⨾ fr ⊆ co -> co z c.","conclusion":"rf ⨾ fr ⊆ co -> co z c","hypotheses":"(WF : Wf G) (a c b : actid) (H : is_r lab a) (H2 : Li a b) (H0 : (fr ∩ sb) b c) (H1 : is_w lab c) (y z : actid) (H3 : Li a z) (H4 : (fr ∩ sb) z c ->\n((ppo a c \\/ (exists z0 : actid, ppo a z0 /\\ co z0 c)) \\/ co a c) \\/\n(fr ∩ sb) a c) (H5 : (rf ∩ sb) z y) (H6 : (fr ∩ sb) y c)","proofString":"unfolder in *; basic_solver."},{"statement":"(WF : Wf G) : good_ctx (fun x : relation actid => x).","conclusion":"good_ctx (fun x : relation actid => x)","hypotheses":"(WF : Wf G)","proofString":"by eauto with hahn."},{"statement":"(WF : Wf G) : data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G)","proofString":"by rewrite <- ii0_in_ii; unfold ii0; basic_solver 12."},{"statement":"(WF : Wf G) : forall k : relation actid,\nk ⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^? ->\n(data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi) ⨾ k\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"forall k : relation actid,\nk ⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^? ->\n(data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi) ⨾ k\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G)","proofString":"intros k H; desf; rewrite H; clear H.\nrewrite rfi_in_ii, data_in_ii at 1.\narewrite (ii ∪ ctrl ∪ addr ⨾ sb^? ∪ ii ⊆ ii ∪ ctrl ∪ addr ⨾ sb^?).\nrewrite !seq_union_l; unionL.\nby generalize ii_ii_in_ii; basic_solver 12.\nrewrite (ctrl_in_sb WF) at 2 3.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12.\nrewrite (ctrl_in_sb WF) at 1 2.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi)\n⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"(data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi)\n⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite rfi_in_ii, data_in_ii at 1.\narewrite (ii ∪ ctrl ∪ addr ⨾ sb^? ∪ ii ⊆ ii ∪ ctrl ∪ addr ⨾ sb^?).\nrewrite !seq_union_l; unionL.\nby generalize ii_ii_in_ii; basic_solver 12.\nrewrite (ctrl_in_sb WF) at 2 3.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12.\nrewrite (ctrl_in_sb WF) at 1 2.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : (ii ∪ ctrl ∪ addr ⨾ sb^? ∪ ii)\n⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"(ii ∪ ctrl ∪ addr ⨾ sb^? ∪ ii)\n⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"arewrite (ii ∪ ctrl ∪ addr ⨾ sb^? ∪ ii ⊆ ii ∪ ctrl ∪ addr ⨾ sb^?).\nrewrite !seq_union_l; unionL.\nby generalize ii_ii_in_ii; basic_solver 12.\nrewrite (ctrl_in_sb WF) at 2 3.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12.\nrewrite (ctrl_in_sb WF) at 1 2.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : (ii ∪ ctrl ∪ addr ⨾ sb^?)\n⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"(ii ∪ ctrl ∪ addr ⨾ sb^?)\n⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite !seq_union_l; unionL.\nby generalize ii_ii_in_ii; basic_solver 12.\nrewrite (ctrl_in_sb WF) at 2 3.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12.\nrewrite (ctrl_in_sb WF) at 1 2.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : ii ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"ii ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"by generalize ii_ii_in_ii; basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : ctrl ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"ctrl ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite (ctrl_in_sb WF) at 2 3.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : ctrl ⨾ (sb ∪ addr ⨾ sb^? ∪ ii ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"ctrl ⨾ (sb ∪ addr ⨾ sb^? ∪ ii ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : ctrl ⨾ (sb ∪ addr ⨾ sb^? ∪ sb ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"ctrl ⨾ (sb ∪ addr ⨾ sb^? ∪ sb ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : ctrl ⨾ (sb ∪ sb ⨾ sb^? ∪ sb ⨾ (sb ∪ sb ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"ctrl ⨾ (sb ∪ sb ⨾ sb^? ∪ sb ⨾ (sb ∪ sb ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"generalize (ctrl_sb WF) (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : (addr ⨾ sb^?) ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"(addr ⨾ sb^?) ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite (ctrl_in_sb WF) at 1 2.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : (addr ⨾ sb^?) ⨾ (sb ∪ addr ⨾ sb^? ∪ ii ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"(addr ⨾ sb^?) ⨾ (sb ∪ addr ⨾ sb^? ∪ ii ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : (addr ⨾ sb^?) ⨾ (sb ∪ addr ⨾ sb^? ∪ sb ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"(addr ⨾ sb^?) ⨾ (sb ∪ addr ⨾ sb^? ∪ sb ⨾ (sb ∪ addr ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"rewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) (k : relation actid) : (addr ⨾ sb^?) ⨾ (sb ∪ sb ⨾ sb^? ∪ sb ⨾ (sb ∪ sb ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","conclusion":"(addr ⨾ sb^?) ⨾ (sb ∪ sb ⨾ sb^? ∪ sb ⨾ (sb ∪ sb ⨾ sb^?)^?)\n⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?","hypotheses":"(WF : Wf G) (k : relation actid)","proofString":"generalize (@sb_trans G); basic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘ ⊆ ppo.","conclusion":"⦗R⦘ ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"unfold ppo.\nrewrite (wf_ctrlD WF) at 1.\nrewrite (dom_l (wf_iiD WF)) at 1.\ngeneralize addr_sb_in_cc, ctrl_in_cc, ii_in_ic, ii_cc_in_ic, cc_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ (ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_ctrlD WF) at 1.\nrewrite (dom_l (wf_iiD WF)) at 1.\ngeneralize addr_sb_in_cc, ctrl_in_cc, ii_in_ic, ii_cc_in_ic, cc_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (⦗R⦘ ⨾ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ (⦗R⦘ ⨾ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_iiD WF)) at 1.\ngeneralize addr_sb_in_cc, ctrl_in_cc, ii_in_ic, ii_cc_in_ic, cc_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (⦗R⦘ ⨾ ctrl ∪ addr ⨾ sb^? ∪ (⦗RW⦘ ⨾ ii) ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ (⦗R⦘ ⨾ ctrl ∪ addr ⨾ sb^? ∪ (⦗RW⦘ ⨾ ii) ⨾ (ctrl ∪ addr ⨾ sb^?)^?) ⨾ ⦗W⦘\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"generalize addr_sb_in_cc, ctrl_in_cc, ii_in_ic, ii_cc_in_ic, cc_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : ppo ⨾ (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) ⨾ ppo^? ⊆ ppo.","conclusion":"ppo ⨾ (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) ⨾ ppo^? ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"unfold ppo.\nrewrite detour_in_ci.\nrelsf; rewrite !seqA.\narewrite_false !(⦗R⦘ ⨾ ⦗W⦘); [by type_solver|].\ngeneralize ic_ci_in_ii, ii_ii_in_ii, ii_ic_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"(⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ detour ⨾ ⦗R⦘) ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite detour_in_ci.\nrelsf; rewrite !seqA.\narewrite_false !(⦗R⦘ ⨾ ⦗W⦘); [by type_solver|].\ngeneralize ic_ci_in_ii, ii_ii_in_ii, ii_ic_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ ci ⨾ ⦗R⦘) ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"(⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ ci ⨾ ⦗R⦘) ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"relsf; rewrite !seqA.\narewrite_false !(⦗R⦘ ⨾ ⦗W⦘); [by type_solver|].\ngeneralize ic_ci_in_ii, ii_ii_in_ii, ii_ic_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ⨾ ⦗W⦘ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ⨾ ⦗W⦘ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"arewrite_false !(⦗R⦘ ⨾ ⦗W⦘); [by type_solver|].\ngeneralize ic_ci_in_ii, ii_ii_in_ii, ii_ic_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ii ⨾ ∅₂ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘.","conclusion":"⦗R⦘ ⨾ ii ⨾ ∅₂ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ ci ⨾ ⦗R⦘ ⨾ (⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘)^?\n⊆ ⦗R⦘ ⨾ ii ⨾ ⦗R⦘ ∪ ⦗R⦘ ⨾ ic ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"generalize ic_ci_in_ii, ii_ii_in_ii, ii_ic_in_ic; basic_solver 22."},{"statement":"(WF : Wf G) : good_ctx (seq ppo).","conclusion":"good_ctx (seq ppo)","hypotheses":"(WF : Wf G)","proofString":"by eauto with hahn."},{"statement":"(WF : Wf G) : ppo ⨾ detour ⨾ ppo^? ⊆ ppo.","conclusion":"ppo ⨾ detour ⨾ ppo^? ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"apply (ppo_detour_ppo WF)."},{"statement":"(WF : Wf G) : forall k : relation actid, ppo ⨾ k ⊆ ppo -> ppo ⨾ (detour ⨾ ppo^?) ⨾ k ⊆ ppo.","conclusion":"forall k : relation actid, ppo ⨾ k ⊆ ppo -> ppo ⨾ (detour ⨾ ppo^?) ⨾ k ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"intros k H; desf; rewrite !seqA.\nby sin_rewrite (ppo_detour_ppo WF)."},{"statement":"(WF : Wf G) (k : relation actid) (H : ppo ⨾ k ⊆ ppo) : ppo ⨾ detour ⨾ ppo^? ⨾ k ⊆ ppo.","conclusion":"ppo ⨾ detour ⨾ ppo^? ⨾ k ⊆ ppo","hypotheses":"(WF : Wf G) (k : relation actid) (H : ppo ⨾ k ⊆ ppo)","proofString":"by sin_rewrite (ppo_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ((ppo ∪ ctrli)⁺ ∪ ((ppo ∪ ctrli)＊ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘\n⊆ ppo.","conclusion":"⦗R⦘ ⨾ ((ppo ∪ ctrli)⁺ ∪ ((ppo ∪ ctrli)＊ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘\n⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_detourD WF)) at 1.\nrelsf.\nrewrite (ct_ppo_ctrli_rw_in_ppo WF).\narewrite (⦗W⦘ ⊆ ⦗RW⦘).\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\napply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘\n⨾ ((ppo ∪ ctrli)⁺ ∪ ((ppo ∪ ctrli)＊ ⨾ ⦗W⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘\n⊆ ppo.","conclusion":"⦗R⦘\n⨾ ((ppo ∪ ctrli)⁺ ∪ ((ppo ∪ ctrli)＊ ⨾ ⦗W⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘\n⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"relsf.\nrewrite (ct_ppo_ctrli_rw_in_ppo WF).\narewrite (⦗W⦘ ⊆ ⦗RW⦘).\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\napply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (ppo ∪ ctrli)⁺ ⨾ ⦗RW⦘\n∪ ⦗R⦘ ⨾ (((ppo ∪ ctrli)＊ ⨾ ⦗W⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘ ⊆ ppo.","conclusion":"⦗R⦘ ⨾ (ppo ∪ ctrli)⁺ ⨾ ⦗RW⦘\n∪ ⦗R⦘ ⨾ (((ppo ∪ ctrli)＊ ⨾ ⦗W⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"rewrite (ct_ppo_ctrli_rw_in_ppo WF).\narewrite (⦗W⦘ ⊆ ⦗RW⦘).\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\napply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ (((ppo ∪ ctrli)＊ ⨾ ⦗W⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘\n⊆ ppo.","conclusion":"⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ (((ppo ∪ ctrli)＊ ⨾ ⦗W⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊) ⨾ ⦗RW⦘\n⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"arewrite (⦗W⦘ ⊆ ⦗RW⦘).\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\napply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ ((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊ ⨾ ⦗RW⦘\n⊆ ppo.","conclusion":"⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ ((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⨾ detour)⁺ ⨾ (ppo ∪ ctrli)＊ ⨾ ⦗RW⦘\n⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"arewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\napply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : (ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?.","conclusion":"(ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?","hypotheses":"(WF : Wf G)","proofString":"by generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ ((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⨾ detour)⁺ ⨾ ppo^? ⊆ ppo.","conclusion":"⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ ((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⨾ detour)⁺ ⨾ ppo^? ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"arewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\napply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : (ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?.","conclusion":"(ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?","hypotheses":"(WF : Wf G)","proofString":"by generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ (ppo^? ⨾ detour)⁺ ⨾ ppo^? ⊆ ppo.","conclusion":"⦗R⦘ ⨾ ppo ∪ ⦗R⦘ ⨾ (ppo^? ⨾ detour)⁺ ⨾ ppo^? ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"apply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ⊆ ppo.","conclusion":"⦗R⦘ ⨾ ppo ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"by basic_solver."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ (ppo^? ⨾ detour)⁺ ⨾ ppo^? ⊆ ppo.","conclusion":"⦗R⦘ ⨾ (ppo^? ⨾ detour)⁺ ⨾ ppo^? ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"rewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo^? ⨾ (detour ⨾ ppo^?) ⨾ (detour ⨾ ppo^?)＊ ⊆ ppo.","conclusion":"⦗R⦘ ⨾ ppo^? ⨾ (detour ⨾ ppo^?) ⨾ (detour ⨾ ppo^?)＊ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⨾ detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ ppo.","conclusion":"⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⨾ detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"arewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : ppo ⨾ detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ ppo.","conclusion":"ppo ⨾ detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"arewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF)."},{"statement":"(WF : Wf G) : detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺.","conclusion":"detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺","hypotheses":"(WF : Wf G)","proofString":"by rewrite <- seqA, <- ct_begin."},{"statement":"(WF : Wf G) : ppo ⨾ (detour ⨾ ppo^?)⁺ ⊆ ppo.","conclusion":"ppo ⨾ (detour ⨾ ppo^?)⁺ ⊆ ppo","hypotheses":"(WF : Wf G)","proofString":"apply (ppo_rt_detour_ppo WF)."}]}