[{"statement":"Lemma WF : Wf G.","proof":"apply CON.\n"},{"statement":"Lemma rs_big_alt: rs_big ⊆ \n ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘)＊.","proof":"unfold rs_big.\nhahn_frame.\nrewrite rtE; relsf; unionL; [basic_solver 12|].\neapply ct_ind_left with (P:= fun r => r ⨾ ⦗W⦘).\nby eauto with hahn.\nrelsf; unionL.\nerewrite <- inclusion_step_rt; [|edone].\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 21.\nbasic_solver 21.\nins; rewrite !seqA, H.\ngeneralize (@sb_same_loc_trans G); ins; relsf.\nunionL; [|basic_solver 12].\nrewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ rf ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rf).\nbasic_solver 12.\nhahn_frame.\nrewrite <- !seqA.\nrewrite <- ct_begin.\nbasic_solver.\n"},{"statement":"Lemma wf_rs_bigD : rs_big ≡ ⦗W⦘ ⨾ rs_big ⨾ ⦗W⦘.","proof":"split; [|basic_solver].\nunfold rs_big.\nbasic_solver 42.\n"},{"statement":"Lemma rs_in_rs_big: rs ⊆ rs_big.","proof":"unfold imm_hb.rs, rs_big.\nrelsf; unionL.\nrewrite rtE, <- ct_step; basic_solver.\nrewrite rtE; relsf; unionL; [basic_solver 12|].\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite <- !seqA, inclusion_ct_seq_eqv_r.\nhahn_frame.\narewrite ((sb ∩ same_loc)^? ⊆ (rf ⨾ rmw ∪ sb ∩ same_loc)＊).\narewrite (rf ⨾ rmw ⊆ (rf ⨾ rmw ∪ sb ∩ same_loc)＊) at 2.\nrelsf.\n"},{"statement":"Lemma sw_in_sw_big : sw ⊆ sw_big.","proof":"unfold imm_hb.sw, imm_hb.release, sw_big.\nrewrite rs_in_rs_big.\nrelsf; unionL.\nby arewrite (rfi ⊆ rf).\nunfold rs_big.\nrewrite (dom_l (wf_rfeD WF)) at 1.\narewrite ((sb ∩ same_loc)^? ⊆ (rf ⨾ rmw ∪ sb ∩ same_loc)＊).\narewrite_id ⦗W⦘ at 2; rels.\nby arewrite (rfe ⊆ rf).\n"},{"statement":"Lemma no_w_rel : \n  ⦗Rel⦘ ⨾ ⦗W⦘ ⊆ ∅₂.","proof":"unfolder; ins; desf; eapply NO_W_REL; basic_solver.\n"},{"statement":"Lemma sw_no_w_rel : \n  sw ⊆ ⦗F ∩₁ Rel⦘ ⨾ sb ⨾ rs_big ⨾ rf ⨾ (⦗R ∩₁ Acq⦘ ∪ sb ⨾ ⦗F ∩₁ Acq⦘).","proof":"rewrite sw_in_sw_big.\nunfold  sw_big, imm_hb.release.\nrewrite (dom_l (wf_rs_bigD)).\ncase_refl (⦗F⦘ ⨾ sb) at 1.\nby sin_rewrite no_w_rel; basic_solver.\nby rewrite (dom_r (wf_rfD WF)) at 1; basic_solver 22.\n"},{"statement":"Lemma bob_no_w_rel : \n  bob ⊆ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ sb ⨾ ⦗F^lwsync⦘ ∪ ⦗F^lwsync⦘ ⨾ sb.","proof":"unfold imm_bob.bob, imm_bob.fwbob.\nsin_rewrite !NO_W_REL.\nbasic_solver 21.\n"},{"statement":"Lemma rmw_sb_in_ctrl: rmw ⨾ sb ⊆ ctrl.","proof":"rewrite rmw_W_ex.\nrewrite seqA.\nrewrite RMW_DEPS.\nrewrite !seq_union_l.\nunionL; auto.\narewrite_id ⦗W_ex⦘.\nrewrite seq_id_l.\napply WF.\n"},{"statement":"Lemma rmw_in_deps: rmw ⊆ deps.","proof":"rewrite RMW_DEPS.\nunfold Execution.deps.\neauto with hahn.\n"},{"statement":"Lemma rmw_sb_in_deps: rmw ⨾ sb^? ⊆ deps.","proof":"case_refl _.\napply rmw_in_deps.\nrewrite rmw_sb_in_ctrl; vauto.\n"},{"statement":"Lemma RMW_CTRL_FAIL' : ⦗R_ex⦘ ⨾ sb ⊆ rmw ∪ ctrl.","proof":"rewrite RMW_CTRL_FAIL; basic_solver.\n"},{"statement":"Lemma rmw_sb_W_in_ppo: rmw ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppop.","proof":"sin_rewrite rmw_sb_in_deps.\nby sin_rewrite (deps_in_ppo WF).\n"},{"statement":"Lemma r_acq_sb: ⦗R∩₁Acq⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ rmw ∪ ctrli ⨾ ⦗RW⦘ ∪ ⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘.","proof":"arewrite (⦗R ∩₁ Acq⦘ ⊆ ⦗R⦘ ⨾ ⦗R ∩₁ Acq⦘) by basic_solver.\nsin_rewrite R_ACQ_SB.\nunfold Power_ppo.ctrli.\nrewrite (wf_ctrlD WF) at 1.\nrewrite !seq_union_l, !seq_union_r, !seqA.\narewrite (⦗F^isync⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ ⦗F^isync⦘ ⨾ sb ⨾ ⦗RW⦘) by type_solver 21.\narewrite (⦗F^lwsync⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘) by type_solver 21.\nunionL; [| |done]; basic_solver 12.\n"},{"statement":"Lemma external_helper : \n ⦗F ∩₁ Rel⦘ ⨾ sb ⨾ (rf ⨾ rmw ⨾ sb^? ⨾ ⦗W⦘)＊ ⨾ rf ⨾ (⦗R ∩₁ Acq⦘ ∪ sb ⨾ ⦗F ∩₁ Acq⦘) \\ sb ⊆\n ⦗F ∩₁ Rel⦘ ⨾ sb ⨾  ((rf ⨾ rmw⨾  sb^? ⨾ ⦗W⦘)＊ ⨾ rf \\ sb) ⨾ (⦗R ∩₁ Acq⦘ ∪ sb ⨾ ⦗F ∩₁ Acq⦘).","proof":"generalize (@sb_trans G).\nbasic_solver 22.\n"},{"statement":"Lemma sb_sw_in_S: sb^? ⨾ (sw \\ sb) ⊆ S.","proof":"rewrite sw_no_w_rel.\nunfold Power.S.\nrewrite (rs_big_alt).\narewrite (sb ∩ same_loc ⊆ sb).\narewrite (sb ⨾ ⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ sb) by generalize (@sb_trans G); basic_solver.\nrewrite external_helper.\nrewrite (rf_rmw_sb_rt_rf WF), (rmw_rf_rt_1 WF).\nrewrite rmw_sb_W_in_ppo.\narewrite ((ppop ∪ rfe)＊ ⊆ hbp＊).\nie_unfolder.\nrewrite rf_in_eco at 2.\narewrite (⦗F ∩₁ Rel⦘ ⊆ ⦗F^lwsync⦘) by mode_solver.\narewrite (⦗F ∩₁ Acq⦘ ⊆ ⦗F^lwsync⦘) by mode_solver.\narewrite (sb ⨾ sb^? ⊆ sb).\ngeneralize (@sb_trans G); basic_solver.\nhahn_frame.\ngeneralize (@sb_trans G); basic_solver 42.\n"},{"statement":"Lemma sw_sb_in_S: sb^? ⨾ (sw \\ sb) ⨾ sb ⨾ ⦗RW⦘ ⊆ S.","proof":"rewrite sw_no_w_rel.\nunfold Power.S.\nrewrite (rs_big_alt).\narewrite (sb ∩ same_loc ⊆ sb).\narewrite (sb ⨾ ⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ sb) by generalize (@sb_trans G); basic_solver.\nrewrite external_helper.\nrewrite (rf_rmw_sb_rt_rf WF).\nrewrite (dom_r (wf_rfeD WF)) at 1.\nrewrite !seqA.\narewrite (sb ⨾ sb^? ⊆ sb).\nby generalize (@sb_trans G); basic_solver.\nrewrite (rmw_rf_rt_1 WF).\narewrite (⦗F ∩₁ Rel⦘ ⊆ ⦗F^lwsync⦘) by mode_solver.\narewrite (⦗F ∩₁ Acq⦘ ⊆ ⦗F^lwsync⦘) by mode_solver.\nhahn_frame.\narewrite (⦗R⦘ ⨾ (rmw ⨾ sb^? ⨾ ⦗W⦘ ∪ rfe)＊ ⨾ rfi^? ⊆     (rmw ⨾ sb^? ⨾ ⦗W⦘ ∪ rfe)＊ ⨾ rmw ⨾ sb^? ∪ (rmw ⨾ sb^? ⨾ ⦗W⦘ ∪ rfe)＊ ⨾ ⦗R⦘).\n{\nrewrite rtE at 1; relsf; unionL.\nby rewrite (dom_l (wf_rfiD WF)) at 1; type_solver 12.\nrewrite ct_end; relsf; unionL; rewrite !seqA.\narewrite (rfi ⊆ sb).\ngeneralize (@sb_trans G); basic_solver 12.\narewrite (rfe ⨾ rfi^? ⊆ rfe).\nby rewrite (dom_l (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)); type_solver.\nrewrite (dom_r (wf_rfeD WF)) at 2.\narewrite (rfe ⊆ (rmw ⨾ sb^? ⨾ ⦗W⦘ ∪ rfe)＊) at 2.\nrelsf; unionR right; hahn_frame; basic_solver 12.\n}\narewrite ((rmw ⨾ sb^? ⨾ ⦗W⦘ ∪ rfe)＊ ⊆ hbp＊).\n{\nrewrite rmw_sb_W_in_ppo.\narewrite (ppop ⊆ hbp).\narewrite (rfe ⊆ hbp).\nrelsf.\n}\nrelsf; unionL; rewrite ?seqA.\n- sin_rewrite r_acq_sb.\nrelsf.\narewrite (sb^? ⨾ ⦗R⦘ ⨾ sb ⊆ sb).\n{\ngeneralize (@sb_trans G); basic_solver.\n}\nrewrite (dom_r (wf_rmwD WF)) at 2.\nrewrite (rmw_in_sb WF) at 2.\ngeneralize (@sb_trans G); ins; relsf.\narewrite (sb ⊆ sb^?) at 1.\nsin_rewrite rmw_sb_W_in_ppo.\nrewrite (wf_ctrliD) at 1.\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ sb) by type_solver 12.\nsin_rewrite rmw_sb_in_ctrl.\nrewrite (ctrl_ctrli_RW_in_ppo WF).\narewrite (rmw ⨾ sb ⊆ ⦗R⦘ ⨾ sb).\n{\nrewrite (dom_l (wf_rmwD WF)), (rmw_in_sb WF).\ngeneralize (@sb_trans G).\ntype_solver.\n}\nrewrite R_sb_F_sb_RW_in_fence.\narewrite (ppop ⊆ hbp＊).\narewrite (fence ⊆ hbp＊).\nrelsf; basic_solver 12.\n- rewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite (rmw_in_sb WF); rewrite !seqA.\ngeneralize (@sb_trans G); ins; relsf.\nsin_rewrite (@R_sb_F_sb_RW_in_fence G).\narewrite (fence ⊆ hbp＊); relsf; basic_solver 12.\n- sin_rewrite r_acq_sb.\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite rmw_in_deps, (deps_in_ppo WF).\nrelsf.\nrewrite (ctrli_RW_in_ppo WF).\narewrite !(⦗R⦘ ⨾ ppop ⊆ hbp＊).\nrewrite R_sb_F_sb_RW_in_fence.\narewrite (fence ⊆ hbp＊).\nrelsf; basic_solver 12.\n- sin_rewrite (@R_sb_F_sb_RW_in_fence G).\narewrite (fence ⊆ hbp＊); relsf; basic_solver 12.\n"},{"statement":"Lemma hb_in_S_sb : hb ⊆ sb ∪ S ⨾ sb^?.","proof":"rewrite hb_in_sb_swe, path_union.\nrewrite (ct_of_trans (@sb_trans G)), (rt_of_trans (@sb_trans G)).\nrewrite sb_sw_in_S.\nrewrite (ct_of_trans (S_trans WF)).\nbasic_solver.\n"},{"statement":"Lemma hb_rw_in_S : hb ⨾ ⦗RW⦘ ⊆ sb ∪ S.","proof":"rewrite hb_in_sb_swe, path_union.\nrewrite (ct_of_trans (@sb_trans G)), (rt_of_trans (@sb_trans G)).\ncase_union _ _.\nunionL; [basic_solver|].\nrewrite ct_end, !seqA.\narewrite (sb^? ⨾ (sw \\ sb) ⨾ sb^? ⨾ ⦗RW⦘ ⊆ S).\nby generalize sb_sw_in_S sw_sb_in_S; basic_solver 12.\nrewrite sb_sw_in_S.\nrewrite <- ct_end.\nrewrite (ct_of_trans (S_trans WF)).\nbasic_solver.\n"},{"statement":"Lemma rw_hb_f_in_hbp : ⦗RW⦘ ⨾ hb ⨾  ⦗F^sync⦘  ⊆ sb ⨾  ⦗F^sync⦘ ∪ fence ⨾ hbp＊ ⨾ sb ⨾ ⦗F^sync⦘.","proof":"rewrite hb_in_S_sb.\nunfold Power.S.\nrelsf; unionL; [basic_solver|].\nrewrite !seqA.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘) by type_solver.\nrewrite (dom_l (wf_rfeD WF)), !seqA.\nsin_rewrite RW_sb_F_sb_W_in_fence.\narewrite ((sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⨾ ⦗F^sync⦘ ⊆  sb^? ⨾ ⦗F^sync⦘).\ngeneralize (@sb_trans G); basic_solver 12.\narewrite (rfe ⨾ hbp＊ ⨾ sb^? ⨾ ⦗F^sync⦘ ⊆ rfe ⨾ hbp＊ ⨾ sb ⨾ ⦗F^sync⦘).\n{\nrewrite rtE at 1.\nrewrite (dom_r (wf_rfeD WF)) at 1.\nrewrite (dom_r (wf_cthbD WF)) at 1.\ntype_solver 12.\n}\narewrite (rfe ⊆ hbp).\nseq_rewrite <- ct_begin.\nbasic_solver 12.\n"},{"statement":"Lemma COH: coherence G.","proof":"red; rewrite (dom_l (wf_ecoD WF)).\nsin_rewrite hb_rw_in_S.\ncase_union _ _; unionL; [by apply CON| apply S_eco_irr; apply CON].\n"},{"statement":"Lemma acyc_psc_hbp: acyclic (sb^? ⨾ psc ⨾ sb^? ∪ hbp).","proof":"rewrite unionC.\napply acyclic_union; [by apply CON|].\nrewrite !seqA.\nunfold imm.psc.\nrewrite (dom_r (wf_ecoD WF)), !seqA.\nsin_rewrite rw_hb_f_in_hbp.\nrewrite (dom_l (wf_ecoD WF)), !seqA.\nsin_rewrite hb_rw_in_S.\narewrite ((sb ⨾ ⦗F^sync⦘ ∪ fence ⨾ hbp＊ ⨾ sb ⨾ ⦗F^sync⦘) ⊆ (fence ⨾ hbp＊)^? ⨾ sb ⨾ ⦗F^sync⦘).\nby rewrite rtE; basic_solver 12.\narewrite ((sb ∪ S) ⨾ eco ⊆ sb ⨾ eco ∪ S ⨾ eco).\nby basic_solver.\nrewrite (dom_l (wf_ecoD WF)) at 2.\nsin_rewrite (S_rw CON); rewrite !seqA.\narewrite ((eco ∩ sb)^? ⨾ eco ⊆ eco).\nby generalize (eco_trans (CON_WF CON)); type_solver.\narewrite (sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hbp＊ ⊆ sb ⨾ hbp＊).\nby generalize (rfe_in_hb) (@sb_trans G) (ct_begin hbp); basic_solver 12.\narewrite (sb ⨾ eco ∪ sb ⨾ hbp＊ ⨾ eco ⊆ sb ⨾ hbp＊ ⨾ eco).\nby rewrite rtE; basic_solver 12.\narewrite (hbp＊ ⨾ eco ⊆ ⦗RW⦘ ⨾ hbp＊ ⨾ eco).\n{\nrewrite rtE at 1.\nrewrite (dom_l (wf_cthbD WF)) at 1.\nrewrite (dom_l (wf_ecoD WF)) at 1.\nbasic_solver 22.\n}\nrotate 4.\narewrite (eco ⨾ (fence ⨾ hbp＊)^? ⊆ eco ⨾ (fence ⨾ hbp＊)^? ⨾ ⦗RW⦘).\n{\nrewrite rtE at 1.\nrewrite (dom_r (wf_cthbD WF)) at 1.\nrewrite (dom_r (wf_ecoD WF)).\nrewrite (dom_r (wf_fenceD WF)).\nbasic_solver 22.\n}\nrotate 1.\narewrite (⦗F^sync⦘ ⨾ sb^? ⨾ hbp＊ ⨾ sb^? ⨾ ⦗F^sync⦘ ⊆ ⦗F^sync⦘ ⨾ sb^? ∪ ⦗F^sync⦘ ⨾  sb ⨾ hbp⁺ ⨾ sb ⨾ ⦗F^sync⦘).\n{\nrewrite rtE.\nrelsf; unionL.\nby generalize (@sb_trans G); basic_solver 12.\nunionR right.\nrewrite (wf_cthbD WF) at 1.\ntype_solver 22.\n}\ngeneralize (@sb_trans G); ins.\nrelsf; rewrite !seqA; relsf.\nrewrite (wf_cthbD WF) at 1; rewrite !seqA.\narewrite !(⦗RW⦘ ⨾ sb ⨾ ⦗F^sync⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ sync).\narewrite(sync ⊆ hbp) at 3.\narewrite(hbp⁺ ⨾ hbp ⨾ hbp＊ ⊆ hbp＊).\nby rewrite <- ct_begin, ct_ct; basic_solver.\nrelsf.\nrotate 2.\neapply acyclic_mon.\napply (eco_fench_hb_acyclic CON).\nbasic_solver 42.\n"},{"statement":"Lemma ppo_ctrli_detour_seq_W_ex_sb_W_in_ppo_ctrli_detour :\n  ((ppo ∪ ctrli ∪ detour) ⨾ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘) ⊆ ppo ∪ ctrli ∪ detour.","proof":"relsf; unionL.\n* rewrite (ppo_alt WF RMW_DEPS RMW_CTRL_FAIL' DATA_RMW DEPS_RMW_FAIL) at 1.\nrewrite !seqA.\nrewrite ct_end; relsf; rewrite !seqA.\narewrite_false (rfi ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_rfiD WF)); type_solver.\nrels.\nunionL.\n+ arewrite_id (⦗W⦘) at 1; rels.\nsin_rewrite DATA_RMW.\nunionR left -> left.\nunfold imm_ppo.ppo.\nhahn_frame.\nrewrite ct_end.\napply inclusion_seq_mon; [apply inclusion_rt_rt|]; basic_solver 42.\n+ arewrite (ctrl ⨾ ⦗W⦘ ⨾ ⦗W_ex⦘ ⨾ sb ⊆ ctrl).\nby generalize (ctrl_sb WF); basic_solver.\nunionR left -> left.\nunfold imm_ppo.ppo.\nhahn_frame.\nrewrite ct_end.\napply inclusion_seq_mon; [apply inclusion_rt_rt|]; basic_solver 42.\n+ arewrite_id (⦗W⦘ ⨾ ⦗W_ex⦘).\nbasic_solver.\ngeneralize (@sb_trans G); ins; relsf.\nunionR left -> left.\nunfold imm_ppo.ppo.\nhahn_frame.\nrewrite ct_end.\napply inclusion_seq_mon; [apply inclusion_rt_rt|]; basic_solver 42.\n* arewrite_id (⦗W_ex⦘) at 1.\nrels.\nsin_rewrite ctrli_sb.\nbasic_solver.\n* rewrite (W_ex_in_W WF).\nrewrite (dom_r (wf_detourD WF)).\ntype_solver.\n"},{"statement":"Lemma C_EXT_helper0: \n  ⦗R⦘ ⨾ (ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘)⁺ ⊆ ⦗R⦘ ⨾ (ppo ∪ ctrli ∪ detour)⁺.","proof":"rewrite path_union2.\nrelsf; unionL.\n- done.\n- rewrite ct_begin.\nrewrite (W_ex_in_W WF), !seqA.\narewrite_false (⦗R⦘ ⨾ ⦗W⦘).\ntype_solver.\nrels.\n- arewrite (⦗R⦘ ⨾ (⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘)＊ ⊆ ⦗R⦘).\nrewrite (W_ex_in_W WF).\nrewrite rtE, ct_begin; type_solver 16.\nassert (transitive (⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘)).\n{\napply transitiveI; rewrite !seqA.\narewrite_id (⦗W⦘ ⨾ ⦗W_ex⦘).\nbasic_solver.\nrelsf.\narewrite (sb ⨾ sb ⊆ sb).\napply transitiveI, (@sb_trans G).\ndone.\n}\nrelsf.\nrewrite (ct_end (ppo ∪ ctrli ∪ detour)) at 1; rewrite !seqA.\nrewrite ppo_ctrli_detour_seq_W_ex_sb_W_in_ppo_ctrli_detour.\nrewrite <- ct_end; relsf.\n"},{"statement":"Lemma C_EXT_helper05: \n  ⦗R⦘ ⨾ (ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘)⁺ ⊆\n  ⦗R⦘ ⨾ (ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺.","proof":"rewrite path_union2.\nrelsf; unionL.\n- done.\n- rewrite ct_begin.\nrewrite (W_ex_in_W WF) at 1.\nrewrite !seqA.\narewrite_false (⦗R⦘ ⨾ ⦗W⦘).\ntype_solver.\nrels.\n- arewrite (⦗R⦘ ⨾ (⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘)＊ ⊆ ⦗R⦘).\n{\nrewrite (W_ex_in_W WF).\nrewrite rtE, ct_begin; type_solver 16.\n}\nassert (transitive (⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘)).\n{\napply transitiveI; rewrite !seqA.\narewrite_id (⦗W⦘ ⨾ ⦗W_ex⦘).\nbasic_solver.\nrelsf.\narewrite (sb ⨾ sb ⊆ sb).\napply transitiveI, (@sb_trans G).\ndone.\n}\nrelsf.\nrewrite (ct_end (ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)) at 1; rewrite !seqA.\narewrite (((ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘) ⊆             ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘).\n{\nrewrite seq_union_l.\nrewrite ppo_ctrli_detour_seq_W_ex_sb_W_in_ppo_ctrli_detour.\nrewrite !seqA.\narewrite_false (⦗R ∩₁ Acq⦘ ⨾ ⦗W_ex⦘).\n{\nrewrite (W_ex_in_W WF).\ntype_solver.\n}\nbasic_solver.\n}\nrewrite <- ct_end; relsf.\n"},{"statement":"Lemma R_W_ex_rfi_R_Acq_in_R : ⦗R⦘ ⨾ (⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)＊ ⊆ ⦗R⦘.","proof":"rewrite (W_ex_in_W WF).\nrewrite rtE, ct_begin; type_solver 16.\n"},{"statement":"Lemma W_ex_rfi_R_Acq_ct_step : (⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺ ⊆ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘.","proof":"rewrite ct_begin.\nrewrite rtE, seq_union_r, seq_id_r.\nunionL; [done|].\nrewrite ct_begin.\nrewrite !seqA.\narewrite_false (⦗R ∩₁ Acq⦘ ⨾ ⦗W_ex⦘).\n{\nrewrite (W_ex_in_W WF).\ntype_solver.\n}\nbasic_solver.\n"},{"statement":"Lemma C_EXT_helper08 : ⦗R⦘ ⨾ (ppop ∪ ctrli ∪ detour)⁺ ⨾ ⦗RW⦘ ⊆ hbp.","proof":"rewrite (r_ct_ppo_detour_ppo WF); vauto.\n"},{"statement":"Lemma C_EXT_helper1 : \n  ⦗R⦘ ⨾ (bob ∪ ppo ∪ detour ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺ ⨾ ⦗W⦘ ⊆ hbp.","proof":"assert (⦗R⦘ ⨾ (ppop ∪ ctrli ∪ detour)⁺ ⨾ ⦗W⦘ ⊆ hbp) as PCDINHB.\n{\narewrite (W ⊆₁ RW).\nrewrite (r_ct_ppo_detour_ppo WF); vauto.\n}\nrewrite bob_no_w_rel.\ntransitivity (⦗R⦘⨾ (⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ sb ⨾ ⦗F^lwsync⦘ ∪ ⦗F^lwsync⦘ ⨾ sb ∪ ppo ∪ detour   ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺ ⨾ ⦗W⦘).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ∪ sb ⨾ ⦗F^lwsync⦘ ∪ ⦗F^lwsync⦘ ⨾ sb ∪ ppo ∪ detour   ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘⊆ sb ⨾ ⦗F^lwsync⦘ ∪ ⦗F^lwsync⦘ ⨾ sb ∪ ppo ∪ detour   ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ∪ ⦗R ∩₁ Acq⦘ ⨾ sb).\nbasic_solver 12.\nrewrite path_absorb_rt.\n2: by right; arewrite (rfi ⊆ sb); rewrite (ppo_in_sb WF), detour_in_sb; generalize (@sb_trans G); basic_solver 22.\n2: by apply transitiveI; generalize (@sb_trans G); basic_solver 22.\nrelsf; unionL; rewrite ?seqA.\nhahn_frame; apply inclusion_t_t; basic_solver 12.\narewrite (⦗W⦘ ⊆ ⦗W⦘ ⨾ ⦗W⦘) at 2 by basic_solver.\nhahn_frame.\nrewrite ct_end.\napply seq_mori.\napply inclusion_rt_rt; basic_solver 12.\nbasic_solver 22.\nrewrite r_acq_sb, (rmw_in_ppo WF).\narewrite_id ⦗RW⦘ at 1; rels.\narewrite (ppo ∪ ctrli ∪ ⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ sb ⨾ ⦗F^lwsync⦘ ∪ ⦗F^lwsync⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘⊆ ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ∪ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb^?).\nbasic_solver 12.\nrewrite path_union.\nrelsf; unionL.\n- arewrite    (ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⊆     ppo ∪ ctrli ∪ detour ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ∪ ⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘).\n{\nbasic_solver 10.\n}\nsin_rewrite C_EXT_helper05.\nrewrite !seqA.\nrewrite path_union2.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\n{\nrewrite (ppo_alt WF RMW_DEPS RMW_CTRL_FAIL' DATA_RMW DEPS_RMW_FAIL).\nby rewrite !(r_deps_rfi WF).\n}\n{\nrewrite (ppo_alt WF RMW_DEPS RMW_CTRL_FAIL' DATA_RMW DEPS_RMW_FAIL).\nrewrite ct_begin.\nrewrite !seqA.\nrewrite (W_ex_in_W WF).\ntype_solver.\n}\nrewrite !seqA.\nsin_rewrite R_W_ex_rfi_R_Acq_in_R.\nsin_rewrite W_ex_rfi_R_Acq_ct_step.\narewrite_id ⦗R ∩₁ Acq⦘.\nrewrite seq_id_r.\narewrite (rfi ⊆ sb).\nassert ((ppo ∪ ctrli ∪ detour)⁺ ⊆ sb) as AA.\n{\nrewrite (ctrli_in_sb WF), detour_in_sb.\nrewrite (ppo_in_sb WF).\ngeneralize (@sb_trans G).\nrelsf.\n}\narewrite ((ppo ∪ ctrli ∪ detour)＊ ⊆ sb^?).\n{\nrewrite rtE.\nrewrite AA.\nbasic_solver.\n}\nrewrite ct_begin.\nrewrite !seqA.\narewrite (sb ⨾ ((ppo ∪ ctrli ∪ detour)⁺ ⨾ ⦗W_ex⦘ ⨾ sb)＊ ⨾ sb^? ⊆ sb).\n{\nrewrite AA.\narewrite (sb ⨾ ⦗W_ex⦘ ⨾ sb ⊆ sb).\n{\ngeneralize (@sb_trans G).\nbasic_solver 20.\n}\nrelsf.\nrewrite <- ct_begin.\ngeneralize (@sb_trans G).\nrelsf.\n}\nrewrite ct_end, !seqA.\narewrite (⦗W⦘ ⊆ ⦗W⦘ ⨾ ⦗W⦘).\n{\nbasic_solver.\n}\nsin_rewrite ppo_ctrli_detour_seq_W_ex_sb_W_in_ppo_ctrli_detour.\narewrite ((ppo ∪ ctrli ∪ detour)＊ ⨾ (ppo ∪ ctrli ∪ detour) ⊆ (ppo ∪ ctrli ∪ detour)⁺).\nrewrite (ppo_alt WF RMW_DEPS RMW_CTRL_FAIL' DATA_RMW DEPS_RMW_FAIL).\nrewrite !(r_deps_rfi WF).\narewrite (W ⊆₁ RW).\nrewrite (r_ct_ppo_detour_ppo WF); vauto.\n- rewrite (ppo_alt WF RMW_DEPS RMW_CTRL_FAIL' DATA_RMW DEPS_RMW_FAIL).\nrewrite !(r_deps_rfi WF).\nrewrite (Power_ppo.ppo_in_sb WF), (ctrli_in_sb WF), detour_in_sb.\narewrite (⦗W_ex⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ sb) by basic_solver.\nrels.\nrewrite ct_end.\narewrite_id ⦗F^lwsync⦘ at 1.\nrels.\narewrite (⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⊆ sb).\n{\narewrite (rfi ⊆ sb).\nbasic_solver.\n}\ngeneralize (@sb_trans G); ins; relsf.\ncase_refl _; [type_solver 21|].\ncase_refl _; [type_solver 21|].\narewrite (W ⊆₁ RW).\nrewrite (@R_sb_F_sb_RW_in_fence G).\nvauto.\n"},{"statement":"Lemma C_EXT: acyc_ext G.","proof":"apply (acyc_ext_helper WF).\nunfold ar_int.\narewrite (⦗W_ex ∩₁ (fun a : actid => is_xacq lab a)⦘ ⊆ ⦗W_ex⦘) by basic_solver.\nrewrite C_EXT_helper1.\narewrite (rfe ⊆ hbp).\nrewrite !unionA; rels.\napply acyc_psc_hbp.\n"},{"statement":"Lemma IMM_consistent : imm_consistent G.","proof":"cdes CON.\nassert (acyc_ext G) as AC by apply C_EXT.\nred; splits; eauto.\n{\napply COH.\n}\nrewrite psc_base_in_psc_f; auto.\nrewrite unionK.\narewrite (psc_f G ⊆ (ar G)⁺).\n2: {\nred.\nby rewrite ct_of_ct.\n}\nunfold psc_f, imm.psc.\nrewrite crE.\nrewrite !seq_union_l, !seq_union_r, seq_id_l, !seqA.\nunionL.\n{\nby apply f_sc_hb_f_sc_in_ar.\n}\narewrite (⦗F^sync⦘ ⨾ hb ⨾ eco ⨾ hb ⨾ ⦗F^sync⦘ ⊆ psc).\nrewrite <- ct_step.\nunfold ar.\neauto with hahn.\n"},{"statement":"Lemma no_hbp_to_init:\n  hbp ≡ hbp ⨾ ⦗set_compl is_init⦘.","proof":"split; [| basic_solver].\napply domb_rewrite.\nunfold \"hbp\".\nrewrite Power_ppo.ppo_in_sb, fence_in_sb; [| by apply WF].\nrewrite rfe_in_rf.\nrewrite no_sb_to_init, no_rf_to_init; [| by apply WF].\nbasic_solver.\n"},{"statement":"Lemma IMM_fair\n      (FSUPP : fsupp (⦗set_compl is_init⦘ ⨾ hbp⁺)) \n      (NOSC : E ∩₁ F ∩₁ Sc ⊆₁ ∅) :\n  imm_fair G.","proof":"assert (WF' : Wf G) by apply WF.\nassert (transitive sb) as TSB by apply sb_trans.\nred.\nunfold imm.ar.\narewrite (psc ⊆ ∅₂).\n{\nrewrite (dom_l (wf_pscE WF)).\nrewrite (dom_l (wf_pscD G)).\nrewrite <- seqA, <- id_inter.\nrewrite <- set_interA.\nrewrite NOSC.\nclear; basic_solver 1.\n}\nrewrite union_false_l.\nrewrite clos_trans_domb_begin.\n2: {\nrewrite rfe_in_rf, ar_int_in_ar.\nrewrite no_rf_to_init; auto.\ngeneralize (IMM_no_ar_to_init _ WF).\nbasic_solver 10.\nUnshelve.\nall: by eauto.\n}\neapply fsupp_mori.\n{\nred.\napply clos_trans_mori.\nrewrite seq_union_r.\napply union_mori; [| reflexivity].\napply inclusion_seq_eqv_l.\n}\nrewrite ct_unionE.\nassert (fsupp (⦗set_compl is_init⦘ ⨾ ar_int G)⁺) as AA.\n{\nrewrite imm_ppo.ar_int_in_sb; auto.\nrewrite ct_of_trans; [by apply fsupp_sb| basic_solver].\n}\napply fsupp_union; auto.\napply fsupp_seq.\n{\nnow apply fsupp_ct_rt.\n}\nrewrite (wf_rfeD WF), !seqA.\nrewrite ct_rotl, !seqA.\nrepeat (apply fsupp_seq); try apply fsupp_eqv.\n3: {\nrewrite <- cr_of_ct.\nnow apply fsupp_cr.\n}\n2: {\nrewrite rfe_in_rf.\nby apply fsupp_rf.\n}\nrewrite rtE with (r := _ ⨾ ar_int G).\nrepeat case_union _ _.\nrewrite seq_id_l, <- id_inter.\narewrite (R ∩₁ W ⊆₁ ∅) by type_solver.\nrewrite eqv_empty, seq_false_r, union_false_l.\nunfold ar_int.\narewrite (⦗W_ex ∩₁ (is_xacq lab)⦘ ⊆ ⦗W_ex⦘) by basic_solver.\nrewrite inclusion_ct_seq_eqv_l.\ndo 2 rewrite <- seqA with (r1 := ⦗R⦘).\nrewrite seq_eqvC, !seqA.\nrewrite C_EXT_helper1.\nrewrite rtE.\napply fsupp_union; [by apply fsupp_eqv| ].\nrewrite ct_rotl.\napply fsupp_seq.\n{\nrewrite rfe_in_rf.\nby apply fsupp_rf.\n}\nrewrite seqA.\narewrite (rfe ⊆ hbp).\nrewrite no_hbp_to_init at 1.\nrewrite seqA.\neapply fsupp_mori.\n2: {\neapply fsupp_mori; [| by apply FSUPP].\nred.\napply inclusion_ct_seq_eqv_l.\n}\nred.\nrewrite ct_end.\nhahn_frame.\nrewrite <- rt_of_rt with (r := ⦗_⦘ ⨾ hbp).\napply clos_refl_trans_mori.\nrewrite <- rt_unit.\nhahn_frame.\nred.\nins.\nby apply rt_step.\n"}]