{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/bigRocq/dataset/imm/src/travorder/IordCoherency.v","fileSamples":[{"statement":"dom_rel (iord G sc ⨾ ⦗init_tls G⦘) ⊆₁ init_tls G.","proofString":"rewrite iord_alt, restr_relE.\nrewrite init_tls_EI at 1.\nbasic_solver 10."},{"statement":"dom_rel\n  ((⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘\n    ⨾ iord_simpl G sc ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘)\n   ⨾ ⦗init_tls G⦘) ⊆₁ init_tls G.","proofString":"rewrite init_tls_EI at 1.\nbasic_solver 10."},{"statement":"dom_rel\n  ((⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘\n    ⨾ iord_simpl G sc ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘)\n   ⨾ ⦗event ↓₁ (E ∩₁ (fun a : actid => is_init a))⦘) ⊆₁ \ninit_tls G.","proofString":"basic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : tc ∩₁ action ↓₁ eq ta_cover ∩₁ event ↓₁ W\n⊆₁ event ↓₁ (event ↑₁ (tc ∩₁ action ↓₁ eq ta_issue)).","proofString":"unfolder.\nins.\ndesc.\ndestruct x as [a e].\nins.\nsubst.\nexists (mkTL ta_issue e).\nsplits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : forall x : trav_label,\n(tc x /\\ ta_cover = action x) /\\ is_w lab (event x) ->\nexists y : trav_label, (tc y /\\ ta_issue = action y) /\\ event y = event x.","proofString":"ins.\ndesc.\ndestruct x as [a e].\nins.\nsubst.\nexists (mkTL ta_issue e).\nsplits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (x : trav_label) (H : (tc x /\\ ta_cover = action x) /\\ is_w lab (event x)) : exists y : trav_label, (tc y /\\ ta_issue = action y) /\\ event y = event x.","proofString":"desc.\ndestruct x as [a e].\nins.\nsubst.\nexists (mkTL ta_issue e).\nsplits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (x : trav_label) (H : tc x) (H1 : ta_cover = action x) (H0 : is_w lab (event x)) : exists y : trav_label, (tc y /\\ ta_issue = action y) /\\ event y = event x.","proofString":"destruct x as [a e].\nins.\nsubst.\nexists (mkTL ta_issue e).\nsplits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (a : trav_action) (e : actid) (H : tc (a, e)) (H1 : ta_cover = action (a, e)) (H0 : is_w lab (event (a, e))) : exists y : trav_label,\n  (tc y /\\ ta_issue = action y) /\\ event y = event (a, e).","proofString":"ins.\nsubst.\nexists (mkTL ta_issue e).\nsplits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (a : trav_action) (e : actid) (H : tc (a, e)) (H1 : ta_cover = a) (H0 : is_w lab e) : exists y : trav_label, (tc y /\\ ta_issue = action y) /\\ event y = e.","proofString":"subst.\nexists (mkTL ta_issue e).\nsplits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) : exists y : trav_label, (tc y /\\ ta_issue = action y) /\\ event y = e.","proofString":"exists (mkTL ta_issue e).\nsplits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) : (tc (mkTL ta_issue e) /\\ ta_issue = action (mkTL ta_issue e)) /\\\nevent (mkTL ta_issue e) = e.","proofString":"splits; eauto.\ndestruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) : tc (mkTL ta_issue e).","proofString":"destruct (tls_coh_exec _ H) as [Il | EXl].\napply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto.\nred in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (Il : init_tls G (ta_cover, e)) : tc (mkTL ta_issue e).","proofString":"apply tls_coh_init.\nsplit; [basic_solver| ].\napply init_tls_EI in Il.\nauto."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (Il : init_tls G (ta_cover, e)) : init_tls G (mkTL ta_issue e).","proofString":"split; [basic_solver| ].\napply init_tls_EI in Il.\nauto."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (Il : init_tls G (ta_cover, e)) : (E ∩₁ (fun a : actid => is_init a)) e.","proofString":"apply init_tls_EI in Il.\nauto."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (Il : (event ↓₁ (E ∩₁ (fun a : actid => is_init a))) (ta_cover, e)) : (E ∩₁ (fun a : actid => is_init a)) e.","proofString":"auto."},{"statement":"(ICOH : iord_coherent G sc tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : exec_tls G (ta_cover, e)) : tc (mkTL ta_issue e).","proofString":"red in ICOH.\napply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : exec_tls G (ta_cover, e)) : tc (mkTL ta_issue e).","proofString":"apply ICOH.\nred.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : exec_tls G (ta_cover, e)) : dom_rel (iord G sc ⨾ ⦗tc⦘) (mkTL ta_issue e).","proofString":"red.\neexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : exec_tls G (ta_cover, e)) : exists y : trav_label, (iord G sc ⨾ ⦗tc⦘) (mkTL ta_issue e) y.","proofString":"eexists.\napply seq_eqv_r.\nsplit; eauto.\nred.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : exec_tls G (ta_cover, e)) : iord G sc (mkTL ta_issue e) (ta_cover, e).","proofString":"red.\napply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : exec_tls G (ta_cover, e)) : restr_rel (event ↓₁ (E \\₁ (fun a : actid => is_init a)))\n  (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc)\n  (mkTL ta_issue e) (ta_cover, e).","proofString":"apply exec_tls_ENI in EXl.\nred.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (ta_cover, e)) : restr_rel (event ↓₁ (E \\₁ (fun a : actid => is_init a)))\n  (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc)\n  (mkTL ta_issue e) (ta_cover, e).","proofString":"red.\nsplits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (ta_cover, e)) : (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc) \n  (mkTL ta_issue e) (ta_cover, e) /\\\n(event ↓₁ (E \\₁ (fun a : actid => is_init a))) (mkTL ta_issue e) /\\\n(event ↓₁ (E \\₁ (fun a : actid => is_init a))) (ta_cover, e).","proofString":"splits; try by vauto.\ndo 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (ta_cover, e)) : (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc) \n  (mkTL ta_issue e) (ta_cover, e).","proofString":"do 4 left.\nright.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (ta_cover, e)) : (SB G sc ∪ RF G) (mkTL ta_issue e) (ta_cover, e).","proofString":"right.\nred.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (ta_cover, e)) : RF G (mkTL ta_issue e) (ta_cover, e).","proofString":"red.\nbasic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) (e : actid) (H : tc (ta_cover, e)) (H0 : is_w lab e) (EXl : (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (ta_cover, e)) : (⦗action ↓₁ eq ta_issue⦘ ⨾ event ↓ (⦗W⦘ ⨾ rf^?) ⨾ ⦗action ↓₁ eq ta_cover⦘)\n  (mkTL ta_issue e) (ta_cover, e).","proofString":"basic_solver 10."},{"statement":"(S : trav_label -> Prop) (S_E : S ⊆₁ event ↓₁ E) : doma (event ↓ E × E ⨾ ⦗S⦘) (event ↓₁ E).","proofString":"rewrite S_E.\nunfolder.\nins.\ndesc.\ncongruence."},{"statement":"(S : trav_label -> Prop) (S_E : S ⊆₁ event ↓₁ E) : doma (event ↓ ⦗fun _ : actid => True⦘ ⨾ ⦗event ↓₁ E⦘) (event ↓₁ E).","proofString":"unfolder.\nins.\ndesc.\ncongruence."},{"statement":"(S : trav_label -> Prop) (S_E : S ⊆₁ event ↓₁ E) : forall x y : trav_label,\n(event x = event y /\\ True) /\\ E (event y) -> E (event x).","proofString":"ins.\ndesc.\ncongruence."},{"statement":"(S : trav_label -> Prop) (S_E : S ⊆₁ event ↓₁ E) (x y : trav_label) (REL : (event x = event y /\\ True) /\\ E (event y)) : E (event x).","proofString":"desc.\ncongruence."},{"statement":"(S : trav_label -> Prop) (S_E : S ⊆₁ event ↓₁ E) (x y : trav_label) (REL : event x = event y) (REL1 : True) (REL0 : E (event y)) : E (event x).","proofString":"congruence."},{"statement":"tc ⊆₁ event ↓₁ E.","proofString":"rewrite tlsc_E; eauto."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : dom_rel (iord_simpl G sc ⨾ ⦗tc⦘) ∩₁ event ↓₁ (fun a : actid => is_init a)\n⊆₁ tc.","proofString":"rewrite IS_DOM.\ndestruct TCOH.\nrewrite <- tls_coh_init at 2.\nunfold init_tls.\nrewrite set_pair_alt, set_map_inter.\nrewrite <- set_interA.\napply set_subset_inter; [| reflexivity].\nrewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : dom_rel (⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘)\n∩₁ event ↓₁ (fun a : actid => is_init a) ⊆₁ tc.","proofString":"destruct TCOH.\nrewrite <- tls_coh_init at 2.\nunfold init_tls.\nrewrite set_pair_alt, set_map_inter.\nrewrite <- set_interA.\napply set_subset_inter; [| reflexivity].\nrewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘)\n∩₁ event ↓₁ (fun a : actid => is_init a) ⊆₁ tc.","proofString":"rewrite <- tls_coh_init at 2.\nunfold init_tls.\nrewrite set_pair_alt, set_map_inter.\nrewrite <- set_interA.\napply set_subset_inter; [| reflexivity].\nrewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘)\n∩₁ event ↓₁ (fun a : actid => is_init a) ⊆₁ init_tls G.","proofString":"unfold init_tls.\nrewrite set_pair_alt, set_map_inter.\nrewrite <- set_interA.\napply set_subset_inter; [| reflexivity].\nrewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘)\n∩₁ event ↓₁ (fun a : actid => is_init a)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G) <*>\n   (E ∩₁ (fun a : actid => is_init a)).","proofString":"rewrite set_pair_alt, set_map_inter.\nrewrite <- set_interA.\napply set_subset_inter; [| reflexivity].\nrewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘)\n∩₁ event ↓₁ (fun a : actid => is_init a)\n⊆₁ fst\n   ↓₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G)\n   ∩₁ (snd ↓₁ E ∩₁ snd ↓₁ (fun a : actid => is_init a)).","proofString":"rewrite <- set_interA.\napply set_subset_inter; [| reflexivity].\nrewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘)\n∩₁ event ↓₁ (fun a : actid => is_init a)\n⊆₁ fst\n   ↓₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G)\n   ∩₁ snd ↓₁ E ∩₁ snd ↓₁ (fun a : actid => is_init a).","proofString":"apply set_subset_inter; [| reflexivity].\nrewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘)\n⊆₁ fst\n   ↓₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G)\n   ∩₁ snd ↓₁ E.","proofString":"rewrite dom_eqv1, set_interC.\napply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (iord_simpl G sc ⨾ ⦗tc⦘) ∩₁ event ↓₁ E\n⊆₁ fst\n   ↓₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G)\n   ∩₁ snd ↓₁ E.","proofString":"apply set_subset_inter; [| reflexivity].\nunfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel (iord_simpl G sc ⨾ ⦗tc⦘)\n⊆₁ fst\n   ↓₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G).","proofString":"unfold iord_simpl.\nunfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel ((SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc) ⨾ ⦗tc⦘)\n⊆₁ fst\n   ↓₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G).","proofString":"unfold SB, RF, FWBOB, AR, IPROP, PROP.\nbasic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (tls_coh_init : init_tls G ⊆₁ tc) (tls_coh_exec : tc ⊆₁ init_tls G ∪₁ exec_tls G) : dom_rel\n  ((⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ∪ sc)⁺ ⨾ ⦗action ↓₁ eq ta_cover⦘\n    ∪ ⦗action ↓₁ eq ta_issue⦘\n      ⨾ event ↓ (⦗W⦘ ⨾ rf^?) ⨾ ⦗action ↓₁ eq ta_cover⦘\n    ∪ ⦗action ↓₁ eq ta_cover⦘\n      ⨾ event ↓ (fwbob ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n    ∪ ⦗action ↓₁ eq ta_issue⦘\n      ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n        ⨾ ⦗action ↓₁ eq ta_issue⦘\n    ∪ ⦗action ↓₁ eq ta_issue⦘\n      ⨾ event ↓ (eq ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ is_ta_propagate_to_G G⦘\n    ∪ ⦗action ↓₁ eq ta_cover⦘\n      ⨾ event ↓ (fr^? ⨾ furr G sc ⨾ co^? ⨾ ⦗W⦘)\n        ∩ (fun ta1 ta2 : trav_label =>\n           tid (event ta1) = ta_propagate_tid (action ta2))\n        ⨾ ⦗action ↓₁ is_ta_propagate_to_G G⦘) ⨾ ⦗tc⦘)\n⊆₁ fst\n   ↓₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G G).","proofString":"basic_solver 10."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc) ⨾ ⦗tc⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"rewrite iord_simpl_E_ENI; auto.\nrewrite crE, map_rel_union.\nrepeat case_union _ _.\napply union_domb.\nrewrite (@tlsc_E G tc) at 1; eauto.\nunfolder.\nins.\ndesc.\nsplit; congruence.\nunfold E_ENI.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘ ⨾ event ↓ E_ENI^? ⨾ ⦗tc⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"rewrite crE, map_rel_union.\nrepeat case_union _ _.\napply union_domb.\nrewrite (@tlsc_E G tc) at 1; eauto.\nunfolder.\nins.\ndesc.\nsplit; congruence.\nunfold E_ENI.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ (event ↓ ⦗fun _ : actid => True⦘ ∪ event ↓ E_ENI) ⨾ ⦗tc⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"repeat case_union _ _.\napply union_domb.\nrewrite (@tlsc_E G tc) at 1; eauto.\nunfolder.\nins.\ndesc.\nsplit; congruence.\nunfold E_ENI.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ event ↓ ⦗fun _ : actid => True⦘ ⨾ ⦗tc⦘\n   ∪ ⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘ ⨾ event ↓ E_ENI ⨾ ⦗tc⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"apply union_domb.\nrewrite (@tlsc_E G tc) at 1; eauto.\nunfolder.\nins.\ndesc.\nsplit; congruence.\nunfold E_ENI.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ event ↓ ⦗fun _ : actid => True⦘ ⨾ ⦗tc⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"rewrite (@tlsc_E G tc) at 1; eauto.\nunfolder.\nins.\ndesc.\nsplit; congruence."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ event ↓ ⦗fun _ : actid => True⦘ ⨾ ⦗event ↓₁ E⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"unfolder.\nins.\ndesc.\nsplit; congruence."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : forall x y : trav_label,\n~ is_init (event x) /\\ (event x = event y /\\ True) /\\ E (event y) ->\n~ is_init (event y) /\\ E (event y).","proofString":"ins.\ndesc.\nsplit; congruence."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (x y : trav_label) (REL : ~ is_init (event x) /\\ (event x = event y /\\ True) /\\ E (event y)) : ~ is_init (event y) /\\ E (event y).","proofString":"desc.\nsplit; congruence."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (x y : trav_label) (REL : ~ is_init (event x)) (REL0 : event x = event y) (REL2 : True) (REL1 : E (event y)) : ~ is_init (event y) /\\ E (event y).","proofString":"split; congruence."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘ ⨾ event ↓ E_ENI ⨾ ⦗tc⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"unfold E_ENI.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : domb\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ event ↓ E × (E \\₁ (fun a : actid => is_init a)) ⨾ ⦗tc⦘)\n  (event ↓₁ set_compl (fun a : actid => is_init a) ∩₁ event ↓₁ E).","proofString":"basic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : doma\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc) ⨾ ⦗tc⦘)\n  (event ↓₁ E).","proofString":"rewrite IS_DOM.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (IS_DOM : iord_simpl G sc ⨾ ⦗tc⦘ ⊆ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) : doma\n  (⦗event ↓₁ set_compl (fun a : actid => is_init a)⦘\n   ⨾ ⦗event ↓₁ E⦘ ⨾ iord_simpl G sc ⨾ ⦗tc⦘) (event ↓₁ E).","proofString":"basic_solver."},{"statement":"(ICOHs : iord_simpl_coherent G sc tc) : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"erewrite dom_rel_mori; [by apply ICOHs| ].\nunfold iord, iord_simpl.\nbasic_solver 10."},{"statement":"(ICOHs : iord_simpl_coherent G sc tc) : iord G sc ⨾ ⦗tc⦘ ⊆ iord_simpl G sc ⨾ ⦗tc⦘.","proofString":"unfold iord, iord_simpl.\nbasic_solver 10."},{"statement":"(ICOHs : iord_simpl_coherent G sc tc) : restr_rel (event ↓₁ (E \\₁ (fun a : actid => is_init a)))\n  (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc) ⨾ ⦗tc⦘\n⊆ (SB G sc ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc) ⨾ ⦗tc⦘.","proofString":"basic_solver 10."},{"statement":"(ICOH : iord_coherent G sc tc) : dom_rel ⦗tc⦘ ∪₁ dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"red in ICOH.\nrewrite ICOH.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) : dom_rel ⦗tc⦘ ∪₁ dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"rewrite ICOH.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) : dom_rel ⦗tc⦘ ∪₁ tc ⊆₁ tc.","proofString":"basic_solver."},{"statement":"(ICOHs : iord_simpl_coherent G sc tc) : dom_rel ⦗tc⦘ ∪₁ dom_rel (iord_simpl G sc ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"red in ICOHs.\nrewrite ICOHs.\nbasic_solver."},{"statement":"(ICOHs : dom_rel (iord_simpl G sc ⨾ ⦗tc⦘) ⊆₁ tc) : dom_rel ⦗tc⦘ ∪₁ dom_rel (iord_simpl G sc ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"rewrite ICOHs.\nbasic_solver."},{"statement":"(ICOHs : dom_rel (iord_simpl G sc ⨾ ⦗tc⦘) ⊆₁ tc) : dom_rel ⦗tc⦘ ∪₁ tc ⊆₁ tc.","proofString":"basic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ⊆ E × (E \\₁ (fun a : actid => is_init a))) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n∩₁ (fun a : actid => is_init a)\n∪₁ dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n   ∩₁ set_compl (fun a : actid => is_init a)\n⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1).","proofString":"apply dom_helper_3 in R_E_ENI.\napply set_subset_union_l.\nsplit.\nrewrite <- INITa1.\nrewrite !dom_seq.\nrewrite R_E_ENI.\nbasic_solver.\nrewrite set_interC, <- dom_eqv1, <- seqA.\neapply dom_rel_collect_event with (b := a1).\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n∩₁ (fun a : actid => is_init a)\n∪₁ dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n   ∩₁ set_compl (fun a : actid => is_init a)\n⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1).","proofString":"apply set_subset_union_l.\nsplit.\nrewrite <- INITa1.\nrewrite !dom_seq.\nrewrite R_E_ENI.\nbasic_solver.\nrewrite set_interC, <- dom_eqv1, <- seqA.\neapply dom_rel_collect_event with (b := a1).\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n∩₁ (fun a : actid => is_init a) ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1) /\\\ndom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n∩₁ set_compl (fun a : actid => is_init a) ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1).","proofString":"split.\nrewrite <- INITa1.\nrewrite !dom_seq.\nrewrite R_E_ENI.\nbasic_solver.\nrewrite set_interC, <- dom_eqv1, <- seqA.\neapply dom_rel_collect_event with (b := a1).\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n∩₁ (fun a : actid => is_init a) ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1).","proofString":"rewrite <- INITa1.\nrewrite !dom_seq.\nrewrite R_E_ENI.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n∩₁ (fun a : actid => is_init a) ⊆₁ (fun a : actid => is_init a) ∩₁ E.","proofString":"rewrite !dom_seq.\nrewrite R_E_ENI.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel r ∩₁ (fun a : actid => is_init a)\n⊆₁ (fun a : actid => is_init a) ∩₁ E.","proofString":"rewrite R_E_ENI.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘)\n∩₁ (fun a : actid => is_init a) ⊆₁ (fun a : actid => is_init a) ∩₁ E.","proofString":"basic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (r ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n∩₁ set_compl (fun a : actid => is_init a) ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1).","proofString":"rewrite set_interC, <- dom_eqv1, <- seqA.\neapply dom_rel_collect_event with (b := a1).\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel\n  ((⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r)\n   ⨾ ⦗event ↑₁ (dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2)⦘)\n⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1).","proofString":"eapply dom_rel_collect_event with (b := a1).\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel\n  (⦗action ↓₁ eq a1⦘\n   ⨾ event ↓ (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r)\n     ⨾ ⦗dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2⦘) ⊆₁ \ntc ∩₁ action ↓₁ eq a1.","proofString":"apply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel\n  (⦗action ↓₁ eq a1⦘\n   ⨾ event ↓ (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r)\n     ⨾ ⦗dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2⦘) ⊆₁ tc /\\\ndom_rel\n  (⦗action ↓₁ eq a1⦘\n   ⨾ event ↓ (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r)\n     ⨾ ⦗dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2⦘) ⊆₁ \naction ↓₁ eq a1.","proofString":"split; [| basic_solver].\nrewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel\n  (⦗action ↓₁ eq a1⦘\n   ⨾ event ↓ (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r)\n     ⨾ ⦗dom_cond (iord G sc) tc ∩₁ action ↓₁ eq a2⦘) ⊆₁ tc.","proofString":"rewrite set_interC, id_inter.\narewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel\n  (⦗action ↓₁ eq a1⦘\n   ⨾ event ↓ (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r)\n     ⨾ ⦗action ↓₁ eq a2⦘ ⨾ ⦗dom_cond (iord G sc) tc⦘) ⊆₁ tc.","proofString":"arewrite (⦗action ↓₁ eq a1⦘ ⨾ event ↓ (⦗set_compl is_init⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord G sc).\nrewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver.\nrewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : ⦗action ↓₁ eq a1⦘\n⨾ event ↓ (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘\n⊆ iord G sc.","proofString":"rewrite iord_alt.\nrewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : ⦗action ↓₁ eq a1⦘\n⨾ event ↓ (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ r) ⨾ ⦗action ↓₁ eq a2⦘\n⊆ restr_rel (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (iord_simpl G sc).","proofString":"rewrite R_E_ENI.\nunfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : ⦗action ↓₁ eq a1⦘\n⨾ event\n  ↓ (⦗set_compl (fun a : actid => is_init a)⦘\n     ⨾ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) ⨾ ⦗\n  action ↓₁ eq a2⦘\n⊆ restr_rel (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (iord_simpl G sc).","proofString":"unfolder.\nins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : forall x y : trav_label,\na1 = action x /\\\n(exists z : actid,\n   (event x = z /\\ ~ is_init (event x) /\\ E (event x)) /\\\n   (exists z0 : actid, r z z0 /\\ z0 = event y /\\ E z0 /\\ ~ is_init z0)) /\\\na2 = action y ->\niord_simpl G sc x y /\\\n(E (event x) /\\ ~ is_init (event x)) /\\ E (event y) /\\ ~ is_init (event y).","proofString":"ins.\ndesc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) (x y : trav_label) (H : a1 = action x /\\\n(exists z : actid,\n   (event x = z /\\ ~ is_init (event x) /\\ E (event x)) /\\\n   (exists z0 : actid, r z z0 /\\ z0 = event y /\\ E z0 /\\ ~ is_init z0)) /\\\na2 = action y) : iord_simpl G sc x y /\\\n(E (event x) /\\ ~ is_init (event x)) /\\ E (event y) /\\ ~ is_init (event y).","proofString":"desc.\nsplits; eauto; try congruence.\napply R_IORD.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) (x y : trav_label) (H : a1 = action x) (z : actid) (H0 : event x = z) (H6 : ~ is_init (event x)) (H7 : E (event x)) (z0 : actid) (H2 : r z z0) (H3 : z0 = event y) (H4 : E z0) (H5 : ~ is_init z0) (H1 : a2 = action y) : iord_simpl G sc x y /\\\n(E (event x) /\\ ~ is_init (event x)) /\\ E (event y) /\\ ~ is_init (event y).","proofString":"splits; eauto; try congruence.\napply R_IORD.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) (x y : trav_label) (H : a1 = action x) (z : actid) (H0 : event x = z) (H6 : ~ is_init (event x)) (H7 : E (event x)) (z0 : actid) (H2 : r z z0) (H3 : z0 = event y) (H4 : E z0) (H5 : ~ is_init z0) (H1 : a2 = action y) : iord_simpl G sc x y.","proofString":"apply R_IORD.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) (x y : trav_label) (H : a1 = action x) (z : actid) (H0 : event x = z) (H6 : ~ is_init (event x)) (H7 : E (event x)) (z0 : actid) (H2 : r z z0) (H3 : z0 = event y) (H4 : E z0) (H5 : ~ is_init z0) (H1 : a2 = action y) : (⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘) x y.","proofString":"basic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (iord G sc ⨾ ⦗dom_cond (iord G sc) tc⦘) ⊆₁ tc.","proofString":"rewrite dom_cond_elim.\nbasic_solver."},{"statement":"(a1 a2 : trav_action) (r : relation actid) (R_IORD : ⦗action ↓₁ eq a1⦘ ⨾ event ↓ r ⨾ ⦗action ↓₁ eq a2⦘ ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗E⦘ ⨾ r ⨾ ⦗E \\₁ (fun a : actid => is_init a)⦘) (INITa1 : (fun a : actid => is_init a) ∩₁ E ⊆₁ event ↑₁ (tc ∩₁ action ↓₁ eq a1)) : dom_rel (⦗tc⦘ ⨾ iord G sc) ⊆₁ tc.","proofString":"basic_solver."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (ADD : dom_cond (iord G sc) tc lbl) : dom_rel (iord G sc ⨾ ⦗tc ∪₁ eq lbl⦘) ⊆₁ tc ∪₁ eq lbl.","proofString":"rewrite id_union, seq_union_r, dom_union.\nred in ICOH, ADD.\nrewrite ICOH, ADD.\nbasic_solver."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (ADD : dom_cond (iord G sc) tc lbl) : dom_rel (iord G sc ⨾ ⦗tc⦘) ∪₁ dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc ∪₁ eq lbl.","proofString":"red in ICOH, ADD.\nrewrite ICOH, ADD.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (lbl : trav_label) (ADD : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc) : dom_rel (iord G sc ⨾ ⦗tc⦘) ∪₁ dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc ∪₁ eq lbl.","proofString":"rewrite ICOH, ADD.\nbasic_solver."},{"statement":"(ICOH : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) (lbl : trav_label) (ADD : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc) : tc ∪₁ tc ⊆₁ tc ∪₁ eq lbl.","proofString":"basic_solver."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (Tlbl : tc lbl) (IMMCON : imm_consistent G sc) : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc \\₁ eq lbl.","proofString":"rewrite set_minusE.\napply set_subset_inter_r.\nsplit.\netransitivity; [| apply ICOH].\nbasic_solver.\nintros x [y [REL ->]%seq_eqv_r].\nintros ->.\nedestruct iord_irreflexive; eauto; apply IMMCON."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (Tlbl : tc lbl) (IMMCON : imm_consistent G sc) : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc ∩₁ set_compl (eq lbl).","proofString":"apply set_subset_inter_r.\nsplit.\netransitivity; [| apply ICOH].\nbasic_solver.\nintros x [y [REL ->]%seq_eqv_r].\nintros ->.\nedestruct iord_irreflexive; eauto; apply IMMCON."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (Tlbl : tc lbl) (IMMCON : imm_consistent G sc) : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc /\\\ndom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ set_compl (eq lbl).","proofString":"split.\netransitivity; [| apply ICOH].\nbasic_solver.\nintros x [y [REL ->]%seq_eqv_r].\nintros ->.\nedestruct iord_irreflexive; eauto; apply IMMCON."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (Tlbl : tc lbl) (IMMCON : imm_consistent G sc) : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ tc.","proofString":"etransitivity; [| apply ICOH].\nbasic_solver."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (Tlbl : tc lbl) (IMMCON : imm_consistent G sc) : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ dom_rel (iord G sc ⨾ ⦗tc⦘).","proofString":"basic_solver."},{"statement":"(ICOH : iord_coherent G sc tc) (lbl : trav_label) (Tlbl : tc lbl) (IMMCON : imm_consistent G sc) : dom_rel (iord G sc ⨾ ⦗eq lbl⦘) ⊆₁ set_compl (eq lbl).","proofString":"intros x [y [REL ->]%seq_eqv_r].\nintros ->.\nedestruct iord_irreflexive; eauto; apply IMMCON."},{"statement":"(ICOH : iord_coherent G sc tc) (y : trav_label) (Tlbl : tc y) (IMMCON : imm_consistent G sc) (x : trav_label) (REL : iord G sc x y) : set_compl (eq y) x.","proofString":"intros ->.\nedestruct iord_irreflexive; eauto; apply IMMCON."},{"statement":"(ICOH : iord_coherent G sc tc) (x : trav_label) (REL : iord G sc x x) (Tlbl : tc x) (IMMCON : imm_consistent G sc) : False.","proofString":"edestruct iord_irreflexive; eauto; apply IMMCON."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ⊆ (event ↓₁ E) × (event ↓₁ (E \\₁ (fun a : actid => is_init a)))) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel (r ⨾ ⦗tc⦘) ∩₁ event ↓₁ (fun a : actid => is_init a)\n∪₁ dom_rel (r ⨾ ⦗tc⦘) ∩₁ set_compl (event ↓₁ (fun a : actid => is_init a))\n⊆₁ tc.","proofString":"apply dom_helper_3 in R_E_ENI.\napply set_subset_union_l.\nsplit.\nrewrite set_interC, <- dom_eqv1.\ngeneralize INIT.\nbasic_solver.\nrewrite set_interC, <- dom_eqv1, <- seqA.\nrewrite R_E_ENI.\nred in ICOH'.\nrewrite <- ICOH' at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel (r ⨾ ⦗tc⦘) ∩₁ event ↓₁ (fun a : actid => is_init a)\n∪₁ dom_rel (r ⨾ ⦗tc⦘) ∩₁ set_compl (event ↓₁ (fun a : actid => is_init a))\n⊆₁ tc.","proofString":"apply set_subset_union_l.\nsplit.\nrewrite set_interC, <- dom_eqv1.\ngeneralize INIT.\nbasic_solver.\nrewrite set_interC, <- dom_eqv1, <- seqA.\nrewrite R_E_ENI.\nred in ICOH'.\nrewrite <- ICOH' at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel (r ⨾ ⦗tc⦘) ∩₁ event ↓₁ (fun a : actid => is_init a) ⊆₁ tc /\\\ndom_rel (r ⨾ ⦗tc⦘) ∩₁ set_compl (event ↓₁ (fun a : actid => is_init a)) ⊆₁ tc.","proofString":"split.\nrewrite set_interC, <- dom_eqv1.\ngeneralize INIT.\nbasic_solver.\nrewrite set_interC, <- dom_eqv1, <- seqA.\nrewrite R_E_ENI.\nred in ICOH'.\nrewrite <- ICOH' at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel (r ⨾ ⦗tc⦘) ∩₁ event ↓₁ (fun a : actid => is_init a) ⊆₁ tc.","proofString":"rewrite set_interC, <- dom_eqv1.\ngeneralize INIT.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel (⦗event ↓₁ (fun a : actid => is_init a)⦘ ⨾ r ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"generalize INIT.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc ->\ndom_rel (⦗event ↓₁ (fun a : actid => is_init a)⦘ ⨾ r ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"basic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel (r ⨾ ⦗tc⦘) ∩₁ set_compl (event ↓₁ (fun a : actid => is_init a)) ⊆₁ tc.","proofString":"rewrite set_interC, <- dom_eqv1, <- seqA.\nrewrite R_E_ENI.\nred in ICOH'.\nrewrite <- ICOH' at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel ((⦗set_compl (event ↓₁ (fun a : actid => is_init a))⦘ ⨾ r) ⨾ ⦗tc⦘)\n⊆₁ tc.","proofString":"rewrite R_E_ENI.\nred in ICOH'.\nrewrite <- ICOH' at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : iord_coherent G sc tc) : dom_rel\n  ((⦗set_compl (event ↓₁ (fun a : actid => is_init a))⦘\n    ⨾ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘)\n   ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"red in ICOH'.\nrewrite <- ICOH' at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) : dom_rel\n  ((⦗set_compl (event ↓₁ (fun a : actid => is_init a))⦘\n    ⨾ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘)\n   ⨾ ⦗tc⦘) ⊆₁ tc.","proofString":"rewrite <- ICOH' at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) : dom_rel\n  ((⦗set_compl (event ↓₁ (fun a : actid => is_init a))⦘\n    ⨾ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘)\n   ⨾ ⦗tc⦘) ⊆₁ dom_rel (iord G sc ⨾ ⦗tc⦘).","proofString":"apply dom_rel_mori.\nhahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) : (⦗set_compl (event ↓₁ (fun a : actid => is_init a))⦘\n ⨾ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) ⨾ ⦗tc⦘\n⊆ iord G sc ⨾ ⦗tc⦘.","proofString":"hahn_frame_r.\nrewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) : ⦗set_compl (event ↓₁ (fun a : actid => is_init a))⦘\n⨾ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘\n⊆ iord G sc.","proofString":"rewrite iord_alt, R_IORD.\nbasic_solver."},{"statement":"(r : relation trav_label) (R_IORD : r ⊆ iord_simpl G sc) (R_E_ENI : r ≡ ⦗event ↓₁ E⦘ ⨾ r ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘) (INIT : event ↓₁ (fun a : actid => is_init a) ∩₁ dom_rel r ⊆₁ tc) (ICOH' : dom_rel (iord G sc ⨾ ⦗tc⦘) ⊆₁ tc) : ⦗set_compl (event ↓₁ (fun a : actid => is_init a))⦘\n⨾ ⦗event ↓₁ E⦘\n  ⨾ iord_simpl G sc ⨾ ⦗event ↓₁ (E \\₁ (fun a : actid => is_init a))⦘\n⊆ restr_rel (event ↓₁ (E \\₁ (fun a : actid => is_init a))) (iord_simpl G sc).","proofString":"basic_solver."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (ICOH : iord_coherent G sc T) (x y : trav_label) (HH : ((iord G sc)＊ ⨾ ⦗T⦘) x y) : T x.","proofString":"apply seq_eqv_r in HH.\ndestruct HH as [II TY].\napply clos_rt_rt1n in II.\ninduction II; auto.\napply IHII in TY.\neapply iord_coh_clos_refl; eauto.\nclear -H TY.\nbasic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (ICOH : iord_coherent G sc T) (x y : trav_label) (HH : (iord G sc)＊ x y /\\ T y) : T x.","proofString":"destruct HH as [II TY].\napply clos_rt_rt1n in II.\ninduction II; auto.\napply IHII in TY.\neapply iord_coh_clos_refl; eauto.\nclear -H TY.\nbasic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (ICOH : iord_coherent G sc T) (x y : trav_label) (II : (iord G sc)＊ x y) (TY : T y) : T x.","proofString":"apply clos_rt_rt1n in II.\ninduction II; auto.\napply IHII in TY.\neapply iord_coh_clos_refl; eauto.\nclear -H TY.\nbasic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (ICOH : iord_coherent G sc T) (x y : trav_label) (II : clos_refl_trans_1n trav_label (iord G sc) x y) (TY : T y) : T x.","proofString":"induction II; auto.\napply IHII in TY.\neapply iord_coh_clos_refl; eauto.\nclear -H TY.\nbasic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (ICOH : iord_coherent G sc T) (x y z : trav_label) (H : iord G sc x y) (II : clos_refl_trans_1n trav_label (iord G sc) y z) (TY : T z) (IHII : T z -> T y) : T x.","proofString":"apply IHII in TY.\neapply iord_coh_clos_refl; eauto.\nclear -H TY.\nbasic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (ICOH : iord_coherent G sc T) (x y z : trav_label) (H : iord G sc x y) (II : clos_refl_trans_1n trav_label (iord G sc) y z) (TY : T y) (IHII : T z -> T y) : T x.","proofString":"eapply iord_coh_clos_refl; eauto.\nclear -H TY.\nbasic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (ICOH : iord_coherent G sc T) (x y z : trav_label) (H : iord G sc x y) (II : clos_refl_trans_1n trav_label (iord G sc) y z) (TY : T y) (IHII : T z -> T y) : dom_rel ((iord G sc)^? ⨾ ⦗T⦘) x.","proofString":"clear -H TY.\nbasic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (T : trav_label -> Prop) (x y : trav_label) (H : iord G sc x y) (TY : T y) : dom_rel ((iord G sc)^? ⨾ ⦗T⦘) x.","proofString":"basic_solver 10."},{"statement":"(G : execution) (sc : relation actid) (tc : trav_label -> Prop) (tCOH : tls_coherent G tc) (ICOH : iord_coherent G sc tc) (CONS : imm_consistent G sc) (WF : Wf G) : wf_sc G sc.","proofString":"by apply CONS."},{"statement":"(G : execution) (sc : relation actid) (tc : trav_label -> Prop) (tCOH : tls_coherent G tc) (ICOH : iord_coherent G sc tc) (CONS : imm_consistent G sc) (WF : Wf G) : sc_per_loc G.","proofString":"apply imm_s_hb.coherence_sc_per_loc, CONS."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 \\₁ action ↓₁ eq ta_reserve ≡₁ T2 \\₁ action ↓₁ eq ta_reserve) (ICOH : iord_coherent G sc T1) : dom_rel (iord G sc ⨾ ⦗T2⦘) ⊆₁ T2.","proofString":"red in ICOH.\nrewrite iord_no_reserve, restr_relE in *.\nrewrite !seqA, seq_eqvC, <- id_inter in *.\ntransitivity (T2 \\₁ action ↓₁ eq ta_reserve); [| basic_solver].\nrewrite <- EQ'.\nrewrite !set_minusE in EQ'.\nrewrite EQ' in ICOH.\nrewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 \\₁ action ↓₁ eq ta_reserve ≡₁ T2 \\₁ action ↓₁ eq ta_reserve) (ICOH : dom_rel (iord G sc ⨾ ⦗T1⦘) ⊆₁ T1) : dom_rel (iord G sc ⨾ ⦗T2⦘) ⊆₁ T2.","proofString":"rewrite iord_no_reserve, restr_relE in *.\nrewrite !seqA, seq_eqvC, <- id_inter in *.\ntransitivity (T2 \\₁ action ↓₁ eq ta_reserve); [| basic_solver].\nrewrite <- EQ'.\nrewrite !set_minusE in EQ'.\nrewrite EQ' in ICOH.\nrewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 \\₁ action ↓₁ eq ta_reserve ≡₁ T2 \\₁ action ↓₁ eq ta_reserve) (ICOH : dom_rel\n  ((⦗set_compl (action ↓₁ eq ta_reserve)⦘\n    ⨾ iord G sc ⨾ ⦗set_compl (action ↓₁ eq ta_reserve)⦘) ⨾ ⦗T1⦘) ⊆₁ T1) : dom_rel\n  ((⦗set_compl (action ↓₁ eq ta_reserve)⦘\n    ⨾ iord G sc ⨾ ⦗set_compl (action ↓₁ eq ta_reserve)⦘) ⨾ ⦗T2⦘) ⊆₁ T2.","proofString":"rewrite !seqA, seq_eqvC, <- id_inter in *.\ntransitivity (T2 \\₁ action ↓₁ eq ta_reserve); [| basic_solver].\nrewrite <- EQ'.\nrewrite !set_minusE in EQ'.\nrewrite EQ' in ICOH.\nrewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 \\₁ action ↓₁ eq ta_reserve ≡₁ T2 \\₁ action ↓₁ eq ta_reserve) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T2.","proofString":"transitivity (T2 \\₁ action ↓₁ eq ta_reserve); [| basic_solver].\nrewrite <- EQ'.\nrewrite !set_minusE in EQ'.\nrewrite EQ' in ICOH.\nrewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 \\₁ action ↓₁ eq ta_reserve ≡₁ T2 \\₁ action ↓₁ eq ta_reserve) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘)\n⊆₁ T2 \\₁ action ↓₁ eq ta_reserve.","proofString":"rewrite <- EQ'.\nrewrite !set_minusE in EQ'.\nrewrite EQ' in ICOH.\nrewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 \\₁ action ↓₁ eq ta_reserve ≡₁ T2 \\₁ action ↓₁ eq ta_reserve) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘)\n⊆₁ T1 \\₁ action ↓₁ eq ta_reserve.","proofString":"rewrite !set_minusE in EQ'.\nrewrite EQ' in ICOH.\nrewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)\n≡₁ T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘)\n⊆₁ T1 \\₁ action ↓₁ eq ta_reserve.","proofString":"rewrite EQ' in ICOH.\nrewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)\n≡₁ T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘)\n⊆₁ T1 \\₁ action ↓₁ eq ta_reserve.","proofString":"rewrite set_minusE.\napply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)\n≡₁ T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘)\n⊆₁ T1 ∩₁ set_compl (action ↓₁ eq ta_reserve).","proofString":"apply set_subset_inter_r.\nsplit; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)\n≡₁ T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1 /\\\ndom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘)\n⊆₁ set_compl (action ↓₁ eq ta_reserve).","proofString":"split; [| basic_solver].\nrewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)\n≡₁ T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1.","proofString":"rewrite ICOH.\nbasic_solver."},{"statement":"(G : execution) (sc : relation actid) (T1 T2 : trav_label -> Prop) (EQ' : T1 ∩₁ set_compl (action ↓₁ eq ta_reserve)\n≡₁ T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)) (ICOH : dom_rel\n  (⦗set_compl (action ↓₁ eq ta_reserve)⦘\n   ⨾ iord G sc ⨾ ⦗T2 ∩₁ set_compl (action ↓₁ eq ta_reserve)⦘) ⊆₁ T1) : T1 ⊆₁ T1.","proofString":"basic_solver."}]}