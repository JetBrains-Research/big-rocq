[{"statement":"Lemma IMM_ar_int_rfe_rf_ppo_loc_in_ar_int_rfe_ct :\n    (rfe G ∪ imm_ppo.ar_int G) ⨾ rf G ⨾ (ppo G ∩ same_loc (lab G)) ⊆ (rfe G ∪ imm_ppo.ar_int G)⁺.","proof":"remember (rfe G ∪ imm_ppo.ar_int G) as ax.\nassert (sb G ⨾ sb G ⊆ sb G) as AA.\n{\napply transitiveI.\napply sb_trans.\n}\nassert (rfi G ⨾ sb G ∩ same_loc (lab G) ⊆ sb G ∩ same_loc (lab G)) as DD.\n{\nrewrite (rfi_in_sbloc' WF).\napply transitiveI.\napply sb_same_loc_trans.\n}\nrewrite rfi_union_rfe.\nrewrite seq_union_l, seq_union_r.\nunionL.\n2: {\narewrite (ppo G ∩ same_loc (lab G) ⊆ ppo G).\nrewrite ppo_in_ar_int.\narewrite (rfe G ⨾ imm_ppo.ar_int G ⊆ ax  ⨾ ax).\n{\nsubst ax.\nbasic_solver 10.\n}\narewrite (ax ⊆ ax⁺) at 1.\narewrite (ax ⊆ ax⁺) at 2.\nby rewrite ct_unit, ct_ct.\n}\nsubst ax.\nrewrite !seq_union_l.\nunionL.\n{\nrewrite (dom_l (wf_rfiD WF)).\nrewrite (dom_r (wf_rfeD WF)).\ntype_solver.\n}\nunfold imm_ppo.ar_int at 1.\nrewrite !seq_union_l.\nunionL.\n5: by rewrite (dom_l (wf_rfiD WF)); type_solver.\n3: {\nrewrite (wf_detourD WF).\nrewrite (wf_rfiD WF).\ntype_solver.\n}\n2: {\narewrite (ppo G ∩ same_loc (lab G) ⊆ ppo G).\nrewrite ppo_rfi_ppo.\nrewrite <- ct_step.\nrewrite ppo_in_ar_int.\neauto with hahn.\n}\n2: {\narewrite_id ⦗is_w (lab G)⦘ at 1.\nrewrite seq_id_l.\nrewrite rfi_in_sb.\narewrite (ppo G ∩ same_loc (lab G) ⊆ ppo G).\nrewrite (dom_r (@wf_ppoD G)).\nrewrite (ppo_in_sb WF).\narewrite (sb G ⨾ sb G ⨾ sb G ⊆ sb G).\n{\ngeneralize (@sb_trans G).\nbasic_solver.\n}\nrewrite <- ct_step.\nrewrite w_ex_acq_sb_w_in_ar_int.\neauto with hahn.\n}\nrewrite (dom_r (@wf_ppoD G)).\nrewrite (ppo_in_sb WF).\nrewrite seq_eqv_inter_lr.\nsin_rewrite DD.\nrewrite bob_sb_same_loc_W_in_bob.\napply clos_trans_mori.\nrewrite bob_in_ar_int.\neauto with hahn.\n"},{"statement":"Lemma IMM_ar_rf_ppo_loc_in_ar_ct :\n    ar G ⨾ rf G ⨾ ppo G ∩ same_loc (lab G) ⊆ (ar G)⁺.","proof":"unfold imm.ar.\nrewrite unionA, seq_union_l.\nunionL.\n{\nrewrite wf_pscD, wf_rfD; auto.\ntype_solver.\n}\nrewrite IMM_ar_int_rfe_rf_ppo_loc_in_ar_int_rfe_ct.\napply clos_trans_mori.\neauto with hahn.\n"},{"statement":"Lemma IMM_ar_ct_rf_ppo_loc_in_ar_ct :\n    (ar G)⁺ ⨾ rf G ⨾ ppo G ∩ same_loc (lab G) ⊆ (ar G)⁺.","proof":"rewrite ct_end at 1.\nrewrite !seqA.\nrewrite IMM_ar_rf_ppo_loc_in_ar_ct.\napply rt_ct.\n"},{"statement":"Lemma IMM_ar_ct_rf_ppo_loc_ct_in_ar_ct:\n    (ar G)⁺ ⨾ (rf G ⨾ ppo G ∩ same_loc (lab G))⁺ ⊆ (ar G)⁺.","proof":"intros x y [z [AA BB]].\napply clos_trans_t1n in BB.\ninduction BB.\n2: apply IHBB.\nall: apply IMM_ar_ct_rf_ppo_loc_in_ar_ct; auto.\nall: eexists; split; eauto.\n"},{"statement":"Lemma IMM_ar_rf_ppo_loc_ct_in_ar_ct :\n    (ar G) ⨾ (rf G ⨾ ppo G ∩ same_loc (lab G))⁺ ⊆ (ar G)⁺.","proof":"rewrite ct_step with (r:=ar G) at 1.\nby apply IMM_ar_ct_rf_ppo_loc_ct_in_ar_ct.\n"},{"statement":"Lemma IMM_ppo_loc_in_fr \n        (SPL : sc_per_loc G) :\n    ppo G ∩ same_loc (lab G) ⊆ fr G.","proof":"rewrite wf_ppoD.\nrewrite (ppo_in_sb WF).\nrewrite seq_eqv_inter_ll.\nrewrite seq_eqv_inter_lr.\nrewrite r_sb_loc_w_in_fri; auto.\napply fri_in_fr.\n"},{"statement":"Lemma IMM_ar_rf_ppo_loc_acyclic\n    (CONS: imm_consistent G):\n    acyclic (ar G ∪ rf G ⨾ ppo G ∩ same_loc (lab G)).","proof":"rewrite ct_step with (r:=ar G).\nrewrite unionC.\napply acyclic_absorb.\n{\nright.\napply IMM_ar_ct_rf_ppo_loc_in_ar_ct.\n}\nsplit.\n2: {\nred.\nrewrite ct_of_ct.\napply CONS.\n}\nrewrite IMM_ppo_loc_in_fr; auto.\n2: {\napply coherence_sc_per_loc.\nby apply CONS.\n}\nrewrite rf_fr; auto.\nby apply co_acyclic.\n"},{"statement":"Lemma IMM_no_ar_to_init : ar G ⨾ ⦗is_init⦘ ≡ ∅₂.","proof":"split; [|basic_solver].\nunfold ar.\nrewrite (ar_int_in_sb WF).\nrewrite no_sb_to_init.\nrewrite wf_pscD.\nrewrite (wf_rfeD WF).\nrewrite seq_union_l.\nunionL; [|basic_solver].\nrewrite (init_w WF).\ntype_solver 10.\n"},{"statement":"Lemma IMM_no_ar_rf_ppo_loc_to_init:\n    (ar G ∪ rf G ⨾ ppo G ∩ same_loc (lab G)) ⨾ ⦗is_init⦘ ≡ ∅₂.","proof":"split; [|basic_solver].\nrewrite seq_union_l, seqA, IMM_no_ar_to_init; auto.\narewrite (ppo G ∩ same_loc (lab G) ⊆ ppo G).\nrewrite (ppo_in_sb WF).\nrewrite no_sb_to_init.\nbasic_solver.\n"},{"statement":"Lemma wf_ar_rf_ppo_loc_ct_inf_imm \n        (IMM_CONS: imm_consistent G)\n        (IMM_FAIR: imm_fair G)\n        (FAIR: mem_fair G):\n    well_founded (⦗set_compl is_init⦘ ⨾ (ar G ∪ rf G ;; ppo G ∩ same_loc (lab G))⁺).","proof":"apply wf_ar_rf_ppo_loc_ct_inf_helper; auto.\n{\nby apply IMM_ar_rf_ppo_loc_acyclic.\n}\n{\nby apply IMM_no_ar_rf_ppo_loc_to_init.\n}\n{\nby apply ppo_in_sb.\n}\n{\nby apply IMM_ar_rf_ppo_loc_ct_in_ar_ct.\n}\ncdes IMM_CONS.\nby apply coherence_sc_per_loc.\n"}]