{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/xmm/src/reordering/ReorderingRpo.v","fileSamples":[{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗eq b⦘\n⨾ (⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ sb' ∪ sb' ⨾ ⦗Rel'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘) ⊆ ∅₂.","conclusion":"⦗eq b⦘\n⨾ (⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ sb' ∪ sb' ⨾ ⦗Rel'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘) ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite !seq_union_r.\nseq_rewrite !(seq_eqvC (eq b)).\nrewrite !seqA.\nsin_rewrite !SBFROMB.\nrewrite <- !cross_inter_r, <- !cross_inter_l.\nrepeat apply inclusion_union_l.\nrewrite ARW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite BNAQ.\nclear.\nbasic_solver.\nrewrite ANREL.\nclear.\nbasic_solver.\nrewrite BRW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗eq b⦘ ⨾ ⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb'\n∪ ⦗eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ∪ ⦗eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂.","conclusion":"⦗eq b⦘ ⨾ ⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb'\n∪ ⦗eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ∪ ⦗eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"seq_rewrite !(seq_eqvC (eq b)).\nrewrite !seqA.\nsin_rewrite !SBFROMB.\nrewrite <- !cross_inter_r, <- !cross_inter_l.\nrepeat apply inclusion_union_l.\nrewrite ARW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite BNAQ.\nclear.\nbasic_solver.\nrewrite ANREL.\nclear.\nbasic_solver.\nrewrite BRW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (⦗R' ∩₁ Rlx'⦘ ⨾ ⦗eq b⦘) ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ (⦗Acq'⦘ ⨾ ⦗eq b⦘) ⨾ sb'\n∪ ⦗eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ∪ (⦗F' ∩₁ Rel'⦘ ⨾ ⦗eq b⦘) ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂.","conclusion":"(⦗R' ∩₁ Rlx'⦘ ⨾ ⦗eq b⦘) ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ (⦗Acq'⦘ ⨾ ⦗eq b⦘) ⨾ sb'\n∪ ⦗eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ∪ (⦗F' ∩₁ Rel'⦘ ⨾ ⦗eq b⦘) ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite !seqA.\nsin_rewrite !SBFROMB.\nrewrite <- !cross_inter_r, <- !cross_inter_l.\nrepeat apply inclusion_union_l.\nrewrite ARW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite BNAQ.\nclear.\nbasic_solver.\nrewrite ANREL.\nclear.\nbasic_solver.\nrewrite BRW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗R' ∩₁ Rlx'⦘ ⨾ ⦗eq b⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ ⦗eq b⦘ ⨾ sb'\n∪ ⦗eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ ⦗eq b⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ ⦗eq b⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ ⦗eq b⦘ ⨾ sb'\n∪ ⦗eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ ⦗eq b⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"sin_rewrite !SBFROMB.\nrewrite <- !cross_inter_r, <- !cross_inter_l.\nrepeat apply inclusion_union_l.\nrewrite ARW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite BNAQ.\nclear.\nbasic_solver.\nrewrite ANREL.\nclear.\nbasic_solver.\nrewrite BRW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗R' ∩₁ Rlx'⦘ ⨾ eq b × eq a ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ eq b × eq a\n∪ eq b × eq a ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ eq b × eq a ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ eq b × eq a ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ eq b × eq a\n∪ eq b × eq a ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ eq b × eq a ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite <- !cross_inter_r, <- !cross_inter_l.\nrepeat apply inclusion_union_l.\nrewrite ARW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite BNAQ.\nclear.\nbasic_solver.\nrewrite ANREL.\nclear.\nbasic_solver.\nrewrite BRW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (R' ∩₁ Rlx' ∩₁ eq b) × (eq a ∩₁ (F' ∩₁ Acq')) ∪ (Acq' ∩₁ eq b) × eq a\n∪ eq b × (eq a ∩₁ Rel') ∪ (F' ∩₁ Rel' ∩₁ eq b) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂.","conclusion":"(R' ∩₁ Rlx' ∩₁ eq b) × (eq a ∩₁ (F' ∩₁ Acq')) ∪ (Acq' ∩₁ eq b) × eq a\n∪ eq b × (eq a ∩₁ Rel') ∪ (F' ∩₁ Rel' ∩₁ eq b) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"repeat apply inclusion_union_l.\nrewrite ARW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite BNAQ.\nclear.\nbasic_solver.\nrewrite ANREL.\nclear.\nbasic_solver.\nrewrite BRW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (R' ∩₁ Rlx' ∩₁ eq b) × (eq a ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂.","conclusion":"(R' ∩₁ Rlx' ∩₁ eq b) × (eq a ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite ARW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (R' ∩₁ Rlx' ∩₁ eq b) × ((R' ∪₁ W') ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂.","conclusion":"(R' ∩₁ Rlx' ∩₁ eq b) × ((R' ∪₁ W') ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"clear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(R' ∩₁ Rlx' ∩₁ eq b) × ((R' ∪₁ W') ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂.","conclusion":"(R' ∩₁ Rlx' ∩₁ eq b) × ((R' ∪₁ W') ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂","hypotheses":"","proofString":"unfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"((fun e : actid => match lab' e with\n                   | Aload _ _ _ _ => true\n                   | _ => false\n                   end) ∩₁ Rlx' ∩₁ eq b)\n× (((fun e : actid =>\n     match lab' e with\n     | Aload _ _ _ _ => true\n     | _ => false\n     end)\n    ∪₁ (fun e : actid =>\n        match lab' e with\n        | Astore _ _ _ _ => true\n        | _ => false\n        end))\n   ∩₁ ((fun e : actid =>\n        match lab' e with\n        | Afence _ => true\n        | _ => false\n        end) ∩₁ Acq')) ⊆ ∅₂.","conclusion":"((fun e : actid => match lab' e with\n                   | Aload _ _ _ _ => true\n                   | _ => false\n                   end) ∩₁ Rlx' ∩₁ eq b)\n× (((fun e : actid =>\n     match lab' e with\n     | Aload _ _ _ _ => true\n     | _ => false\n     end)\n    ∪₁ (fun e : actid =>\n        match lab' e with\n        | Astore _ _ _ _ => true\n        | _ => false\n        end))\n   ∩₁ ((fun e : actid =>\n        match lab' e with\n        | Afence _ => true\n        | _ => false\n        end) ∩₁ Acq')) ⊆ ∅₂","hypotheses":"","proofString":"basic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (Acq' ∩₁ eq b) × eq a ⊆ ∅₂.","conclusion":"(Acq' ∩₁ eq b) × eq a ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite BNAQ.\nclear.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (Acq' ∩₁ set_compl Acq') × eq a ⊆ ∅₂.","conclusion":"(Acq' ∩₁ set_compl Acq') × eq a ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"clear.\nbasic_solver."},{"statement":"(Acq' ∩₁ set_compl Acq') × eq a ⊆ ∅₂.","conclusion":"(Acq' ∩₁ set_compl Acq') × eq a ⊆ ∅₂","hypotheses":"","proofString":"basic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : eq b × (eq a ∩₁ Rel') ⊆ ∅₂.","conclusion":"eq b × (eq a ∩₁ Rel') ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite ANREL.\nclear.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : eq b × (set_compl Rel' ∩₁ Rel') ⊆ ∅₂.","conclusion":"eq b × (set_compl Rel' ∩₁ Rel') ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"clear.\nbasic_solver."},{"statement":"eq b × (set_compl Rel' ∩₁ Rel') ⊆ ∅₂.","conclusion":"eq b × (set_compl Rel' ∩₁ Rel') ⊆ ∅₂","hypotheses":"","proofString":"basic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (F' ∩₁ Rel' ∩₁ eq b) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂.","conclusion":"(F' ∩₁ Rel' ∩₁ eq b) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite BRW.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (F' ∩₁ Rel' ∩₁ (R' ∪₁ W')) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂.","conclusion":"(F' ∩₁ Rel' ∩₁ (R' ∪₁ W')) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"clear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(F' ∩₁ Rel' ∩₁ (R' ∪₁ W')) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂.","conclusion":"(F' ∩₁ Rel' ∩₁ (R' ∪₁ W')) × (eq a ∩₁ (W' ∩₁ Rlx')) ⊆ ∅₂","hypotheses":"","proofString":"unfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"((fun e : actid => match lab' e with\n                   | Afence _ => true\n                   | _ => false\n                   end) ∩₁ Rel'\n ∩₁ ((fun e : actid =>\n      match lab' e with\n      | Aload _ _ _ _ => true\n      | _ => false\n      end)\n     ∪₁ (fun e : actid =>\n         match lab' e with\n         | Astore _ _ _ _ => true\n         | _ => false\n         end)))\n× (eq a\n   ∩₁ ((fun e : actid =>\n        match lab' e with\n        | Astore _ _ _ _ => true\n        | _ => false\n        end) ∩₁ Rlx')) ⊆ ∅₂.","conclusion":"((fun e : actid => match lab' e with\n                   | Afence _ => true\n                   | _ => false\n                   end) ∩₁ Rel'\n ∩₁ ((fun e : actid =>\n      match lab' e with\n      | Aload _ _ _ _ => true\n      | _ => false\n      end)\n     ∪₁ (fun e : actid =>\n         match lab' e with\n         | Astore _ _ _ _ => true\n         | _ => false\n         end)))\n× (eq a\n   ∩₁ ((fun e : actid =>\n        match lab' e with\n        | Astore _ _ _ _ => true\n        | _ => false\n        end) ∩₁ Rlx')) ⊆ ∅₂","hypotheses":"","proofString":"basic_solver."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗eq b⦘ ⨾ rpo_imm'⁺ ⊆ ∅₂.","conclusion":"⦗eq b⦘ ⨾ rpo_imm'⁺ ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite ct_begin.\nsin_rewrite reord_rpo_imm_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗eq b⦘ ⨾ rpo_imm' ⨾ rpo_imm'＊ ⊆ ∅₂.","conclusion":"⦗eq b⦘ ⨾ rpo_imm' ⨾ rpo_imm'＊ ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"sin_rewrite reord_rpo_imm_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ∅₂ ⨾ rpo_imm'＊ ⊆ ∅₂.","conclusion":"∅₂ ⨾ rpo_imm'＊ ⊆ ∅₂","hypotheses":"(BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"now rewrite seq_false_l."},{"statement":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite (wf_rpo_immE WF) at 1.\nbasic_solver."},{"statement":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : (⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E'⦘) ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"(⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E'⦘) ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"basic_solver."},{"statement":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite set_union_minus     with (s := E') (s' := eq b)       at 1; [| basic_solver].\nrewrite id_union, !seq_union_l.\napply inclusion_union_l; [reflexivity |].\nsin_rewrite reord_rpo_imm_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗E' \\₁ eq b ∪₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b ∪₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite id_union, !seq_union_l.\napply inclusion_union_l; [reflexivity |].\nsin_rewrite reord_rpo_imm_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ∪ ⦗eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ∪ ⦗eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"apply inclusion_union_l; [reflexivity |].\nsin_rewrite reord_rpo_imm_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ⦗eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"sin_rewrite reord_rpo_imm_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : ∅₂ ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"∅₂ ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF : Wf G') (BIN : E' b) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"now rewrite seq_false_l."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : rpo' ⊆ ⦗E'⦘ ⨾ rpo'.","conclusion":"rpo' ⊆ ⦗E'⦘ ⨾ rpo'","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E'⦘ ⨾ rpo' ⨾ ⦗E'⦘ ⊆ ⦗E'⦘ ⨾ ⦗E'⦘ ⨾ rpo' ⨾ ⦗E'⦘.","conclusion":"⦗E'⦘ ⨾ rpo' ⨾ ⦗E'⦘ ⊆ ⦗E'⦘ ⨾ ⦗E'⦘ ⨾ rpo' ⨾ ⦗E'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"basic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E'⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo.","conclusion":"⦗E'⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"transitivity (⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘).\nrewrite set_union_minus       with (s := E') (s' := eq b)         at 1; [| basic_solver].\nrewrite id_union, !seq_union_l.\napply inclusion_union_l; [reflexivity |].\nsin_rewrite reord_rpo_emp; auto.\nnow rewrite seq_false_l.\nunfold rpo at 1.\ntransitivity ((⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺).\nrewrite ct_l_upward_closed.\nrewrite reord_rpo_imm_start at 1; auto.\nbasic_solver.\nunfold upward_closed.\nintros x y RPOIMM YIN.\nsplit.\napply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf.\nintro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver.\nassert (IND1 : (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘) ⊆ mapper ↑ rpo).\nrewrite <- reord_map_rpo_helper; auto.\nunfold rpo_imm.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11.\napply inclusion_t_ind_right; vauto.\nrewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E'⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E'⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite set_union_minus       with (s := E') (s' := eq b)         at 1; [| basic_solver].\nrewrite id_union, !seq_union_l.\napply inclusion_union_l; [reflexivity |].\nsin_rewrite reord_rpo_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b ∪₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b ∪₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite id_union, !seq_union_l.\napply inclusion_union_l; [reflexivity |].\nsin_rewrite reord_rpo_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ∪ ⦗eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ∪ ⦗eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"apply inclusion_union_l; [reflexivity |].\nsin_rewrite reord_rpo_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"sin_rewrite reord_rpo_emp; auto.\nnow rewrite seq_false_l."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ∅₂ ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"∅₂ ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"now rewrite seq_false_l."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ rpo' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"unfold rpo at 1.\ntransitivity ((⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺).\nrewrite ct_l_upward_closed.\nrewrite reord_rpo_imm_start at 1; auto.\nbasic_solver.\nunfold upward_closed.\nintros x y RPOIMM YIN.\nsplit.\napply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf.\nintro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver.\nassert (IND1 : (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘) ⊆ mapper ↑ rpo).\nrewrite <- reord_map_rpo_helper; auto.\nunfold rpo_imm.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11.\napply inclusion_t_ind_right; vauto.\nrewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm'⁺ ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ rpo_imm'⁺ ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"transitivity ((⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺).\nrewrite ct_l_upward_closed.\nrewrite reord_rpo_imm_start at 1; auto.\nbasic_solver.\nunfold upward_closed.\nintros x y RPOIMM YIN.\nsplit.\napply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf.\nintro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver.\nassert (IND1 : (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘) ⊆ mapper ↑ rpo).\nrewrite <- reord_map_rpo_helper; auto.\nunfold rpo_imm.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11.\napply inclusion_t_ind_right; vauto.\nrewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm'⁺ ⨾ ⦗E' \\₁ eq b⦘\n⊆ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ rpo_imm'⁺ ⨾ ⦗E' \\₁ eq b⦘\n⊆ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite ct_l_upward_closed.\nrewrite reord_rpo_imm_start at 1; auto.\nbasic_solver.\nunfold upward_closed.\nintros x y RPOIMM YIN.\nsplit.\napply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf.\nintro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ (rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺\n⊆ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ (rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺\n⊆ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite reord_rpo_imm_start at 1; auto.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺\n⊆ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺\n⊆ (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"basic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : upward_closed rpo_imm' (E' \\₁ eq b).","conclusion":"upward_closed rpo_imm' (E' \\₁ eq b)","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"unfold upward_closed.\nintros x y RPOIMM YIN.\nsplit.\napply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf.\nintro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : forall x y : actid, rpo_imm' x y -> (E' \\₁ eq b) y -> (E' \\₁ eq b) x.","conclusion":"forall x y : actid, rpo_imm' x y -> (E' \\₁ eq b) y -> (E' \\₁ eq b) x","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"intros x y RPOIMM YIN.\nsplit.\napply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf.\nintro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : rpo_imm' x y) (YIN : (E' \\₁ eq b) y) : (E' \\₁ eq b) x.","conclusion":"(E' \\₁ eq b) x","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : rpo_imm' x y) (YIN : (E' \\₁ eq b) y)","proofString":"split.\napply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf.\nintro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : rpo_imm' x y) (YIN : (E' \\₁ eq b) y) : E' x.","conclusion":"E' x","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : rpo_imm' x y) (YIN : (E' \\₁ eq b) y)","proofString":"apply (wf_rpo_immE WF') in RPOIMM.\nunfolder in RPOIMM; desf."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : (⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E'⦘) x y) (YIN : (E' \\₁ eq b) y) : E' x.","conclusion":"E' x","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : (⦗E'⦘ ⨾ rpo_imm' ⨾ ⦗E'⦘) x y) (YIN : (E' \\₁ eq b) y)","proofString":"unfolder in RPOIMM; desf."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : rpo_imm' x y) (YIN : (E' \\₁ eq b) y) : b <> x.","conclusion":"b <> x","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (x y : actid) (RPOIMM : rpo_imm' x y) (YIN : (E' \\₁ eq b) y)","proofString":"intro FALSO; subst x.\neapply reord_rpo_imm_emp; auto.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (y : actid) (RPOIMM : rpo_imm' b y) (YIN : (E' \\₁ eq b) y) : False.","conclusion":"False","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (y : actid) (RPOIMM : rpo_imm' b y) (YIN : (E' \\₁ eq b) y)","proofString":"eapply reord_rpo_imm_emp; auto.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺ ⊆ mapper ↑ rpo.","conclusion":"(⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"assert (IND1 : (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘) ⊆ mapper ↑ rpo).\nrewrite <- reord_map_rpo_helper; auto.\nunfold rpo_imm.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11.\napply inclusion_t_ind_right; vauto.\nrewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite <- reord_map_rpo_helper; auto.\nunfold rpo_imm.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"unfold rpo_imm.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘\n⨾ (⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ sb' ∪ sb' ⨾ ⦗Rel'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘) ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"⦗E' \\₁ eq b⦘\n⨾ (⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ sb' ∪ sb' ⨾ ⦗Rel'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘) ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite !seq_union_l, !seq_union_r, !seqA.\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗E' \\₁ eq b⦘ ⨾ ⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ ⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"seq_rewrite (seq_eqvC (E' \\₁ eq b) (R' ∩₁ Rlx')).\nseq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : (⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"(⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"seq_rewrite (seq_eqvC (F' ∩₁ Acq') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : (⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"(⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗Acq'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"seq_rewrite (seq_eqvC (E' \\₁ eq b) Acq').\nseq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : (⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"(⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"seq_rewrite (seq_eqvC Rel' (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : (⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"(⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"seq_rewrite (seq_eqvC (W' ∩₁ Rlx') (E' \\₁ eq b)).\nseq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : (⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"(⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"seq_rewrite (seq_eqvC (E' \\₁ eq b) (F' ∩₁ Rel')).\nrewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : (⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"(⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘) ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite !seqA.\nsin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"sin_rewrite !SBSUB.\nrewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗R' ∩₁ Rlx'⦘ ⨾ (⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ (⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ (⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ (⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ (⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ (⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"rewrite !seqA.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) : ⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘)","proofString":"repeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : (⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺ ⊆ mapper ↑ rpo.","conclusion":"(⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘)⁺ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"apply inclusion_t_ind_right; vauto.\nrewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : mapper ↑ rpo ⨾ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo.","conclusion":"mapper ↑ rpo ⨾ ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"rewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : mapper ↑ rpo ⨾ mapper ↑ rpo ⊆ mapper ↑ rpo.","conclusion":"mapper ↑ rpo ⨾ mapper ↑ rpo ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"unfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : mapper ↑ rpo_imm⁺ ⨾ mapper ↑ rpo_imm⁺ ⊆ mapper ↑ rpo_imm⁺.","conclusion":"mapper ↑ rpo_imm⁺ ⨾ mapper ↑ rpo_imm⁺ ⊆ mapper ↑ rpo_imm⁺","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"rewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : inj_dom (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺) mapper.","conclusion":"inj_dom (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺) mapper","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"eapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : flip set_subset E (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺).","conclusion":"flip set_subset E (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺)","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"red.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺ ⊆₁ E.","conclusion":"codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺ ⊆₁ E","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"change rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : codom_rel rpo ∪₁ dom_rel rpo ⊆₁ E.","conclusion":"codom_rel rpo ∪₁ dom_rel rpo ⊆₁ E","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"rewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo) : codom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ∪₁ dom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ⊆₁ E.","conclusion":"codom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ∪₁ dom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ⊆₁ E","hypotheses":"(WF' : Wf G') (BIN : E' b) (MAPIN : E' \\₁ eq b ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (BNAQ : eq b ⊆₁ set_compl Acq') (ANREL : eq a ⊆₁ set_compl Rel') (ARW : eq a ⊆₁ R' ∪₁ W') (BRW : eq b ⊆₁ R' ∪₁ W') (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) (SBSUB : ⦗E' \\₁ eq b⦘ ⨾ sb' ⨾ ⦗E' \\₁ eq b⦘ ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘) (IND1 : ⦗E' \\₁ eq b⦘ ⨾ rpo_imm' ⨾ ⦗E' \\₁ eq b⦘ ⊆ mapper ↑ rpo)","proofString":"basic_solver."},{"statement":"(NLOC : ~ same_loc' b a) (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : eq b × eq a ∩ same_loc' ⊆ ∅₂.","conclusion":"eq b × eq a ∩ same_loc' ⊆ ∅₂","hypotheses":"(NLOC : ~ same_loc' b a) (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"basic_solver."},{"statement":"(NLOC : ~ same_loc' b a) (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a) : codom_rel (⦗eq b⦘ ⨾ sb' ∩ same_loc') ⊆₁ ∅.","conclusion":"codom_rel (⦗eq b⦘ ⨾ sb' ∩ same_loc') ⊆₁ ∅","hypotheses":"(NLOC : ~ same_loc' b a) (SBFROMB : ⦗eq b⦘ ⨾ sb' ⊆ eq b × eq a)","proofString":"rewrite reord_ab_loc; auto; basic_solver."},{"statement":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b) : ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ eq b × eq a ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ eq b × eq a ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b)","proofString":"arewrite (eq a ∩₁ E ≡₁ ∅) by basic_solver.\nrewrite swap_rel_empty_r.\nrewrite <- !cross_inter_r, <- !cross_inter_l.\narewrite (eq b ∩₁ (E' \\₁ eq b) ≡₁ ∅) by basic_solver.\narewrite ((E' \\₁ eq b) ∩₁ eq b ≡₁ ∅) by basic_solver.\nrewrite cross_false_r, cross_false_l.\nnow rewrite !union_false_r."},{"statement":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b) : ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) ∅ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ eq b × eq a ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) ∅ ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ eq b × eq a ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b)","proofString":"rewrite swap_rel_empty_r.\nrewrite <- !cross_inter_r, <- !cross_inter_l.\narewrite (eq b ∩₁ (E' \\₁ eq b) ≡₁ ∅) by basic_solver.\narewrite ((E' \\₁ eq b) ∩₁ eq b ≡₁ ∅) by basic_solver.\nrewrite cross_false_r, cross_false_l.\nnow rewrite !union_false_r."},{"statement":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b) : ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ eq b × eq a ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ⨾ ⦗E' \\₁ eq b⦘\n∪ ⦗E' \\₁ eq b⦘ ⨾ eq b × eq a ⨾ ⦗E' \\₁ eq b⦘\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b)","proofString":"rewrite <- !cross_inter_r, <- !cross_inter_l.\narewrite (eq b ∩₁ (E' \\₁ eq b) ≡₁ ∅) by basic_solver.\narewrite ((E' \\₁ eq b) ∩₁ eq b ≡₁ ∅) by basic_solver.\nrewrite cross_false_r, cross_false_l.\nnow rewrite !union_false_r."},{"statement":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b) : ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ((E' \\₁ eq b) ∩₁ mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × (eq b ∩₁ (E' \\₁ eq b))\n∪ ((E' \\₁ eq b) ∩₁ eq b) × (eq a ∩₁ (E' \\₁ eq b))\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ((E' \\₁ eq b) ∩₁ mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × (eq b ∩₁ (E' \\₁ eq b))\n∪ ((E' \\₁ eq b) ∩₁ eq b) × (eq a ∩₁ (E' \\₁ eq b))\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b)","proofString":"arewrite (eq b ∩₁ (E' \\₁ eq b) ≡₁ ∅) by basic_solver.\narewrite ((E' \\₁ eq b) ∩₁ eq b ≡₁ ∅) by basic_solver.\nrewrite cross_false_r, cross_false_l.\nnow rewrite !union_false_r."},{"statement":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b) : ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ((E' \\₁ eq b) ∩₁ mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × ∅\n∪ ((E' \\₁ eq b) ∩₁ eq b) × (eq a ∩₁ (E' \\₁ eq b))\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ((E' \\₁ eq b) ∩₁ mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × ∅\n∪ ((E' \\₁ eq b) ∩₁ eq b) × (eq a ∩₁ (E' \\₁ eq b))\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b)","proofString":"arewrite ((E' \\₁ eq b) ∩₁ eq b ≡₁ ∅) by basic_solver.\nrewrite cross_false_r, cross_false_l.\nnow rewrite !union_false_r."},{"statement":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b) : ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ((E' \\₁ eq b) ∩₁ mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × ∅\n∪ ∅ × (eq a ∩₁ (E' \\₁ eq b)) ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘\n∪ ((E' \\₁ eq b) ∩₁ mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × ∅\n∪ ∅ × (eq a ∩₁ (E' \\₁ eq b)) ⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b)","proofString":"rewrite cross_false_r, cross_false_l.\nnow rewrite !union_false_r."},{"statement":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b) : ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ∪ ∅₂ ∪ ∅₂\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘.","conclusion":"⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘ ∪ ∅₂ ∪ ∅₂\n⊆ ⦗E' \\₁ eq b⦘ ⨾ mapper ↑ sb ⨾ ⦗E' \\₁ eq b⦘","hypotheses":"(SB : sb'\n≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n  ∪ (mapper ↑₁ dom_rel (sb ⨾ ⦗eq b⦘)) × eq b ∪ eq b × eq a) (NINA : ~ E a) (INB : E b)","proofString":"now rewrite !union_false_r."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : rpo_imm' ⊆ mapper ↑ rpo.","conclusion":"rpo_imm' ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"unfold rpo_imm.\nrewrite SB.\nunfold swap_rel.\narewrite !(sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ⊆ sb).\nrewrite !collect_rel_union, !seq_union_l, !seq_union_r.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\narewrite_false (⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ sb' ∪ sb' ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ sb' ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ sb' ∪ sb' ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ sb' ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite SB.\nunfold swap_rel.\narewrite !(sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ⊆ sb).\nrewrite !collect_rel_union, !seq_union_l, !seq_union_r.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\narewrite_false (⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n∪ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)\n∪ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"unfold swap_rel.\narewrite !(sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ⊆ sb).\nrewrite !collect_rel_union, !seq_union_l, !seq_union_r.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\narewrite_false (⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘\n⨾ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n  ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘\n  ⨾ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n  ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘\n  ⨾ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n    ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘\n⨾ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n  ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘\n  ⨾ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n  ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘\n  ⨾ mapper ↑ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n    ⨾ ⦗W' ∩₁ Rlx'⦘ ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite !(sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ⊆ sb).\nrewrite !collect_rel_union, !seq_union_l, !seq_union_r.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\narewrite_false (⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E)) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E)) ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E)) ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E)) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗Acq'⦘ ⨾ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E)) ⨾ ⦗Rel'⦘\n∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (sb ∪ (eq a ∩₁ E) × (eq b ∩₁ E)) ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite !collect_rel_union, !seq_union_l, !seq_union_r.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\narewrite_false (⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘\n∪ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\narewrite_false (⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘ ⊆ ∅₂.","conclusion":"mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗F' ∩₁ Acq'⦘ ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⨾ ⦗F' ∩₁ Acq'⦘ ⊆ ∅₂.","conclusion":"(mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⨾ ⦗F' ∩₁ Acq'⦘ ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"seq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂.","conclusion":"(mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq')) ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅.","conclusion":"mapper ↑₁ (eq b ∩₁ E) ∩₁ (F' ∩₁ Acq') ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite set_interC with (s := F'), set_interC.\nrewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : Acq' ∩₁ F' ∩₁ mapper ↑₁ (eq b ∩₁ E) ⊆₁ ∅.","conclusion":"Acq' ∩₁ F' ∩₁ mapper ↑₁ (eq b ∩₁ E) ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite set_interA, set_collect_is_f, BRW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : Acq' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅.","conclusion":"Acq' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"clear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"Acq' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅.","conclusion":"Acq' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅","hypotheses":"","proofString":"unfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"Acq'\n∩₁ mapper\n   ↑₁ ((fun e : actid => match lab e with\n                         | Afence _ => true\n                         | _ => false\n                         end)\n       ∩₁ ((fun e : actid =>\n            match lab e with\n            | Aload _ _ _ _ => true\n            | _ => false\n            end)\n           ∪₁ (fun e : actid =>\n               match lab e with\n               | Astore _ _ _ _ => true\n               | _ => false\n               end))) ⊆₁ ∅.","conclusion":"Acq'\n∩₁ mapper\n   ↑₁ ((fun e : actid => match lab e with\n                         | Afence _ => true\n                         | _ => false\n                         end)\n       ∩₁ ((fun e : actid =>\n            match lab e with\n            | Aload _ _ _ _ => true\n            | _ => false\n            end)\n           ∪₁ (fun e : actid =>\n               match lab e with\n               | Astore _ _ _ _ => true\n               | _ => false\n               end))) ⊆₁ ∅","hypotheses":"","proofString":"basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E))\n∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite_false (⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver.\narewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆ ∅₂.","conclusion":"⦗Acq'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗Acq'⦘ ⨾ (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂.","conclusion":"⦗Acq'⦘ ⨾ (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"seq_rewrite <- cross_inter_l.\narewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂.","conclusion":"(Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite (Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_collect_acq, ANAQ; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅.","conclusion":"Acq' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite set_collect_acq, ANAQ; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ∅₂)\n∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ∅₂)\n∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite_false (mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver.\narewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘ ⊆ ∅₂.","conclusion":"mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗Rel'⦘ ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite collect_rel_cross.\nseq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⨾ ⦗Rel'⦘ ⊆ ∅₂.","conclusion":"(mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⨾ ⦗Rel'⦘ ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"seq_rewrite <- cross_inter_r.\narewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel') ⊆ ∅₂.","conclusion":"(mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel') ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite (mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅.","conclusion":"mapper ↑₁ (eq b ∩₁ E) ∩₁ Rel' ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite set_interC with (s' := Rel').\nrewrite set_collect_rel, BNREL; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : Rel' ∩₁ mapper ↑₁ (eq b ∩₁ E) ⊆₁ ∅.","conclusion":"Rel' ∩₁ mapper ↑₁ (eq b ∩₁ E) ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite set_collect_rel, BNREL; basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ∅₂) ∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ∅₂)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ∅₂) ∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ∅₂)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n   ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite_false (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E)).\nrewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver.\nrewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆ ∅₂.","conclusion":"⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite collect_rel_cross.\nseq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗F' ∩₁ Rel'⦘ ⨾ (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂.","conclusion":"⦗F' ∩₁ Rel'⦘ ⨾ (mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"seq_rewrite <- cross_inter_l.\narewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : (F' ∩₁ Rel' ∩₁ mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂.","conclusion":"(F' ∩₁ Rel' ∩₁ mapper ↑₁ (eq a ∩₁ E)) × (mapper ↑₁ (eq b ∩₁ E)) ⊆ ∅₂","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"arewrite ((F' ∩₁ Rel') ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅);        [| basic_solver].\nrewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : F' ∩₁ Rel' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅.","conclusion":"F' ∩₁ Rel' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite set_interC with (s := F').\nrewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : Rel' ∩₁ F' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅.","conclusion":"Rel' ∩₁ F' ∩₁ mapper ↑₁ (eq a ∩₁ E) ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite set_interA, set_collect_is_f, ARW; try basic_solver.\nclear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : Rel' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅.","conclusion":"Rel' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"clear.\nunfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"Rel' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅.","conclusion":"Rel' ∩₁ mapper ↑₁ (F ∩₁ (R ∪₁ W)) ⊆₁ ∅","hypotheses":"","proofString":"unfold is_r, is_w, is_f.\nbasic_solver."},{"statement":"Rel'\n∩₁ mapper\n   ↑₁ ((fun e : actid => match lab e with\n                         | Afence _ => true\n                         | _ => false\n                         end)\n       ∩₁ ((fun e : actid =>\n            match lab e with\n            | Aload _ _ _ _ => true\n            | _ => false\n            end)\n           ∪₁ (fun e : actid =>\n               match lab e with\n               | Astore _ _ _ _ => true\n               | _ => false\n               end))) ⊆₁ ∅.","conclusion":"Rel'\n∩₁ mapper\n   ↑₁ ((fun e : actid => match lab e with\n                         | Afence _ => true\n                         | _ => false\n                         end)\n       ∩₁ ((fun e : actid =>\n            match lab e with\n            | Aload _ _ _ _ => true\n            | _ => false\n            end)\n           ∪₁ (fun e : actid =>\n               match lab e with\n               | Astore _ _ _ _ => true\n               | _ => false\n               end))) ⊆₁ ∅","hypotheses":"","proofString":"basic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ∅₂) ∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ∅₂)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘ ∪ ∅₂ ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗R' ∩₁ Rlx'⦘ ⨾ ∅₂\n∪ (⦗Acq'⦘ ⨾ mapper ↑ sb ∪ ∅₂) ∪ (mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ∅₂)\n∪ (⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘ ∪ ∅₂ ⨾ ⦗W' ∩₁ Rlx'⦘)\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite seq_false_r, seq_false_l, !union_false_r.\nrewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ mapper ↑ rpo.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"rewrite <- reord_map_rpo_helper; auto.\nrepeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) : ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘.","conclusion":"⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘\n⊆ ⦗R' ∩₁ Rlx'⦘ ⨾ mapper ↑ sb ⨾ ⦗F' ∩₁ Acq'⦘ ∪ ⦗Acq'⦘ ⨾ mapper ↑ sb\n  ∪ mapper ↑ sb ⨾ ⦗Rel'⦘ ∪ ⦗F' ∩₁ Rel'⦘ ⨾ mapper ↑ sb ⨾ ⦗W' ∩₁ Rlx'⦘","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W)","proofString":"repeat apply union_mori; clear; basic_solver 11."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : rpo' ⊆ mapper ↑ rpo.","conclusion":"rpo' ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"apply inclusion_t_ind_right; vauto.\nrewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : mapper ↑ rpo ⨾ rpo_imm' ⊆ mapper ↑ rpo.","conclusion":"mapper ↑ rpo ⨾ rpo_imm' ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"rewrite IND1.\nunfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : mapper ↑ rpo ⨾ mapper ↑ rpo ⊆ mapper ↑ rpo.","conclusion":"mapper ↑ rpo ⨾ mapper ↑ rpo ⊆ mapper ↑ rpo","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"unfold rpo.\nrewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : mapper ↑ rpo_imm⁺ ⨾ mapper ↑ rpo_imm⁺ ⊆ mapper ↑ rpo_imm⁺.","conclusion":"mapper ↑ rpo_imm⁺ ⨾ mapper ↑ rpo_imm⁺ ⊆ mapper ↑ rpo_imm⁺","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"rewrite <- collect_rel_seq, ct_ct; [reflexivity |].\neapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : inj_dom (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺) mapper.","conclusion":"inj_dom (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺) mapper","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"eapply inj_dom_mori; eauto.\nred.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : flip set_subset E (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺).","conclusion":"flip set_subset E (codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺)","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"red.\nchange rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺ ⊆₁ E.","conclusion":"codom_rel rpo_imm⁺ ∪₁ dom_rel rpo_imm⁺ ⊆₁ E","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"change rpo_imm⁺ with rpo.\nrewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : codom_rel rpo ∪₁ dom_rel rpo ⊆₁ E.","conclusion":"codom_rel rpo ∪₁ dom_rel rpo ⊆₁ E","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"rewrite wf_rpoE.\nbasic_solver."},{"statement":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo) : codom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ∪₁ dom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ⊆₁ E.","conclusion":"codom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ∪₁ dom_rel (⦗E⦘ ⨾ rpo ⨾ ⦗E⦘) ⊆₁ E","hypotheses":"(WF' : Wf G') (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (INJ : inj_dom E mapper) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) (ANAQ : eq a ∩₁ E ⊆₁ set_compl Acq) (BNREL : eq b ∩₁ E ⊆₁ set_compl Rel) (ARW : eq a ∩₁ E ⊆₁ R ∪₁ W) (BRW : eq b ∩₁ E ⊆₁ R ∪₁ W) (IND1 : rpo_imm' ⊆ mapper ↑ rpo)","proofString":"basic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : same_loc' ∩ sb' ⊆ mapper ↑ (same_loc ∩ sb).","conclusion":"same_loc' ∩ sb' ⊆ mapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"rewrite SB, reord_map_sloc; auto; [| rewrite wf_sbE; basic_solver].\nunfold swap_rel.\nrewrite inter_union_r, collect_rel_union.\narewrite (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E)) ⊆ same_loc ∩ sb).\napply inclusion_union_l; [reflexivity | ].\narewrite (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆    ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) by basic_solver.\nrewrite NLOC, collect_rel_empty.\nbasic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : mapper ↑ (same_loc ∩ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))\n⊆ mapper ↑ (same_loc ∩ sb).","conclusion":"mapper ↑ (same_loc ∩ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))\n⊆ mapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"unfold swap_rel.\nrewrite inter_union_r, collect_rel_union.\narewrite (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E)) ⊆ same_loc ∩ sb).\napply inclusion_union_l; [reflexivity | ].\narewrite (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆    ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) by basic_solver.\nrewrite NLOC, collect_rel_empty.\nbasic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : mapper\n↑ (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E)))\n⊆ mapper ↑ (same_loc ∩ sb).","conclusion":"mapper\n↑ (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E) ∪ (eq a ∩₁ E) × (eq b ∩₁ E)))\n⊆ mapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"rewrite inter_union_r, collect_rel_union.\narewrite (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E)) ⊆ same_loc ∩ sb).\napply inclusion_union_l; [reflexivity | ].\narewrite (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆    ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) by basic_solver.\nrewrite NLOC, collect_rel_empty.\nbasic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : mapper ↑ (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E)))\n∪ mapper ↑ (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E)) ⊆ \nmapper ↑ (same_loc ∩ sb).","conclusion":"mapper ↑ (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E)))\n∪ mapper ↑ (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E)) ⊆ \nmapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"arewrite (same_loc ∩ (sb \\ (eq b ∩₁ E) × (eq a ∩₁ E)) ⊆ same_loc ∩ sb).\napply inclusion_union_l; [reflexivity | ].\narewrite (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆    ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) by basic_solver.\nrewrite NLOC, collect_rel_empty.\nbasic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : mapper ↑ (same_loc ∩ sb) ∪ mapper ↑ (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E))\n⊆ mapper ↑ (same_loc ∩ sb).","conclusion":"mapper ↑ (same_loc ∩ sb) ∪ mapper ↑ (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E))\n⊆ mapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"apply inclusion_union_l; [reflexivity | ].\narewrite (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆    ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) by basic_solver.\nrewrite NLOC, collect_rel_empty.\nbasic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : mapper ↑ (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E)) ⊆ mapper ↑ (same_loc ∩ sb).","conclusion":"mapper ↑ (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E)) ⊆ mapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"arewrite (same_loc ∩ (eq a ∩₁ E) × (eq b ∩₁ E) ⊆    ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) by basic_solver.\nrewrite NLOC, collect_rel_empty.\nbasic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : mapper ↑ (⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) ⊆ mapper ↑ (same_loc ∩ sb).","conclusion":"mapper ↑ (⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘) ⊆ mapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"rewrite NLOC, collect_rel_empty.\nbasic_solver."},{"statement":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E)) : ∅₂ ⊆ mapper ↑ (same_loc ∩ sb).","conclusion":"∅₂ ⊆ mapper ↑ (same_loc ∩ sb)","hypotheses":"(NLOC : ⦗eq a ∩₁ E⦘ ⨾ same_loc ⨾ ⦗eq b ∩₁ E⦘ ⊆ ∅₂) (MAPIN : E' ⊆₁ mapper ↑₁ E) (LABEQ : eq_dom E lab (lab' ∘ mapper)) (SB : sb' ≡ mapper ↑ swap_rel sb (eq b ∩₁ E) (eq a ∩₁ E))","proofString":"basic_solver."}]}