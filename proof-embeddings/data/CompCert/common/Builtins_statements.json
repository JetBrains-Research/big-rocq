{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/common/Builtins.v","fileSamples":[{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (f : meminj) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list f vargs vargs') : exists vres' : val,\n  builtin_function_sem b vargs' = Some vres' /\\ Val.inject f vres vres'.","proofString":"exploit (bs_inject _ (builtin_function_sem b)); eauto.\nunfold val_opt_inject; rewrite H; intro J.\ndestruct (builtin_function_sem b vargs') as [vres'|]; try contradiction.\nexists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (f : meminj) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list f vargs vargs') : val_opt_inject f (builtin_function_sem b vargs)\n  (builtin_function_sem b vargs') ->\nexists vres' : val,\n  builtin_function_sem b vargs' = Some vres' /\\ Val.inject f vres vres'.","proofString":"unfold val_opt_inject; rewrite H; intro J.\ndestruct (builtin_function_sem b vargs') as [vres'|]; try contradiction.\nexists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (f : meminj) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list f vargs vargs') (J : match builtin_function_sem b vargs' with\n| Some v' => Val.inject f vres v'\n| None => False\nend) : exists vres' : val,\n  builtin_function_sem b vargs' = Some vres' /\\ Val.inject f vres vres'.","proofString":"destruct (builtin_function_sem b vargs') as [vres'|]; try contradiction.\nexists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (f : meminj) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list f vargs vargs') (vres' : val) (J : Val.inject f vres vres') : exists vres'0 : val, Some vres' = Some vres'0 /\\ Val.inject f vres vres'0.","proofString":"exists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.lessdef_list vargs vargs') : exists vres' : val,\n  builtin_function_sem b vargs' = Some vres' /\\ Val.lessdef vres vres'.","proofString":"apply val_inject_list_lessdef in H0.\nexploit builtin_function_sem_inject; eauto.\nintros (vres' & A & B).\napply val_inject_lessdef in B.\nexists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list (fun b0 : block => Some (b0, 0)) vargs vargs') : exists vres' : val,\n  builtin_function_sem b vargs' = Some vres' /\\ Val.lessdef vres vres'.","proofString":"exploit builtin_function_sem_inject; eauto.\nintros (vres' & A & B).\napply val_inject_lessdef in B.\nexists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list (fun b0 : block => Some (b0, 0)) vargs vargs') : (exists vres' : val,\n   builtin_function_sem b vargs' = Some vres' /\\\n   Val.inject (fun b0 : block => Some (b0, 0)) vres vres') ->\nexists vres' : val,\n  builtin_function_sem b vargs' = Some vres' /\\ Val.lessdef vres vres'.","proofString":"intros (vres' & A & B).\napply val_inject_lessdef in B.\nexists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list (fun b0 : block => Some (b0, 0)) vargs vargs') (vres' : val) (A : builtin_function_sem b vargs' = Some vres') (B : Val.inject (fun b0 : block => Some (b0, 0)) vres vres') : exists vres'0 : val,\n  builtin_function_sem b vargs' = Some vres'0 /\\ Val.lessdef vres vres'0.","proofString":"apply val_inject_lessdef in B.\nexists vres'; auto."},{"statement":"(b : builtin_function) (vargs : list val) (vres : val) (vargs' : list val) (H : builtin_function_sem b vargs = Some vres) (H0 : Val.inject_list (fun b0 : block => Some (b0, 0)) vargs vargs') (vres' : val) (A : builtin_function_sem b vargs' = Some vres') (B : Val.lessdef vres vres') : exists vres'0 : val,\n  builtin_function_sem b vargs' = Some vres'0 /\\ Val.lessdef vres vres'0.","proofString":"exists vres'; auto."},{"statement":"(name : string) (sg : signature) (b : builtin_function) (H : match lookup_builtin standard_builtin_sig name sg standard_builtin_table with\n| Some b0 => Some (BI_standard b0)\n| None =>\n    match\n      lookup_builtin platform_builtin_sig name sg platform_builtin_table\n    with\n    | Some b0 => Some (BI_platform b0)\n    | None => None\n    end\nend = Some b) : builtin_function_sig b = sg.","proofString":"destruct (lookup_builtin standard_builtin_sig name sg standard_builtin_table) as [bs|] eqn:E.\ninv H.\nsimpl.\neapply lookup_builtin_sig; eauto.\ndestruct (lookup_builtin platform_builtin_sig name sg platform_builtin_table) as [bp|] eqn:E'.\ninv H.\nsimpl.\neapply lookup_builtin_sig; eauto.\ndiscriminate."},{"statement":"(name : string) (sg : signature) (b : builtin_function) (bs : standard_builtin) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = Some bs) (H : Some (BI_standard bs) = Some b) : builtin_function_sig b = sg.","proofString":"inv H.\nsimpl.\neapply lookup_builtin_sig; eauto."},{"statement":"(name : string) (sg : signature) (bs : standard_builtin) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = Some bs) : builtin_function_sig (BI_standard bs) = sg.","proofString":"simpl.\neapply lookup_builtin_sig; eauto."},{"statement":"(name : string) (sg : signature) (bs : standard_builtin) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = Some bs) : standard_builtin_sig bs = sg.","proofString":"eapply lookup_builtin_sig; eauto."},{"statement":"(name : string) (sg : signature) (b : builtin_function) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = None) (H : match lookup_builtin platform_builtin_sig name sg platform_builtin_table with\n| Some b0 => Some (BI_platform b0)\n| None => None\nend = Some b) : builtin_function_sig b = sg.","proofString":"destruct (lookup_builtin platform_builtin_sig name sg platform_builtin_table) as [bp|] eqn:E'.\ninv H.\nsimpl.\neapply lookup_builtin_sig; eauto.\ndiscriminate."},{"statement":"(name : string) (sg : signature) (b : builtin_function) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = None) (bp : platform_builtin) (E' : lookup_builtin platform_builtin_sig name sg platform_builtin_table = Some bp) (H : Some (BI_platform bp) = Some b) : builtin_function_sig b = sg.","proofString":"inv H.\nsimpl.\neapply lookup_builtin_sig; eauto."},{"statement":"(name : string) (sg : signature) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = None) (bp : platform_builtin) (E' : lookup_builtin platform_builtin_sig name sg platform_builtin_table = Some bp) : builtin_function_sig (BI_platform bp) = sg.","proofString":"simpl.\neapply lookup_builtin_sig; eauto."},{"statement":"(name : string) (sg : signature) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = None) (bp : platform_builtin) (E' : lookup_builtin platform_builtin_sig name sg platform_builtin_table = Some bp) : platform_builtin_sig bp = sg.","proofString":"eapply lookup_builtin_sig; eauto."},{"statement":"(name : string) (sg : signature) (b : builtin_function) (E : lookup_builtin standard_builtin_sig name sg standard_builtin_table = None) (E' : lookup_builtin platform_builtin_sig name sg platform_builtin_table = None) (H : None = Some b) : builtin_function_sig b = sg.","proofString":"discriminate."}]}