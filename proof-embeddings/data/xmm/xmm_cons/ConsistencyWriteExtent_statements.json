{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/xmm/src/xmm_cons/ConsistencyWriteExtent.v","fileSamples":[{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑₁ E_t ∪₁ eq a) \\₁ eq a ≡₁ m ↑₁ E_t.","proofString":"rewrite set_minus_union_l.\nrewrite set_minusK.\nrewrite set_union_empty_r.\napply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t \\₁ eq a ∪₁ eq a \\₁ eq a ≡₁ m ↑₁ E_t.","proofString":"rewrite set_minusK.\nrewrite set_union_empty_r.\napply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t \\₁ eq a ∪₁ ∅ ≡₁ m ↑₁ E_t.","proofString":"rewrite set_union_empty_r.\napply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t \\₁ eq a ≡₁ m ↑₁ E_t.","proofString":"apply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rf_s⁻¹ ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t)\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a.","proofString":"rewrite RF_MAP.\nrewrite CO_MAP.\nrewrite seq_union_r.\nrewrite <- collect_rel_transp.\nrewrite collect_rel_seq.\napply inclusion_union_l; basic_solver 12.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t)⁻¹ ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t)\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a.","proofString":"rewrite CO_MAP.\nrewrite seq_union_r.\nrewrite <- collect_rel_transp.\nrewrite collect_rel_seq.\napply inclusion_union_l; basic_solver 12.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t)⁻¹ ⨾ (m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t)\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a.","proofString":"rewrite seq_union_r.\nrewrite <- collect_rel_transp.\nrewrite collect_rel_seq.\napply inclusion_union_l; basic_solver 12.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t)⁻¹ ⨾ m ↑ co_t\n∪ (m ↑ rf_t)⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t)\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a.","proofString":"rewrite <- collect_rel_transp.\nrewrite collect_rel_seq.\napply inclusion_union_l; basic_solver 12.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t⁻¹ ⨾ m ↑ co_t\n∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t)\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a.","proofString":"rewrite collect_rel_seq.\napply inclusion_union_l; basic_solver 12.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t⁻¹ ⨾ m ↑ co_t\n∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n⊆ m ↑ rf_t⁻¹ ⨾ m ↑ co_t\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a.","proofString":"apply inclusion_union_l; basic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m.","proofString":"assert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel rf_t⁻¹ ⊆₁ E_t.","proofString":"rewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : dom_rel rf_t ⊆₁ E_t.","proofString":"induction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (COND : rf_t x y) : E_t x.","proofString":"apply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (COND : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x y) : E_t x.","proofString":"destruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x1 : actid) (COND : ⦗E_t⦘ x x1) (REST : (rf_t ⨾ ⦗E_t⦘) x1 y) : E_t x.","proofString":"apply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) : inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m.","proofString":"assert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) : dom_rel co_t ⊆₁ E_t.","proofString":"induction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y : actid) (COND : co_t x y) : E_t x.","proofString":"apply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y : actid) (COND : (⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) x y) : E_t x.","proofString":"destruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y x1 : actid) (COND : ⦗E_t⦘ x x1) (REST : (co_t ⨾ ⦗E_t⦘) x1 y) : E_t x.","proofString":"apply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (IN2 : dom_rel co_t ⊆₁ E_t) : inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m.","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (IN2 : dom_rel co_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rf_s ∪ co_s ⨾ rf_s^? ∪ fr_s ⨾ rf_s^?\n⊆ m ↑ (rf_t ∪ co_t ⨾ rf_t^? ∪ fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?.","proofString":"repeat rewrite collect_rel_union.\nrewrite RF_MAP.\nrepeat apply inclusion_union_l.\nrepeat left; vauto.\nrewrite CO_MAP.\nrewrite seq_union_l.\napply inclusion_union_l.\ncase_refl _.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto.\nrewrite write_fr_sub; vauto.\nrewrite seq_union_l.\napply inclusion_union_l.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto.\nrewrite seqA; right; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rf_s ∪ co_s ⨾ rf_s^? ∪ fr_s ⨾ rf_s^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?.","proofString":"rewrite RF_MAP.\nrepeat apply inclusion_union_l.\nrepeat left; vauto.\nrewrite CO_MAP.\nrewrite seq_union_l.\napply inclusion_union_l.\ncase_refl _.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto.\nrewrite write_fr_sub; vauto.\nrewrite seq_union_l.\napply inclusion_union_l.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto.\nrewrite seqA; right; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t ∪ co_s ⨾ (m ↑ rf_t)^? ∪ fr_s ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"repeat apply inclusion_union_l.\nrepeat left; vauto.\nrewrite CO_MAP.\nrewrite seq_union_l.\napply inclusion_union_l.\ncase_refl _.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto.\nrewrite write_fr_sub; vauto.\nrewrite seq_union_l.\napply inclusion_union_l.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto.\nrewrite seqA; right; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"repeat left; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : co_s ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite CO_MAP.\nrewrite seq_union_l.\napply inclusion_union_l.\ncase_refl _.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite seq_union_l.\napply inclusion_union_l.\ncase_refl _.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ (m ↑ rf_t)^?\n∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"apply inclusion_union_l.\ncase_refl _.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"case_refl _.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12.\nrewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ ⦗fun _ : actid => True⦘ ∪ co_t ⨾ rf_t)\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite collect_rel_union.\nrewrite <- !unionA.\nclear; mode_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t\n⊆ m ↑ rf_t ∪ (m ↑ (co_t ⨾ ⦗fun _ : actid => True⦘) ∪ m ↑ (co_t ⨾ rf_t))\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite <- !unionA.\nclear; mode_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ ⦗fun _ : actid => True⦘) ∪ m ↑ (co_t ⨾ rf_t)\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"clear; mode_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite crE.\nrewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite seq_union_r.\nrewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ ⦗fun _ : actid => True⦘ ∪ co_t ⨾ rf_t)\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite collect_rel_union.\nrewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ (m ↑ (co_t ⨾ ⦗fun _ : actid => True⦘) ∪ m ↑ (co_t ⨾ rf_t))\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite <- !unionA.\nrels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ ⦗fun _ : actid => True⦘) ∪ m ↑ (co_t ⨾ rf_t)\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rels.\nrewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ co_t ∪ m ↑ (co_t ⨾ rf_t)\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite collect_rel_seq with (rr := co_t) (rr' := rf_t).\ndo 3 left.\nright.\nvauto.\nassert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ co_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ co_t ∪ m ↑ co_t ⨾ m ↑ rf_t\n  ∪ m ↑ (fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ rf_t))\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"do 3 left.\nright.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ co_t ⨾ m ↑ rf_t) x y) : (m ↑ rf_t ∪ m ↑ co_t ∪ m ↑ co_t ⨾ m ↑ rf_t) x y.","proofString":"right.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ co_t ⨾ m ↑ rf_t) x y) : (m ↑ co_t ⨾ m ↑ rf_t) x y.","proofString":"vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : inj_dom (codom_rel co_t ∪₁ dom_rel rf_t) m.","proofString":"assert (IN1 : codom_rel co_t ⊆₁ E_t).\nrewrite wf_coE; eauto.\nclear; basic_solver.\nassert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel co_t ⊆₁ E_t.","proofString":"rewrite wf_coE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel (⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel co_t ⊆₁ E_t) : inj_dom (codom_rel co_t ∪₁ dom_rel rf_t) m.","proofString":"assert (IN2 : dom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel co_t ⊆₁ E_t) : dom_rel rf_t ⊆₁ E_t.","proofString":"rewrite wf_rfE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel co_t ⊆₁ E_t) : dom_rel (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel co_t ⊆₁ E_t) (IN2 : dom_rel rf_t ⊆₁ E_t) : inj_dom (codom_rel co_t ∪₁ dom_rel rf_t) m.","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel co_t ⊆₁ E_t) (IN2 : dom_rel rf_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n    ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n      ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t).","proofString":"rewrite seq_union_r.\napply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n     ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n       ⨾ ⦗fun _ : actid => True⦘\n       ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t).","proofString":"apply inclusion_union_l.\nclear; mode_solver 21.\nrewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n     ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n       ⨾ ⦗fun _ : actid => True⦘\n       ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t).","proofString":"clear; mode_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n     ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n       ⨾ ⦗fun _ : actid => True⦘\n       ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t).","proofString":"rewrite !seq_union_r.\nrewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n     ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t)\n  ∪ (m ↑ rf_t⁻¹\n     ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n       ⨾ ⦗fun _ : actid => True⦘\n     ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t).","proofString":"rewrite <- !unionA.\ndo 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t\n  ∪ m ↑ rf_t⁻¹\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t.","proofString":"do 2 left.\nright; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t) x y) : (m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ ⦗fun _ : actid => True⦘\n ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ m ↑ rf_t) x y.","proofString":"right; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : fr_s ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite write_fr_sub; vauto.\nrewrite seq_union_l.\napply inclusion_union_l.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto.\nrewrite seqA; right; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ fr_t ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite seq_union_l.\napply inclusion_union_l.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto.\nrewrite seqA; right; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ fr_t ⨾ (m ↑ rf_t)^?\n∪ (m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"apply inclusion_union_l.\nrewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto.\nrewrite seqA; right; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ fr_t ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite crE.\nrewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ fr_t ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n    ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n      ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t).","proofString":"rewrite seq_union_r.\napply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ fr_t ⨾ ⦗fun _ : actid => True⦘ ∪ m ↑ fr_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n    ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n      ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t).","proofString":"apply inclusion_union_l.\nrels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ fr_t ⨾ ⦗fun _ : actid => True⦘\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n    ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n      ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t).","proofString":"rels.\ndo 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ fr_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n    ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n      ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t).","proofString":"do 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ fr_t) x y) : (m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)) x y.","proofString":"right.\nunfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ fr_t) x y) : (m ↑ (fr_t ⨾ rf_t^?)) x y.","proofString":"unfold collect_rel.\ndestruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ fr_t) x y) : exists x' y' : actid, (fr_t ⨾ rf_t^?) x' y' /\\ m x' = x /\\ m y' = y.","proofString":"destruct H as (x0 & y0 & (P1 & M1 & M2)).\nexists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 y0 : actid) (P1 : fr_t x0 y0) (M1 : m x0 = x) (M2 : m y0 = y) : exists x' y' : actid, (fr_t ⨾ rf_t^?) x' y' /\\ m x' = x /\\ m y' = y.","proofString":"exists x0, y0.\nsplits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 y0 : actid) (P1 : fr_t x0 y0) (M1 : m x0 = x) (M2 : m y0 = y) : (fr_t ⨾ rf_t^?) x0 y0 /\\ m x0 = x /\\ m y0 = y.","proofString":"splits; vauto.\nunfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 y0 : actid) (P1 : fr_t x0 y0) : (fr_t ⨾ rf_t^?) x0 y0.","proofString":"unfold seq.\nexists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 y0 : actid) (P1 : fr_t x0 y0) : exists z : actid, fr_t x0 z /\\ rf_t^? z y0.","proofString":"exists y0.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 y0 : actid) (P1 : fr_t x0 y0) : fr_t x0 y0 /\\ rf_t^? y0 y0.","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ fr_t ⨾ m ↑ rf_t\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n    ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t)\n  ∪ m ↑ rf_t⁻¹\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n      ⨾ (⦗fun _ : actid => True⦘ ∪ m ↑ rf_t).","proofString":"do 2 left.\nright.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ fr_t ⨾ m ↑ rf_t) x y) : (m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)) x y.","proofString":"right.\nunfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ fr_t ⨾ m ↑ rf_t) x y) : (m ↑ (fr_t ⨾ rf_t^?)) x y.","proofString":"unfold collect_rel.\ndestruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (H : (m ↑ fr_t ⨾ m ↑ rf_t) x y) : exists x' y' : actid, (fr_t ⨾ rf_t^?) x' y' /\\ m x' = x /\\ m y' = y.","proofString":"destruct H as (x0 & ((x' & x0' & (P1 & M1 & M2)) &                                 x0'' & (y' & P2 & (M3 & M4)))).\nexists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 x' x0' : actid) (P1 : fr_t x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y) : exists x'0 y'0 : actid, (fr_t ⨾ rf_t^?) x'0 y'0 /\\ m x'0 = x /\\ m y'0 = y.","proofString":"exists x', y'.\nsplits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 x' x0' : actid) (P1 : fr_t x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y) : (fr_t ⨾ rf_t^?) x' y' /\\ m x' = x /\\ m y' = y.","proofString":"splits; vauto.\nunfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : (fr_t ⨾ rf_t^?) x' y'.","proofString":"unfold seq.\nexists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : exists z : actid, fr_t x' z /\\ rf_t^? z y'.","proofString":"exists x0'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : fr_t x' x0' /\\ rf_t^? x0' y'.","proofString":"splits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : rf_t^? x0' y'.","proofString":"assert (EQ : x0'' = x0').\napply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto.\nsubst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : x0'' = x0'.","proofString":"apply INJ; vauto.\napply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE.\napply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : E_t x0''.","proofString":"apply wf_rfE in P2; vauto.\ndestruct P2 as (x1 & INE & REST); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x0'' y') (M3 : m x0'' = m x0') : E_t x0''.","proofString":"destruct P2 as (x1 & INE & REST); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","proofString":"apply wf_frE in P1; vauto.\ndestruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : (⦗E_t⦘ ⨾ fr_t ⨾ ⦗E_t⦘) x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","proofString":"destruct P1 as (x1 & INE1 & (x2 & P1 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (x0'' y' : actid) (P2 : rf_t x0'' y') (M3 : m x0'' = m x0') (EQ : x0'' = x0') : rf_t^? x0' y'.","proofString":"subst.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' x0' : actid) (P1 : fr_t x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : rf_t x0' y') : rf_t^? x0' y'.","proofString":"vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⨾ (m ↑ rf_t)^?\n⊆ m ↑ rf_t ∪ m ↑ (co_t ⨾ rf_t^?) ∪ m ↑ (fr_t ⨾ rf_t^?)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?\n  ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ (m ↑ rf_t)^?.","proofString":"rewrite seqA; right; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅.","proofString":"unfold sw.\nunfold release.\nunfold rs.\narewrite_id ⦗Rel_s⦘; rels.\nrewrite crE.\nintros x COND.\ndestruct COND as (x0 & (x1 & (EQ & EQA) & COND)); subst.\napply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel (⦗eq a⦘ ⨾ release_s ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n⊆₁ ∅.","proofString":"unfold release.\nunfold rs.\narewrite_id ⦗Rel_s⦘; rels.\nrewrite crE.\nintros x COND.\ndestruct COND as (x0 & (x1 & (EQ & EQA) & COND)); subst.\napply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  (⦗eq a⦘\n   ⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ rs_s)\n     ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) ⊆₁ ∅.","proofString":"unfold rs.\narewrite_id ⦗Rel_s⦘; rels.\nrewrite crE.\nintros x COND.\ndestruct COND as (x0 & (x1 & (EQ & EQA) & COND)); subst.\napply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  (⦗eq a⦘\n   ⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊)\n     ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) ⊆₁ ∅.","proofString":"arewrite_id ⦗Rel_s⦘; rels.\nrewrite crE.\nintros x COND.\ndestruct COND as (x0 & (x1 & (EQ & EQA) & COND)); subst.\napply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  (⦗eq a⦘\n   ⨾ (⦗F_s⦘ ⨾ sb_s)^?\n     ⨾ ⦗Rlx_s⦘\n       ⨾ ⦗W_s⦘\n         ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n⊆₁ ∅.","proofString":"rewrite crE.\nintros x COND.\ndestruct COND as (x0 & (x1 & (EQ & EQA) & COND)); subst.\napply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  (⦗eq a⦘\n   ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗F_s⦘ ⨾ sb_s)\n     ⨾ ⦗Rlx_s⦘\n       ⨾ ⦗W_s⦘\n         ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n⊆₁ ∅.","proofString":"intros x COND.\ndestruct COND as (x0 & (x1 & (EQ & EQA) & COND)); subst.\napply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (COND : codom_rel\n  (⦗eq a⦘\n   ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗F_s⦘ ⨾ sb_s)\n     ⨾ ⦗Rlx_s⦘\n       ⨾ ⦗W_s⦘\n         ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x) : ∅ x.","proofString":"destruct COND as (x0 & (x1 & (EQ & EQA) & COND)); subst.\napply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_W : is_w lab_s x1) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x1) ∩₁ same_loc_s x1) × eq x1) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (COND : ((⦗fun _ : actid => True⦘ ∪ ⦗F_s⦘ ⨾ sb_s)\n ⨾ ⦗Rlx_s⦘\n   ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n  x1 x) : ∅ x.","proofString":"apply seq_union_l in COND.\ndestruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_W : is_w lab_s x1) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x1) ∩₁ same_loc_s x1) × eq x1) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (COND : (⦗fun _ : actid => True⦘\n ⨾ ⦗Rlx_s⦘\n   ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n ∪ (⦗F_s⦘ ⨾ sb_s)\n   ⨾ ⦗Rlx_s⦘\n     ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n  x1 x) : ∅ x.","proofString":"destruct COND as [COND | COND].\ndestruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto.\ndestruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_W : is_w lab_s x1) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x1) ∩₁ same_loc_s x1) × eq x1) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (COND : (⦗fun _ : actid => True⦘\n ⨾ ⦗Rlx_s⦘\n   ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n  x1 x) : ∅ x.","proofString":"destruct COND as (x2 & (EQ1 & C1) & (x3 & (EQ2 & C2)                  & (x4 & (EQ3 & C3) & COND))); subst.\ndestruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (COND : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 x) : ∅ x.","proofString":"destruct COND as (x5 & P1 & (x6 & P2 & P3)).\napply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x4 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"apply rtE in P1.\ndestruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 : actid) (P1 : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x4 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"destruct P1 as [EQ | NEQ].\ndestruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto.\napply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 : actid) (EQ : ⦗fun _ : actid => True⦘ x4 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"destruct EQ as (EQ & T); subst.\ndestruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x5 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x5) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x5⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x5⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x5)) (IS_W : is_w lab_s x5) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x5) ∩₁ same_loc_s x5) × eq x5) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C3 : is_w lab_s x5) (C2 : is_rlx lab_s x5) (T : True) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"destruct P3 as (x7 & P3 & P4).\napply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x5 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x5) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x5⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x5⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x5)) (IS_W : is_w lab_s x5) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x5) ∩₁ same_loc_s x5) × eq x5) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C3 : is_w lab_s x5) (C2 : is_rlx lab_s x5) (T : True) (x6 : actid) (P2 : rf_s x5 x6) (x7 : actid) (P3 : ⦗Rlx_s⦘ x6 x7) (P4 : ((sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x7 x) : ∅ x.","proofString":"apply RF_MAP in P2.\nunfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x5 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x5) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x5⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x5⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x5)) (IS_W : is_w lab_s x5) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x5) ∩₁ same_loc_s x5) × eq x5) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C3 : is_w lab_s x5) (C2 : is_rlx lab_s x5) (T : True) (x6 : actid) (P2 : (m ↑ rf_t) x5 x6) (x7 : actid) (P3 : ⦗Rlx_s⦘ x6 x7) (P4 : ((sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x7 x) : ∅ x.","proofString":"unfold collect_rel in P2.\ndestruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x5 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x5) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x5⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x5⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x5)) (IS_W : is_w lab_s x5) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x5) ∩₁ same_loc_s x5) × eq x5) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C3 : is_w lab_s x5) (C2 : is_rlx lab_s x5) (T : True) (x6 : actid) (P2 : exists x' y' : actid, rf_t x' y' /\\ m x' = x5 /\\ m y' = x6) (x7 : actid) (P3 : ⦗Rlx_s⦘ x6 x7) (P4 : ((sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x7 x) : ∅ x.","proofString":"destruct P2 as (x' & y' & (PTH & M1 & M2)).\napply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x5 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x5) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x5⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x5⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x5⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x5)) (IS_W : is_w lab_s x5) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x5) ∩₁ same_loc_s x5) × eq x5) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C3 : is_w lab_s x5) (C2 : is_rlx lab_s x5) (T : True) (x6 x' y' : actid) (PTH : rf_t x' y') (M1 : m x' = x5) (M2 : m y' = x6) (x7 : actid) (P3 : ⦗Rlx_s⦘ x6 x7) (P4 : ((sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x7 x) : ∅ x.","proofString":"apply wf_rfE in PTH; vauto.\ndestruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : true) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x'))) (CODOM_RPO : codom_rel (⦗eq (m x')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m x')) ∩₁ same_loc_s (m x')) × eq (m x')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s (m x')) (C3 : is_w lab_s (m x')) (T : True) (y' : actid) (PTH : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x' y') (x7 : actid) (P3 : ⦗Rlx_s⦘ (m y') x7) (P4 : ((sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x7 x) : ∅ x.","proofString":"destruct PTH as (x0' & (EQ & INE) & PTH); subst.\ndestruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x0')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : true) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x0')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m x0')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x0')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m x0')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x0'))) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m x0')) ∩₁ same_loc_s (m x0')) × eq (m x0')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C3 : is_w lab_s (m x0')) (C2 : is_rlx lab_s (m x0')) (T : True) (y' : actid) (INE : E_t x0') (PTH : (rf_t ⨾ ⦗E_t⦘) x0' y') (x7 : actid) (P3 : ⦗Rlx_s⦘ (m y') x7) (P4 : ((sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x7 x) : ∅ x.","proofString":"destruct NIN with (m x0'); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 : actid) (NEQ : (rf_s ⨾ rmw_s)⁺ x4 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"apply ct_begin in NEQ.\ndestruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 : actid) (NEQ : ((rf_s ⨾ rmw_s) ⨾ (rf_s ⨾ rmw_s)＊) x4 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"destruct NEQ as (x7 & (x8 & PTH1 & PTH2) & PTH3).\napply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 x7 x8 : actid) (PTH1 : rf_s x4 x8) (PTH2 : rmw_s x8 x7) (PTH3 : (rf_s ⨾ rmw_s)＊ x7 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"apply RF_MAP in PTH1.\nunfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 x7 x8 : actid) (PTH1 : (m ↑ rf_t) x4 x8) (PTH2 : rmw_s x8 x7) (PTH3 : (rf_s ⨾ rmw_s)＊ x7 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"unfold collect_rel in PTH1.\ndestruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 x7 x8 : actid) (PTH1 : exists x' y' : actid, rf_t x' y' /\\ m x' = x4 /\\ m y' = x8) (PTH2 : rmw_s x8 x7) (PTH3 : (rf_s ⨾ rmw_s)＊ x7 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"destruct PTH1 as (x' & y' & (PTH1' & M1 & M2)).\napply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x4 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x4) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x4) (NIN : set_disjoint (m ↑₁ E_t) (eq x4)) (CODOM_RPO : codom_rel (⦗eq x4⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x4⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x4⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x4) ∩₁ same_loc_s x4) × eq x4) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s x4) (C3 : is_w lab_s x4) (x5 x7 x8 x' y' : actid) (PTH1' : rf_t x' y') (M1 : m x' = x4) (M2 : m y' = x8) (PTH2 : rmw_s x8 x7) (PTH3 : (rf_s ⨾ rmw_s)＊ x7 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"apply wf_rfE in PTH1'; vauto.\ndestruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m x')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m x')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x'))) (IS_W : true) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m x')) ∩₁ same_loc_s (m x')) × eq (m x')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C3 : is_w lab_s (m x')) (C2 : is_rlx lab_s (m x')) (x5 x7 y' : actid) (PTH1' : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x' y') (PTH2 : rmw_s (m y') x7) (PTH3 : (rf_s ⨾ rmw_s)＊ x7 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"destruct PTH1' as (x9 & (EQ & INE) & PTH1'); subst.\ndestruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x9 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x9)) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x9))) (CODOM_RPO : codom_rel (⦗eq (m x9)⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x9)⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x9)⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x9)⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IS_W : true) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m x9)) ∩₁ same_loc_s (m x9)) × eq (m x9)) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (C1 : True) (C2 : is_rlx lab_s (m x9)) (C3 : is_w lab_s (m x9)) (x5 x7 y' : actid) (INE : E_t x9) (PTH1' : (rf_t ⨾ ⦗E_t⦘) x9 y') (PTH2 : rmw_s (m y') x7) (PTH3 : (rf_s ⨾ rmw_s)＊ x7 x5) (x6 : actid) (P2 : rf_s x5 x6) (P3 : (⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x6 x) : ∅ x.","proofString":"destruct NIN with (m x9); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_W : is_w lab_s x1) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x1) ∩₁ same_loc_s x1) × eq x1) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (COND : ((⦗F_s⦘ ⨾ sb_s)\n ⨾ ⦗Rlx_s⦘\n   ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n  x1 x) : ∅ x.","proofString":"destruct COND as (x2 & (x3 & (EQ & EQF) & C2) & C3); subst.\nmode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x3 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x3) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s x3) (NIN : set_disjoint (m ↑₁ E_t) (eq x3)) (CODOM_RPO : codom_rel (⦗eq x3⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x3⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x3⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x3⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x3) ∩₁ same_loc_s x3) × eq x3) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x2 : actid) (EQF : is_f lab_s x3) (C2 : sb_s x3 x2) (C3 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x2\n  x) : ∅ x.","proofString":"mode_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t ⨾ m ↑ rmw_t ≡ m ↑ (rf_t ⨾ rmw_t).","proofString":"rewrite collect_rel_seq; vauto.\nassert (IN1 : codom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nbasic_solver.\nassert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","proofString":"assert (IN1 : codom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nbasic_solver.\nassert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel rf_t ⊆₁ E_t.","proofString":"rewrite wf_rfE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","proofString":"assert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel rmw_t ⊆₁ E_t.","proofString":"rewrite wf_rmwE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"apply rtE in HREL.\ndestruct HREL as [EQ | PTH].\ndestruct EQ.\nsubst; eauto.\napply ct_end in PTH.\ndestruct PTH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply RMW_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x1' & y' & (P3 & M1 & M2)).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"destruct HREL as [EQ | PTH].\ndestruct EQ.\nsubst; eauto.\napply ct_end in PTH.\ndestruct PTH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply RMW_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x1' & y' & (P3 & M1 & M2)).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (EQ : ⦗fun _ : actid => True⦘ x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"destruct EQ.\nsubst; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (H : x = y) (H0 : True) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"subst; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (rf_s ⨾ rmw_s)⁺ x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"apply ct_end in PTH.\ndestruct PTH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply RMW_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x1' & y' & (P3 & M1 & M2)).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ rmw_s) x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"destruct PTH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply RMW_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x1' & y' & (P3 & M1 & M2)).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (P3 : rmw_s x1 y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"apply RMW_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x1' & y' & (P3 & M1 & M2)).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (P3 : (m ↑ rmw_t) x1 y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"unfold collect_rel in P3.\ndestruct P3 as (x1' & y' & (P3 & M1 & M2)).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (P3 : exists x' y' : actid, rmw_t x' y' /\\ m x' = x1 /\\ m y' = y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"destruct P3 as (x1' & y' & (P3 & M1 & M2)).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x1' y' : actid) (P3 : rmw_t x1' y') (M1 : m x1' = x1) (M2 : m y' = y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","proofString":"apply wf_rmwE in P3; vauto.\ndestruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1' : actid) (P2 : rf_s x0 (m x1')) (y' : actid) (P3 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x1' y') (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) (m y').","proofString":"destruct P3 as (x2 & INE & (x3 & P3 & (EQ & INE'))); subst.\napply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1' : actid) (P2 : rf_s x0 (m x1')) (y' x2 : actid) (INE : ⦗E_t⦘ x1' x2) (P3 : rmw_t x2 y') (INE' : E_t y') (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) (m y').","proofString":"apply MAPEQ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : ⦗E_t ∩₁ Rel_t ∩₁ Rlx_t ∩₁ W_t⦘ x' x'.","proofString":"unfolder.\nunfolder in DOM.\ndesf.\nunfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'.","proofString":"unfolder in DOM.\ndesf.\nunfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : (((E_s x /\\ a <> x) /\\ is_rel lab_s x) /\\ is_rlx lab_s x) /\\ is_w lab_s x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'.","proofString":"desf.\nunfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : E_s (m x')) (DOM3 : a <> m x') (DOM2 : is_rel lab_s (m x')) (DOM1 : is_rlx lab_s (m x')) (DOM0 : is_w lab_s (m x')) (XIN : E_t x') (YIN : E_t y') : x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'.","proofString":"unfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : singl_rel x y ⊆ (rf_s ⨾ rmw_s)＊.","proofString":"intros x0 y0 HH.\ndestruct HH; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (x0 y0 : actid) (HH : singl_rel x y x0 y0) : (rf_s ⨾ rmw_s)＊ x0 y0.","proofString":"destruct HH; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) : codom_rel rf_t ⊆₁ E_t.","proofString":"rewrite wf_rfE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) : codom_rel (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (IN1 : codom_rel rf_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","proofString":"assert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel rmw_t ⊆₁ E_t.","proofString":"rewrite wf_rmwE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (rf_t ⨾ rmw_t)＊ x' y'.","proofString":"destruct HREL as [EQ | PTH].\ndestruct EQ.\nsubst.\nassert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left; vauto.\napply rtE.\nright.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in PTH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (EQ : ⦗fun _ : actid => True⦘ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (rf_t ⨾ rmw_t)＊ x' y'.","proofString":"destruct EQ.\nsubst.\nassert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (H : x = y) (H0 : True) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (rf_t ⨾ rmw_t)＊ x' y'.","proofString":"subst.\nassert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') : (rf_t ⨾ rmw_t)＊ x' y'.","proofString":"assert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') : x' = y'.","proofString":"apply INJ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') (EQ : x' = y') : (rf_t ⨾ rmw_t)＊ x' y'.","proofString":"subst.\napply rtE; left; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (y' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m y')) (H0 : True) (XIN YIN : E_t y') (YEQ : m y' = m y') (HREL' : singl_rel (m y') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (rf_t ⨾ rmw_t)＊ y' y'.","proofString":"apply rtE; left; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (rf_t ⨾ rmw_t)＊ x' y'.","proofString":"apply rtE.\nright.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in PTH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (⦗fun _ : actid => True⦘ ∪ (rf_t ⨾ rmw_t)⁺) x' y'.","proofString":"right.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in PTH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in PTH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺.","proofString":"apply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"apply TREQ in PTH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t).","proofString":"rewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ ⦗E_t⦘ ⨾ (rf_t ⨾ rmw_t) ⨾ ⦗E_t⦘.","proofString":"rewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘.","proofString":"clear; basic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺.","proofString":"split; apply clos_trans_mori; rewrite <- REST; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"apply TREQ' in PTH.\napply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PTH : (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"apply collect_rel_ct_inj in PTH; vauto.\nunfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (PTH : (m ↑ (restr_rel E_t (rf_t ⨾ rmw_t))⁺) (m x') (m y')) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"unfold collect_rel in PTH.\ndestruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (PTH : exists x'0 y'0 : actid,\n  (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x'0 y'0 /\\ m x'0 = m x' /\\ m y'0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"destruct PTH as (x0 & y0 & (PTH & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺.","proofString":"apply clos_trans_mori; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"apply TREQ'' in PTH.\nassert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (X0IN : E_t x0).\napply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE.\nassert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","proofString":"apply ct_begin in PTH.\ndestruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : ((rf_t ⨾ rmw_t) ⨾ (rf_t ⨾ rmw_t)＊) x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","proofString":"destruct PTH as (x1 & (x2 & PTH1 & PTH2) & PTH3).\napply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 x2 : actid) (PTH1 : rf_t x0 x2) (PTH2 : rmw_t x2 x1) (PTH3 : (rf_t ⨾ rmw_t)＊ x1 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","proofString":"apply wf_rfE in PTH1; vauto.\ndestruct PTH1 as (x3 & INE & PTH1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 x2 : actid) (PTH1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x0 x2) (PTH2 : rmw_t x2 x1) (PTH3 : (rf_t ⨾ rmw_t)＊ x1 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","proofString":"destruct PTH1 as (x3 & INE & PTH1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (Y0IN : E_t y0).\napply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","proofString":"apply ct_end in PTH.\ndestruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : ((rf_t ⨾ rmw_t)＊ ⨾ rf_t ⨾ rmw_t) x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","proofString":"destruct PTH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 : actid) (P1 : (rf_t ⨾ rmw_t)＊ x0 x1) (x2 : actid) (P2 : rf_t x1 x2) (P3 : rmw_t x2 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","proofString":"apply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 : actid) (P1 : (rf_t ⨾ rmw_t)＊ x0 x1) (x2 : actid) (P2 : rf_t x1 x2) (P3 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x2 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","proofString":"destruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (EQXX : x0 = x').\napply INJ; vauto.\nassert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) : x0 = x'.","proofString":"apply INJ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) (EQXX : x0 = x') : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"assert (EQYY : y0 = y').\napply INJ; vauto.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) (EQXX : x0 = x') : y0 = y'.","proofString":"apply INJ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PTH : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x') (M2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) (EQXX : x0 = x') (EQYY : y0 = y') : (rf_t ⨾ rmw_t)⁺ x' y'.","proofString":"vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t).","proofString":"assert (sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) as EAA.\nsplit; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear.\nbasic_solver 10.\nassert (sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) as EAA'.\nsplit; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear.\nbasic_solver 10.\nunfold rs.\nrels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘            ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21.\narewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘.","proofString":"split; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear.\nbasic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sb_t ∩ same_loc_t ⊆ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘.","proofString":"rewrite wf_sbE at 1.\nclear.\nbasic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : (⦗E_t⦘ ⨾ sb_t ⨾ ⦗E_t⦘) ∩ same_loc_t ⊆ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘.","proofString":"clear.\nbasic_solver 10."},{"statement":"(⦗E_t⦘ ⨾ sb_t ⨾ ⦗E_t⦘) ∩ same_loc_t ⊆ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘.","proofString":"basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t).","proofString":"assert (sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) as EAA'.\nsplit; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear.\nbasic_solver 10.\nunfold rs.\nrels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘            ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21.\narewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘.","proofString":"split; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear.\nbasic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : sb_s ∩ same_loc_s ⊆ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘.","proofString":"rewrite wf_sbE at 1.\nclear.\nbasic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) ∩ same_loc_s ⊆ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘.","proofString":"clear.\nbasic_solver 10."},{"statement":"(⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) ∩ same_loc_s ⊆ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘.","proofString":"basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t).","proofString":"unfold rs.\nrels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘            ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21.\narewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ (⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘            ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21.\narewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ (⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘            ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21.\narewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"arewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘            ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21.\narewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘.","proofString":"unfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ (⦗R_s ∩₁ Rlx_s⦘ ⨾ sb_s ⨾ ⦗F_s ∩₁ Acq_s⦘ ∪ ⦗Acq_s⦘ ⨾ sb_s\n       ∪ sb_s ⨾ ⦗Rel_s⦘ ∪ ⦗F_s ∩₁ Rel_s⦘ ⨾ sb_s ⨾ ⦗W_s ∩₁ Rlx_s⦘)⁺\n      ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘.","proofString":"rewrite <- ct_step.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ (⦗R_s ∩₁ Rlx_s⦘ ⨾ sb_s ⨾ ⦗F_s ∩₁ Acq_s⦘ ∪ ⦗Acq_s⦘ ⨾ sb_s\n       ∪ sb_s ⨾ ⦗Rel_s⦘ ∪ ⦗F_s ∩₁ Rel_s⦘ ⨾ sb_s ⨾ ⦗W_s ∩₁ Rlx_s⦘)\n      ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘.","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"arewrite ((rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘            ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21.\narewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘.","proofString":"rewrite rtE.\nrewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) ⨾ ⦗E_s \\₁ eq a⦘.","proofString":"rewrite !seq_union_l.\nrewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘ ∪ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ⦗E_s \\₁ eq a⦘\n  ⨾ (⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n     ∪ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘).","proofString":"rewrite seq_union_r.\napply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘ ∪ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘.","proofString":"apply inclusion_union_l.\nclear; basic_solver 21.\narewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘.","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘.","proofString":"arewrite ((rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺).\nrewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (rf_s ⨾ rmw_s)⁺ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺.","proofString":"rewrite ct_begin.\nhahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (rf_s ⨾ rmw_s) ⨾ (rf_s ⨾ rmw_s)＊\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s) ⨾ (rf_s ⨾ rmw_s)＊.","proofString":"hahn_frame_r.\nrewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : rf_s ⨾ rmw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rf_s ⨾ rmw_s.","proofString":"rewrite RF_MAP.\nrewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : m ↑ rf_t ⨾ rmw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ rf_t ⨾ rmw_s.","proofString":"rewrite wf_rfE; vauto.\nrewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ rmw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ rmw_s.","proofString":"rewrite collect_rel_seqi at 1.\nrewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (m ↑ ⦗E_t⦘ ⨾ m ↑ (rf_t ⨾ ⦗E_t⦘)) ⨾ rmw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ rmw_s.","proofString":"rewrite seqA.\nrewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : m ↑ ⦗E_t⦘ ⨾ m ↑ (rf_t ⨾ ⦗E_t⦘) ⨾ rmw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ rmw_s.","proofString":"rewrite MAPEQ.\nhahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : m ↑ ⦗E_t⦘ ⨾ m ↑ (rf_t ⨾ ⦗E_t⦘) ⨾ rmw_s\n⊆ ⦗m ↑₁ E_t⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ rmw_s.","proofString":"hahn_frame_r.\nrewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : m ↑ ⦗E_t⦘ ⨾ m ↑ (rf_t ⨾ ⦗E_t⦘) ⊆ ⦗m ↑₁ E_t⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘).","proofString":"rewrite <- wf_rfE; vauto.\nclear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : m ↑ ⦗E_t⦘ ⨾ m ↑ (rf_t ⨾ ⦗E_t⦘) ⊆ ⦗m ↑₁ E_t⦘ ⨾ m ↑ rf_t.","proofString":"clear; basic_solver 42."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘.","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ rpo_s\n      ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ ⦗E_s \\₁ eq a⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"arewrite (rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗E_s \\₁ eq a⦘       ⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nclear; mode_solver 21.\ndo 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘.","proofString":"clear; mode_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ rpo_s\n      ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"do 2 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘)\n⨾ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘).\nrewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘)\n⨾ (rpo_s ⨾ ⦗E_s \\₁ eq a⦘) ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rewrite RPO_MAP.\nrewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘)\n⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rewrite !seqA.\nrewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rewrite rtE.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ m ↑ rpo_t\n      ⨾ ⦗W_s⦘\n        ⨾ ⦗Rlx_s⦘\n          ⨾ (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ m ↑ rpo_t\n      ⨾ ⦗W_s⦘\n        ⨾ ⦗Rlx_s⦘\n          ⨾ (⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n             ∪ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘)\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rewrite !seq_union_r.\napply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n∪ ⦗E_s \\₁ eq a⦘\n  ⨾ ⦗Rel_s⦘\n    ⨾ ⦗F_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"apply inclusion_union_l.\nrels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"rels.\nintros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"intros x y PTH.\ndestruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y : actid) (PTH : (⦗E_s \\₁ eq a⦘\n ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ ⦗E_s \\₁ eq a⦘) x y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x\n  y.","proofString":"destruct PTH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &                (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (EQ7 & C7))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (C6 : is_rlx lab_s y) (P4 : (m ↑ rpo_t) x2 y) (C5 : is_w lab_s y) (C7 : (E_s \\₁ eq a) y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y.","proofString":"unfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (C6 : is_rlx lab_s y) (P4 : (m ↑ rpo_t) x2 y) (C5 : is_w lab_s y) (C7 : (E_s \\₁ eq a) y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"destruct P4 as (x2' & x5' & P4 & M1 & M2).\nexists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (C6 : is_rlx lab_s y) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = y) (C5 : is_w lab_s y) (C7 : (E_s \\₁ eq a) y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"exists x2', x5'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (C6 : is_rlx lab_s y) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = y) (C5 : is_w lab_s y) (C7 : (E_s \\₁ eq a) y) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' x5' /\\\nm x2' = x2 /\\ m x5' = y.","proofString":"splits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' x5'.","proofString":"unfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : exists z : actid,\n  ⦗E_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗Rel_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗F_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           sb_t z1 z2 /\\\n           (exists z3 : actid,\n              ⦗Rlx_t⦘ z2 z3 /\\\n              (exists z4 : actid,\n                 ⦗W_t⦘ z3 z4 /\\\n                 (fun x y : actid =>\n                  exists z5 : actid, rf_t x z5 /\\ rmw_t z5 y)＊ z4 x5'))))).","proofString":"exists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : ⦗E_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗Rel_t⦘ x2' z /\\\n   (exists z0 : actid,\n      ⦗F_t⦘ z z0 /\\\n      (exists z1 : actid,\n         sb_t z0 z1 /\\\n         (exists z2 : actid,\n            ⦗Rlx_t⦘ z1 z2 /\\\n            (exists z3 : actid,\n               ⦗W_t⦘ z2 z3 /\\\n               (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                 z3 x5'))))).","proofString":"splits.\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : ⦗E_t⦘ x2' x2'.","proofString":"apply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : ⦗E_t⦘ x2' x2'.","proofString":"destruct P4 as (x3' & INE & P4).\nred; split; vauto.\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (x3' : actid) (INE : ⦗E_t⦘ x2' x3') (P4 : (rpo_t ⨾ ⦗E_t⦘) x3' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : ⦗E_t⦘ x2' x2'.","proofString":"red; split; vauto.\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (x3' : actid) (INE : ⦗E_t⦘ x2' x3') (P4 : (rpo_t ⨾ ⦗E_t⦘) x3' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : E_t x2'.","proofString":"apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 x5')))).","proofString":"assert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : E_t x2'.","proofString":"apply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) : E_t x2'.","proofString":"destruct P4 as (x3 & INE & P4); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 x5')))).","proofString":"exists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : ⦗Rel_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗F_t⦘ x2' z /\\\n   (exists z0 : actid,\n      sb_t z z0 /\\\n      (exists z1 : actid,\n         ⦗Rlx_t⦘ z0 z1 /\\\n         (exists z2 : actid,\n            ⦗W_t⦘ z1 z2 /\\\n            (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n              z2 x5')))).","proofString":"splits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : ⦗Rel_t⦘ x2' x2'.","proofString":"apply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : (lab_s ∘ m) x2' = lab_t x2') : ⦗Rel_t⦘ x2' x2'.","proofString":"unfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : lab_s (m x2') = lab_t x2') : ⦗Rel_t⦘ x2' x2'.","proofString":"red; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : lab_s (m x2') = lab_t x2') : is_rel lab_t x2'.","proofString":"unfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : mode_le Orel (mod lab_s (m x2'))) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : lab_s (m x2') = lab_t x2') : mode_le Orel (mod lab_t x2').","proofString":"unfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : mode_le Orel\n  match lab_s (m x2') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (x5' : actid) (C6 : mode_le Orlx\n  match lab_s (m x5') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : lab_s (m x2') = lab_t x2') : mode_le Orel\n  match lab_t x2' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","proofString":"rewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : exists z : actid,\n  ⦗F_t⦘ x2' z /\\\n  (exists z0 : actid,\n     sb_t z z0 /\\\n     (exists z1 : actid,\n        ⦗Rlx_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           ⦗W_t⦘ z1 z2 /\\\n           (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n             z2 x5'))).","proofString":"exists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : ⦗F_t⦘ x2' x2' /\\\n(exists z : actid,\n   sb_t x2' z /\\\n   (exists z0 : actid,\n      ⦗Rlx_t⦘ z z0 /\\\n      (exists z1 : actid,\n         ⦗W_t⦘ z0 z1 /\\\n         (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n           x5'))).","proofString":"splits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : ⦗F_t⦘ x2' x2'.","proofString":"red; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : is_f lab_t x2'.","proofString":"apply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : (lab_s ∘ m) x2' = lab_t x2') : is_f lab_t x2'.","proofString":"unfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : lab_s (m x2') = lab_t x2') : is_f lab_t x2'.","proofString":"unfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : match lab_s (m x2') with\n| Afence _ => true\n| _ => false\nend) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : lab_s (m x2') = lab_t x2') : match lab_t x2' with\n| Afence _ => true\n| _ => false\nend.","proofString":"rewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          x5')).","proofString":"exists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : sb_t x2' x5' /\\\n(exists z : actid,\n   ⦗Rlx_t⦘ x5' z /\\\n   (exists z0 : actid,\n      ⦗W_t⦘ z z0 /\\\n      (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x5')).","proofString":"splits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : sb_t x2' x5'.","proofString":"apply rpo_in_sb; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : exists z : actid,\n  ⦗Rlx_t⦘ x5' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x5').","proofString":"assert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : E_t x5'.","proofString":"apply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') : E_t x5'.","proofString":"destruct P4 as (x3 & (EQ1 & INE1) & (x4                & P' & (EQ2 & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : exists z : actid,\n  ⦗Rlx_t⦘ x5' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x5').","proofString":"exists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : ⦗Rlx_t⦘ x5' x5' /\\\n(exists z : actid,\n   ⦗W_t⦘ x5' z /\\\n   (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z x5').","proofString":"splits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : ⦗Rlx_t⦘ x5' x5'.","proofString":"apply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : (lab_s ∘ m) x5' = lab_t x5') : ⦗Rlx_t⦘ x5' x5'.","proofString":"unfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : ⦗Rlx_t⦘ x5' x5'.","proofString":"unfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : mode_le Orlx\n  match lab_s (m x5') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : ⦗fun a0 : actid =>\n mode_le Orlx\n   match lab_t a0 with\n   | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n   end⦘ x5' x5'.","proofString":"red; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : mode_le Orlx\n  match lab_s (m x5') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : mode_le Orlx\n  match lab_t x5' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","proofString":"rewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : exists z : actid,\n  ⦗W_t⦘ x5' z /\\\n  (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z x5'.","proofString":"exists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : ⦗W_t⦘ x5' x5' /\\\n(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x5' x5'.","proofString":"splits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : ⦗W_t⦘ x5' x5'.","proofString":"red.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : x5' = x5' /\\ is_w lab_t x5'.","proofString":"splits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : is_w lab_t x5'.","proofString":"apply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : (lab_s ∘ m) x5' = lab_t x5') : is_w lab_t x5'.","proofString":"unfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : is_w lab_t x5'.","proofString":"unfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : match lab_s a with\n| Astore _ _ _ _ => true\n| _ => false\nend) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t\n  ∪ (((fun a0 : actid =>\n       match lab_s a0 with\n       | Astore _ _ _ _ => true\n       | _ => false\n       end) ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : match lab_s (m x5') with\n| Astore _ _ _ _ => true\n| _ => false\nend) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : match lab_t x5' with\n| Astore _ _ _ _ => true\n| _ => false\nend.","proofString":"rewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x5' x5'.","proofString":"apply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : (⦗fun _ : actid => True⦘\n ∪ (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺) x5' x5'.","proofString":"left.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C6 : is_rlx lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (E_s \\₁ eq a) (m x5')) (C5 : is_w lab_s (m x5')) (EX : E_t x2') (EX' : E_t x5') : ⦗fun _ : actid => True⦘ x5' x5'.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","proofString":"intros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y : actid) (PATH : (⦗E_s \\₁ eq a⦘\n ⨾ ⦗Rel_s⦘\n   ⨾ ⦗F_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘) x\n  y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x\n  y.","proofString":"destruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2 & ((EQ3 & C3) & (x3 &        (P4 & (x4 & ((EQ5 & C5) & (x5 & ((EQ6 & C6) & (x6 & C7 & (EQ8 & C8)))))))))))))); subst.\nunfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (P4 : (m ↑ rpo_t) x2 x5) (C6 : is_rlx lab_s x5) (C7 : (rf_s ⨾ rmw_s)⁺ x5 y) (C8 : (E_s \\₁ eq a) y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y.","proofString":"unfold collect_rel.\ndestruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (P4 : (m ↑ rpo_t) x2 x5) (C6 : is_rlx lab_s x5) (C7 : (rf_s ⨾ rmw_s)⁺ x5 y) (C8 : (E_s \\₁ eq a) y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"destruct P4 as (x2' & x5' & P4 & M1 & M2).\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (rf_s ⨾ rmw_s)⁺ x5 y) (C8 : (E_s \\₁ eq a) y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"assert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto.\napply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (rf_s ⨾ rmw_s)⁺ x5 y) (C8 : (E_s \\₁ eq a) y) : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺.","proofString":"apply clos_trans_mori; apply write_sw_helper_rf_rmw; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (rf_s ⨾ rmw_s)⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"apply TREQ in C7.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"assert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t).","proofString":"rewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ ⦗E_t⦘ ⨾ (rf_t ⨾ rmw_t) ⨾ ⦗E_t⦘.","proofString":"rewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘.","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"assert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺.","proofString":"split; apply clos_trans_mori; rewrite <- REST; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"apply TREQ' in C7.\napply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x5 : actid) (C5 : is_w lab_s x5) (x2' x5' : actid) (P4 : rpo_t x2' x5') (M1 : m x2' = x2) (M2 : m x5' = x5) (C6 : is_rlx lab_s x5) (C7 : (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺ x5 y) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","proofString":"apply collect_rel_ct_inj in C7; vauto.\nunfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : (m ↑ (restr_rel E_t (rf_t ⨾ rmw_t))⁺) (m x5') y) (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","proofString":"unfold collect_rel in C7.\ndestruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (C7 : exists x' y' : actid,\n  (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x' y' /\\ m x' = m x5' /\\ m y' = y) (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","proofString":"destruct C7 as (x0 & y0 & (C7' & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = m x5') (M2 : m y0 = y) (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","proofString":"assert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = m x5') (M2 : m y0 = y) (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺.","proofString":"apply clos_trans_mori; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = m x5') (M2 : m y0 = y) (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","proofString":"apply TREQ'' in C7'.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (M2 : m y0 = y) (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","proofString":"exists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (M2 : m y0 = y) (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' y0 /\\\nm x2' = m x2' /\\ m y0 = y.","proofString":"splits; vauto.\nunfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' y0.","proofString":"unfold seq.\nexists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists z : actid,\n  ⦗E_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗Rel_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗F_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           sb_t z1 z2 /\\\n           (exists z3 : actid,\n              ⦗Rlx_t⦘ z2 z3 /\\\n              (exists z4 : actid,\n                 ⦗W_t⦘ z3 z4 /\\\n                 (fun x y : actid =>\n                  exists z5 : actid, rf_t x z5 /\\ rmw_t z5 y)＊ z4 y0))))).","proofString":"exists x2'.\nsplits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗E_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗Rel_t⦘ x2' z /\\\n   (exists z0 : actid,\n      ⦗F_t⦘ z z0 /\\\n      (exists z1 : actid,\n         sb_t z0 z1 /\\\n         (exists z2 : actid,\n            ⦗Rlx_t⦘ z1 z2 /\\\n            (exists z3 : actid,\n               ⦗W_t⦘ z2 z3 /\\\n               (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                 z3 y0))))).","proofString":"splits.\napply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nassert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗E_t⦘ x2' x2'.","proofString":"apply wf_rpoE in P4; vauto.\nred; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗E_t⦘ x2' x2'.","proofString":"red; split; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x2'.","proofString":"destruct P4 as (x3 & INE & P4); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 y0)))).","proofString":"assert (EX : E_t x2').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE.\nexists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x2'.","proofString":"apply wf_rpoE in P4; vauto.\ndestruct P4 as (x3 & INE & P4); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x2'.","proofString":"destruct P4 as (x3 & INE & P4); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 y0)))).","proofString":"exists x2'.\nsplits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : ⦗Rel_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗F_t⦘ x2' z /\\\n   (exists z0 : actid,\n      sb_t z z0 /\\\n      (exists z1 : actid,\n         ⦗Rlx_t⦘ z0 z1 /\\\n         (exists z2 : actid,\n            ⦗W_t⦘ z1 z2 /\\\n            (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n              z2 y0)))).","proofString":"splits.\napply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto.\nexists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : ⦗Rel_t⦘ x2' x2'.","proofString":"apply LABS in EX.\nunfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : (lab_s ∘ m) x2' = lab_t x2') : ⦗Rel_t⦘ x2' x2'.","proofString":"unfold compose in EX.\nred; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : lab_s (m x2') = lab_t x2') : ⦗Rel_t⦘ x2' x2'.","proofString":"red; splits; vauto.\nunfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : lab_s (m x2') = lab_t x2') : is_rel lab_t x2'.","proofString":"unfold is_rel in *.\nunfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : mode_le Orel (mod lab_s (m x2'))) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : lab_s (m x2') = lab_t x2') : mode_le Orel (mod lab_t x2').","proofString":"unfold is_rlx, mod in *.\nrewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : mode_le Orel\n  match lab_s (m x2') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : mode_le Orlx\n  match lab_s (m x5') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : lab_s (m x2') = lab_t x2') : mode_le Orel\n  match lab_t x2' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","proofString":"rewrite EX in C2; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : exists z : actid,\n  ⦗F_t⦘ x2' z /\\\n  (exists z0 : actid,\n     sb_t z z0 /\\\n     (exists z1 : actid,\n        ⦗Rlx_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           ⦗W_t⦘ z1 z2 /\\\n           (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n             z2 y0))).","proofString":"exists x2'.\nsplits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : ⦗F_t⦘ x2' x2' /\\\n(exists z : actid,\n   sb_t x2' z /\\\n   (exists z0 : actid,\n      ⦗Rlx_t⦘ z z0 /\\\n      (exists z1 : actid,\n         ⦗W_t⦘ z0 z1 /\\\n         (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n           y0))).","proofString":"splits.\nred; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto.\nexists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : ⦗F_t⦘ x2' x2'.","proofString":"red; splits; vauto.\napply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : is_f lab_t x2'.","proofString":"apply LABS in EX.\nunfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : (lab_s ∘ m) x2' = lab_t x2') : is_f lab_t x2'.","proofString":"unfold compose in EX.\nunfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : lab_s (m x2') = lab_t x2') : is_f lab_t x2'.","proofString":"unfold is_f in *.\nrewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : match lab_s (m x2') with\n| Afence _ => true\n| _ => false\nend) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : lab_s (m x2') = lab_t x2') : match lab_t x2' with\n| Afence _ => true\n| _ => false\nend.","proofString":"rewrite EX in C3; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          y0)).","proofString":"exists x5'.\nsplits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : sb_t x2' x5' /\\\n(exists z : actid,\n   ⦗Rlx_t⦘ x5' z /\\\n   (exists z0 : actid,\n      ⦗W_t⦘ z z0 /\\\n      (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0)).","proofString":"splits.\napply rpo_in_sb; vauto.\nassert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : sb_t x2' x5'.","proofString":"apply rpo_in_sb; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : exists z : actid,\n  ⦗Rlx_t⦘ x5' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0).","proofString":"assert (EX' : E_t x5').\napply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto.\nexists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : E_t x5'.","proofString":"apply wf_rpoE in P4; vauto.\ndestruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') : E_t x5'.","proofString":"destruct P4 as (x3' & (EQ1 & INE1) & (x4'              & P' & (EQ2 & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : exists z : actid,\n  ⦗Rlx_t⦘ x5' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0).","proofString":"exists x5'.\nsplits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : ⦗Rlx_t⦘ x5' x5' /\\\n(exists z : actid,\n   ⦗W_t⦘ x5' z /\\\n   (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z y0).","proofString":"splits.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto.\nexists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : ⦗Rlx_t⦘ x5' x5'.","proofString":"apply LABS in EX'.\nunfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : (lab_s ∘ m) x5' = lab_t x5') : ⦗Rlx_t⦘ x5' x5'.","proofString":"unfold compose in EX'.\nunfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : ⦗Rlx_t⦘ x5' x5'.","proofString":"unfold is_rlx, mod in *.\nred; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : mode_le Orlx\n  match lab_s (m x5') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : ⦗fun a0 : actid =>\n mode_le Orlx\n   match lab_t a0 with\n   | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n   end⦘ x5' x5'.","proofString":"red; splits; vauto.\nrewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : mode_le Orlx\n  match lab_s (m x5') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : mode_le Orlx\n  match lab_t x5' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","proofString":"rewrite EX' in C6; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : exists z : actid,\n  ⦗W_t⦘ x5' z /\\\n  (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z y0.","proofString":"exists x5'.\nsplits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : ⦗W_t⦘ x5' x5' /\\\n(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x5' y0.","proofString":"splits.\nred.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto.\napply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : ⦗W_t⦘ x5' x5'.","proofString":"red.\nsplits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : x5' = x5' /\\ is_w lab_t x5'.","proofString":"splits; vauto.\napply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : is_w lab_t x5'.","proofString":"apply LABS in EX'.\nunfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : (lab_s ∘ m) x5' = lab_t x5') : is_w lab_t x5'.","proofString":"unfold compose in EX'.\nunfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : is_w lab_t x5'.","proofString":"unfold is_w in *.\nrewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : match lab_s a with\n| Astore _ _ _ _ => true\n| _ => false\nend) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t\n  ∪ (((fun a0 : actid =>\n       match lab_s a0 with\n       | Astore _ _ _ _ => true\n       | _ => false\n       end) ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : match lab_s (m x5') with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : lab_s (m x5') = lab_t x5') : match lab_t x5' with\n| Astore _ _ _ _ => true\n| _ => false\nend.","proofString":"rewrite EX' in C5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x5' y0.","proofString":"apply rtE.\nright.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : (⦗fun _ : actid => True⦘\n ∪ (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺) x5' y0.","proofString":"right.\napply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺ x5' y0.","proofString":"apply INJ in M1; vauto.\napply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : E_t x0.","proofString":"apply ct_begin in C7'.\ndestruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 : actid) (C7' : ((rf_t ⨾ rmw_t) ⨾ (rf_t ⨾ rmw_t)＊) x0 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : E_t x0.","proofString":"destruct C7' as (x1 & (x2 & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 x1 x2 : actid) (P1 : rf_t x0 x2) (P2 : rmw_t x2 x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : E_t x0.","proofString":"apply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C3 : is_f lab_s (m x2')) (C1 : (E_s \\₁ eq a) (m x2')) (C2 : is_rel lab_s (m x2')) (x5' : actid) (C5 : is_w lab_s (m x5')) (P4 : rpo_t x2' x5') (x0 y0 x1 x2 : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x0 x2) (P2 : rmw_t x2 x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (M1 : m x0 = m x5') (C6 : is_rlx lab_s (m x5')) (C8 : (E_s \\₁ eq a) (m y0)) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (EX : E_t x2') (EX' : E_t x5') : E_t x0.","proofString":"destruct P1 as (x3 & INE & P1); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","proofString":"unfold set_minus.\nsplit; [|basic_solver].\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sw_s ≡ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ sw_s.","proofString":"split; [|basic_solver].\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sw_s ⊆ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ sw_s.","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : (⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ ⨾ sw_s) x y.","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : exists z : actid, ⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x z /\\ sw_s z y.","proofString":"exists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : ⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x x /\\ sw_s x y.","proofString":"split; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : ⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x x.","proofString":"split; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : E_s x /\\ a <> x.","proofString":"split.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : E_s x.","proofString":"apply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) : E_s x.","proofString":"destruct PATH as (x' & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y x' : actid) (INE : ⦗E_s⦘ x x') (REST : (sw_s ⨾ ⦗E_s⦘) x' y) : E_s x.","proofString":"apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : a <> x.","proofString":"assert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply write_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅.","proofString":"apply write_codom_sw with (m := m); eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) : a <> x.","proofString":"intros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (F : a = x) : False.","proofString":"subst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) : False.","proofString":"assert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s).","proofString":"intros z EQ.\nsubst.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) (z : actid) (EQ : y = z) : codom_rel (⦗eq x⦘ ⨾ sw_s) z.","proofString":"subst.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (z : actid) (PATH : sw_s x z) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) : codom_rel (⦗eq x⦘ ⨾ sw_s) z.","proofString":"basic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) : False.","proofString":"destruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq x⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) : False.","proofString":"rewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (IN1 : eq y ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) : False.","proofString":"destruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : rf_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rf_s.","proofString":"rewrite RF_MAP.\nrewrite wf_rfE; eauto.\nrewrite MAPEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : m ↑ rf_t ⊆ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ rf_t.","proofString":"rewrite wf_rfE; eauto.\nrewrite MAPEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘).","proofString":"rewrite MAPEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆ ⦗m ↑₁ E_t⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘).","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t.","proofString":"rewrite wf_releaseE; vauto.\nrewrite seq_union_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : codom_rel (⦗E_t⦘ ⨾ (⦗W_t ∩₁ Rel_t⦘ ∪ ⦗E_t⦘ ⨾ release_t ⨾ ⦗E_t⦘)) ⊆₁ E_t.","proofString":"rewrite seq_union_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : codom_rel (⦗E_t⦘ ⨾ ⦗W_t ∩₁ Rel_t⦘ ∪ ⦗E_t⦘ ⨾ ⦗E_t⦘ ⨾ release_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) : inj_dom\n  (codom_rel (⦗E_t⦘ ⨾ release_t)\n   ∪₁ dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘)) m.","proofString":"assert (IN2 : dom_rel (rf_t ⨾ ⦗fun a0 : actid => is_rlx lab_t a0⦘ ⨾            (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘) ⊆₁ E_t).\ninduction 1 as (x0 & COND).\ndestruct COND as (x1 & P1 & P2).\napply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) : dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) ⊆₁ E_t.","proofString":"induction 1 as (x0 & COND).\ndestruct COND as (x1 & P1 & P2).\napply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 : actid) (COND : (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x x0) : E_t x.","proofString":"destruct COND as (x1 & P1 & P2).\napply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 : actid) (P1 : rf_t x x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0) : E_t x.","proofString":"apply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0) : E_t x.","proofString":"destruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 x2 : actid) (INE : ⦗E_t⦘ x x2) (REST : (rf_t ⨾ ⦗E_t⦘) x2 x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0) : E_t x.","proofString":"apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (IN2 : dom_rel\n  (rf_t\n   ⨾ ⦗Rlx_t⦘\n     ⨾ (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘)\n⊆₁ E_t) : inj_dom\n  (codom_rel (⦗E_t⦘ ⨾ release_t)\n   ∪₁ dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘)) m.","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (IN2 : dom_rel\n  (rf_t\n   ⨾ ⦗Rlx_t⦘\n     ⨾ (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘)\n⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ sw_s ⨾ ⦗eq a⦘.","proofString":"rewrite wf_swE; eauto.\nrewrite !seqA.\nrewrite <- !seq_union_r.\ndo 2 hahn_frame_l.\nintros x y INE.\ndestruct INE as (z & INE); subst.\nunfold seq.\nexists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘\n⊆ (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) ⨾ ⦗E_s \\₁ eq a⦘ ∪ (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) ⨾ ⦗eq a⦘.","proofString":"rewrite !seqA.\nrewrite <- !seq_union_r.\ndo 2 hahn_frame_l.\nintros x y INE.\ndestruct INE as (z & INE); subst.\nunfold seq.\nexists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘\n⊆ ⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘ ⨾ ⦗E_s \\₁ eq a⦘ ∪ ⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘ ⨾ ⦗eq a⦘.","proofString":"rewrite <- !seq_union_r.\ndo 2 hahn_frame_l.\nintros x y INE.\ndestruct INE as (z & INE); subst.\nunfold seq.\nexists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘ ⊆ ⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘ ⨾ (⦗E_s \\₁ eq a⦘ ∪ ⦗eq a⦘).","proofString":"do 2 hahn_frame_l.\nintros x y INE.\ndestruct INE as (z & INE); subst.\nunfold seq.\nexists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗E_s⦘ ⊆ ⦗E_s⦘ ⨾ (⦗E_s \\₁ eq a⦘ ∪ ⦗eq a⦘).","proofString":"intros x y INE.\ndestruct INE as (z & INE); subst.\nunfold seq.\nexists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (INE : ⦗E_s⦘ x y) : (⦗E_s⦘ ⨾ (⦗E_s \\₁ eq a⦘ ∪ ⦗eq a⦘)) x y.","proofString":"destruct INE as (z & INE); subst.\nunfold seq.\nexists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) : (⦗E_s⦘ ⨾ (⦗E_s \\₁ eq a⦘ ∪ ⦗eq a⦘)) y y.","proofString":"unfold seq.\nexists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) : exists z : actid, ⦗E_s⦘ y z /\\ (⦗E_s \\₁ eq a⦘ ∪ ⦗eq a⦘) z y.","proofString":"exists y; eauto.\nsplit; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) : ⦗E_s⦘ y y /\\ (⦗E_s \\₁ eq a⦘ ∪ ⦗eq a⦘) y y.","proofString":"split; vauto.\nunfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) : (⦗E_s \\₁ eq a⦘ ∪ ⦗eq a⦘) y y.","proofString":"unfold union.\ndestruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) : ⦗E_s \\₁ eq a⦘ y y \\/ ⦗eq a⦘ y y.","proofString":"destruct classic with (P := eq y a); vauto.\nleft.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) (H : y <> a) : ⦗E_s \\₁ eq a⦘ y y \\/ ⦗eq a⦘ y y.","proofString":"left.\nunfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) (H : y <> a) : ⦗E_s \\₁ eq a⦘ y y.","proofString":"unfold set_minus.\nsplit; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) (H : y <> a) : ⦗fun x : actid => E_s x /\\ a <> x⦘ y y.","proofString":"split; vauto.\nsplit; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) (H : y <> a) : E_s y /\\ a <> y.","proofString":"split; vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s y) (H : y <> a) : a <> y.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel (⦗eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺) ≡₁ ∅.","proofString":"rewrite ct_begin.\nrewrite <- seqA.\nrewrite !seq_union_r.\nrewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nsplit; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  (⦗eq a⦘\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n≡₁ ∅.","proofString":"rewrite <- seqA.\nrewrite !seq_union_r.\nrewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nsplit; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s))\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"rewrite !seq_union_r.\nrewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nsplit; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗eq a⦘ ⨾ rpo_s ∪ ⦗eq a⦘ ⨾ sw_s)\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"rewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nsplit; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n   ∪ (⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n   ∪ (⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"rewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nsplit; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"assert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nsplit; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"apply empty_seq_codom; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"assert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nsplit; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅.","proofString":"split; [|basic_solver].\nrewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅.","proofString":"rewrite write_sw_sub; eauto.\nunfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel (⦗eq a⦘ ⨾ (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘)) ⊆₁ ∅.","proofString":"unfold codom_rel.\nintros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : (fun y : actid => exists x : actid, (⦗eq a⦘ ⨾ (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘)) x y)\n⊆₁ ∅.","proofString":"intros x COND.\ndestruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x : actid) (COND : exists x0 : actid, (⦗eq a⦘ ⨾ (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘)) x0 x) : ∅ x.","proofString":"destruct COND as (x0 & x1 & C1 & C2).\nassert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (C2 : (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘) x1 x) : ∅ x.","proofString":"assert (IN : (m ↑₁ E_t) x1).\ndestruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver.\napply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (C2 : (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘) x1 x) : (m ↑₁ E_t) x1.","proofString":"destruct C2 as [P1 | P2].\ndestruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE.\ndestruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (P1 : (m ↑ sw_t) x1 x) : (m ↑₁ E_t) x1.","proofString":"destruct P1 as (x1' & x' & C2 & M1 & M2).\nunfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x1' x' : actid) (C2 : sw_t x1' x') (M1 : m x1' = x1) (M2 : m x' = x) : (m ↑₁ E_t) x1.","proofString":"unfold set_collect.\nexists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x1' x' : actid) (C2 : sw_t x1' x') (M1 : m x1' = x1) (M2 : m x' = x) : exists y : actid, E_t y /\\ m y = x1.","proofString":"exists x1'.\nsplit; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x1' x' : actid) (C2 : sw_t x1' x') (M1 : m x1' = x1) (M2 : m x' = x) : E_t x1' /\\ m x1' = x1.","proofString":"split; vauto.\napply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x0 x1' : actid) (C1 : ⦗eq a⦘ x0 (m x1')) (x' : actid) (C2 : sw_t x1' x') : E_t x1'.","proofString":"apply wf_swE in C2; vauto.\ndestruct C2 as (x2 & INE & C2); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x0 x1' : actid) (C1 : ⦗eq a⦘ x0 (m x1')) (x' : actid) (C2 : (⦗E_t⦘ ⨾ sw_t ⨾ ⦗E_t⦘) x1' x') : E_t x1'.","proofString":"destruct C2 as (x2 & INE & C2); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (P2 : (sw_s ⨾ ⦗eq a⦘) x1 x) : (m ↑₁ E_t) x1.","proofString":"destruct P2 as (x2 & P2 & EQA).\nassert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x2 : actid) (P2 : sw_s x1 x2) (EQA : ⦗eq a⦘ x2 x) : (m ↑₁ E_t) x1.","proofString":"assert (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2).\nunfold seq.\nexists x1.\nsplit; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x2 : actid) (P2 : sw_s x1 x2) (EQA : ⦗eq a⦘ x2 x) : (⦗eq a⦘ ⨾ sw_s) x0 x2.","proofString":"unfold seq.\nexists x1.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x2 : actid) (P2 : sw_s x1 x2) (EQA : ⦗eq a⦘ x2 x) : exists z : actid, ⦗eq a⦘ x0 z /\\ sw_s z x2.","proofString":"exists x1.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x2 : actid) (P2 : sw_s x1 x2) (EQA : ⦗eq a⦘ x2 x) : ⦗eq a⦘ x0 x1 /\\ sw_s x1 x2.","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x2 : actid) (P2 : sw_s x1 x2) (EQA : ⦗eq a⦘ x2 x) (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2) : (m ↑₁ E_t) x1.","proofString":"destruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\ndestruct IN1 with x2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x2 : actid) (P2 : sw_s x1 x2) (EQA : ⦗eq a⦘ x2 x) (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : (m ↑₁ E_t) x1.","proofString":"destruct IN1 with x2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (x2 : actid) (P2 : sw_s x1 x2) (EQA : ⦗eq a⦘ x2 x) (PATH : (⦗eq a⦘ ⨾ sw_s) x0 x2) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : codom_rel (⦗eq a⦘ ⨾ sw_s) x2.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (C2 : (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘) x1 x) (IN : (m ↑₁ E_t) x1) : ∅ x.","proofString":"apply acts_set_helper in IN; eauto.\ndestruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (C1 : ⦗eq a⦘ x0 x1) (C2 : (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘) x1 x) (IN : (E_s \\₁ eq a) x1) : ∅ x.","proofString":"destruct C1 as (EQ1 & EQ2).\ndesf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x x0 x1 : actid) (EQ1 : x0 = x1) (EQ2 : a = x0) (C2 : (m ↑ sw_t ∪ sw_s ⨾ ⦗eq a⦘) x1 x) (IN : (E_s \\₁ eq a) x1) : ∅ x.","proofString":"desf.\ndestruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_W : is_w lab_s x1) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x1) ∩₁ same_loc_s x1) × eq x1) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq x1⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x : actid) (IN : (E_s \\₁ eq x1) x1) (C2 : (m ↑ sw_t ∪ sw_s ⨾ ⦗eq x1⦘) x1 x) : ∅ x.","proofString":"destruct IN.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_W : is_w lab_s x1) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x1) ∩₁ same_loc_s x1) × eq x1) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq x1⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (x : actid) (H : E_s x1) (H0 : x1 <> x1) (C2 : (m ↑ sw_t ∪ sw_s ⨾ ⦗eq x1⦘) x1 x) : ∅ x.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"assert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"apply empty_seq_codom; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"assert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"assert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"apply empty_seq_codom; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (EMP5 : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","proofString":"rewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rhb_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rhb_s ⨾ ⦗E_s \\₁ eq a⦘.","proofString":"hahn_frame_r.\nunfold rhb.\nrewrite ct_begin.\nhahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rhb_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rhb_s.","proofString":"unfold rhb.\nrewrite ct_begin.\nhahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺.","proofString":"rewrite ct_begin.\nhahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n⊆ ⦗E_s \\₁ eq a⦘\n  ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊.","proofString":"hahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s).","proofString":"rewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","proofString":"apply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","proofString":"apply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s.","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s) x y.","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ (sb_s ∩ same_loc_s) z y.","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x /\\ (sb_s ∩ same_loc_s) x y.","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x.","proofString":"red; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"assert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"destruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : sb_s x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"apply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"destruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (E_s \\₁ eq a) x'.","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : a <> x'.","proofString":"intros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","proofString":"unfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","proofString":"destruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","proofString":"destruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y.","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x' y.","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : ⦗eq x'⦘ x' x' /\\ (sb_s ∩ same_loc_s) x' y.","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rpo_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ rpo_s) x y.","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ rpo_s z y.","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ rpo_s x y.","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x.","proofString":"red; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (E_s \\₁ eq a) x.","proofString":"assert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","proofString":"apply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) x y) (PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","proofString":"destruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (E_s \\₁ eq a) x'.","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : a <> x'.","proofString":"intros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","proofString":"unfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","proofString":"destruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","proofString":"destruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y.","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (⦗eq x'⦘ ⨾ rpo_s) x' y.","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : ⦗eq x'⦘ x' x' /\\ rpo_s x' y.","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ sw_s) x y.","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ sw_s z y.","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ sw_s x y.","proofString":"split; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x.","proofString":"red; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (E_s \\₁ eq a) x.","proofString":"destruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : (E_s \\₁ eq a) x.","proofString":"unfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : E_s x.","proofString":"apply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : E_s x.","proofString":"destruct PATH as (x0 & INE & PATH); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : a <> x.","proofString":"intros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (PATH : sw_s x y) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ sw_s) ⊆₁ ∅) : False.","proofString":"destruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (PATH : sw_s x y) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ sw_s) ⊆₁ ∅) : codom_rel (⦗eq x⦘ ⨾ sw_s) y.","proofString":"basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s).","proofString":"unfold rhb.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s).","proofString":"rewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","proofString":"apply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","proofString":"apply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s.","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s) x y.","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ (sb_s ∩ same_loc_s) z y.","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x /\\ (sb_s ∩ same_loc_s) x y.","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x.","proofString":"red; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"assert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"destruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : sb_s x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"apply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","proofString":"destruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (E_s \\₁ eq a) x'.","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : a <> x'.","proofString":"intros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","proofString":"unfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","proofString":"destruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","proofString":"destruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y.","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x' y.","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : ⦗eq x'⦘ x' x' /\\ (sb_s ∩ same_loc_s) x' y.","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rpo_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ rpo_s) x y.","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ rpo_s z y.","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ rpo_s x y.","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x.","proofString":"red; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (E_s \\₁ eq a) x.","proofString":"assert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","proofString":"apply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) x y) (PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","proofString":"destruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (E_s \\₁ eq a) x'.","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : a <> x'.","proofString":"intros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","proofString":"unfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","proofString":"destruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","proofString":"destruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y.","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (⦗eq x'⦘ ⨾ rpo_s) x' y.","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_W : is_w lab_s x') (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x') ∩₁ same_loc_s x') × eq x') (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : ⦗eq x'⦘ x' x' /\\ rpo_s x' y.","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ sw_s) x y.","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ sw_s z y.","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ sw_s x y.","proofString":"split; vauto.\nred; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x.","proofString":"red; split; vauto.\ndestruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (E_s \\₁ eq a) x.","proofString":"destruct write_codom_sw with (m := m) as (IN1 & IN2); vauto.\nunfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : (E_s \\₁ eq a) x.","proofString":"unfold set_minus; split.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nintros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : E_s x.","proofString":"apply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & INE & PATH); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : E_s x.","proofString":"destruct PATH as (x0 & INE & PATH); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq a⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ sw_s)) : a <> x.","proofString":"intros F; subst.\ndestruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (PATH : sw_s x y) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ sw_s) ⊆₁ ∅) : False.","proofString":"destruct IN1 with y.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (PATH : sw_s x y) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ sw_s) ⊆₁ ∅) : codom_rel (⦗eq x⦘ ⨾ sw_s) y.","proofString":"basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n∪ sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t).","proofString":"rewrite !collect_rel_union.\napply union_mori.\napply union_mori.\nrewrite SB_SL_MAP.\nclear; basic_solver.\nrewrite RPO_MAP.\nclear; basic_solver.\nrewrite write_sw_sub_helper; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n∪ sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t) ∪ m ↑ rpo_t ∪ m ↑ sw_t.","proofString":"apply union_mori.\napply union_mori.\nrewrite SB_SL_MAP.\nclear; basic_solver.\nrewrite RPO_MAP.\nclear; basic_solver.\nrewrite write_sw_sub_helper; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t) ∪ m ↑ rpo_t.","proofString":"apply union_mori.\nrewrite SB_SL_MAP.\nclear; basic_solver.\nrewrite RPO_MAP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t).","proofString":"rewrite SB_SL_MAP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ (sb_t ∩ same_loc_t) ⊆ m ↑ (sb_t ∩ same_loc_t).","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t.","proofString":"rewrite RPO_MAP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rpo_t ⊆ m ↑ rpo_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ sw_t.","proofString":"rewrite write_sw_sub_helper; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ sw_t ⊆ m ↑ sw_t.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"assert (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘                ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nrewrite write_rhb_fin; vauto.\nintros x y HH.\nunfold collect_rel in *.\ndestruct HH as (x' & y' & (H1 & H2 & H3)).\nexists x', y'.\nsplits; vauto.\nassert (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘                ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nassert (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺            ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nintros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto.\nrewrite <- TRIN at 2.\napply seq_mori; vauto.\nassert (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺                ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\napply inclusion_t_ind_right; vauto.\nassert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"rewrite write_rhb_fin; vauto.\nintros x y HH.\nunfold collect_rel in *.\ndestruct HH as (x' & y' & (H1 & H2 & H3)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"intros x y HH.\nunfold collect_rel in *.\ndestruct HH as (x' & y' & (H1 & H2 & H3)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (HH : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)) x y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","proofString":"unfold collect_rel in *.\ndestruct HH as (x' & y' & (H1 & H2 & H3)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x' y' : actid, rpo_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x' y' : actid, (sb_t ∩ same_loc_t) x' y' /\\ m x' = x0 /\\ m y' = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, rf_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, co_t x' y' /\\ m x' = x0 /\\ m y' = y0)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, rmw_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (HH : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y' /\\ m x' = x /\\ m y' = y) : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","proofString":"destruct HH as (x' & y' & (H1 & H2 & H3)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rpo_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid,\n     (sb_t ∩ same_loc_t) x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rf_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, co_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rmw_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' y' : actid) (H1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y') (H2 : m x' = x) (H3 : m y' = y) : exists x'0 y'0 : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y'0 /\\ m x'0 = x /\\ m y'0 = y.","proofString":"exists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rpo_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid,\n     (sb_t ∩ same_loc_t) x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rf_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, co_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)\n  ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rmw_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' y' : actid) (H1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y') (H2 : m x' = x) (H3 : m y' = y) : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"assert (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘                ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nassert (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺            ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nintros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto.\nrewrite <- TRIN at 2.\napply seq_mori; vauto.\nassert (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺                ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\napply inclusion_t_ind_right; vauto.\nassert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"assert (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺            ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nintros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto.\nrewrite <- TRIN at 2.\napply seq_mori; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"intros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (PATH : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","proofString":"destruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x x0) (P2 : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x0 y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","proofString":"unfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = x0) (P2 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x0 /\\ m y' = y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","proofString":"unfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = x0) (P2 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x0 /\\ m y' = y) : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","proofString":"destruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (P2 : exists x'0 y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y' /\\ m x'0 = x0 /\\ m y' = y) : exists x'0 y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y' /\\ m x'0 = x /\\ m y' = y.","proofString":"destruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y) : exists x'0 y'0 : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y'0 /\\ m x'0 = x /\\ m y'0 = y.","proofString":"exists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y) : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","proofString":"splits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'.","proofString":"assert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : x0'' = x0'.","proofString":"apply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0''.","proofString":"apply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊)\n  x0'' y') (M3 : m x0'' = m x0') : E_t x0''.","proofString":"destruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x0'' x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0') : E_t x0''.","proofString":"apply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 : actid) (P2 : (⦗E_t⦘ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x0'' x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0') : E_t x0''.","proofString":"destruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 x2 : actid) (INE : ⦗E_t⦘ x0'' x2) (REST : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x2 x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0') : E_t x0''.","proofString":"apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","proofString":"apply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)) x'\n  x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","proofString":"destruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' x1 : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x' x1) (P1' : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x1 x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","proofString":"apply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' x1 : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x' x1) (P1' : (⦗E_t⦘ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x1 x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","proofString":"destruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') (EQ : x0'' = x0') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'.","proofString":"subst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'.","proofString":"apply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)\n  x' y'.","proofString":"unfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : exists z : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' z /\\\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ z y'.","proofString":"exists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0' /\\\n(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y'.","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"rewrite <- TRIN at 2.\napply seq_mori; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n  ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"apply seq_mori; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"assert (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺                ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\napply inclusion_t_ind_right; vauto.\nassert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"apply inclusion_t_ind_right; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"assert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺.","proofString":"induction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x0) (P2 : ⦗E_s \\₁ eq a⦘ x0 y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y.","proofString":"destruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (COND : (E_s \\₁ eq a) y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y.","proofString":"induction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y.","proofString":"apply ct_step.\nunfold seq.\nexists y.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘) x y.","proofString":"unfold seq.\nexists y.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : exists z : actid, (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x z /\\ ⦗E_s \\₁ eq a⦘ z y.","proofString":"exists y.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y /\\ ⦗E_s \\₁ eq a⦘ y y.","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (P1_2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ y z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","proofString":"apply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (P1_2 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) y\n  z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","proofString":"destruct P1_2 as (x0 & P1 & P2).\neapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (x0 : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) y x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","proofString":"eapply write_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (x0 : actid) (P1 : (⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)) y x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","proofString":"destruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : (E_s \\₁ eq a) x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","proofString":"apply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","proofString":"apply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","proofString":"apply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : (((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n ⨾ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺) x z.","proofString":"unfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : exists z0 : actid,\n  (fun x2 y : actid =>\n   exists z1 : actid,\n     (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z1 /\\ ⦗E_s \\₁ eq a⦘ z1 y)⁺ x z0 /\\\n  (fun x2 y : actid =>\n   exists z1 : actid,\n     (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z1 /\\ ⦗E_s \\₁ eq a⦘ z1 y)⁺ z0 z.","proofString":"exists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : (fun x2 y : actid =>\n exists z0 : actid,\n   (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z0 /\\ ⦗E_s \\₁ eq a⦘ z0 y)⁺ x x1 /\\\n(fun x2 y : actid =>\n exists z0 : actid,\n   (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z0 /\\ ⦗E_s \\₁ eq a⦘ z0 y)⁺ x1 z.","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","proofString":"rewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : irreflexive hb_s.","proofString":"rewrite hb_helper; eauto.\nrewrite irreflexive_union.\nsplit.\napply sb_irr; eauto.\nintros x PATH.\ndestruct classic with (P := (E_s \\₁ eq a) x) as [EQ | EQ].\nassert (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x).\ndo 2 unfold seq.\nexists x; split; vauto.\nassert (VERT' : (m ↑ rhb_t) x x).\napply write_rhb_sub; eauto.\nassert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22.\nassert (EQA : eq a x).\nassert (ALTNIN : ~ (m ↑₁ E_t) x).\nintros NEG.\napply acts_set_helper in NEG; eauto.\nunfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver.\nrewrite <- EQA in EQ.\nassert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : irreflexive (sb_s ∪ rhb_s).","proofString":"rewrite irreflexive_union.\nsplit.\napply sb_irr; eauto.\nintros x PATH.\ndestruct classic with (P := (E_s \\₁ eq a) x) as [EQ | EQ].\nassert (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x).\ndo 2 unfold seq.\nexists x; split; vauto.\nassert (VERT' : (m ↑ rhb_t) x x).\napply write_rhb_sub; eauto.\nassert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22.\nassert (EQA : eq a x).\nassert (ALTNIN : ~ (m ↑₁ E_t) x).\nintros NEG.\napply acts_set_helper in NEG; eauto.\nunfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver.\nrewrite <- EQA in EQ.\nassert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : irreflexive sb_s /\\ irreflexive rhb_s.","proofString":"split.\napply sb_irr; eauto.\nintros x PATH.\ndestruct classic with (P := (E_s \\₁ eq a) x) as [EQ | EQ].\nassert (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x).\ndo 2 unfold seq.\nexists x; split; vauto.\nassert (VERT' : (m ↑ rhb_t) x x).\napply write_rhb_sub; eauto.\nassert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22.\nassert (EQA : eq a x).\nassert (ALTNIN : ~ (m ↑₁ E_t) x).\nintros NEG.\napply acts_set_helper in NEG; eauto.\nunfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver.\nrewrite <- EQA in EQ.\nassert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : irreflexive sb_s.","proofString":"apply sb_irr; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : irreflexive rhb_s.","proofString":"intros x PATH.\ndestruct classic with (P := (E_s \\₁ eq a) x) as [EQ | EQ].\nassert (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x).\ndo 2 unfold seq.\nexists x; split; vauto.\nassert (VERT' : (m ↑ rhb_t) x x).\napply write_rhb_sub; eauto.\nassert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22.\nassert (EQA : eq a x).\nassert (ALTNIN : ~ (m ↑₁ E_t) x).\nintros NEG.\napply acts_set_helper in NEG; eauto.\nunfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver.\nrewrite <- EQA in EQ.\nassert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) : False.","proofString":"destruct classic with (P := (E_s \\₁ eq a) x) as [EQ | EQ].\nassert (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x).\ndo 2 unfold seq.\nexists x; split; vauto.\nassert (VERT' : (m ↑ rhb_t) x x).\napply write_rhb_sub; eauto.\nassert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22.\nassert (EQA : eq a x).\nassert (ALTNIN : ~ (m ↑₁ E_t) x).\nintros NEG.\napply acts_set_helper in NEG; eauto.\nunfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver.\nrewrite <- EQA in EQ.\nassert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) : False.","proofString":"assert (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x).\ndo 2 unfold seq.\nexists x; split; vauto.\nassert (VERT' : (m ↑ rhb_t) x x).\napply write_rhb_sub; eauto.\nassert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x.","proofString":"do 2 unfold seq.\nexists x; split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) : exists z : actid, rhb_s x z /\\ ⦗E_s \\₁ eq a⦘ z x.","proofString":"exists x; split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) : False.","proofString":"assert (VERT' : (m ↑ rhb_t) x x).\napply write_rhb_sub; eauto.\nassert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) : (m ↑ rhb_t) x x.","proofString":"apply write_rhb_sub; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) : False.","proofString":"assert (IRR : irreflexive rhb_t).\napply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto.\nassert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) : irreflexive rhb_t.","proofString":"apply irreflexive_inclusion with (r' := hb_t); eauto.\napply rhb_in_hb; eauto.\ndestruct CONS.\napply hb_irr; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) : rhb_t ⊆ hb_t.","proofString":"apply rhb_in_hb; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) : irreflexive hb_t.","proofString":"destruct CONS.\napply hb_irr; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : irreflexive (hb_t ⨾ eco_t^?)) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) : irreflexive hb_t.","proofString":"apply hb_irr; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) : False.","proofString":"assert (REST : (rhb_t) ≡ restr_rel E_t (rhb_t)).\nrewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21.\nassert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) : rhb_t ≡ restr_rel E_t rhb_t.","proofString":"rewrite restr_relE.\nrewrite wf_rhbE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) : rhb_t ≡ ⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘.","proofString":"rewrite wf_rhbE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) : ⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘ ≡ ⦗E_t⦘ ⨾ (⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘.","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) (REST : rhb_t ≡ restr_rel E_t rhb_t) : False.","proofString":"assert (IRR' : irreflexive (restr_rel E_t (rhb_t))).\nrewrite <- REST.\napply IRR.\nassert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) (REST : rhb_t ≡ restr_rel E_t rhb_t) : irreflexive (restr_rel E_t rhb_t).","proofString":"rewrite <- REST.\napply IRR."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) (REST : rhb_t ≡ restr_rel E_t rhb_t) : irreflexive rhb_t.","proofString":"apply IRR."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) (REST : rhb_t ≡ restr_rel E_t rhb_t) (IRR' : irreflexive (restr_rel E_t rhb_t)) : False.","proofString":"assert (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)).\napply collect_rel_irr_inj; eauto.\nrewrite <- REST in IRR''.\nbasic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) (REST : rhb_t ≡ restr_rel E_t rhb_t) (IRR' : irreflexive (restr_rel E_t rhb_t)) : irreflexive (m ↑ restr_rel E_t rhb_t).","proofString":"apply collect_rel_irr_inj; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) (REST : rhb_t ≡ restr_rel E_t rhb_t) (IRR' : irreflexive (restr_rel E_t rhb_t)) (IRR'' : irreflexive (m ↑ restr_rel E_t rhb_t)) : False.","proofString":"rewrite <- REST in IRR''.\nbasic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : (E_s \\₁ eq a) x) (VERT : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) x x) (VERT' : (m ↑ rhb_t) x x) (IRR : irreflexive rhb_t) (REST : rhb_t ≡ restr_rel E_t rhb_t) (IRR' : irreflexive (restr_rel E_t rhb_t)) (IRR'' : irreflexive (m ↑ rhb_t)) : False.","proofString":"basic_solver 22."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) x) : False.","proofString":"assert (EQA : eq a x).\nassert (ALTNIN : ~ (m ↑₁ E_t) x).\nintros NEG.\napply acts_set_helper in NEG; eauto.\nunfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver.\nrewrite <- EQA in EQ.\nassert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) x) : a = x.","proofString":"assert (ALTNIN : ~ (m ↑₁ E_t) x).\nintros NEG.\napply acts_set_helper in NEG; eauto.\nunfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) x) : ~ (m ↑₁ E_t) x.","proofString":"intros NEG.\napply acts_set_helper in NEG; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) x) (NEG : (m ↑₁ E_t) x) : False.","proofString":"apply acts_set_helper in NEG; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) x) (ALTNIN : ~ (m ↑₁ E_t) x) : a = x.","proofString":"unfold set_minus in EQ.\napply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s x /\\ a <> x)) (ALTNIN : ~ (m ↑₁ E_t) x) : a = x.","proofString":"apply not_and_or in EQ.\ndestruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ E_s x \\/ ~ a <> x) (ALTNIN : ~ (m ↑₁ E_t) x) : a = x.","proofString":"destruct EQ as [NOTIN | NEQ].\nassert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE.\nunfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NOTIN : ~ E_s x) (ALTNIN : ~ (m ↑₁ E_t) x) : a = x.","proofString":"assert (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘).\nrewrite wf_rhbE; eauto.\nclear; basic_solver.\napply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NOTIN : ~ E_s x) (ALTNIN : ~ (m ↑₁ E_t) x) : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘.","proofString":"rewrite wf_rhbE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NOTIN : ~ E_s x) (ALTNIN : ~ (m ↑₁ E_t) x) : ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘ ≡ ⦗E_s⦘ ⨾ (⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) ⨾ ⦗E_s⦘.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NOTIN : ~ E_s x) (ALTNIN : ~ (m ↑₁ E_t) x) (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) : a = x.","proofString":"apply G in PATH.\nexfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : (⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) x x) (NOTIN : ~ E_s x) (ALTNIN : ~ (m ↑₁ E_t) x) (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) : a = x.","proofString":"exfalso.\napply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : (⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) x x) (NOTIN : ~ E_s x) (ALTNIN : ~ (m ↑₁ E_t) x) (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) : False.","proofString":"apply NOTIN.\ndestruct PATH as (x' & INE & REST); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : (⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) x x) (NOTIN : ~ E_s x) (ALTNIN : ~ (m ↑₁ E_t) x) (G : rhb_s ≡ ⦗E_s⦘ ⨾ rhb_s ⨾ ⦗E_s⦘) : E_s x.","proofString":"destruct PATH as (x' & INE & REST); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NEQ : ~ a <> x) (ALTNIN : ~ (m ↑₁ E_t) x) : a = x.","proofString":"unfold not in NEQ.\ndestruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NEQ : (a = x -> False) -> False) (ALTNIN : ~ (m ↑₁ E_t) x) : a = x.","proofString":"destruct classic with (P := eq a x) as [EQ' | EQ'].\nbasic_solver.\nexfalso.\napply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NEQ : (a = x -> False) -> False) (ALTNIN : ~ (m ↑₁ E_t) x) (EQ' : a = x) : a = x.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NEQ : (a = x -> False) -> False) (ALTNIN : ~ (m ↑₁ E_t) x) (EQ' : a <> x) : a = x.","proofString":"exfalso.\napply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NEQ : (a = x -> False) -> False) (ALTNIN : ~ (m ↑₁ E_t) x) (EQ' : a <> x) : False.","proofString":"apply NEQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (NEQ : (a = x -> False) -> False) (ALTNIN : ~ (m ↑₁ E_t) x) (EQ' : a <> x) : a = x -> False.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) x) (EQA : a = x) : False.","proofString":"rewrite <- EQA in EQ.\nassert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) : False.","proofString":"assert (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅).\napply write_rhb_codom with (m := m); eauto.\nunfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅.","proofString":"apply write_rhb_codom with (m := m); eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) (CD : codom_rel (⦗eq a⦘ ⨾ rhb_s) ≡₁ ∅) : False.","proofString":"unfold codom_rel in CD.\ndestruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) (CD : (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y) ≡₁ ∅) : False.","proofString":"destruct CD as (IN1 & IN2).\nspecialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) (IN1 : (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y)) : False.","proofString":"specialize (IN1 a).\napply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) (IN1 : (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y) a -> ∅ a) (IN2 : ∅ ⊆₁ (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y)) : False.","proofString":"apply IN1.\nexists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) (IN1 : (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y) a -> ∅ a) (IN2 : ∅ ⊆₁ (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y)) : exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 a.","proofString":"exists a.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (PATH : rhb_s x x) (EQ : ~ (E_s \\₁ eq a) a) (EQA : a = x) (IN1 : (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y) a -> ∅ a) (IN2 : ∅ ⊆₁ (fun y : actid => exists x0 : actid, (⦗eq a⦘ ⨾ rhb_s) x0 y)) : (⦗eq a⦘ ⨾ rhb_s) a a.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t.","proofString":"rewrite acts_set_helper; eauto.\nrewrite <- collect_rel_eqv.\nrewrite <- collect_rel_seq.\nassert (EQ : eco_t ≡ ⦗E_t⦘ ⨾ eco_t).\nrewrite wf_ecoE; eauto.\nbasic_solver.\nrewrite <- EQ.\nbasic_solver.\nassert (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\ndestruct COND as (EQ & INE); vauto.\nassert (IN2 : dom_rel eco_t ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\napply wf_ecoE in COND; eauto.\ndestruct COND as (x1 & INE & COND); apply INE.\nrewrite IN1, IN2.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ eco_t ≡ ⦗m ↑₁ E_t⦘ ⨾ m ↑ eco_t.","proofString":"rewrite <- collect_rel_eqv.\nrewrite <- collect_rel_seq.\nassert (EQ : eco_t ≡ ⦗E_t⦘ ⨾ eco_t).\nrewrite wf_ecoE; eauto.\nbasic_solver.\nrewrite <- EQ.\nbasic_solver.\nassert (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\ndestruct COND as (EQ & INE); vauto.\nassert (IN2 : dom_rel eco_t ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\napply wf_ecoE in COND; eauto.\ndestruct COND as (x1 & INE & COND); apply INE.\nrewrite IN1, IN2.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ eco_t ≡ m ↑ ⦗E_t⦘ ⨾ m ↑ eco_t.","proofString":"rewrite <- collect_rel_seq.\nassert (EQ : eco_t ≡ ⦗E_t⦘ ⨾ eco_t).\nrewrite wf_ecoE; eauto.\nbasic_solver.\nrewrite <- EQ.\nbasic_solver.\nassert (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\ndestruct COND as (EQ & INE); vauto.\nassert (IN2 : dom_rel eco_t ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\napply wf_ecoE in COND; eauto.\ndestruct COND as (x1 & INE & COND); apply INE.\nrewrite IN1, IN2.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ eco_t ≡ m ↑ (⦗E_t⦘ ⨾ eco_t).","proofString":"assert (EQ : eco_t ≡ ⦗E_t⦘ ⨾ eco_t).\nrewrite wf_ecoE; eauto.\nbasic_solver.\nrewrite <- EQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : eco_t ≡ ⦗E_t⦘ ⨾ eco_t.","proofString":"rewrite wf_ecoE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗E_t⦘ ⨾ eco_t ⨾ ⦗E_t⦘ ≡ ⦗E_t⦘ ⨾ ⦗E_t⦘ ⨾ eco_t ⨾ ⦗E_t⦘.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EQ : eco_t ≡ ⦗E_t⦘ ⨾ eco_t) : m ↑ eco_t ≡ m ↑ (⦗E_t⦘ ⨾ eco_t).","proofString":"rewrite <- EQ.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EQ : eco_t ≡ ⦗E_t⦘ ⨾ eco_t) : m ↑ eco_t ≡ m ↑ eco_t.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : inj_dom (codom_rel ⦗E_t⦘ ∪₁ dom_rel eco_t) m.","proofString":"assert (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\ndestruct COND as (EQ & INE); vauto.\nassert (IN2 : dom_rel eco_t ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\napply wf_ecoE in COND; eauto.\ndestruct COND as (x1 & INE & COND); apply INE.\nrewrite IN1, IN2.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel ⦗E_t⦘ ⊆₁ E_t.","proofString":"induction 1 as (x0 & COND); eauto.\ndestruct COND as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (COND : ⦗E_t⦘ x0 x) : E_t x.","proofString":"destruct COND as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t) : inj_dom (codom_rel ⦗E_t⦘ ∪₁ dom_rel eco_t) m.","proofString":"assert (IN2 : dom_rel eco_t ⊆₁ E_t).\ninduction 1 as (x0 & COND); eauto.\napply wf_ecoE in COND; eauto.\ndestruct COND as (x1 & INE & COND); apply INE.\nrewrite IN1, IN2.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t) : dom_rel eco_t ⊆₁ E_t.","proofString":"induction 1 as (x0 & COND); eauto.\napply wf_ecoE in COND; eauto.\ndestruct COND as (x1 & INE & COND); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t) (x x0 : actid) (COND : eco_t x x0) : E_t x.","proofString":"apply wf_ecoE in COND; eauto.\ndestruct COND as (x1 & INE & COND); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t) (x x0 : actid) (COND : (⦗E_t⦘ ⨾ eco_t ⨾ ⦗E_t⦘) x x0) : E_t x.","proofString":"destruct COND as (x1 & INE & COND); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t) (IN2 : dom_rel eco_t ⊆₁ E_t) : inj_dom (codom_rel ⦗E_t⦘ ∪₁ dom_rel eco_t) m.","proofString":"rewrite IN1, IN2.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t) (IN2 : dom_rel eco_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"rewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel ⦗E_t⦘ ⊆₁ E_t) (IN2 : dom_rel eco_t ⊆₁ E_t) : inj_dom E_t m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) : rhb_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t ⊆ m ↑ rhb_t ⨾ m ↑ eco_t.","proofString":"rewrite <- seqA.\nrewrite write_rhb_sub; eauto; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) : (rhb_s ⨾ ⦗E_s \\₁ eq a⦘) ⨾ m ↑ eco_t ⊆ m ↑ rhb_t ⨾ m ↑ eco_t.","proofString":"rewrite write_rhb_sub; eauto; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) : codom_rel rhb_t ⊆₁ E_t.","proofString":"induction 1 as (y & COND).\napply wf_rhbE in COND; eauto.\ndestruct COND as (x0 & INE1 & (x2 & COND & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (x y : actid) (COND : rhb_t y x) : E_t x.","proofString":"apply wf_rhbE in COND; eauto.\ndestruct COND as (x0 & INE1 & (x2 & COND & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (x y : actid) (COND : (⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘) y x) : E_t x.","proofString":"destruct COND as (x0 & INE1 & (x2 & COND & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (IN1 : codom_rel rhb_t ⊆₁ E_t) : inj_dom (codom_rel rhb_t ∪₁ dom_rel eco_t) m.","proofString":"assert (IN2 : dom_rel eco_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_ecoE in COND; eauto.\ndestruct COND as (x0 & INE1 & REST); apply INE1.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (IN1 : codom_rel rhb_t ⊆₁ E_t) : dom_rel eco_t ⊆₁ E_t.","proofString":"induction 1 as (y & COND).\napply wf_ecoE in COND; eauto.\ndestruct COND as (x0 & INE1 & REST); apply INE1."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (IN1 : codom_rel rhb_t ⊆₁ E_t) (x y : actid) (COND : eco_t x y) : E_t x.","proofString":"apply wf_ecoE in COND; eauto.\ndestruct COND as (x0 & INE1 & REST); apply INE1."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (IN1 : codom_rel rhb_t ⊆₁ E_t) (x y : actid) (COND : (⦗E_t⦘ ⨾ eco_t ⨾ ⦗E_t⦘) x y) : E_t x.","proofString":"destruct COND as (x0 & INE1 & REST); apply INE1."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (IN1 : codom_rel rhb_t ⊆₁ E_t) (IN2 : dom_rel eco_t ⊆₁ E_t) : inj_dom (codom_rel rhb_t ∪₁ dom_rel eco_t) m.","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (IN1 : codom_rel rhb_t ⊆₁ E_t) (IN2 : dom_rel eco_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t).","proofString":"rewrite restr_relE.\nrewrite wf_rhbE; eauto.\nrewrite wf_ecoE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) : rhb_t ⨾ eco_t ≡ ⦗E_t⦘ ⨾ (rhb_t ⨾ eco_t) ⨾ ⦗E_t⦘.","proofString":"rewrite wf_rhbE; eauto.\nrewrite wf_ecoE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) : (⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘) ⨾ eco_t\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘) ⨾ eco_t) ⨾ ⦗E_t⦘.","proofString":"rewrite wf_ecoE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) : (⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ eco_t ⨾ ⦗E_t⦘\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rhb_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ eco_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘.","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) : irreflexive (m ↑ (rhb_t ⨾ eco_t)).","proofString":"assert (IRR : irreflexive (restr_rel E_t (rhb_t ⨾ eco_t))).\nrewrite <- REST.\nrewrite rhb_eco_irr_equiv; eauto.\ndestruct CONS.\nunfold irreflexive; intros x COND.\nunfold irreflexive in cons_coherence.\nassert (F : (hb_t ⨾ eco_t^?) x x -> False).\napply cons_coherence.\napply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto.\nrewrite REST.\napply collect_rel_irr_inj with (rr := rhb_t ⨾ eco_t); eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) : irreflexive (restr_rel E_t (rhb_t ⨾ eco_t)).","proofString":"rewrite <- REST.\nrewrite rhb_eco_irr_equiv; eauto.\ndestruct CONS.\nunfold irreflexive; intros x COND.\nunfold irreflexive in cons_coherence.\nassert (F : (hb_t ⨾ eco_t^?) x x -> False).\napply cons_coherence.\napply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) : irreflexive (rhb_t ⨾ eco_t).","proofString":"rewrite rhb_eco_irr_equiv; eauto.\ndestruct CONS.\nunfold irreflexive; intros x COND.\nunfold irreflexive in cons_coherence.\nassert (F : (hb_t ⨾ eco_t^?) x x -> False).\napply cons_coherence.\napply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) : irreflexive (hb_t ⨾ eco_t).","proofString":"destruct CONS.\nunfold irreflexive; intros x COND.\nunfold irreflexive in cons_coherence.\nassert (F : (hb_t ⨾ eco_t^?) x x -> False).\napply cons_coherence.\napply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : irreflexive (hb_t ⨾ eco_t^?)) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) : irreflexive (hb_t ⨾ eco_t).","proofString":"unfold irreflexive; intros x COND.\nunfold irreflexive in cons_coherence.\nassert (F : (hb_t ⨾ eco_t^?) x x -> False).\napply cons_coherence.\napply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : irreflexive (hb_t ⨾ eco_t^?)) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x : actid) (COND : (hb_t ⨾ eco_t) x x) : False.","proofString":"unfold irreflexive in cons_coherence.\nassert (F : (hb_t ⨾ eco_t^?) x x -> False).\napply cons_coherence.\napply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x0 : actid, (hb_t ⨾ eco_t^?) x0 x0 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x : actid) (COND : (hb_t ⨾ eco_t) x x) : False.","proofString":"assert (F : (hb_t ⨾ eco_t^?) x x -> False).\napply cons_coherence.\napply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x0 : actid, (hb_t ⨾ eco_t^?) x0 x0 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x : actid) (COND : (hb_t ⨾ eco_t) x x) : (hb_t ⨾ eco_t^?) x x -> False.","proofString":"apply cons_coherence."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x0 : actid, (hb_t ⨾ eco_t^?) x0 x0 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x : actid) (COND : (hb_t ⨾ eco_t) x x) (F : (hb_t ⨾ eco_t^?) x x -> False) : False.","proofString":"apply F.\nunfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x0 : actid, (hb_t ⨾ eco_t^?) x0 x0 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x : actid) (COND : (hb_t ⨾ eco_t) x x) (F : (hb_t ⨾ eco_t^?) x x -> False) : (hb_t ⨾ eco_t^?) x x.","proofString":"unfold seq.\nunfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x0 : actid, (hb_t ⨾ eco_t^?) x0 x0 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x : actid) (COND : (hb_t ⨾ eco_t) x x) (F : (hb_t ⨾ eco_t^?) x x -> False) : exists z : actid, hb_t x z /\\ eco_t^? z x.","proofString":"unfold seq in COND.\ndestruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x0 : actid, (hb_t ⨾ eco_t^?) x0 x0 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x : actid) (COND : exists z : actid, hb_t x z /\\ eco_t z x) (F : (hb_t ⨾ eco_t^?) x x -> False) : exists z : actid, hb_t x z /\\ eco_t^? z x.","proofString":"destruct COND as (x0 & C1 & C2).\nexists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x1 : actid, (hb_t ⨾ eco_t^?) x1 x1 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x x0 : actid) (C1 : hb_t x x0) (C2 : eco_t x0 x) (F : (hb_t ⨾ eco_t^?) x x -> False) : exists z : actid, hb_t x z /\\ eco_t^? z x.","proofString":"exists x0.\nsplit; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : forall x1 : actid, (hb_t ⨾ eco_t^?) x1 x1 -> False) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (x x0 : actid) (C1 : hb_t x x0) (C2 : eco_t x0 x) (F : (hb_t ⨾ eco_t^?) x x -> False) : hb_t x x0 /\\ eco_t^? x0 x.","proofString":"split; auto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (IRR : irreflexive (restr_rel E_t (rhb_t ⨾ eco_t))) : irreflexive (m ↑ (rhb_t ⨾ eco_t)).","proofString":"rewrite REST.\napply collect_rel_irr_inj with (rr := rhb_t ⨾ eco_t); eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPPING : m ↑ eco_t ≡ ⦗E_s \\₁ eq a⦘ ⨾ m ↑ eco_t) (REST : rhb_t ⨾ eco_t ≡ restr_rel E_t (rhb_t ⨾ eco_t)) (IRR : irreflexive (restr_rel E_t (rhb_t ⨾ eco_t))) : irreflexive (m ↑ restr_rel E_t (rhb_t ⨾ eco_t)).","proofString":"apply collect_rel_irr_inj with (rr := rhb_t ⨾ eco_t); eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : irreflexive (rhb_s ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?).","proofString":"unfold irreflexive; intros x COND.\ndestruct COND as (x0 & P1 & (x1 & P2 & P3)).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as [EQ | P3].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (COND : (rhb_s ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?) x x) : False.","proofString":"destruct COND as (x0 & P1 & (x1 & P2 & P3)).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as [EQ | P3].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (P3 : rf_s^? x1 x) : False.","proofString":"assert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as [EQ | P3].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (P3 : rf_s^? x1 x) : x1 = a.","proofString":"destruct P2; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (P3 : rf_s^? x1 x) (EQA : x1 = a) : False.","proofString":"rewrite EQA in P3.\ndestruct P3 as [EQ | P3].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (P3 : rf_s^? a x) (EQA : x1 = a) : False.","proofString":"destruct P3 as [EQ | P3].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (EQ : a = x) (EQA : x1 = a) : False.","proofString":"destruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (EQ : a = x) (EQA : x1 = a) (IN1 : codom_rel (⦗eq a⦘ ⨾ rhb_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ rhb_s)) : False.","proofString":"subst.\ndestruct IN1 with x0.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 : actid) (P1 : rhb_s x x0) (P2 : (((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) x0 x) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ rhb_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ rhb_s) ⊆₁ ∅) : False.","proofString":"destruct IN1 with x0.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 : actid) (P1 : rhb_s x x0) (P2 : (((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) x0 x) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ rhb_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ rhb_s) ⊆₁ ∅) : codom_rel (⦗eq x⦘ ⨾ rhb_s) x0.","proofString":"basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (P3 : rf_s a x) (EQA : x1 = a) : False.","proofString":"apply RF_MAP in P3.\nunfold collect_rel in P3.\ndestruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (P3 : (m ↑ rf_t) a x) (EQA : x1 = a) : False.","proofString":"unfold collect_rel in P3.\ndestruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (P3 : exists x' y' : actid, rf_t x' y' /\\ m x' = a /\\ m y' = x) (EQA : x1 = a) : False.","proofString":"destruct P3 as (x' & y' & (P3' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (x' y' : actid) (P3' : rf_t x' y') (M1 : m x' = a) (M2 : m y' = x) (EQA : x1 = a) : False.","proofString":"destruct NIN with (m x'); eauto.\napply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (x' y' : actid) (P3' : rf_t x' y') (M1 : m x' = a) (M2 : m y' = x) (EQA : x1 = a) : (m ↑₁ E_t) (m x').","proofString":"apply wf_rfE in P3'; eauto.\ndestruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x0 x1) (x' y' : actid) (P3' : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x' y') (M1 : m x' = a) (M2 : m y' = x) (EQA : x1 = a) : (m ↑₁ E_t) (m x').","proofString":"destruct P3' as (x0' & (EQ & INE) & P3'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x0')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x0')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m x0')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x0')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m x0')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x0'))) (IS_W : is_w lab_s (m x0')) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m x0')) ∩₁ same_loc_s (m x0')) × eq (m x0')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 y' : actid) (P1 : rhb_s (m y') x0) (P2 : (((W_s ∩₁ E_s \\₁ eq (m x0')) ∩₁ same_loc_s (m x0')) × eq (m x0')) x0 (m x0')) (INE : E_t x0') (P3' : (rf_t ⨾ ⦗E_t⦘) x0' y') : (m ↑₁ E_t) (m x0').","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : irreflexive\n  (rhb_s\n   ⨾ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?).","proofString":"unfold irreflexive; intros x COND.\ndestruct COND as (x0 & P1 & (x1 & P2 & (x2 & (P3 & P4)))).\nassert (EQA : x2 = a).\ndestruct P3; basic_solver.\nrewrite EQA in P4.\ndestruct P4 as [EQ | P4].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P4.\nunfold collect_rel in P4.\ndestruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (COND : (rhb_s ⨾ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a ⨾ rf_s^?)\n  x x) : False.","proofString":"destruct COND as (x0 & P1 & (x1 & P2 & (x2 & (P3 & P4)))).\nassert (EQA : x2 = a).\ndestruct P3; basic_solver.\nrewrite EQA in P4.\ndestruct P4 as [EQ | P4].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P4.\nunfold collect_rel in P4.\ndestruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (P4 : rf_s^? x2 x) : False.","proofString":"assert (EQA : x2 = a).\ndestruct P3; basic_solver.\nrewrite EQA in P4.\ndestruct P4 as [EQ | P4].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P4.\nunfold collect_rel in P4.\ndestruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (P4 : rf_s^? x2 x) : x2 = a.","proofString":"destruct P3; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (P4 : rf_s^? x2 x) (EQA : x2 = a) : False.","proofString":"rewrite EQA in P4.\ndestruct P4 as [EQ | P4].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P4.\nunfold collect_rel in P4.\ndestruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (P4 : rf_s^? a x) (EQA : x2 = a) : False.","proofString":"destruct P4 as [EQ | P4].\ndestruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21.\napply RF_MAP in P4.\nunfold collect_rel in P4.\ndestruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (EQ : a = x) (EQA : x2 = a) : False.","proofString":"destruct write_rhb_codom with (m := m) as (IN1 & IN2); eauto.\nsubst.\ndestruct IN1 with x0.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (EQ : a = x) (EQA : x2 = a) (IN1 : codom_rel (⦗eq a⦘ ⨾ rhb_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq a⦘ ⨾ rhb_s)) : False.","proofString":"subst.\ndestruct IN1 with x0.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) x1 x) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ rhb_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ rhb_s) ⊆₁ ∅) : False.","proofString":"destruct IN1 with x0.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_W : is_w lab_s x) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq x) ∩₁ same_loc_s x) × eq x) x1 x) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ rhb_s)) (IN1 : codom_rel (⦗eq x⦘ ⨾ rhb_s) ⊆₁ ∅) : codom_rel (⦗eq x⦘ ⨾ rhb_s) x0.","proofString":"basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (P4 : rf_s a x) (EQA : x2 = a) : False.","proofString":"apply RF_MAP in P4.\nunfold collect_rel in P4.\ndestruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (P4 : (m ↑ rf_t) a x) (EQA : x2 = a) : False.","proofString":"unfold collect_rel in P4.\ndestruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (P4 : exists x' y' : actid, rf_t x' y' /\\ m x' = a /\\ m y' = x) (EQA : x2 = a) : False.","proofString":"destruct P4 as (x' & y' & (P4' & M1 & M2)).\ndestruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (x' y' : actid) (P4' : rf_t x' y') (M1 : m x' = a) (M2 : m y' = x) (EQA : x2 = a) : False.","proofString":"destruct NIN with (m x'); eauto.\napply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (x' y' : actid) (P4' : rf_t x' y') (M1 : m x' = a) (M2 : m y' = x) (EQA : x2 = a) : (m ↑₁ E_t) (m x').","proofString":"apply wf_rfE in P4'; eauto.\ndestruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x x0 : actid) (P1 : rhb_s x x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (x2 : actid) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 x2) (x' y' : actid) (P4' : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x' y') (M1 : m x' = a) (M2 : m y' = x) (EQA : x2 = a) : (m ↑₁ E_t) (m x').","proofString":"destruct P4' as (x0' & (EQ & INE) & P4'); subst.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x0')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x0')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m x0')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x0')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m x0')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x0'))) (IS_W : is_w lab_s (m x0')) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m x0')) ∩₁ same_loc_s (m x0')) × eq (m x0')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x0 y' : actid) (P1 : rhb_s (m y') x0) (x1 : actid) (P2 : (m ↑ rf_t⁻¹) x0 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq (m x0')) ∩₁ same_loc_s (m x0')) × eq (m x0')) x1 (m x0')) (INE : E_t x0') (P4' : (rf_t ⨾ ⦗E_t⦘) x0' y') : (m ↑₁ E_t) (m x0').","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rmw_s ∩ (fr_s ⨾ co_s) ≡ ∅₂.","proofString":"split; try basic_solver.\nrewrite RMW_MAP, CO_MAP; eauto.\nrewrite write_fr_sub; eauto.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\nrewrite !inter_union_r.\nrepeat apply inclusion_union_l.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rmw_s ∩ (fr_s ⨾ co_s) ⊆ ∅₂.","proofString":"rewrite RMW_MAP, CO_MAP; eauto.\nrewrite write_fr_sub; eauto.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\nrewrite !inter_union_r.\nrepeat apply inclusion_union_l.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t\n∩ (fr_s ⨾ (m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)) ⊆ ∅₂.","proofString":"rewrite write_fr_sub; eauto.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\nrewrite !inter_union_r.\nrepeat apply inclusion_union_l.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t\n∩ ((m ↑ fr_t ∪ m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n   ⨾ (m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)) ⊆ ∅₂.","proofString":"rewrite !seq_union_l.\nrewrite !seq_union_r.\nrewrite !inter_union_r.\nrepeat apply inclusion_union_l.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t\n∩ (m ↑ fr_t ⨾ (m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n   ∪ (m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n     ⨾ (m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)) ⊆ ∅₂.","proofString":"rewrite !seq_union_r.\nrewrite !inter_union_r.\nrepeat apply inclusion_union_l.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t\n∩ (m ↑ fr_t ⨾ m ↑ co_t\n   ∪ m ↑ fr_t ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a\n   ∪ ((m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⨾ m ↑ co_t\n      ∪ (m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n        ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)) ⊆ ∅₂.","proofString":"rewrite !inter_union_r.\nrepeat apply inclusion_union_l.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t ∩ (m ↑ fr_t ⨾ m ↑ co_t)\n∪ m ↑ rmw_t ∩ (m ↑ fr_t ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n∪ (m ↑ rmw_t\n   ∩ ((m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⨾ m ↑ co_t)\n   ∪ m ↑ rmw_t\n     ∩ ((m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n        ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)) ⊆ ∅₂.","proofString":"repeat apply inclusion_union_l.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver.\nintros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t ∩ (m ↑ fr_t ⨾ m ↑ co_t) ⊆ ∅₂.","proofString":"assert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE.\nassert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : dom_rel co_t ⊆₁ E_t.","proofString":"induction 1 as (y & PATH).\napply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : co_t x y) : E_t x.","proofString":"apply wf_coE in PATH; eauto.\ndestruct PATH as (x0 & INE & PATH); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) x y) : E_t x.","proofString":"destruct PATH as (x0 & INE & PATH); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) : m ↑ rmw_t ∩ (m ↑ fr_t ⨾ m ↑ co_t) ⊆ ∅₂.","proofString":"assert (IN3 : codom_rel fr_t ⊆₁ E_t).\ninduction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto.\nerewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) : codom_rel fr_t ⊆₁ E_t.","proofString":"induction 1 as (y & PATH).\napply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (x y : actid) (PATH : fr_t y x) : E_t x.","proofString":"apply wf_frE in PATH; eauto.\ndestruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (x y : actid) (PATH : (⦗E_t⦘ ⨾ fr_t ⨾ ⦗E_t⦘) y x) : E_t x.","proofString":"destruct PATH as (x0 & INE1 & (x1 & PATH & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : m ↑ rmw_t ∩ (m ↑ fr_t ⨾ m ↑ co_t) ⊆ ∅₂.","proofString":"erewrite <- collect_rel_seq.\nrewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver.\nrewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : m ↑ rmw_t ∩ m ↑ (fr_t ⨾ co_t) ⊆ ∅₂.","proofString":"rewrite <- XmmCons.coll_rel_inter; eauto.\ndestruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver.\nassert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : m ↑ (rmw_t ∩ (fr_t ⨾ co_t)) ⊆ ∅₂.","proofString":"destruct CONS.\nrewrite cons_atomicity; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : irreflexive (hb_t ⨾ eco_t^?)) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : m ↑ (rmw_t ∩ (fr_t ⨾ co_t)) ⊆ ∅₂.","proofString":"rewrite cons_atomicity; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (cons_coherence : irreflexive (hb_t ⨾ eco_t^?)) (cons_atomicity : rmw_t ∩ (fr_t ⨾ co_t) ≡ ∅₂) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : m ↑ ∅₂ ⊆ ∅₂.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : inj_dom\n  (dom_rel rmw_t ∪₁ codom_rel rmw_t ∪₁ dom_rel (fr_t ⨾ co_t)\n   ∪₁ codom_rel (fr_t ⨾ co_t)) m.","proofString":"assert (IN1' : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : dom_rel rmw_t ⊆₁ E_t.","proofString":"rewrite wf_rmwE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : dom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) : inj_dom\n  (dom_rel rmw_t ∪₁ codom_rel rmw_t ∪₁ dom_rel (fr_t ⨾ co_t)\n   ∪₁ codom_rel (fr_t ⨾ co_t)) m.","proofString":"assert (IN2' : codom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nclear; basic_solver.\nassert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) : codom_rel rmw_t ⊆₁ E_t.","proofString":"rewrite wf_rmwE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) : codom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) : inj_dom\n  (dom_rel rmw_t ∪₁ codom_rel rmw_t ∪₁ dom_rel (fr_t ⨾ co_t)\n   ∪₁ codom_rel (fr_t ⨾ co_t)) m.","proofString":"assert (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nassert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t.","proofString":"rewrite wf_frE, wf_coE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) : dom_rel ((⦗E_t⦘ ⨾ fr_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t) : inj_dom\n  (dom_rel rmw_t ∪₁ codom_rel rmw_t ∪₁ dom_rel (fr_t ⨾ co_t)\n   ∪₁ codom_rel (fr_t ⨾ co_t)) m.","proofString":"assert (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t).\nrewrite wf_frE, wf_coE; eauto.\nclear; basic_solver.\nrewrite IN1', IN2', IN3', IN4'.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t) : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t.","proofString":"rewrite wf_frE, wf_coE; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t) : codom_rel ((⦗E_t⦘ ⨾ fr_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t) (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t) : inj_dom\n  (dom_rel rmw_t ∪₁ codom_rel rmw_t ∪₁ dom_rel (fr_t ⨾ co_t)\n   ∪₁ codom_rel (fr_t ⨾ co_t)) m.","proofString":"rewrite IN1', IN2', IN3', IN4'.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) (IN1' : dom_rel rmw_t ⊆₁ E_t) (IN2' : codom_rel rmw_t ⊆₁ E_t) (IN3' : dom_rel (fr_t ⨾ co_t) ⊆₁ E_t) (IN4' : codom_rel (fr_t ⨾ co_t) ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t ∪₁ E_t ∪₁ E_t) m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : inj_dom (codom_rel fr_t ∪₁ dom_rel co_t) m.","proofString":"rewrite IN2, IN3.\nrewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","proofString":"rewrite set_unionK.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : dom_rel co_t ⊆₁ E_t) (IN3 : codom_rel fr_t ⊆₁ E_t) : inj_dom E_t m.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t ∩ (m ↑ fr_t ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⊆ ∅₂.","proofString":"intros x y PATH.\ndestruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (m ↑ rmw_t ∩ (m ↑ fr_t ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)) x y) : False.","proofString":"destruct PATH as (P0 & x1 & P1 & P2).\nassert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) : False.","proofString":"assert (EQA : y = a).\ndestruct P2; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) : y = a.","proofString":"destruct P2; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : False.","proofString":"rewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : False.","proofString":"destruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : False.","proofString":"assert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : E_t x'.","proofString":"apply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : E_t x'.","proofString":"destruct P0 as (x0' & INE & P0); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') : False.","proofString":"assert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') : (m ↑₁ E_t) a.","proofString":"rewrite <- M2.\nunfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') : (m ↑₁ E_t) (m a').","proofString":"unfold set_collect.\nexists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') : exists y0 : actid, E_t y0 /\\ m y0 = m a'.","proofString":"exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (a' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m a')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m a')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m a')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m a'))) (IS_W : is_w lab_s (m a')) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' : actid) (P0 : rmw_t x' a') (x1 : actid) (P1 : (m ↑ fr_t) (m x') x1) (P2 : (((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) x1 (m a')) (ET : E_t x') : E_t a'.","proofString":"apply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (a' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m a')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m a')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m a')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m a'))) (IS_W : is_w lab_s (m a')) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' : actid) (P0 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x' a') (x1 : actid) (P1 : (m ↑ fr_t) (m x') x1) (P2 : (((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) x1 (m a')) (ET : E_t x') : E_t a'.","proofString":"destruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 : actid) (P1 : (m ↑ fr_t) x x1) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') (ET' : (m ↑₁ E_t) a) : False.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t\n∩ ((m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⨾ m ↑ co_t)\n⊆ ∅₂.","proofString":"intros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (m ↑ rmw_t\n ∩ ((m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⨾ m ↑ co_t))\n  x y) : False.","proofString":"destruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (m ↑ co_t) x1 y) : False.","proofString":"assert (EQA : x1 = a).\ndestruct P2; basic_solver.\nrewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (m ↑ co_t) x1 y) : x1 = a.","proofString":"destruct P2; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (m ↑ co_t) x1 y) (EQA : x1 = a) : False.","proofString":"rewrite EQA in P3.\ndestruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (m ↑ co_t) a y) (EQA : x1 = a) : False.","proofString":"destruct P3 as (x' & a' & P3 & M1 & M2).\nassert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (x' a' : actid) (P3 : co_t x' a') (M1 : m x' = a) (M2 : m a' = y) (EQA : x1 = a) : False.","proofString":"assert (ET : E_t x').\napply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (x' a' : actid) (P3 : co_t x' a') (M1 : m x' = a) (M2 : m a' = y) (EQA : x1 = a) : E_t x'.","proofString":"apply wf_coE in P3; eauto.\ndestruct P3 as (x0' & INE & P3); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (x' a' : actid) (P3 : (⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) x' a') (M1 : m x' = a) (M2 : m a' = y) (EQA : x1 = a) : E_t x'.","proofString":"destruct P3 as (x0' & INE & P3); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (x' a' : actid) (P3 : co_t x' a') (M1 : m x' = a) (M2 : m a' = y) (EQA : x1 = a) (ET : E_t x') : False.","proofString":"assert (ET' : (m ↑₁ E_t) a).\nrewrite <- M1.\nbasic_solver.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (x' a' : actid) (P3 : co_t x' a') (M1 : m x' = a) (M2 : m a' = y) (EQA : x1 = a) (ET : E_t x') : (m ↑₁ E_t) a.","proofString":"rewrite <- M1.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (x' a' : actid) (P3 : co_t x' a') (M1 : m x' = a) (M2 : m a' = y) (EQA : x1 = a) (ET : E_t x') : (m ↑₁ E_t) (m x').","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (x' a' : actid) (P3 : co_t x' a') (M1 : m x' = a) (M2 : m a' = y) (EQA : x1 = a) (ET : E_t x') (ET' : (m ↑₁ E_t) a) : False.","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rmw_t\n∩ ((m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n   ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) ⊆ ∅₂.","proofString":"intros x y PATH.\ndestruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (m ↑ rmw_t\n ∩ ((m ↑ rf_t⁻¹ ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)\n    ⨾ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a)) x y) : False.","proofString":"destruct PATH as (P0 & x1 & (x2 & P1 & P2) & P3).\nassert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) : False.","proofString":"assert (EQA : y = a).\ndestruct P3; basic_solver.\nrewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) : y = a.","proofString":"destruct P3; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x y) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : False.","proofString":"rewrite EQA in P0.\ndestruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P0 : (m ↑ rmw_t) x a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : False.","proofString":"destruct P0 as (x' & a' & P0 & M1 & M2).\nassert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : False.","proofString":"assert (ET : E_t x').\napply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE.\nassert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : E_t x'.","proofString":"apply wf_rmwE in P0; eauto.\ndestruct P0 as (x0' & INE & P0); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) : E_t x'.","proofString":"destruct P0 as (x0' & INE & P0); apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') : False.","proofString":"assert (ET' : (m ↑₁ E_t) a).\nrewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') : (m ↑₁ E_t) a.","proofString":"rewrite <- M2.\nunfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') : (m ↑₁ E_t) (m a').","proofString":"unfold set_collect; exists a'; split; vauto.\napply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (a' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m a')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m a')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m a')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m a'))) (IS_W : is_w lab_s (m a')) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' : actid) (P0 : rmw_t x' a') (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) (m x') x2) (P3 : (((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) x1 (m a')) (P2 : (((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) x2 x1) (ET : E_t x') : E_t a'.","proofString":"apply wf_rmwE in P0; vauto.\ndestruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (a' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m a')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq (m a')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m a')⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq (m a')⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq (m a'))) (IS_W : is_w lab_s (m a')) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s\n≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x' : actid) (P0 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x' a') (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) (m x') x2) (P3 : (((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) x1 (m a')) (P2 : (((W_s ∩₁ E_s \\₁ eq (m a')) ∩₁ same_loc_s (m a')) × eq (m a')) x2 x1) (ET : E_t x') : E_t a'.","proofString":"destruct P0 as (x0' & INE1 & (x1' & P0 & (EQ & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_W : is_w lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t) (CO_MAP : co_s ≡ m ↑ co_t ∪ ((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (CONS : WCore.is_cons G_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' a' : actid) (P0 : rmw_t x' a') (M1 : m x' = x) (M2 : m a' = a) (x1 x2 : actid) (P1 : (m ↑ rf_t⁻¹) x x2) (P2 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x2 x1) (P3 : (((W_s ∩₁ E_s \\₁ eq a) ∩₁ same_loc_s a) × eq a) x1 y) (EQA : y = a) (ET : E_t x') (ET' : (m ↑₁ E_t) a) : False.","proofString":"basic_solver."}]}