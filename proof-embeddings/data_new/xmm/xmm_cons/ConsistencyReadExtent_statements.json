{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/xmm/src/xmm_cons/ConsistencyReadExtent.v","fileSamples":[{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rf_s⁻¹ ⨾ co_s ⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s.","conclusion":"rf_s⁻¹ ⨾ co_s ⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite RF_MAP.\nrewrite transp_union.\nrewrite seq_union_l.\nrewrite CO_MAP.\nrewrite transp_seq, seqA.\nrewrite <- collect_rel_transp.\nassert (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t).\neapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s.","conclusion":"(m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite transp_union.\nrewrite seq_union_l.\nrewrite CO_MAP.\nrewrite transp_seq, seqA.\nrewrite <- collect_rel_transp.\nassert (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t).\neapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ((m ↑ rf_t)⁻¹ ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹) ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s.","conclusion":"((m ↑ rf_t)⁻¹ ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹) ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite seq_union_l.\nrewrite CO_MAP.\nrewrite transp_seq, seqA.\nrewrite <- collect_rel_transp.\nassert (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t).\neapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t)⁻¹ ⨾ co_s ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s.","conclusion":"(m ↑ rf_t)⁻¹ ⨾ co_s ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ co_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite CO_MAP.\nrewrite transp_seq, seqA.\nrewrite <- collect_rel_transp.\nassert (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t).\neapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t)⁻¹ ⨾ m ↑ co_t ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ m ↑ co_t.","conclusion":"(m ↑ rf_t)⁻¹ ⨾ m ↑ co_t ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ (srf_s ⨾ ⦗eq a⦘)⁻¹ ⨾ m ↑ co_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite transp_seq, seqA.\nrewrite <- collect_rel_transp.\nassert (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t).\neapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t)⁻¹ ⨾ m ↑ co_t ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t.","conclusion":"(m ↑ rf_t)⁻¹ ⨾ m ↑ co_t ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite <- collect_rel_transp.\nassert (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t).\neapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t⁻¹ ⨾ m ↑ co_t ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t.","conclusion":"m ↑ rf_t⁻¹ ⨾ m ↑ co_t ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"assert (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t).\neapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t.","conclusion":"m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"eapply collect_rel_seq.\nassert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m.","conclusion":"inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"assert (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t).\nrewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nassert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel rf_t⁻¹ ⊆₁ E_t.","conclusion":"codom_rel rf_t⁻¹ ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite codom_transp.\ninduction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : dom_rel rf_t ⊆₁ E_t.","conclusion":"dom_rel rf_t ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"induction 1 as (y & COND).\napply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (COND : rf_t x y) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (COND : rf_t x y)","proofString":"apply wf_rfE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (COND : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x y) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (COND : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x y)","proofString":"destruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x1 : actid) (COND : ⦗E_t⦘ x x1) (REST : (rf_t ⨾ ⦗E_t⦘) x1 y) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x1 : actid) (COND : ⦗E_t⦘ x x1) (REST : (rf_t ⨾ ⦗E_t⦘) x1 y)","proofString":"apply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) : inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m.","conclusion":"inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t)","proofString":"assert (IN2 : dom_rel co_t ⊆₁ E_t).\ninduction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) : dom_rel co_t ⊆₁ E_t.","conclusion":"dom_rel co_t ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t)","proofString":"induction 1 as (y & COND).\napply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y : actid) (COND : co_t x y) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y : actid) (COND : co_t x y)","proofString":"apply wf_coE in COND; eauto.\ndestruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y : actid) (COND : (⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) x y) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y : actid) (COND : (⦗E_t⦘ ⨾ co_t ⨾ ⦗E_t⦘) x y)","proofString":"destruct COND as (x1 & COND & REST).\napply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y x1 : actid) (COND : ⦗E_t⦘ x x1) (REST : (co_t ⨾ ⦗E_t⦘) x1 y) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (x y x1 : actid) (COND : ⦗E_t⦘ x x1) (REST : (co_t ⨾ ⦗E_t⦘) x1 y)","proofString":"apply COND."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (IN2 : dom_rel co_t ⊆₁ E_t) : inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m.","conclusion":"inj_dom (codom_rel rf_t⁻¹ ∪₁ dom_rel co_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (IN2 : dom_rel co_t ⊆₁ E_t)","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (IN2 : dom_rel co_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","conclusion":"inj_dom (E_t ∪₁ E_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t⁻¹ ⊆₁ E_t) (IN2 : dom_rel co_t ⊆₁ E_t)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t) : m ↑ rf_t⁻¹ ⨾ m ↑ co_t ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t.","conclusion":"m ↑ rf_t⁻¹ ⨾ m ↑ co_t ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t\n⊆ m ↑ (rf_t⁻¹ ⨾ co_t) ∪ ⦗eq a⦘⁻¹ ⨾ srf_s⁻¹ ⨾ m ↑ co_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EQ : m ↑ (rf_t⁻¹ ⨾ co_t) ≡ m ↑ rf_t⁻¹ ⨾ m ↑ co_t)","proofString":"rewrite EQ; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑₁ E_t ∪₁ eq a) \\₁ eq a ≡₁ m ↑₁ E_t.","conclusion":"(m ↑₁ E_t ∪₁ eq a) \\₁ eq a ≡₁ m ↑₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite set_minus_union_l.\nrewrite set_minusK.\nrewrite set_union_empty_r.\napply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t \\₁ eq a ∪₁ eq a \\₁ eq a ≡₁ m ↑₁ E_t.","conclusion":"m ↑₁ E_t \\₁ eq a ∪₁ eq a \\₁ eq a ≡₁ m ↑₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite set_minusK.\nrewrite set_union_empty_r.\napply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t \\₁ eq a ∪₁ ∅ ≡₁ m ↑₁ E_t.","conclusion":"m ↑₁ E_t \\₁ eq a ∪₁ ∅ ≡₁ m ↑₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite set_union_empty_r.\napply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t \\₁ eq a ≡₁ m ↑₁ E_t.","conclusion":"m ↑₁ E_t \\₁ eq a ≡₁ m ↑₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply set_minus_disjoint; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite READ.\nassert (EMP : (⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s) ≡ ∅₂).\nunfold sw.\nunfold release.\nunfold rs.\nsplit; vauto.\nrewrite crE.\nrewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf.\nrewrite seqA.\nrewrite EMP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ sw_s) ≡₁ ∅.","conclusion":"codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ sw_s) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"assert (EMP : (⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s) ≡ ∅₂).\nunfold sw.\nunfold release.\nunfold rs.\nsplit; vauto.\nrewrite crE.\nrewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf.\nrewrite seqA.\nrewrite EMP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘ ⨾ sw_s ≡ ∅₂.","conclusion":"⦗R_s⦘ ⨾ sw_s ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"unfold sw.\nunfold release.\nunfold rs.\nsplit; vauto.\nrewrite crE.\nrewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘ ⨾ release_s ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ≡ ∅₂.","conclusion":"⦗R_s⦘ ⨾ release_s ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"unfold release.\nunfold rs.\nsplit; vauto.\nrewrite crE.\nrewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ rs_s)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ≡ ∅₂.","conclusion":"⦗R_s⦘\n⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ rs_s)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"unfold rs.\nsplit; vauto.\nrewrite crE.\nrewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ≡ ∅₂.","conclusion":"⦗R_s⦘\n⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"split; vauto.\nrewrite crE.\nrewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ (⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s)^? ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite crE.\nrewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ (⦗Rel_s⦘\n   ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗F_s⦘ ⨾ sb_s)\n     ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ (⦗Rel_s⦘\n   ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗F_s⦘ ⨾ sb_s)\n     ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊)\n  ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘ ⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite !seqA.\nrewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗F_s⦘ ⨾ sb_s)\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗F_s⦘ ⨾ sb_s)\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite !seq_union_l.\nrewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗fun _ : actid => True⦘\n     ⨾ ⦗Rlx_s⦘\n       ⨾ ⦗W_s⦘\n         ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n     ∪ (⦗F_s⦘ ⨾ sb_s)\n       ⨾ ⦗Rlx_s⦘\n         ⨾ ⦗W_s⦘\n           ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗fun _ : actid => True⦘\n     ⨾ ⦗Rlx_s⦘\n       ⨾ ⦗W_s⦘\n         ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n     ∪ (⦗F_s⦘ ⨾ sb_s)\n       ⨾ ⦗Rlx_s⦘\n         ⨾ ⦗W_s⦘\n           ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘)\n⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite !seq_union_r.\napply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗fun _ : actid => True⦘\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n∪ ⦗R_s⦘\n  ⨾ ⦗Rel_s⦘\n    ⨾ (⦗F_s⦘ ⨾ sb_s)\n      ⨾ ⦗Rlx_s⦘\n        ⨾ ⦗W_s⦘\n          ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗fun _ : actid => True⦘\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n∪ ⦗R_s⦘\n  ⨾ ⦗Rel_s⦘\n    ⨾ (⦗F_s⦘ ⨾ sb_s)\n      ⨾ ⦗Rlx_s⦘\n        ⨾ ⦗W_s⦘\n          ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"apply inclusion_union_l.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf.\nrewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗fun _ : actid => True⦘\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗fun _ : actid => True⦘\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"intros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y : actid) (PATH : (⦗R_s⦘\n ⨾ ⦗Rel_s⦘\n   ⨾ ⦗fun _ : actid => True⦘\n     ⨾ ⦗Rlx_s⦘\n       ⨾ ⦗W_s⦘\n         ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y : actid) (PATH : (⦗R_s⦘\n ⨾ ⦗Rel_s⦘\n   ⨾ ⦗fun _ : actid => True⦘\n     ⨾ ⦗Rlx_s⦘\n       ⨾ ⦗W_s⦘\n         ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x y)","proofString":"destruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & (x4 & (EQ5 & C5) & P6))))).\nsubst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y x0 : actid) (EQ1 : x = x0) (C1 : is_r lab_s x) (x1 : actid) (EQ2 : x0 = x1) (C2 : is_rel lab_s x0) (x2 : actid) (EQ3 : x1 = x2) (C3 : True) (x3 : actid) (EQ4 : x2 = x3) (C4 : is_rlx lab_s x2) (x4 : actid) (EQ5 : x3 = x4) (C5 : is_w lab_s x3) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y x0 : actid) (EQ1 : x = x0) (C1 : is_r lab_s x) (x1 : actid) (EQ2 : x0 = x1) (C2 : is_rel lab_s x0) (x2 : actid) (EQ3 : x1 = x2) (C3 : True) (x3 : actid) (EQ4 : x2 = x3) (C4 : is_rlx lab_s x2) (x4 : actid) (EQ5 : x3 = x4) (C5 : is_w lab_s x3) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y)","proofString":"subst.\nunfold is_r in C1.\nunfold is_w in C5.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x4 : actid) (C2 : is_rel lab_s x4) (C1 : is_r lab_s x4) (C3 : True) (C4 : is_rlx lab_s x4) (C5 : is_w lab_s x4) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x4 : actid) (C2 : is_rel lab_s x4) (C1 : is_r lab_s x4) (C3 : True) (C4 : is_rlx lab_s x4) (C5 : is_w lab_s x4) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y)","proofString":"unfold is_r in C1.\nunfold is_w in C5.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x4 : actid) (C2 : is_rel lab_s x4) (C1 : match lab_s x4 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : True) (C4 : is_rlx lab_s x4) (C5 : is_w lab_s x4) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x4 : actid) (C2 : is_rel lab_s x4) (C1 : match lab_s x4 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : True) (C4 : is_rlx lab_s x4) (C5 : is_w lab_s x4) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y)","proofString":"unfold is_w in C5.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x4 : actid) (C2 : is_rel lab_s x4) (C1 : match lab_s x4 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : True) (C4 : is_rlx lab_s x4) (C5 : match lab_s x4 with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x4 : actid) (C2 : is_rel lab_s x4) (C1 : match lab_s x4 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : True) (C4 : is_rlx lab_s x4) (C5 : match lab_s x4 with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P6 : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x4 y)","proofString":"desf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗F_s⦘ ⨾ sb_s)\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ (⦗F_s⦘ ⨾ sb_s)\n    ⨾ ⦗Rlx_s⦘\n      ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite seqA.\nintros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ sb_s\n      ⨾ ⦗Rlx_s⦘\n        ⨾ ⦗W_s⦘\n          ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂.","conclusion":"⦗R_s⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ sb_s\n      ⨾ ⦗Rlx_s⦘\n        ⨾ ⦗W_s⦘\n          ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘\n⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"intros x y PATH.\ndestruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y : actid) (PATH : (⦗R_s⦘\n ⨾ ⦗Rel_s⦘\n   ⨾ ⦗F_s⦘\n     ⨾ sb_s\n       ⨾ ⦗Rlx_s⦘\n         ⨾ ⦗W_s⦘\n           ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x\n  y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y : actid) (PATH : (⦗R_s⦘\n ⨾ ⦗Rel_s⦘\n   ⨾ ⦗F_s⦘\n     ⨾ sb_s\n       ⨾ ⦗Rlx_s⦘\n         ⨾ ⦗W_s⦘\n           ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x\n  y)","proofString":"destruct PATH as (x0 & (EQ1 & C1) & (x1 & (EQ2 & C2) & (x2 & (EQ3 & C3)            & (x3 & (EQ4 & C4) & P5)))).\nsubst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y x0 : actid) (EQ1 : x = x0) (C1 : is_r lab_s x) (x1 : actid) (EQ2 : x0 = x1) (C2 : is_rel lab_s x0) (x2 : actid) (EQ3 : x1 = x2) (C3 : is_f lab_s x1) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (x y x0 : actid) (EQ1 : x = x0) (C1 : is_r lab_s x) (x1 : actid) (EQ2 : x0 = x1) (C2 : is_rel lab_s x0) (x2 : actid) (EQ3 : x1 = x2) (C3 : is_f lab_s x1) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y)","proofString":"subst.\nunfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : is_r lab_s x2) (C3 : is_f lab_s x2) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : is_r lab_s x2) (C3 : is_f lab_s x2) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y)","proofString":"unfold is_r in C1.\nunfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : match lab_s x2 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : is_f lab_s x2) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : match lab_s x2 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : is_f lab_s x2) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y)","proofString":"unfold is_f in C3.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : match lab_s x2 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : match lab_s x2 with\n| Afence _ => true\n| _ => false\nend) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : match lab_s x2 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (C3 : match lab_s x2 with\n| Afence _ => true\n| _ => false\nend) (x3 EQ4 : actid) (C4 : ⦗E_s⦘ x2 EQ4 /\\ (ext_sb ⨾ ⦗E_s⦘) EQ4 x3) (P5 : (⦗Rlx_s⦘\n ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ ⦗Rlx_s⦘ ⨾ (sb_s ⨾ ⦗F_s⦘)^? ⨾ ⦗Acq_s⦘) x3\n  y)","proofString":"desf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (EMP : ⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s ≡ ∅₂) : codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ sw_s) ≡₁ ∅.","conclusion":"codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ sw_s) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (EMP : ⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s ≡ ∅₂)","proofString":"rewrite seqA.\nrewrite EMP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (EMP : ⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s ≡ ∅₂) : codom_rel (⦗eq a⦘ ⨾ ⦗R_s⦘ ⨾ sw_s) ≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ ⦗R_s⦘ ⨾ sw_s) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (EMP : ⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s ≡ ∅₂)","proofString":"rewrite EMP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (EMP : ⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s ≡ ∅₂) : codom_rel (⦗eq a⦘ ⨾ ∅₂) ≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ ∅₂) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (EMP : ⦗fun a0 : actid => R_s a0⦘ ⨾ sw_s ≡ ∅₂)","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t).","conclusion":"(m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite seq_union_l.\napply inclusion_union_l.\nrewrite collect_rel_seq; vauto.\nassert (IN1 : codom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nbasic_solver.\nassert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite seqA.\nrewrite wf_rmwE; eauto.\nrewrite collect_rel_seqi.\nintros x y PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & (x2            & (P3 & (x3 & (x4 & P5)))))))).\ndestruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t ⨾ m ↑ rmw_t ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t).","conclusion":"m ↑ rf_t ⨾ m ↑ rmw_t ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply inclusion_union_l.\nrewrite collect_rel_seq; vauto.\nassert (IN1 : codom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nbasic_solver.\nassert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver.\nrewrite seqA.\nrewrite wf_rmwE; eauto.\nrewrite collect_rel_seqi.\nintros x y PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & (x2            & (P3 & (x3 & (x4 & P5)))))))).\ndestruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rf_t ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t).","conclusion":"m ↑ rf_t ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite collect_rel_seq; vauto.\nassert (IN1 : codom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nbasic_solver.\nassert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","conclusion":"inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"assert (IN1 : codom_rel rf_t ⊆₁ E_t).\nrewrite wf_rfE; eauto.\nbasic_solver.\nassert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel rf_t ⊆₁ E_t.","conclusion":"codom_rel rf_t ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite wf_rfE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","conclusion":"codom_rel (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","conclusion":"inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t)","proofString":"assert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel rmw_t ⊆₁ E_t.","conclusion":"dom_rel rmw_t ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t)","proofString":"rewrite wf_rmwE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","conclusion":"dom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","conclusion":"inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t)","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","conclusion":"inj_dom (E_t ∪₁ E_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (srf_s ⨾ ⦗eq a⦘) ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t).","conclusion":"(srf_s ⨾ ⦗eq a⦘) ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite seqA.\nrewrite wf_rmwE; eauto.\nrewrite collect_rel_seqi.\nintros x y PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & (x2            & (P3 & (x3 & (x4 & P5)))))))).\ndestruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t).","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ rmw_t ⊆ m ↑ (rf_t ⨾ rmw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite wf_rmwE; eauto.\nrewrite collect_rel_seqi.\nintros x y PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & (x2            & (P3 & (x3 & (x4 & P5)))))))).\ndestruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)\n⊆ m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘).","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)\n⊆ m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite collect_rel_seqi.\nintros x y PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & (x2            & (P3 & (x3 & (x4 & P5)))))))).\ndestruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘)\n⊆ m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘).","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘)\n⊆ m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & (x2            & (P3 & (x3 & (x4 & P5)))))))).\ndestruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘)) x y) : (m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y.","conclusion":"(m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘)) x y)","proofString":"destruct PATH as (x0 & (P1 & (x1 & (P2 & (x2            & (P3 & (x3 & (x4 & P5)))))))).\ndestruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 : actid) (P1 : srf_s x x0) (x1 : actid) (P2 : ⦗eq a⦘ x0 x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y) : (m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y.","conclusion":"(m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 : actid) (P1 : srf_s x x0) (x1 : actid) (P2 : ⦗eq a⦘ x0 x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y)","proofString":"destruct P2.\nsubst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 : actid) (P1 : srf_s x x0) (x1 : actid) (H : x0 = x1) (H0 : a = x0) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y) : (m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y.","conclusion":"(m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x0 : actid) (P1 : srf_s x x0) (x1 : actid) (H : x0 = x1) (H0 : a = x0) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y)","proofString":"subst.\nexfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y) : (m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y.","conclusion":"(m ↑ (rf_t ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘)) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y)","proofString":"exfalso.\ndestruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y)","proofString":"destruct NIN with x1; eauto.\ndestruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y) : (m ↑₁ E_t) x1.","conclusion":"(m ↑₁ E_t) x1","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 : actid) (P3 : (m ↑ ⦗E_t⦘) x1 x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y)","proofString":"destruct P3 as (x1' & x2' & ((EQ & INE) & MAP1 & MAP2)).\nsubst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 x1' x2' : actid) (EQ : x1' = x2') (INE : E_t x1') (MAP1 : m x1' = x1) (MAP2 : m x2' = x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y) : (m ↑₁ E_t) x1.","conclusion":"(m ↑₁ E_t) x1","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (IS_ACQ : ~ is_acq lab_s x1) (IS_R : is_r lab_s x1) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x x1) (x2 x1' x2' : actid) (EQ : x1' = x2') (INE : E_t x1') (MAP1 : m x1' = x1) (MAP2 : m x2' = x2) (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = x2 /\\ m x4 = y)","proofString":"subst.\nunfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x (m x2')) (INE : E_t x2') (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = m x2' /\\ m x4 = y) : (m ↑₁ E_t) (m x2').","conclusion":"(m ↑₁ E_t) (m x2')","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x (m x2')) (INE : E_t x2') (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = m x2' /\\ m x4 = y)","proofString":"unfold set_collect.\nexists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x (m x2')) (INE : E_t x2') (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = m x2' /\\ m x4 = y) : exists y0 : actid, E_t y0 /\\ m y0 = m x2'.","conclusion":"exists y0 : actid, E_t y0 /\\ m y0 = m x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x (m x2')) (INE : E_t x2') (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = m x2' /\\ m x4 = y)","proofString":"exists x2'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x (m x2')) (INE : E_t x2') (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = m x2' /\\ m x4 = y) : E_t x2' /\\ m x2' = m x2'.","conclusion":"E_t x2' /\\ m x2' = m x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : srf_s x (m x2')) (INE : E_t x2') (x3 x4 : actid) (P5 : (rmw_t ⨾ ⦗E_t⦘) x3 x4 /\\ m x3 = m x2' /\\ m x4 = y)","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (XIN : (E_s \\₁ eq a) x)","proofString":"apply rtE in HREL.\ndestruct HREL as [EQ | PATH].\ndestruct EQ.\nsubst; eauto.\napply ct_end in PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply wf_rmwD in P3; eauto.\ndestruct P3 as (x2 & (P4 & x3 & (P5 & (P6 & P7)))).\nsubst.\napply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x y) (XIN : (E_s \\₁ eq a) x)","proofString":"destruct HREL as [EQ | PATH].\ndestruct EQ.\nsubst; eauto.\napply ct_end in PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply wf_rmwD in P3; eauto.\ndestruct P3 as (x2 & (P4 & x3 & (P5 & (P6 & P7)))).\nsubst.\napply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (EQ : ⦗fun _ : actid => True⦘ x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (EQ : ⦗fun _ : actid => True⦘ x y) (XIN : (E_s \\₁ eq a) x)","proofString":"destruct EQ.\nsubst; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (H : x = y) (H0 : True) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (H : x = y) (H0 : True) (XIN : (E_s \\₁ eq a) x)","proofString":"subst; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (XIN : (E_s \\₁ eq a) x)","proofString":"apply ct_end in PATH.\ndestruct PATH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply wf_rmwD in P3; eauto.\ndestruct P3 as (x2 & (P4 & x3 & (P5 & (P6 & P7)))).\nsubst.\napply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ rmw_s) x y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : ((rf_s ⨾ rmw_s)＊ ⨾ rf_s ⨾ rmw_s) x y) (XIN : (E_s \\₁ eq a) x)","proofString":"destruct PATH as (x0 & (P1 & (x1 & (P2 & P3)))).\napply wf_rmwD in P3; eauto.\ndestruct P3 as (x2 & (P4 & x3 & (P5 & (P6 & P7)))).\nsubst.\napply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (P3 : rmw_s x1 y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (P3 : rmw_s x1 y) (XIN : (E_s \\₁ eq a) x)","proofString":"apply wf_rmwD in P3; eauto.\ndestruct P3 as (x2 & (P4 & x3 & (P5 & (P6 & P7)))).\nsubst.\napply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (P3 : (⦗R_s⦘ ⨾ rmw_s ⨾ ⦗W_s⦘) x1 y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (P3 : (⦗R_s⦘ ⨾ rmw_s ⨾ ⦗W_s⦘) x1 y) (XIN : (E_s \\₁ eq a) x)","proofString":"destruct P3 as (x2 & (P4 & x3 & (P5 & (P6 & P7)))).\nsubst.\napply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P5 : rmw_s x2 x3) (P6 : x3 = y) (P7 : is_w lab_s x3) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P5 : rmw_s x2 x3) (P6 : x3 = y) (P7 : is_w lab_s x3) (XIN : (E_s \\₁ eq a) x)","proofString":"subst.\napply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (P5 : rmw_s x2 y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (P5 : rmw_s x2 y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x)","proofString":"apply wf_rmwE in P5; eauto.\ndestruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (P5 : (⦗E_s⦘ ⨾ rmw_s ⨾ ⦗E_s⦘) x2 y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (P5 : (⦗E_s⦘ ⨾ rmw_s ⨾ ⦗E_s⦘) x2 y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x)","proofString":"destruct P5 as (x3 & (P8 & (x4 & (P9 & P10)))).\ndestruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (x4 : actid) (P9 : rmw_s x3 x4) (P10 : ⦗E_s⦘ x4 y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (x4 : actid) (P9 : rmw_s x3 x4) (P10 : ⦗E_s⦘ x4 y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x)","proofString":"destruct P10 as (EQ & INE); vauto.\nunfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x) : (E_s \\₁ eq a) y.","conclusion":"(E_s \\₁ eq a) y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x)","proofString":"unfold set_minus.\nsplit; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x) : E_s y /\\ a <> y.","conclusion":"E_s y /\\ a <> y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x)","proofString":"split; vauto.\nunfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x) : a <> y.","conclusion":"a <> y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : is_w lab_s y) (XIN : (E_s \\₁ eq a) x)","proofString":"unfold is_w in P7.\nunfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (XIN : (E_s \\₁ eq a) x) : a <> y.","conclusion":"a <> y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (XIN : (E_s \\₁ eq a) x)","proofString":"unfold is_r in IS_R.\nintros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s a with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (XIN : (E_s \\₁ eq a) x) : a <> y.","conclusion":"a <> y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s a with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (XIN : (E_s \\₁ eq a) x)","proofString":"intros HH.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s a with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (XIN : (E_s \\₁ eq a) x) (HH : a = y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s a with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (x0 : actid) (P1 : (rf_s ⨾ rmw_s)＊ x x0) (x1 : actid) (P2 : rf_s x0 x1) (x2 : actid) (P4 : ⦗R_s⦘ x1 x2) (x3 : actid) (P8 : ⦗E_s⦘ x2 x3) (P9 : rmw_s x3 y) (INE : E_s y) (P7 : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (XIN : (E_s \\₁ eq a) x) (HH : a = y)","proofString":"desf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : ⦗E_t ∩₁ Rel_t ∩₁ Rlx_t ∩₁ W_t⦘ x' x'.","conclusion":"⦗E_t ∩₁ Rel_t ∩₁ Rlx_t ∩₁ W_t⦘ x' x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y)","proofString":"unfolder.\nunfolder in DOM.\ndesf.\nunfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'.","conclusion":"x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y)","proofString":"unfolder in DOM.\ndesf.\nunfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : (((E_s x /\\ a <> x) /\\ is_rel lab_s x) /\\ is_rlx lab_s x) /\\ is_w lab_s x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'.","conclusion":"x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : (((E_s x /\\ a <> x) /\\ is_rel lab_s x) /\\ is_rlx lab_s x) /\\ is_w lab_s x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y)","proofString":"desf.\nunfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : E_s (m x')) (DOM3 : a <> m x') (DOM2 : is_rel lab_s (m x')) (DOM1 : is_rlx lab_s (m x')) (DOM0 : is_w lab_s (m x')) (XIN : E_t x') (YIN : E_t y') : x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'.","conclusion":"x' = x' /\\ ((E_t x' /\\ is_rel lab_t x') /\\ is_rlx lab_t x') /\\ is_w lab_t x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : E_s (m x')) (DOM3 : a <> m x') (DOM2 : is_rel lab_s (m x')) (DOM1 : is_rlx lab_s (m x')) (DOM0 : is_w lab_s (m x')) (XIN : E_t x') (YIN : E_t y')","proofString":"unfold is_w, is_rel, is_rlx, mod in *.\nrewrite <- LABS with x'; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) : singl_rel x y ⊆ (rf_s ⨾ rmw_s)＊.","conclusion":"singl_rel x y ⊆ (rf_s ⨾ rmw_s)＊","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y)","proofString":"intros x0 y0 PATH.\ndestruct PATH; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (x0 y0 : actid) (PATH : singl_rel x y x0 y0) : (rf_s ⨾ rmw_s)＊ x0 y0.","conclusion":"(rf_s ⨾ rmw_s)＊ x0 y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (x0 y0 : actid) (PATH : singl_rel x y x0 y0)","proofString":"destruct PATH; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂.","conclusion":"(srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊)","proofString":"rewrite seqA.\nrewrite RMW_MAP.\nrewrite wf_rmwE; eauto.\nsplit; [|basic_solver].\nrewrite collect_rel_seqi.\nintros x0 y0 PATH.\ndestruct PATH as (x1 & (P1 & (x2 & ((EQ & EQA) & (x3              & (P3 & (x4 & (x5 & P4)))))))).\nsymmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) : srf_s ⨾ ⦗eq a⦘ ⨾ rmw_s ≡ ∅₂.","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ rmw_s ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊)","proofString":"rewrite RMW_MAP.\nrewrite wf_rmwE; eauto.\nsplit; [|basic_solver].\nrewrite collect_rel_seqi.\nintros x0 y0 PATH.\ndestruct PATH as (x1 & (P1 & (x2 & ((EQ & EQA) & (x3              & (P3 & (x4 & (x5 & P4)))))))).\nsymmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) : srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ rmw_t ≡ ∅₂.","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ rmw_t ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊)","proofString":"rewrite wf_rmwE; eauto.\nsplit; [|basic_solver].\nrewrite collect_rel_seqi.\nintros x0 y0 PATH.\ndestruct PATH as (x1 & (P1 & (x2 & ((EQ & EQA) & (x3              & (P3 & (x4 & (x5 & P4)))))))).\nsymmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) : srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ≡ ∅₂.","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊)","proofString":"split; [|basic_solver].\nrewrite collect_rel_seqi.\nintros x0 y0 PATH.\ndestruct PATH as (x1 & (P1 & (x2 & ((EQ & EQA) & (x3              & (P3 & (x4 & (x5 & P4)))))))).\nsymmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) : srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆ ∅₂.","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊)","proofString":"rewrite collect_rel_seqi.\nintros x0 y0 PATH.\ndestruct PATH as (x1 & (P1 & (x2 & ((EQ & EQA) & (x3              & (P3 & (x4 & (x5 & P4)))))))).\nsymmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) : srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘) ⊆ ∅₂.","conclusion":"srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘) ⊆ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊)","proofString":"intros x0 y0 PATH.\ndestruct PATH as (x1 & (P1 & (x2 & ((EQ & EQA) & (x3              & (P3 & (x4 & (x5 & P4)))))))).\nsymmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 : actid) (PATH : (srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘)) x0 y0) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 : actid) (PATH : (srf_s ⨾ ⦗eq a⦘ ⨾ m ↑ ⦗E_t⦘ ⨾ m ↑ (rmw_t ⨾ ⦗E_t⦘)) x0 y0)","proofString":"destruct PATH as (x1 & (P1 & (x2 & ((EQ & EQA) & (x3              & (P3 & (x4 & (x5 & P4)))))))).\nsymmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 x1 : actid) (P1 : srf_s x0 x1) (x2 : actid) (EQ : x1 = x2) (EQA : a = x1) (x3 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 x3) (x4 x5 : actid) (P4 : (rmw_t ⨾ ⦗E_t⦘) x4 x5 /\\ m x4 = x3 /\\ m x5 = y0) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 x1 : actid) (P1 : srf_s x0 x1) (x2 : actid) (EQ : x1 = x2) (EQA : a = x1) (x3 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 x3) (x4 x5 : actid) (P4 : (rmw_t ⨾ ⦗E_t⦘) x4 x5 /\\ m x4 = x3 /\\ m x5 = y0)","proofString":"symmetry in MAPEQ.\ndestruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : m ↑₁ E_t ≡₁ E_s \\₁ eq a) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 x1 : actid) (P1 : srf_s x0 x1) (x2 : actid) (EQ : x1 = x2) (EQA : a = x1) (x3 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 x3) (x4 x5 : actid) (P4 : (rmw_t ⨾ ⦗E_t⦘) x4 x5 /\\ m x4 = x3 /\\ m x5 = y0) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : m ↑₁ E_t ≡₁ E_s \\₁ eq a) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 x1 : actid) (P1 : srf_s x0 x1) (x2 : actid) (EQ : x1 = x2) (EQA : a = x1) (x3 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 x3) (x4 x5 : actid) (P4 : (rmw_t ⨾ ⦗E_t⦘) x4 x5 /\\ m x4 = x3 /\\ m x5 = y0)","proofString":"destruct P4 as ((x5' & P4 & (EQ' & EIN)) & MAP1 & MAP2).\nsubst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : m ↑₁ E_t ≡₁ E_s \\₁ eq a) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 x1 : actid) (P1 : srf_s x0 x1) (x2 : actid) (EQ : x1 = x2) (EQA : a = x1) (x3 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 x3) (x4 x5 x5' : actid) (P4 : rmw_t x4 x5') (EQ' : x5' = x5) (EIN : E_t x5') (MAP1 : m x4 = x3) (MAP2 : m x5 = y0) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : m ↑₁ E_t ≡₁ E_s \\₁ eq a) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s)＊) (x0 y0 x1 : actid) (P1 : srf_s x0 x1) (x2 : actid) (EQ : x1 = x2) (EQA : a = x1) (x3 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 x3) (x4 x5 x5' : actid) (P4 : rmw_t x4 x5') (EQ' : x5' = x5) (EIN : E_t x5') (MAP1 : m x4 = x3) (MAP2 : m x5 = y0)","proofString":"subst.\ndestruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : m ↑₁ E_t ≡₁ E_s \\₁ eq x2) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 (m x4)) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : m ↑₁ E_t ≡₁ E_s \\₁ eq x2) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 (m x4)) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5)","proofString":"destruct MAPEQ as (IN1 & IN2).\ndestruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 (m x4)) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 (m x4)) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5)","proofString":"destruct IN1 with x2; eauto.\ndestruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 (m x4)) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5) : (m ↑₁ E_t) x2.","conclusion":"(m ↑₁ E_t) x2","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 : actid) (P3 : (m ↑ ⦗E_t⦘) x2 (m x4)) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5)","proofString":"destruct P3 as (x2' & x4' & INE & MAP1 & MAP2).\nunfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 x2' x4' : actid) (INE : ⦗E_t⦘ x2' x4') (MAP1 : m x2' = x2) (MAP2 : m x4' = m x4) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5) : (m ↑₁ E_t) x2.","conclusion":"(m ↑₁ E_t) x2","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 x2' x4' : actid) (INE : ⦗E_t⦘ x2' x4') (MAP1 : m x2' = x2) (MAP2 : m x4' = m x4) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5)","proofString":"unfold set_collect.\nexists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 x2' x4' : actid) (INE : ⦗E_t⦘ x2' x4') (MAP1 : m x2' = x2) (MAP2 : m x4' = m x4) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5) : exists y : actid, E_t y /\\ m y = x2.","conclusion":"exists y : actid, E_t y /\\ m y = x2","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x2) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x2⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x2⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x2⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x2⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x2)) (IS_ACQ : ~ is_acq lab_s x2) (IS_R : is_r lab_s x2) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq x2) (IN2 : E_s \\₁ eq x2 ⊆₁ m ↑₁ E_t) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq x2) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq x2⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 x2) (x4 x2' x4' : actid) (INE : ⦗E_t⦘ x2' x4') (MAP1 : m x2' = x2) (MAP2 : m x4' = m x4) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5)","proofString":"exists x2'; split; vauto.\ndestruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : E_s \\₁ eq (m x2') ⊆₁ m ↑₁ E_t) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq (m x2')) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq (m x2')) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y')\n⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq (m x2')⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 (m x2')) (x4 x4' : actid) (INE : ⦗E_t⦘ x2' x4') (MAP2 : m x4' = m x4) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5) : E_t x2'.","conclusion":"E_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x2' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq (m x2')) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s (m x2')) (IS_ACQ : ~ is_acq lab_s (m x2')) (NIN : set_disjoint (m ↑₁ E_t) (eq (m x2'))) (CODOM_RPO : codom_rel (⦗eq (m x2')⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq (m x2')⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq (m x2')⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq (m x2')⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IN2 : E_s \\₁ eq (m x2') ⊆₁ m ↑₁ E_t) (IN1 : m ↑₁ E_t ⊆₁ E_s \\₁ eq (m x2')) (x' y' : actid) (HREL : (rf_s ⨾ rmw_s)＊ (m x') (m y')) (DOM : ((E_s \\₁ eq (m x2')) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y')\n⊆ (m ↑ rf_t ⨾ rmw_s ∪ (srf_s ⨾ ⦗eq (m x2')⦘) ⨾ rmw_s)＊) (x0 : actid) (P1 : srf_s x0 (m x2')) (x4 x4' : actid) (INE : ⦗E_t⦘ x2' x4') (MAP2 : m x4' = m x4) (x5 : actid) (P4 : rmw_t x4 x5) (EIN : E_t x5)","proofString":"destruct INE as (EQ & INE); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : codom_rel rf_t ⊆₁ E_t.","conclusion":"codom_rel rf_t ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"rewrite wf_rfE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : codom_rel (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","conclusion":"codom_rel (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","conclusion":"inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t)","proofString":"assert (IN2 : dom_rel rmw_t ⊆₁ E_t).\nrewrite wf_rmwE; eauto.\nbasic_solver.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel rmw_t ⊆₁ E_t.","conclusion":"dom_rel rmw_t ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t)","proofString":"rewrite wf_rmwE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t) : dom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","conclusion":"dom_rel (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m.","conclusion":"inj_dom (codom_rel rf_t ∪₁ dom_rel rmw_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t)","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","conclusion":"inj_dom (E_t ∪₁ E_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (rf_s ⨾ rmw_s)＊ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ rf_t ⨾ m ↑ rmw_t)＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (IN1 : codom_rel rf_t ⊆₁ E_t) (IN2 : dom_rel rmw_t ⊆₁ E_t)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_t ⨾ rmw_t)＊ x' y'.","conclusion":"(rf_t ⨾ rmw_t)＊ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (HREL : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"destruct HREL as [EQ | PATH].\ndestruct EQ.\nsubst.\nassert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left.\nclear; basic_solver.\napply rtE.\nright.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (EQ : ⦗fun _ : actid => True⦘ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_t ⨾ rmw_t)＊ x' y'.","conclusion":"(rf_t ⨾ rmw_t)＊ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (EQ : ⦗fun _ : actid => True⦘ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"destruct EQ.\nsubst.\nassert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (H : x = y) (H0 : True) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_t ⨾ rmw_t)＊ x' y'.","conclusion":"(rf_t ⨾ rmw_t)＊ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (H : x = y) (H0 : True) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"subst.\nassert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_t ⨾ rmw_t)＊ x' y'.","conclusion":"(rf_t ⨾ rmw_t)＊ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"assert (EQ : x' = y').\napply INJ; vauto.\nsubst.\napply rtE; left.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : x' = y'.","conclusion":"x' = y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"apply INJ; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (EQ : x' = y') : (rf_t ⨾ rmw_t)＊ x' y'.","conclusion":"(rf_t ⨾ rmw_t)＊ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (H0 : True) (XIN : E_t x') (y' : actid) (YIN : E_t y') (HREL' : singl_rel (m x') (m x') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (YEQ : m y' = m x') (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (EQ : x' = y')","proofString":"subst.\napply rtE; left.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (y' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m y')) (H0 : True) (XIN YIN : E_t y') (YEQ : m y' = m y') (HREL' : singl_rel (m y') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_t ⨾ rmw_t)＊ y' y'.","conclusion":"(rf_t ⨾ rmw_t)＊ y' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (y' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m y')) (H0 : True) (XIN YIN : E_t y') (YEQ : m y' = m y') (HREL' : singl_rel (m y') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"apply rtE; left.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (y' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m y')) (H0 : True) (XIN YIN : E_t y') (YEQ : m y' = m y') (HREL' : singl_rel (m y') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : ⦗fun _ : actid => True⦘ y' y'.","conclusion":"⦗fun _ : actid => True⦘ y' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (y' : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m y')) (H0 : True) (XIN YIN : E_t y') (YEQ : m y' = m y') (HREL' : singl_rel (m y') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_t ⨾ rmw_t)＊ x' y'.","conclusion":"(rf_t ⨾ rmw_t)＊ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"apply rtE.\nright.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (⦗fun _ : actid => True⦘ ∪ (rf_t ⨾ rmw_t)⁺) x' y'.","conclusion":"(⦗fun _ : actid => True⦘ ∪ (rf_t ⨾ rmw_t)⁺) x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"right.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"assert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺.","conclusion":"(rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂)","proofString":"apply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (rf_s ⨾ rmw_s)⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"apply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"assert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t).","conclusion":"rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"rewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ ⦗E_t⦘ ⨾ (rf_t ⨾ rmw_t) ⨾ ⦗E_t⦘.","conclusion":"rf_t ⨾ rmw_t ≡ ⦗E_t⦘ ⨾ (rf_t ⨾ rmw_t) ⨾ ⦗E_t⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"rewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘.","conclusion":"(⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t))","proofString":"assert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺.","conclusion":"(m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t))","proofString":"split; apply clos_trans_mori; rewrite <- REST; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"apply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) x) (PATH : (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺ x y) (x' : actid) (XIN : E_t x') (XEQ : m x' = x) (y' : actid) (YIN : E_t y') (YEQ : m y' = y) (HREL' : singl_rel x y ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"apply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (PATH : (m ↑ (restr_rel E_t (rf_t ⨾ rmw_t))⁺) (m x') (m y')) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (PATH : (m ↑ (restr_rel E_t (rf_t ⨾ rmw_t))⁺) (m x') (m y')) (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"unfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (PATH : exists x'0 y'0 : actid,\n  (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x'0 y'0 /\\ m x'0 = m x' /\\ m y'0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' : actid) (PATH : exists x'0 y'0 : actid,\n  (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x'0 y'0 /\\ m x'0 = m x' /\\ m y'0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"destruct PATH as (x0 & y0 & (PATH & MAP1 & MAP2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"assert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺.","conclusion":"(restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"apply clos_trans_mori; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply TREQ'' in PATH.\nassert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"assert (X0IN : E_t x0).\napply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto.\nassert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply ct_begin in PATH.\ndestruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : ((rf_t ⨾ rmw_t) ⨾ (rf_t ⨾ rmw_t)＊) x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : ((rf_t ⨾ rmw_t) ⨾ (rf_t ⨾ rmw_t)＊) x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"destruct PATH as (x1 & (x2 & (P1 & P2)) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 x2 : actid) (P1 : rf_t x0 x2) (P2 : rmw_t x2 x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 x2 : actid) (P1 : rf_t x0 x2) (P2 : rmw_t x2 x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply wf_rfE in P1; vauto.\ndestruct P1 as (x3 & (EQ & INE) & P1); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 x2 : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x0 x2) (P2 : rmw_t x2 x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 x2 : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x0 x2) (P2 : rmw_t x2 x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"destruct P1 as (x3 & (EQ & INE) & P1); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0)","proofString":"assert (Y0IN : E_t y0).\napply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto.\nassert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","conclusion":"E_t y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0)","proofString":"apply ct_end in PATH.\ndestruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : ((rf_t ⨾ rmw_t)＊ ⨾ rf_t ⨾ rmw_t) x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","conclusion":"E_t y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : ((rf_t ⨾ rmw_t)＊ ⨾ rf_t ⨾ rmw_t) x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0)","proofString":"destruct PATH as (x1 & P1 & (x2 & (P2 & P3))).\napply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 : actid) (P1 : (rf_t ⨾ rmw_t)＊ x0 x1) (x2 : actid) (P2 : rf_t x1 x2) (P3 : rmw_t x2 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","conclusion":"E_t y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 : actid) (P1 : (rf_t ⨾ rmw_t)＊ x0 x1) (x2 : actid) (P2 : rf_t x1 x2) (P3 : rmw_t x2 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0)","proofString":"apply wf_rmwE in P3; vauto.\ndestruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 : actid) (P1 : (rf_t ⨾ rmw_t)＊ x0 x1) (x2 : actid) (P2 : rf_t x1 x2) (P3 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x2 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) : E_t y0.","conclusion":"E_t y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 x1 : actid) (P1 : (rf_t ⨾ rmw_t)＊ x0 x1) (x2 : actid) (P2 : rf_t x1 x2) (P3 : (⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) x2 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0)","proofString":"destruct P3 as (x3 & P3 & (x4 & P4 & (EQ & INE))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0)","proofString":"assert (EQXX : x0 = x') by now apply INJ.\nassert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) (EQXX : x0 = x') : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) (EQXX : x0 = x')","proofString":"assert (EQYY : y0 = y') by now apply INJ.\nvauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) (EQXX : x0 = x') (EQYY : y0 = y') : (rf_t ⨾ rmw_t)⁺ x' y'.","conclusion":"(rf_t ⨾ rmw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x' y' x0 y0 : actid) (PATH : (rf_t ⨾ rmw_t)⁺ x0 y0) (MAP1 : m x0 = m x') (MAP2 : m y0 = m y') (DOM : ((E_s \\₁ eq a) ∩₁ Rel_s ∩₁ Rlx_s ∩₁ W_s) (m x')) (XIN : E_t x') (YIN : E_t y') (HREL' : singl_rel (m x') (m y') ⊆ (m ↑ (rf_t ⨾ rmw_t))＊) (EMP : (srf_s ⨾ ⦗eq a⦘) ⨾ rmw_s ≡ ∅₂) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (X0IN : E_t x0) (Y0IN : E_t y0) (EQXX : x0 = x') (EQYY : y0 = y')","proofString":"vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t).","conclusion":"⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t)","proofString":"assert (sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) as EAA.\nsplit; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear; basic_solver 10.\nassert (sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) as EAA'.\nsplit; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear; basic_solver 10.\nunfold rs.\nrels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\nrewrite wf_rpoE; eauto.\nrewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘.","conclusion":"sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t)","proofString":"split; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear; basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sb_t ∩ same_loc_t ⊆ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘.","conclusion":"sb_t ∩ same_loc_t ⊆ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t)","proofString":"rewrite wf_sbE at 1.\nclear; basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : (⦗E_t⦘ ⨾ sb_t ⨾ ⦗E_t⦘) ∩ same_loc_t ⊆ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘.","conclusion":"(⦗E_t⦘ ⨾ sb_t ⨾ ⦗E_t⦘) ∩ same_loc_t ⊆ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t)","proofString":"clear; basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t).","conclusion":"⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘)","proofString":"assert (sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) as EAA'.\nsplit; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear; basic_solver 10.\nunfold rs.\nrels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\nrewrite wf_rpoE; eauto.\nrewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘.","conclusion":"sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘)","proofString":"split; [|clear; basic_solver 10].\nrewrite wf_sbE at 1.\nclear; basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : sb_s ∩ same_loc_s ⊆ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘.","conclusion":"sb_s ∩ same_loc_s ⊆ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘)","proofString":"rewrite wf_sbE at 1.\nclear; basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) ∩ same_loc_s ⊆ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘.","conclusion":"(⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) ∩ same_loc_s ⊆ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘)","proofString":"clear; basic_solver 10."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t).","conclusion":"⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ rs_s\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ rs_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"unfold rs.\nrels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\nrewrite wf_rpoE; eauto.\nrewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rels.\nrewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\nrewrite wf_rpoE; eauto.\nrewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ (⦗F_s⦘ ⨾ sb_s) ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ (⦗F_t⦘ ⨾ sb_t) ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rewrite !seqA.\narewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\nrewrite wf_rpoE; eauto.\nrewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"arewrite ((⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ ⦗W_s⦘)          ⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘).\nunfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21.\nrewrite wf_rpoE; eauto.\nrewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘.","conclusion":"⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"unfold rpo; unfold rpo_imm.\nrewrite <- ct_step.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ (⦗R_s ∩₁ Rlx_s⦘ ⨾ sb_s ⨾ ⦗F_s ∩₁ Acq_s⦘ ∪ ⦗Acq_s⦘ ⨾ sb_s\n       ∪ sb_s ⨾ ⦗Rel_s⦘ ∪ ⦗F_s ∩₁ Rel_s⦘ ⨾ sb_s ⨾ ⦗W_s ∩₁ Rlx_s⦘)⁺\n      ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘.","conclusion":"⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ (⦗R_s ∩₁ Rlx_s⦘ ⨾ sb_s ⨾ ⦗F_s ∩₁ Acq_s⦘ ∪ ⦗Acq_s⦘ ⨾ sb_s\n       ∪ sb_s ⨾ ⦗Rel_s⦘ ∪ ⦗F_s ∩₁ Rel_s⦘ ⨾ sb_s ⨾ ⦗W_s ∩₁ Rlx_s⦘)⁺\n      ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rewrite <- ct_step.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ (⦗R_s ∩₁ Rlx_s⦘ ⨾ sb_s ⨾ ⦗F_s ∩₁ Acq_s⦘ ∪ ⦗Acq_s⦘ ⨾ sb_s\n       ∪ sb_s ⨾ ⦗Rel_s⦘ ∪ ⦗F_s ∩₁ Rel_s⦘ ⨾ sb_s ⨾ ⦗W_s ∩₁ Rlx_s⦘)\n      ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘.","conclusion":"⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ sb_s ⨾ ⦗Rlx_s⦘ ⨾ ⦗W_s⦘\n⊆ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘\n    ⨾ (⦗R_s ∩₁ Rlx_s⦘ ⨾ sb_s ⨾ ⦗F_s ∩₁ Acq_s⦘ ∪ ⦗Acq_s⦘ ⨾ sb_s\n       ∪ sb_s ⨾ ⦗Rel_s⦘ ∪ ⦗F_s ∩₁ Rel_s⦘ ⨾ sb_s ⨾ ⦗W_s ∩₁ Rlx_s⦘)\n      ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ rpo_s ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rewrite wf_rpoE; eauto.\nrewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘ ⨾ (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘ ⨾ (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rewrite !seqA.\narewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"arewrite (⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘).\nunfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver.\ndo 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘.","conclusion":"⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"unfold set_minus.\nintros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ ⦗W_s⦘.","conclusion":"⦗E_s⦘ ⨾ ⦗W_s⦘ ⊆ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ ⦗W_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"intros x y COND.\ndestruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y : actid) (COND : (⦗E_s⦘ ⨾ ⦗W_s⦘) x y) : (⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ ⨾ ⦗W_s⦘) x y.","conclusion":"(⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ ⨾ ⦗W_s⦘) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y : actid) (COND : (⦗E_s⦘ ⨾ ⦗W_s⦘) x y)","proofString":"destruct COND as (x' & (EQ1 & INE) & (EQ2 & ISW)).\nsubst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y x' : actid) (EQ1 : x = x') (INE : E_s x) (EQ2 : x' = y) (ISW : is_w lab_s x') : (⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ ⨾ ⦗W_s⦘) x y.","conclusion":"(⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ ⨾ ⦗W_s⦘) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y x' : actid) (EQ1 : x = x') (INE : E_s x) (EQ2 : x' = y) (ISW : is_w lab_s x')","proofString":"subst.\nunfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y) : (⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ ⦗W_s⦘) y y.","conclusion":"(⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ ⦗W_s⦘) y y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y)","proofString":"unfolder.\nsplits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y) : y = y /\\ (E_s y /\\ a <> y) /\\ is_w lab_s y.","conclusion":"y = y /\\ (E_s y /\\ a <> y) /\\ is_w lab_s y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y)","proofString":"splits; vauto.\nintros F.\nunfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y) : a <> y.","conclusion":"a <> y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y)","proofString":"intros F.\nunfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y) (F : a = y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : is_w lab_s y) (F : a = y)","proofString":"unfold is_w, is_r in *.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s a with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (F : a = y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s a with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y : actid) (INE : E_s y) (ISW : match lab_s y with\n| Astore _ _ _ _ => true\n| _ => false\nend) (F : a = y)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘\n  ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"do 3 rewrite <- seqA.\nrewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘) ⨾ ⦗E_s⦘)\n⨾ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"(((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘) ⨾ ⦗E_s⦘)\n⨾ rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rewrite <- seqA with (r3 := ⦗W_s⦘ ⨾ ⦗fun a0 : actid => is_rlx lab_s a0⦘ ⨾ (rf_s ⨾ rmw_s)＊).\nrewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘) ⨾ ⦗E_s⦘)\n⨾ (rpo_s ⨾ ⦗E_s \\₁ eq a⦘) ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"(((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘) ⨾ ⦗E_s⦘)\n⨾ (rpo_s ⨾ ⦗E_s \\₁ eq a⦘) ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rewrite RPO_MAP.\nrewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : (((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘) ⨾ ⦗E_s⦘)\n⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"(((⦗E_s \\₁ eq a⦘ ⨾ ⦗Rel_s⦘) ⨾ ⦗F_s⦘) ⨾ ⦗E_s⦘)\n⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"rewrite !seqA.\nintros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) : ⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊).","conclusion":"⦗E_s \\₁ eq a⦘\n⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊\n⊆ m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘)","proofString":"intros x y PATH.\ndestruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y : actid) (PATH : (⦗E_s \\₁ eq a⦘\n ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊) x\n  y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x\n  y.","conclusion":"(m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x\n  y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y : actid) (PATH : (⦗E_s \\₁ eq a⦘\n ⨾ ⦗Rel_s⦘ ⨾ ⦗F_s⦘ ⨾ ⦗E_s⦘ ⨾ m ↑ rpo_t ⨾ ⦗W_s⦘ ⨾ ⦗Rlx_s⦘ ⨾ (rf_s ⨾ rmw_s)＊) x\n  y)","proofString":"destruct PATH as (x0 & ((EQ1 & C1) & (x1 & ((EQ2 & C2) & (x2          & ((EQ3 & C3) & (x3 & (P4 & (x4 & (P5 & (x5 & ((EQ6 & C6) & x6 & ((EQ7 & P7) & P8))))))))))))).\nsubst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y x0 : actid) (EQ1 : x = x0) (C1 : (E_s \\₁ eq a) x) (x1 : actid) (EQ2 : x0 = x1) (C2 : is_rel lab_s x0) (x2 : actid) (EQ3 : x1 = x2) (C3 : is_f lab_s x1) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x4 : actid) (P5 : (m ↑ rpo_t) x3 x4) (x5 : actid) (EQ6 : x4 = x5) (C6 : is_w lab_s x4) (x6 : actid) (EQ7 : x5 = x6) (P7 : is_rlx lab_s x5) (P8 : (rf_s ⨾ rmw_s)＊ x6 y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x\n  y.","conclusion":"(m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x\n  y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x y x0 : actid) (EQ1 : x = x0) (C1 : (E_s \\₁ eq a) x) (x1 : actid) (EQ2 : x0 = x1) (C2 : is_rel lab_s x0) (x2 : actid) (EQ3 : x1 = x2) (C3 : is_f lab_s x1) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x4 : actid) (P5 : (m ↑ rpo_t) x3 x4) (x5 : actid) (EQ6 : x4 = x5) (C6 : is_w lab_s x4) (x6 : actid) (EQ7 : x5 = x6) (P7 : is_rlx lab_s x5) (P8 : (rf_s ⨾ rmw_s)＊ x6 y)","proofString":"subst.\napply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y.","conclusion":"(m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (E_s \\₁ eq a) x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y)","proofString":"apply MAPEQ in C1.\ndestruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (m ↑₁ E_t) x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y.","conclusion":"(m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (C1 : (m ↑₁ E_t) x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y)","proofString":"destruct C1 as (x2' & INE & MAP).\nunfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y) : (m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y.","conclusion":"(m ↑ (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊)) x2\n  y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y)","proofString":"unfold collect_rel.\napply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (rf_s ⨾ rmw_s)＊ x6 y)","proofString":"apply rtE in P8.\ndestruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x6 y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (P8 : (⦗fun _ : actid => True⦘ ∪ (rf_s ⨾ rmw_s)⁺) x6 y)","proofString":"destruct P8 as [EQ | PATH].\ndestruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver.\nassert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (EQ : ⦗fun _ : actid => True⦘ x6 y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (EQ : ⦗fun _ : actid => True⦘ x6 y)","proofString":"destruct EQ as (EQ & T).\ndestruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (EQ : x6 = y) (T : True) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (EQ : x6 = y) (T : True)","proofString":"destruct P5 as (x3' & x6' & P5 & M1 & M2).\nexists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (x3' x6' : actid) (P5 : rpo_t x3' x6') (M1 : m x3' = x3) (M2 : m x6' = x6) (P7 : is_rlx lab_s x6) (EQ : x6 = y) (T : True) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (x3' x6' : actid) (P5 : rpo_t x3' x6') (M1 : m x3' = x3) (M2 : m x6' = x6) (P7 : is_rlx lab_s x6) (EQ : x6 = y) (T : True)","proofString":"exists x2', x6'.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (x3' x6' : actid) (P5 : rpo_t x3' x6') (M1 : m x3' = x3) (M2 : m x6' = x6) (P7 : is_rlx lab_s x6) (EQ : x6 = y) (T : True) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' x6' /\\\nm x2' = x2 /\\ m x6' = y.","conclusion":"(⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' x6' /\\\nm x2' = x2 /\\ m x6' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (x3' x6' : actid) (P5 : rpo_t x3' x6') (M1 : m x3' = x3) (M2 : m x6' = x6) (P7 : is_rlx lab_s x6) (EQ : x6 = y) (T : True)","proofString":"splits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' x6'.","conclusion":"(⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"unfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : exists z : actid,\n  ⦗E_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗Rel_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗F_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           sb_t z1 z2 /\\\n           (exists z3 : actid,\n              ⦗Rlx_t⦘ z2 z3 /\\\n              (exists z4 : actid,\n                 ⦗W_t⦘ z3 z4 /\\\n                 (fun x y : actid =>\n                  exists z5 : actid, rf_t x z5 /\\ rmw_t z5 y)＊ z4 x6'))))).","conclusion":"exists z : actid,\n  ⦗E_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗Rel_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗F_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           sb_t z1 z2 /\\\n           (exists z3 : actid,\n              ⦗Rlx_t⦘ z2 z3 /\\\n              (exists z4 : actid,\n                 ⦗W_t⦘ z3 z4 /\\\n                 (fun x y : actid =>\n                  exists z5 : actid, rf_t x z5 /\\ rmw_t z5 y)＊ z4 x6')))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"exists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗E_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗Rel_t⦘ x2' z /\\\n   (exists z0 : actid,\n      ⦗F_t⦘ z z0 /\\\n      (exists z1 : actid,\n         sb_t z0 z1 /\\\n         (exists z2 : actid,\n            ⦗Rlx_t⦘ z1 z2 /\\\n            (exists z3 : actid,\n               ⦗W_t⦘ z2 z3 /\\\n               (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                 z3 x6'))))).","conclusion":"⦗E_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗Rel_t⦘ x2' z /\\\n   (exists z0 : actid,\n      ⦗F_t⦘ z z0 /\\\n      (exists z1 : actid,\n         sb_t z0 z1 /\\\n         (exists z2 : actid,\n            ⦗Rlx_t⦘ z1 z2 /\\\n            (exists z3 : actid,\n               ⦗W_t⦘ z2 z3 /\\\n               (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                 z3 x6')))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"splits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 x6')))).","conclusion":"exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 x6'))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"exists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗Rel_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗F_t⦘ x2' z /\\\n   (exists z0 : actid,\n      sb_t z z0 /\\\n      (exists z1 : actid,\n         ⦗Rlx_t⦘ z0 z1 /\\\n         (exists z2 : actid,\n            ⦗W_t⦘ z1 z2 /\\\n            (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n              z2 x6')))).","conclusion":"⦗Rel_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗F_t⦘ x2' z /\\\n   (exists z0 : actid,\n      sb_t z z0 /\\\n      (exists z1 : actid,\n         ⦗Rlx_t⦘ z0 z1 /\\\n         (exists z2 : actid,\n            ⦗W_t⦘ z1 z2 /\\\n            (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n              z2 x6'))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"splits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗Rel_t⦘ x2' x2'.","conclusion":"⦗Rel_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"apply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗Rel_t⦘ x2' x2'.","conclusion":"⦗Rel_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"unfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗Rel_t⦘ x2' x2'.","conclusion":"⦗Rel_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"red.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : x2' = x2' /\\ is_rel lab_t x2'.","conclusion":"x2' = x2' /\\ is_rel lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"splits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : is_rel lab_t x2'.","conclusion":"is_rel lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"unfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel (mod lab_s (m x2'))) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : mode_le Orel (mod lab_t x2').","conclusion":"mode_le Orel (mod lab_t x2')","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel (mod lab_s (m x2'))) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"unfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel\n  match lab_s (m x2') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : mode_le Orel\n  match lab_t x2' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","conclusion":"mode_le Orel\n  match lab_t x2' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel\n  match lab_s (m x2') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"rewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : exists z : actid,\n  ⦗F_t⦘ x2' z /\\\n  (exists z0 : actid,\n     sb_t z z0 /\\\n     (exists z1 : actid,\n        ⦗Rlx_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           ⦗W_t⦘ z1 z2 /\\\n           (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n             z2 x6'))).","conclusion":"exists z : actid,\n  ⦗F_t⦘ x2' z /\\\n  (exists z0 : actid,\n     sb_t z z0 /\\\n     (exists z1 : actid,\n        ⦗Rlx_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           ⦗W_t⦘ z1 z2 /\\\n           (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n             z2 x6')))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"exists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗F_t⦘ x2' x2' /\\\n(exists z : actid,\n   sb_t x2' z /\\\n   (exists z0 : actid,\n      ⦗Rlx_t⦘ z z0 /\\\n      (exists z1 : actid,\n         ⦗W_t⦘ z0 z1 /\\\n         (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n           x6'))).","conclusion":"⦗F_t⦘ x2' x2' /\\\n(exists z : actid,\n   sb_t x2' z /\\\n   (exists z0 : actid,\n      ⦗Rlx_t⦘ z z0 /\\\n      (exists z1 : actid,\n         ⦗W_t⦘ z0 z1 /\\\n         (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n           x6')))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"splits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nexists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗F_t⦘ x2' x2'.","conclusion":"⦗F_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"apply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗F_t⦘ x2' x2'.","conclusion":"⦗F_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"unfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : ⦗F_t⦘ x2' x2'.","conclusion":"⦗F_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"red.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : x2' = x2' /\\ is_f lab_t x2'.","conclusion":"x2' = x2' /\\ is_f lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"splits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : is_f lab_t x2'.","conclusion":"is_f lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"unfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : match lab_s (m x2') with\n| Afence _ => true\n| _ => false\nend) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : match lab_t x2' with\n| Afence _ => true\n| _ => false\nend.","conclusion":"match lab_t x2' with\n| Afence _ => true\n| _ => false\nend","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : match lab_s (m x2') with\n| Afence _ => true\n| _ => false\nend) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"rewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          x6')).","conclusion":"exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          x6'))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"exists x6'.\nsplits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : sb_t x2' x6' /\\\n(exists z : actid,\n   ⦗Rlx_t⦘ x6' z /\\\n   (exists z0 : actid,\n      ⦗W_t⦘ z z0 /\\\n      (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x6')).","conclusion":"sb_t x2' x6' /\\\n(exists z : actid,\n   ⦗Rlx_t⦘ x6' z /\\\n   (exists z0 : actid,\n      ⦗W_t⦘ z z0 /\\\n      (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x6'))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"splits.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''.\nassert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : sb_t x2' x6'.","conclusion":"sb_t x2' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"destruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : sb_t x2' x6'.","conclusion":"sb_t x2' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"apply INJ in MEQ; vauto.\napply rpo_in_sb in P5; vauto.\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x3' : actid) (C3 : is_f lab_s (m x3')) (INE : E_t x3') (C2 : is_rel lab_s (m x3')) (INE' : E_s (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : sb_t x3' x6'.","conclusion":"sb_t x3' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x3' : actid) (C3 : is_f lab_s (m x3')) (INE : E_t x3') (C2 : is_rel lab_s (m x3')) (INE' : E_s (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"apply rpo_in_sb in P5; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : E_t x3'.","conclusion":"E_t x3'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"apply wf_rpoE in P5; vauto.\ndestruct P5 as (x' & INE'' & P'); apply INE''."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : E_t x3'.","conclusion":"E_t x3'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"destruct P5 as (x' & INE'' & P'); apply INE''."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : exists z : actid,\n  ⦗Rlx_t⦘ x6' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x6').","conclusion":"exists z : actid,\n  ⦗Rlx_t⦘ x6' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x6')","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"assert (XE : E_t x6').\napply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : E_t x6'.","conclusion":"E_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"apply wf_rpoE in P5; vauto.\ndestruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) : E_t x6'.","conclusion":"E_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : (⦗E_t⦘ ⨾ rpo_t ⨾ ⦗E_t⦘) x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True)","proofString":"destruct P5 as (x4' & (EQ1 & INE1) & (x5'              & P' & (EQ2 & INE2))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : exists z : actid,\n  ⦗Rlx_t⦘ x6' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x6').","conclusion":"exists z : actid,\n  ⦗Rlx_t⦘ x6' z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 x6')","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"exists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : ⦗Rlx_t⦘ x6' x6' /\\\n(exists z : actid,\n   ⦗W_t⦘ x6' z /\\\n   (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z x6').","conclusion":"⦗Rlx_t⦘ x6' x6' /\\\n(exists z : actid,\n   ⦗W_t⦘ x6' z /\\\n   (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z x6')","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"splits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : ⦗Rlx_t⦘ x6' x6'.","conclusion":"⦗Rlx_t⦘ x6' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"red; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : is_rlx lab_t x6'.","conclusion":"is_rlx lab_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"apply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : (lab_s ∘ m) x6' = lab_t x6') : is_rlx lab_t x6'.","conclusion":"is_rlx lab_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : (lab_s ∘ m) x6' = lab_t x6')","proofString":"unfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : lab_s (m x6') = lab_t x6') : is_rlx lab_t x6'.","conclusion":"is_rlx lab_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : lab_s (m x6') = lab_t x6')","proofString":"unfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : mode_le Orlx (mod lab_s (m x6'))) (T : True) (XE : lab_s (m x6') = lab_t x6') : mode_le Orlx (mod lab_t x6').","conclusion":"mode_le Orlx (mod lab_t x6')","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : mode_le Orlx (mod lab_s (m x6'))) (T : True) (XE : lab_s (m x6') = lab_t x6')","proofString":"unfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : mode_le Orlx\n  match lab_s (m x6') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (T : True) (XE : lab_s (m x6') = lab_t x6') : mode_le Orlx\n  match lab_t x6' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","conclusion":"mode_le Orlx\n  match lab_t x6' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : mode_le Orlx\n  match lab_s (m x6') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (T : True) (XE : lab_s (m x6') = lab_t x6')","proofString":"rewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : exists z : actid,\n  ⦗W_t⦘ x6' z /\\\n  (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z x6'.","conclusion":"exists z : actid,\n  ⦗W_t⦘ x6' z /\\\n  (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"exists x6'.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : ⦗W_t⦘ x6' x6' /\\\n(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x6' x6'.","conclusion":"⦗W_t⦘ x6' x6' /\\\n(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x6' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"splits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : ⦗W_t⦘ x6' x6'.","conclusion":"⦗W_t⦘ x6' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"red; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : is_w lab_t x6'.","conclusion":"is_w lab_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"apply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : (lab_s ∘ m) x6' = lab_t x6') : is_w lab_t x6'.","conclusion":"is_w lab_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : (lab_s ∘ m) x6' = lab_t x6')","proofString":"unfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : lab_s (m x6') = lab_t x6') : is_w lab_t x6'.","conclusion":"is_w lab_t x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : lab_s (m x6') = lab_t x6')","proofString":"unfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : match lab_s (m x6') with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : lab_s (m x6') = lab_t x6') : match lab_t x6' with\n| Astore _ _ _ _ => true\n| _ => false\nend.","conclusion":"match lab_t x6' with\n| Astore _ _ _ _ => true\n| _ => false\nend","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : match lab_s (m x6') with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : lab_s (m x6') = lab_t x6')","proofString":"rewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x6' x6'.","conclusion":"(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x6' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"apply rtE.\nleft.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : (⦗fun _ : actid => True⦘\n ∪ (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺) x6' x6'.","conclusion":"(⦗fun _ : actid => True⦘\n ∪ (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺) x6' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"left.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6') : ⦗fun _ : actid => True⦘ x6' x6'.","conclusion":"⦗fun _ : actid => True⦘ x6' x6'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x6' : actid) (C6 : is_w lab_s (m x6')) (P5 : rpo_t x3' x6') (P7 : is_rlx lab_s (m x6')) (T : True) (XE : E_t x6')","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (rf_s ⨾ rmw_s)⁺ x6 y) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (rf_s ⨾ rmw_s)⁺ x6 y)","proofString":"assert (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺).\napply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto.\napply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (rf_s ⨾ rmw_s)⁺ x6 y) : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺.","conclusion":"(rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (rf_s ⨾ rmw_s)⁺ x6 y)","proofString":"apply clos_trans_mori; apply read_sw_helper_rf_rmw; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (rf_s ⨾ rmw_s)⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (rf_s ⨾ rmw_s)⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"apply TREQ in PATH.\nassert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"assert (REST : (rf_t ⨾ rmw_t) ≡ restr_rel E_t (rf_t ⨾ rmw_t)).\nrewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21.\nassert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t).","conclusion":"rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"rewrite restr_relE.\nrewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : rf_t ⨾ rmw_t ≡ ⦗E_t⦘ ⨾ (rf_t ⨾ rmw_t) ⨾ ⦗E_t⦘.","conclusion":"rf_t ⨾ rmw_t ≡ ⦗E_t⦘ ⨾ (rf_t ⨾ rmw_t) ⨾ ⦗E_t⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"rewrite wf_rfE, wf_rmwE; eauto.\nclear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘.","conclusion":"(⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘\n≡ ⦗E_t⦘ ⨾ ((⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘ ⨾ rmw_t ⨾ ⦗E_t⦘) ⨾ ⦗E_t⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺)","proofString":"clear; basic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t))","proofString":"assert (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺).\nsplit; apply clos_trans_mori; rewrite <- REST; vauto.\napply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺.","conclusion":"(m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t))","proofString":"split; apply clos_trans_mori; rewrite <- REST; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"apply TREQ' in PATH.\napply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = x2 /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2 : actid) (C2 : is_rel lab_s x2) (x2' : actid) (INE : E_t x2') (MAP : m x2' = x2) (C3 : is_f lab_s x2) (x3 : actid) (P4 : ⦗E_s⦘ x2 x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺ x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"apply collect_rel_ct_inj in PATH; vauto.\nunfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (restr_rel E_t (rf_t ⨾ rmw_t))⁺) x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : (m ↑ (restr_rel E_t (rf_t ⨾ rmw_t))⁺) x6 y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"unfold collect_rel in PATH.\ndestruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : exists x' y' : actid,\n  (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x' y' /\\ m x' = x6 /\\ m y' = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (PATH : exists x' y' : actid,\n  (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x' y' /\\ m x' = x6 /\\ m y' = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"destruct PATH as (x0 & y0 & (COND & M1 & M2)).\nassert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"assert (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺).\napply clos_trans_mori; basic_solver.\napply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺.","conclusion":"(restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺)","proofString":"apply clos_trans_mori; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply TREQ'' in COND.\nexists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x' y' /\\\n  m x' = m x2' /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"exists x2', y0.\nsplits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' y0 /\\\nm x2' = m x2' /\\ m y0 = y.","conclusion":"(⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' y0 /\\\nm x2' = m x2' /\\ m y0 = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (y x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x6 : actid) (C6 : is_w lab_s x6) (P5 : (m ↑ rpo_t) x3 x6) (P7 : is_rlx lab_s x6) (x0 y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (M1 : m x0 = x6) (M2 : m y0 = y) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"splits; vauto.\nunfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : (⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' y0.","conclusion":"(⦗E_t⦘ ⨾ ⦗Rel_t⦘ ⨾ ⦗F_t⦘ ⨾ sb_t ⨾ ⦗Rlx_t⦘ ⨾ ⦗W_t⦘ ⨾ (rf_t ⨾ rmw_t)＊) x2' y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"unfold seq.\nexists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists z : actid,\n  ⦗E_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗Rel_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗F_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           sb_t z1 z2 /\\\n           (exists z3 : actid,\n              ⦗Rlx_t⦘ z2 z3 /\\\n              (exists z4 : actid,\n                 ⦗W_t⦘ z3 z4 /\\\n                 (fun x y : actid =>\n                  exists z5 : actid, rf_t x z5 /\\ rmw_t z5 y)＊ z4 y0))))).","conclusion":"exists z : actid,\n  ⦗E_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗Rel_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗F_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           sb_t z1 z2 /\\\n           (exists z3 : actid,\n              ⦗Rlx_t⦘ z2 z3 /\\\n              (exists z4 : actid,\n                 ⦗W_t⦘ z3 z4 /\\\n                 (fun x y : actid =>\n                  exists z5 : actid, rf_t x z5 /\\ rmw_t z5 y)＊ z4 y0)))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"exists x2'.\nsplits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗E_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗Rel_t⦘ x2' z /\\\n   (exists z0 : actid,\n      ⦗F_t⦘ z z0 /\\\n      (exists z1 : actid,\n         sb_t z0 z1 /\\\n         (exists z2 : actid,\n            ⦗Rlx_t⦘ z1 z2 /\\\n            (exists z3 : actid,\n               ⦗W_t⦘ z2 z3 /\\\n               (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                 z3 y0))))).","conclusion":"⦗E_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗Rel_t⦘ x2' z /\\\n   (exists z0 : actid,\n      ⦗F_t⦘ z z0 /\\\n      (exists z1 : actid,\n         sb_t z0 z1 /\\\n         (exists z2 : actid,\n            ⦗Rlx_t⦘ z1 z2 /\\\n            (exists z3 : actid,\n               ⦗W_t⦘ z2 z3 /\\\n               (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                 z3 y0)))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"splits; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 y0)))).","conclusion":"exists z : actid,\n  ⦗Rel_t⦘ x2' z /\\\n  (exists z0 : actid,\n     ⦗F_t⦘ z z0 /\\\n     (exists z1 : actid,\n        sb_t z0 z1 /\\\n        (exists z2 : actid,\n           ⦗Rlx_t⦘ z1 z2 /\\\n           (exists z3 : actid,\n              ⦗W_t⦘ z2 z3 /\\\n              (fun x y : actid => exists z4 : actid, rf_t x z4 /\\ rmw_t z4 y)＊\n                z3 y0))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"exists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗Rel_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗F_t⦘ x2' z /\\\n   (exists z0 : actid,\n      sb_t z z0 /\\\n      (exists z1 : actid,\n         ⦗Rlx_t⦘ z0 z1 /\\\n         (exists z2 : actid,\n            ⦗W_t⦘ z1 z2 /\\\n            (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n              z2 y0)))).","conclusion":"⦗Rel_t⦘ x2' x2' /\\\n(exists z : actid,\n   ⦗F_t⦘ x2' z /\\\n   (exists z0 : actid,\n      sb_t z z0 /\\\n      (exists z1 : actid,\n         ⦗Rlx_t⦘ z0 z1 /\\\n         (exists z2 : actid,\n            ⦗W_t⦘ z1 z2 /\\\n            (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n              z2 y0))))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"splits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto.\nexists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗Rel_t⦘ x2' x2'.","conclusion":"⦗Rel_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗Rel_t⦘ x2' x2'.","conclusion":"⦗Rel_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"unfold compose in INE.\nred.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗Rel_t⦘ x2' x2'.","conclusion":"⦗Rel_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"red.\nsplits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : x2' = x2' /\\ is_rel lab_t x2'.","conclusion":"x2' = x2' /\\ is_rel lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"splits; vauto.\nunfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : is_rel lab_t x2'.","conclusion":"is_rel lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"unfold is_rel in *.\nunfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel (mod lab_s (m x2'))) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : mode_le Orel (mod lab_t x2').","conclusion":"mode_le Orel (mod lab_t x2')","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel (mod lab_s (m x2'))) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"unfold mod in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel\n  match lab_s (m x2') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : mode_le Orel\n  match lab_t x2' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","conclusion":"mode_le Orel\n  match lab_t x2' with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : mode_le Orel\n  match lab_s (m x2') with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"rewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists z : actid,\n  ⦗F_t⦘ x2' z /\\\n  (exists z0 : actid,\n     sb_t z z0 /\\\n     (exists z1 : actid,\n        ⦗Rlx_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           ⦗W_t⦘ z1 z2 /\\\n           (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n             z2 y0))).","conclusion":"exists z : actid,\n  ⦗F_t⦘ x2' z /\\\n  (exists z0 : actid,\n     sb_t z z0 /\\\n     (exists z1 : actid,\n        ⦗Rlx_t⦘ z0 z1 /\\\n        (exists z2 : actid,\n           ⦗W_t⦘ z1 z2 /\\\n           (fun x y : actid => exists z3 : actid, rf_t x z3 /\\ rmw_t z3 y)＊\n             z2 y0)))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"exists x2'.\nsplits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗F_t⦘ x2' x2' /\\\n(exists z : actid,\n   sb_t x2' z /\\\n   (exists z0 : actid,\n      ⦗Rlx_t⦘ z z0 /\\\n      (exists z1 : actid,\n         ⦗W_t⦘ z0 z1 /\\\n         (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n           y0))).","conclusion":"⦗F_t⦘ x2' x2' /\\\n(exists z : actid,\n   sb_t x2' z /\\\n   (exists z0 : actid,\n      ⦗Rlx_t⦘ z z0 /\\\n      (exists z1 : actid,\n         ⦗W_t⦘ z0 z1 /\\\n         (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n           y0)))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"splits.\napply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto.\nassert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗F_t⦘ x2' x2'.","conclusion":"⦗F_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply LABS in INE.\nunfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗F_t⦘ x2' x2'.","conclusion":"⦗F_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : (lab_s ∘ m) x2' = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"unfold compose in INE.\nred.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : ⦗F_t⦘ x2' x2'.","conclusion":"⦗F_t⦘ x2' x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"red.\nsplits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : x2' = x2' /\\ is_f lab_t x2'.","conclusion":"x2' = x2' /\\ is_f lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"splits; vauto.\nunfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : is_f lab_t x2'.","conclusion":"is_f lab_t x2'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"unfold is_f in *.\nrewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : match lab_s (m x2') with\n| Afence _ => true\n| _ => false\nend) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : match lab_t x2' with\n| Afence _ => true\n| _ => false\nend.","conclusion":"match lab_t x2' with\n| Afence _ => true\n| _ => false\nend","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : lab_s (m x2') = lab_t x2') (C3 : match lab_s (m x2') with\n| Afence _ => true\n| _ => false\nend) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"rewrite <- INE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          y0)).","conclusion":"exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          y0))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"assert (XE : E_t x0).\napply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'.\nexists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply ct_begin in COND.\ndestruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : ((rf_t ⨾ rmw_t) ⨾ (rf_t ⨾ rmw_t)＊) x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : ((rf_t ⨾ rmw_t) ⨾ (rf_t ⨾ rmw_t)＊) x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"destruct COND as (x1 & (x1' & P1 & P2) & P3).\napply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 x1 x1' : actid) (P1 : rf_t x0 x1') (P2 : rmw_t x1' x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 x1 x1' : actid) (P1 : rf_t x0 x1') (P2 : rmw_t x1' x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"apply wf_rfE in P1; vauto.\ndestruct P1 as (x'' & INE' & REST'); apply INE'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 x1 x1' : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x0 x1') (P2 : rmw_t x1' x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) : E_t x0.","conclusion":"E_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 x1 x1' : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x0 x1') (P2 : rmw_t x1' x1) (P3 : (rf_t ⨾ rmw_t)＊ x1 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺)","proofString":"destruct P1 as (x'' & INE' & REST'); apply INE'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          y0)).","conclusion":"exists z : actid,\n  sb_t x2' z /\\\n  (exists z0 : actid,\n     ⦗Rlx_t⦘ z z0 /\\\n     (exists z1 : actid,\n        ⦗W_t⦘ z0 z1 /\\\n        (fun x y : actid => exists z2 : actid, rf_t x z2 /\\ rmw_t z2 y)＊ z1\n          y0))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"exists x0.\nsplits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : sb_t x2' x0 /\\\n(exists z : actid,\n   ⦗Rlx_t⦘ x0 z /\\\n   (exists z0 : actid,\n      ⦗W_t⦘ z z0 /\\\n      (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0)).","conclusion":"sb_t x2' x0 /\\\n(exists z : actid,\n   ⦗Rlx_t⦘ x0 z /\\\n   (exists z0 : actid,\n      ⦗W_t⦘ z z0 /\\\n      (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0))","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"splits.\ndestruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto.\ndestruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : sb_t x2' x0.","conclusion":"sb_t x2' x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"destruct P5 as (x3' & x0' & (COND' & M1' & M2')).\napply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (COND' : rpo_t x3' x0') (M1' : m x3' = x3) (M2' : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : sb_t x2' x0.","conclusion":"sb_t x2' x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (COND' : rpo_t x3' x0') (M1' : m x3' = x3) (M2' : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply rpo_in_sb in COND'; vauto.\napply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (COND' : sb_t x3' x0') (M2' : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : sb_t x2' x0.","conclusion":"sb_t x2' x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (COND' : sb_t x3' x0') (M2' : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply INJ in M2'; vauto.\ndestruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'.\ndestruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : sb_t x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : sb_t x2' x0.","conclusion":"sb_t x2' x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : sb_t x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"destruct P4 as (MEQ & INE').\napply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : sb_t x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : sb_t x2' x0.","conclusion":"sb_t x2' x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : sb_t x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply INJ in MEQ; vauto.\napply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : sb_t x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : E_t x3'.","conclusion":"E_t x3'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : sb_t x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply wf_sbE in COND'; vauto.\ndestruct COND' as (x4' & EQ' & P').\napply EQ'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : (⦗E_t⦘ ⨾ sb_t ⨾ ⦗E_t⦘) x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : E_t x3'.","conclusion":"E_t x3'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (COND' : (⦗E_t⦘ ⨾ sb_t ⨾ ⦗E_t⦘) x3' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"destruct COND' as (x4' & EQ' & P').\napply EQ'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x4' : actid) (EQ' : ⦗E_t⦘ x3' x4') (P' : (sb_t ⨾ ⦗E_t⦘) x4' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : E_t x3'.","conclusion":"E_t x3'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (MEQ : m x2' = m x3') (INE' : E_s (m x2')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x4' : actid) (EQ' : ⦗E_t⦘ x3' x4') (P' : (sb_t ⨾ ⦗E_t⦘) x4' x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply EQ'."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (COND' : sb_t x3' x0') (M2' : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : E_t x0'.","conclusion":"E_t x0'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (COND' : sb_t x3' x0') (M2' : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"destruct COND' as (x1' & C1' & (x4' & C2' & (EQ' & INE'))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : exists z : actid,\n  ⦗Rlx_t⦘ x0 z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0).","conclusion":"exists z : actid,\n  ⦗Rlx_t⦘ x0 z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (P5 : (m ↑ rpo_t) x3 (m x0)) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"destruct P5 as (x3' & x0' & P5 & M1 & M2).\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : exists z : actid,\n  ⦗Rlx_t⦘ x0 z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0).","conclusion":"exists z : actid,\n  ⦗Rlx_t⦘ x0 z /\\\n  (exists z0 : actid,\n     ⦗W_t⦘ z z0 /\\\n     (fun x y : actid => exists z1 : actid, rf_t x z1 /\\ rmw_t z1 y)＊ z0 y0)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"exists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : ⦗Rlx_t⦘ x0 x0 /\\\n(exists z : actid,\n   ⦗W_t⦘ x0 z /\\\n   (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z y0).","conclusion":"⦗Rlx_t⦘ x0 x0 /\\\n(exists z : actid,\n   ⦗W_t⦘ x0 z /\\\n   (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z y0)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"splits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto.\nexists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : ⦗Rlx_t⦘ x0 x0.","conclusion":"⦗Rlx_t⦘ x0 x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"red; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : is_rlx lab_t x0.","conclusion":"is_rlx lab_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply LABS in XE.\nunfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : (lab_s ∘ m) x0 = lab_t x0) : is_rlx lab_t x0.","conclusion":"is_rlx lab_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : (lab_s ∘ m) x0 = lab_t x0)","proofString":"unfold compose in XE.\nunfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0) : is_rlx lab_t x0.","conclusion":"is_rlx lab_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0)","proofString":"unfold is_rlx in *.\nunfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : mode_le Orlx (mod lab_s (m x0))) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0) : mode_le Orlx (mod lab_t x0).","conclusion":"mode_le Orlx (mod lab_t x0)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : mode_le Orlx (mod lab_s (m x0))) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0)","proofString":"unfold mod in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : mode_le Orlx\n  match lab_s (m x0) with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0) : mode_le Orlx\n  match lab_t x0 with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end.","conclusion":"mode_le Orlx\n  match lab_t x0 with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : mode_le Orlx\n  match lab_s (m x0) with\n  | Aload _ o _ _ | Astore _ o _ _ | Afence o => o\n  end) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0)","proofString":"rewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : exists z : actid,\n  ⦗W_t⦘ x0 z /\\\n  (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z y0.","conclusion":"exists z : actid,\n  ⦗W_t⦘ x0 z /\\\n  (fun x y : actid => exists z0 : actid, rf_t x z0 /\\ rmw_t z0 y)＊ z y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"exists x0.\nsplits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : ⦗W_t⦘ x0 x0 /\\\n(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x0 y0.","conclusion":"⦗W_t⦘ x0 x0 /\\\n(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x0 y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"splits.\nred; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto.\napply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : ⦗W_t⦘ x0 x0.","conclusion":"⦗W_t⦘ x0 x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"red; splits; vauto.\napply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : is_w lab_t x0.","conclusion":"is_w lab_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply LABS in XE.\nunfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : (lab_s ∘ m) x0 = lab_t x0) : is_w lab_t x0.","conclusion":"is_w lab_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : (lab_s ∘ m) x0 = lab_t x0)","proofString":"unfold compose in XE.\nunfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0) : is_w lab_t x0.","conclusion":"is_w lab_t x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0)","proofString":"unfold is_w in *.\nrewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : match lab_s (m x0) with\n| Astore _ _ _ _ => true\n| _ => false\nend) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0) : match lab_t x0 with\n| Astore _ _ _ _ => true\n| _ => false\nend.","conclusion":"match lab_t x0 with\n| Astore _ _ _ _ => true\n| _ => false\nend","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3' : actid) (P4 : ⦗E_s⦘ (m x2') (m x3')) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x0' : actid) (P5 : rpo_t x3' x0') (M2 : m x0' = m x0) (C6 : match lab_s (m x0) with\n| Astore _ _ _ _ => true\n| _ => false\nend) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : lab_s (m x0) = lab_t x0)","proofString":"rewrite <- XE; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x0 y0.","conclusion":"(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)＊ x0 y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"apply rtE.\nright.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : (⦗fun _ : actid => True⦘\n ∪ (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺) x0 y0.","conclusion":"(⦗fun _ : actid => True⦘\n ∪ (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺) x0 y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"right.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0) : (fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺ x0 y0.","conclusion":"(fun x y : actid => exists z : actid, rf_t x z /\\ rmw_t z y)⁺ x0 y0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (EAA : sb_t ∩ same_loc_t ≡ ⦗E_t⦘ ⨾ sb_t ∩ same_loc_t ⨾ ⦗E_t⦘) (EAA' : sb_s ∩ same_loc_s ≡ ⦗E_s⦘ ⨾ sb_s ∩ same_loc_s ⨾ ⦗E_s⦘) (x2' : actid) (C2 : is_rel lab_s (m x2')) (INE : E_t x2') (C3 : is_f lab_s (m x2')) (x3 : actid) (P4 : ⦗E_s⦘ (m x2') x3) (x0 : actid) (P7 : is_rlx lab_s (m x0)) (x3' x0' : actid) (P5 : rpo_t x3' x0') (M1 : m x3' = x3) (M2 : m x0' = m x0) (C6 : is_w lab_s (m x0)) (y0 : actid) (COND : (rf_t ⨾ rmw_t)⁺ x0 y0) (TREQ : (rf_s ⨾ rmw_s)⁺ ⊆ (m ↑ (rf_t ⨾ rmw_t))⁺) (REST : rf_t ⨾ rmw_t ≡ restr_rel E_t (rf_t ⨾ rmw_t)) (TREQ' : (m ↑ (rf_t ⨾ rmw_t))⁺ ≡ (m ↑ restr_rel E_t (rf_t ⨾ rmw_t))⁺) (TREQ'' : (restr_rel E_t (rf_t ⨾ rmw_t))⁺ ⊆ (rf_t ⨾ rmw_t)⁺) (XE : E_t x0)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","conclusion":"sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t)","proofString":"unfold set_minus.\nsplit; [|basic_solver].\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sw_s ≡ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ sw_s.","conclusion":"sw_s ≡ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ sw_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t)","proofString":"split; [|basic_solver].\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) : sw_s ⊆ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ sw_s.","conclusion":"sw_s ⊆ ⦗fun x : actid => E_s x /\\ a <> x⦘ ⨾ sw_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t)","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : (⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ ⨾ sw_s) x y.","conclusion":"(⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ ⨾ sw_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : exists z : actid, ⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x z /\\ sw_s z y.","conclusion":"exists z : actid, ⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x z /\\ sw_s z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"exists x.\nsplit; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : ⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x x /\\ sw_s x y.","conclusion":"⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x x /\\ sw_s x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"split; vauto.\nsplit; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : ⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x x.","conclusion":"⦗fun x0 : actid => E_s x0 /\\ a <> x0⦘ x x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"split; vauto.\nsplit.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : E_s x /\\ a <> x.","conclusion":"E_s x /\\ a <> x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"split.\napply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE.\nassert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : E_s x.","conclusion":"E_s x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"apply wf_swE in PATH; eauto.\ndestruct PATH as (x' & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) : E_s x.","conclusion":"E_s x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y)","proofString":"destruct PATH as (x' & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y x' : actid) (INE : ⦗E_s⦘ x x') (REST : (sw_s ⨾ ⦗E_s⦘) x' y) : E_s x.","conclusion":"E_s x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y x' : actid) (INE : ⦗E_s⦘ x x') (REST : (sw_s ⨾ ⦗E_s⦘) x' y)","proofString":"apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : a <> x.","conclusion":"a <> x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"assert (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\napply read_codom_sw with (m := m); eauto.\nintros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y)","proofString":"apply read_codom_sw with (m := m); eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) : a <> x.","conclusion":"a <> x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅)","proofString":"intros F.\nsubst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (F : a = x) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (x y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (F : a = x)","proofString":"subst.\nassert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅)","proofString":"assert (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)).\nintros z EQ.\nsubst.\nbasic_solver 12.\ndestruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s).","conclusion":"eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅)","proofString":"intros z EQ.\nsubst.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) (z : actid) (EQ : y = z) : codom_rel (⦗eq x⦘ ⨾ sw_s) z.","conclusion":"codom_rel (⦗eq x⦘ ⨾ sw_s) z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) (z : actid) (EQ : y = z)","proofString":"subst.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (z : actid) (PATH : sw_s x z) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) : codom_rel (⦗eq x⦘ ⨾ sw_s) z.","conclusion":"codom_rel (⦗eq x⦘ ⨾ sw_s) z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (z : actid) (PATH : sw_s x z) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅)","proofString":"basic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (CODOM : codom_rel (⦗eq x⦘ ⨾ sw_s) ≡₁ ∅) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s))","proofString":"destruct CODOM as (IN1 & IN2).\nrewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq x⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (IN1 : codom_rel (⦗eq x⦘ ⨾ sw_s) ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s))","proofString":"rewrite <- VERT in IN1.\ndestruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (IN1 : eq y ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x)) (IS_ACQ : ~ is_acq lab_s x) (IS_R : is_r lab_s x) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq x ≡₁ m ↑₁ E_t) (y : actid) (PATH : sw_s x y) (IN1 : eq y ⊆₁ ∅) (IN2 : ∅ ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s)) (VERT : eq y ⊆₁ codom_rel (⦗eq x⦘ ⨾ sw_s))","proofString":"destruct IN1 with (x := y); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t.","conclusion":"codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s)","proofString":"rewrite wf_releaseE; vauto.\nrewrite seq_union_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : codom_rel (⦗E_t⦘ ⨾ (⦗W_t ∩₁ Rel_t⦘ ∪ ⦗E_t⦘ ⨾ release_t ⨾ ⦗E_t⦘)) ⊆₁ E_t.","conclusion":"codom_rel (⦗E_t⦘ ⨾ (⦗W_t ∩₁ Rel_t⦘ ∪ ⦗E_t⦘ ⨾ release_t ⨾ ⦗E_t⦘)) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s)","proofString":"rewrite seq_union_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) : codom_rel (⦗E_t⦘ ⨾ ⦗W_t ∩₁ Rel_t⦘ ∪ ⦗E_t⦘ ⨾ ⦗E_t⦘ ⨾ release_t ⨾ ⦗E_t⦘) ⊆₁ E_t.","conclusion":"codom_rel (⦗E_t⦘ ⨾ ⦗W_t ∩₁ Rel_t⦘ ∪ ⦗E_t⦘ ⨾ ⦗E_t⦘ ⨾ release_t ⨾ ⦗E_t⦘) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) : inj_dom\n  (codom_rel (⦗E_t⦘ ⨾ release_t)\n   ∪₁ dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘)) m.","conclusion":"inj_dom\n  (codom_rel (⦗E_t⦘ ⨾ release_t)\n   ∪₁ dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘)) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t)","proofString":"assert (IN2 : dom_rel (rf_t ⨾ ⦗fun a0 : actid => is_rlx lab_t a0⦘ ⨾            (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘) ⊆₁ E_t).\ninduction 1 as (x0 & COND).\ndestruct COND as (x1 & P1 & P2).\napply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE.\nrewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) : dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) ⊆₁ E_t.","conclusion":"dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) ⊆₁ E_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t)","proofString":"induction 1 as (x0 & COND).\ndestruct COND as (x1 & P1 & P2).\napply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 : actid) (COND : (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x x0) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 : actid) (COND : (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x x0)","proofString":"destruct COND as (x1 & P1 & P2).\napply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 : actid) (P1 : rf_t x x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 : actid) (P1 : rf_t x x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0)","proofString":"apply wf_rfE in P1; eauto.\ndestruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 : actid) (P1 : (⦗E_t⦘ ⨾ rf_t ⨾ ⦗E_t⦘) x x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0)","proofString":"destruct P1 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 x2 : actid) (INE : ⦗E_t⦘ x x2) (REST : (rf_t ⨾ ⦗E_t⦘) x2 x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0) : E_t x.","conclusion":"E_t x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (x x0 x1 x2 : actid) (INE : ⦗E_t⦘ x x2) (REST : (rf_t ⨾ ⦗E_t⦘) x2 x1) (P2 : (⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘) x1 x0)","proofString":"apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (IN2 : dom_rel\n  (rf_t\n   ⨾ ⦗Rlx_t⦘\n     ⨾ (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘)\n⊆₁ E_t) : inj_dom\n  (codom_rel (⦗E_t⦘ ⨾ release_t)\n   ∪₁ dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘)) m.","conclusion":"inj_dom\n  (codom_rel (⦗E_t⦘ ⨾ release_t)\n   ∪₁ dom_rel (rf_t ⨾ ⦗Rlx_t⦘ ⨾ (sb_t ⨾ ⦗F_t⦘)^? ⨾ ⦗Acq_t⦘)) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (IN2 : dom_rel\n  (rf_t\n   ⨾ ⦗Rlx_t⦘\n     ⨾ (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘)\n⊆₁ E_t)","proofString":"rewrite IN1, IN2.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (IN2 : dom_rel\n  (rf_t\n   ⨾ ⦗Rlx_t⦘\n     ⨾ (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘)\n⊆₁ E_t) : inj_dom (E_t ∪₁ E_t) m.","conclusion":"inj_dom (E_t ∪₁ E_t) m","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (MAPEQ : E_s \\₁ eq a ≡₁ m ↑₁ E_t) (START : sw_s ≡ ⦗E_s \\₁ eq a⦘ ⨾ sw_s) (IN1 : codom_rel (⦗E_t⦘ ⨾ release_t) ⊆₁ E_t) (IN2 : dom_rel\n  (rf_t\n   ⨾ ⦗Rlx_t⦘\n     ⨾ (sb_t ⨾ ⦗fun a0 : actid => F_t a0⦘)^? ⨾ ⦗fun a0 : actid => Acq_t a0⦘)\n⊆₁ E_t)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"arewrite (sw_s ⊆ sw_s ⨾ ⦗E_s⦘) at 1.\nrewrite wf_swE; eauto.\nbasic_solver.\nrewrite E_MAP at 1.\nrewrite id_union.\nrewrite seq_union_r.\napply inclusion_union_l.\nhahn_frame.\nrewrite E_MAP.\napply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12.\narewrite (sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘).\nrewrite wf_swD; eauto.\nbasic_solver.\nunfold is_acq in *.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ sw_s ⨾ ⦗E_s⦘.","conclusion":"sw_s ⊆ sw_s ⨾ ⦗E_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite wf_swE; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘ ⊆ (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) ⨾ ⦗E_s⦘.","conclusion":"⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘ ⊆ (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) ⨾ ⦗E_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗E_s⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ ⦗E_s⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite E_MAP at 1.\nrewrite id_union.\nrewrite seq_union_r.\napply inclusion_union_l.\nhahn_frame.\nrewrite E_MAP.\napply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12.\narewrite (sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘).\nrewrite wf_swD; eauto.\nbasic_solver.\nunfold is_acq in *.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗m ↑₁ E_t ∪₁ eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ ⦗m ↑₁ E_t ∪₁ eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite id_union.\nrewrite seq_union_r.\napply inclusion_union_l.\nhahn_frame.\nrewrite E_MAP.\napply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12.\narewrite (sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘).\nrewrite wf_swD; eauto.\nbasic_solver.\nunfold is_acq in *.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ (⦗m ↑₁ E_t⦘ ∪ ⦗eq a⦘) ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ (⦗m ↑₁ E_t⦘ ∪ ⦗eq a⦘) ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite seq_union_r.\napply inclusion_union_l.\nhahn_frame.\nrewrite E_MAP.\napply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12.\narewrite (sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘).\nrewrite wf_swD; eauto.\nbasic_solver.\nunfold is_acq in *.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗m ↑₁ E_t⦘ ∪ sw_s ⨾ ⦗eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ ⦗m ↑₁ E_t⦘ ∪ sw_s ⨾ ⦗eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply inclusion_union_l.\nhahn_frame.\nrewrite E_MAP.\napply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12.\narewrite (sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘).\nrewrite wf_swD; eauto.\nbasic_solver.\nunfold is_acq in *.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗m ↑₁ E_t⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ ⦗m ↑₁ E_t⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"hahn_frame.\nrewrite E_MAP.\napply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗m ↑₁ E_t⦘ ⊆ ⦗E_s \\₁ eq a⦘.","conclusion":"⦗m ↑₁ E_t⦘ ⊆ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite E_MAP.\napply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗m ↑₁ E_t⦘ ⊆ ⦗(m ↑₁ E_t ∪₁ eq a) \\₁ eq a⦘.","conclusion":"⦗m ↑₁ E_t⦘ ⊆ ⦗(m ↑₁ E_t ∪₁ eq a) \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply eqv_rel_mori.\nrewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t ⊆₁ (m ↑₁ E_t ∪₁ eq a) \\₁ eq a.","conclusion":"m ↑₁ E_t ⊆₁ (m ↑₁ E_t ∪₁ eq a) \\₁ eq a","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite set_minus_union_l.\narewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a ∪₁ eq a \\₁ eq a.","conclusion":"m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a ∪₁ eq a \\₁ eq a","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"arewrite (m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a).\nunfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto.\nbasic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a.","conclusion":"m ↑₁ E_t ⊆₁ m ↑₁ E_t \\₁ eq a","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"unfold set_minus.\nintros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t ⊆₁ (fun x : actid => (m ↑₁ E_t) x /\\ a <> x).","conclusion":"m ↑₁ E_t ⊆₁ (fun x : actid => (m ↑₁ E_t) x /\\ a <> x)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x SET.\nsplit; vauto.\nintros EQ.\ndestruct NIN with x; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (SET : (m ↑₁ E_t) x) : (m ↑₁ E_t) x /\\ a <> x.","conclusion":"(m ↑₁ E_t) x /\\ a <> x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (SET : (m ↑₁ E_t) x)","proofString":"split; vauto.\nintros EQ.\ndestruct NIN with x; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (SET : (m ↑₁ E_t) x) : a <> x.","conclusion":"a <> x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (SET : (m ↑₁ E_t) x)","proofString":"intros EQ.\ndestruct NIN with x; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (SET : (m ↑₁ E_t) x) (EQ : a = x) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x : actid) (SET : (m ↑₁ E_t) x) (EQ : a = x)","proofString":"destruct NIN with x; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑₁ E_t \\₁ eq a ⊆₁ m ↑₁ E_t \\₁ eq a ∪₁ eq a \\₁ eq a.","conclusion":"m ↑₁ E_t \\₁ eq a ⊆₁ m ↑₁ E_t \\₁ eq a ∪₁ eq a \\₁ eq a","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"basic_solver 12."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ ⦗eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"arewrite (sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘).\nrewrite wf_swD; eauto.\nbasic_solver.\nunfold is_acq in *.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘.","conclusion":"sw_s ⊆ sw_s ⨾ ⦗Acq_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite wf_swD; eauto.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘\n⊆ (⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ⨾ ⦗Acq_s⦘.","conclusion":"⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘\n⊆ (⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ⨾ ⦗Acq_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗Acq_s⦘ ⨾ ⦗eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ ⦗Acq_s⦘ ⨾ ⦗eq a⦘ ⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"unfold is_acq in *.\nbasic_solver 21."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ mode_le Oacq (mod lab_s a)) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗fun a0 : actid => mode_le Oacq (mod lab_s a0)⦘ ⨾ ⦗eq a⦘\n⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"sw_s ⨾ ⦗fun a0 : actid => mode_le Oacq (mod lab_s a0)⦘ ⨾ ⦗eq a⦘\n⊆ sw_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ mode_le Oacq (mod lab_s a)) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"basic_solver 21."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) : codom_rel (r ⨾ r'⁺) ⊆₁ ∅.","conclusion":"codom_rel (r ⨾ r'⁺) ⊆₁ ∅","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅)","proofString":"intros x H.\ninduction H.\ndestruct H.\ndestruct H.\ninduction H0.\napply EMP.\nbasic_solver.\napply EMP in IHclos_trans1; eauto.\napply EMP in IHclos_trans1.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x : A) (H : codom_rel (r ⨾ r'⁺) x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x : A) (H : codom_rel (r ⨾ r'⁺) x)","proofString":"induction H.\ndestruct H.\ndestruct H.\ninduction H0.\napply EMP.\nbasic_solver.\napply EMP in IHclos_trans1; eauto.\napply EMP in IHclos_trans1.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x x0 : A) (H : (r ⨾ r'⁺) x0 x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x x0 : A) (H : (r ⨾ r'⁺) x0 x)","proofString":"destruct H.\ndestruct H.\ninduction H0.\napply EMP.\nbasic_solver.\napply EMP in IHclos_trans1; eauto.\napply EMP in IHclos_trans1.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1 /\\ r'⁺ x1 x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1 /\\ r'⁺ x1 x)","proofString":"destruct H.\ninduction H0.\napply EMP.\nbasic_solver.\napply EMP in IHclos_trans1; eauto.\napply EMP in IHclos_trans1.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1) (H0 : r'⁺ x1 x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1) (H0 : r'⁺ x1 x)","proofString":"induction H0.\napply EMP.\nbasic_solver.\napply EMP in IHclos_trans1; eauto.\napply EMP in IHclos_trans1.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y : A) (H0 : r' x y) : ∅ y.","conclusion":"∅ y","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y : A) (H0 : r' x y)","proofString":"apply EMP.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y : A) (H0 : r' x y) : codom_rel (r ⨾ r') y.","conclusion":"codom_rel (r ⨾ r') y","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y : A) (H0 : r' x y)","proofString":"basic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y z : A) (H0_ : r'⁺ x y) (H0_0 : r'⁺ y z) (IHclos_trans1 : r x0 x -> ∅ y) (IHclos_trans2 : r x0 y -> ∅ z) : ∅ z.","conclusion":"∅ z","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y z : A) (H0_ : r'⁺ x y) (H0_0 : r'⁺ y z) (IHclos_trans1 : r x0 x -> ∅ y) (IHclos_trans2 : r x0 y -> ∅ z)","proofString":"apply EMP in IHclos_trans1; eauto.\napply EMP in IHclos_trans1.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y z : A) (H0_ : r'⁺ x y) (H0_0 : r'⁺ y z) (IHclos_trans1 : codom_rel (r ⨾ r') y) (IHclos_trans2 : r x0 y -> ∅ z) : ∅ z.","conclusion":"∅ z","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y z : A) (H0_ : r'⁺ x y) (H0_0 : r'⁺ y z) (IHclos_trans1 : codom_rel (r ⨾ r') y) (IHclos_trans2 : r x0 y -> ∅ z)","proofString":"apply EMP in IHclos_trans1.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y z : A) (H0_ : r'⁺ x y) (H0_0 : r'⁺ y z) (IHclos_trans1 : ∅ y) (IHclos_trans2 : r x0 y -> ∅ z) : ∅ z.","conclusion":"∅ z","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel (r ⨾ r') ≡₁ ∅) (x0 x : A) (H : r x0 x) (y z : A) (H0_ : r'⁺ x y) (H0_0 : r'⁺ y z) (IHclos_trans1 : ∅ y) (IHclos_trans2 : r x0 y -> ∅ z)","proofString":"basic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) : r ⨾ r' ≡ ∅₂.","conclusion":"r ⨾ r' ≡ ∅₂","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅)","proofString":"split; try basic_solver.\nintros x y H.\ndestruct H.\ndestruct H.\nassert (Q : ∅ x0).\napply EMP.\nbasic_solver.\ndestruct Q."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) : r ⨾ r' ⊆ ∅₂.","conclusion":"r ⨾ r' ⊆ ∅₂","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅)","proofString":"intros x y H.\ndestruct H.\ndestruct H.\nassert (Q : ∅ x0).\napply EMP.\nbasic_solver.\ndestruct Q."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y : A) (H : (r ⨾ r') x y) : False.","conclusion":"False","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y : A) (H : (r ⨾ r') x y)","proofString":"destruct H.\ndestruct H.\nassert (Q : ∅ x0).\napply EMP.\nbasic_solver.\ndestruct Q."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0 /\\ r' x0 y) : False.","conclusion":"False","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0 /\\ r' x0 y)","proofString":"destruct H.\nassert (Q : ∅ x0).\napply EMP.\nbasic_solver.\ndestruct Q."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y) : False.","conclusion":"False","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y)","proofString":"assert (Q : ∅ x0).\napply EMP.\nbasic_solver.\ndestruct Q."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y) : ∅ x0.","conclusion":"∅ x0","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y)","proofString":"apply EMP.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y) : codom_rel r x0.","conclusion":"codom_rel r x0","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y)","proofString":"basic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y) (Q : ∅ x0) : False.","conclusion":"False","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x y x0 : A) (H : r x x0) (H0 : r' x0 y) (Q : ∅ x0)","proofString":"destruct Q."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) : codom_rel (r ⨾ r') ⊆₁ ∅.","conclusion":"codom_rel (r ⨾ r') ⊆₁ ∅","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅)","proofString":"intros x H.\ninduction H.\ndestruct H.\ndestruct H.\ndestruct EMP.\nassert (IN : codom_rel r x1).\nexists x0; eauto.\nassert (F : ∅ x1).\napply H1 in IN; eauto.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x : A) (H : codom_rel (r ⨾ r') x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x : A) (H : codom_rel (r ⨾ r') x)","proofString":"induction H.\ndestruct H.\ndestruct H.\ndestruct EMP.\nassert (IN : codom_rel r x1).\nexists x0; eauto.\nassert (F : ∅ x1).\napply H1 in IN; eauto.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x x0 : A) (H : (r ⨾ r') x0 x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x x0 : A) (H : (r ⨾ r') x0 x)","proofString":"destruct H.\ndestruct H.\ndestruct EMP.\nassert (IN : codom_rel r x1).\nexists x0; eauto.\nassert (F : ∅ x1).\napply H1 in IN; eauto.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1 /\\ r' x1 x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1 /\\ r' x1 x)","proofString":"destruct H.\ndestruct EMP.\nassert (IN : codom_rel r x1).\nexists x0; eauto.\nassert (F : ∅ x1).\napply H1 in IN; eauto.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (EMP : codom_rel r ≡₁ ∅) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x)","proofString":"destruct EMP.\nassert (IN : codom_rel r x1).\nexists x0; eauto.\nassert (F : ∅ x1).\napply H1 in IN; eauto.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x)","proofString":"assert (IN : codom_rel r x1).\nexists x0; eauto.\nassert (F : ∅ x1).\napply H1 in IN; eauto.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) : codom_rel r x1.","conclusion":"codom_rel r x1","hypotheses":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x)","proofString":"exists x0; eauto."},{"statement":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) (IN : codom_rel r x1) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) (IN : codom_rel r x1)","proofString":"assert (F : ∅ x1).\napply H1 in IN; eauto.\nbasic_solver."},{"statement":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) (IN : codom_rel r x1) : ∅ x1.","conclusion":"∅ x1","hypotheses":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) (IN : codom_rel r x1)","proofString":"apply H1 in IN; eauto."},{"statement":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) (IN : codom_rel r x1) (F : ∅ x1) : ∅ x.","conclusion":"∅ x","hypotheses":"(A : Type) (r r' : relation A) (H1 : codom_rel r ⊆₁ ∅) (H2 : ∅ ⊆₁ codom_rel r) (x x0 x1 : A) (H : r x0 x1) (H0 : r' x1 x) (IN : codom_rel r x1) (F : ∅ x1)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel (⦗eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺) ≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite ct_begin.\nrewrite <- seqA.\nrewrite !seq_union_r.\nrewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nrewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  (⦗eq a⦘\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n≡₁ ∅.","conclusion":"codom_rel\n  (⦗eq a⦘\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite <- seqA.\nrewrite !seq_union_r.\nrewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nrewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s))\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s))\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite !seq_union_r.\nrewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nrewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗eq a⦘ ⨾ rpo_s ∪ ⦗eq a⦘ ⨾ sw_s)\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗eq a⦘ ⨾ rpo_s ∪ ⦗eq a⦘ ⨾ sw_s)\n   ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite !seq_union_l.\nrewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nrewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n   ∪ (⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n   ∪ (⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n   ∪ (⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n   ∪ (⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite !codom_union.\nassert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nrewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"assert (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nrewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply empty_seq_codom; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅)","proofString":"assert (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅).\nrewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty.\nassert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅)","proofString":"rewrite wf_swD; eauto.\nassert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel (⦗eq a⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅)","proofString":"assert (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘).\nbasic_solver.\nrewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘.","conclusion":"⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : codom_rel (⦗eq a⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅.","conclusion":"codom_rel (⦗eq a⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite READ.\nrewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : codom_rel\n  ((⦗eq a⦘ ⨾ ⦗R_s⦘)\n   ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ ⦗R_s⦘)\n   ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite seqA.\nassert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : codom_rel\n  (⦗eq a⦘ ⨾ ⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅.","conclusion":"codom_rel\n  (⦗eq a⦘ ⨾ ⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"assert (F : ⦗fun a0 : actid => R_s a0⦘          ⨾ ⦗((fun a0 : actid => is_f lab_s a0) ∪₁ (fun a0 : actid => W_s a0))            ∩₁ (fun a0 : actid => is_rel lab_s a0)⦘ ≡ ∅₂).\nrewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver.\nrewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ≡ ∅₂.","conclusion":"⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite seq_eqv.\nrewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s ∩₁ ((F_s ∪₁ W_s) ∩₁ Rel_s)⦘ ≡ ∅₂.","conclusion":"⦗R_s ∩₁ ((F_s ∪₁ W_s) ∩₁ Rel_s)⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite set_inter_union_l.\nrewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s ∩₁ (F_s ∩₁ Rel_s ∪₁ W_s ∩₁ Rel_s)⦘ ≡ ∅₂.","conclusion":"⦗R_s ∩₁ (F_s ∩₁ Rel_s ∪₁ W_s ∩₁ Rel_s)⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite set_inter_union_r.\nrewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s ∩₁ (F_s ∩₁ Rel_s) ∪₁ R_s ∩₁ (W_s ∩₁ Rel_s)⦘ ≡ ∅₂.","conclusion":"⦗R_s ∩₁ (F_s ∩₁ Rel_s) ∪₁ R_s ∩₁ (W_s ∩₁ Rel_s)⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite <- set_interA.\nrewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s ∩₁ F_s ∩₁ Rel_s ∪₁ R_s ∩₁ (W_s ∩₁ Rel_s)⦘ ≡ ∅₂.","conclusion":"⦗R_s ∩₁ F_s ∩₁ Rel_s ∪₁ R_s ∩₁ (W_s ∩₁ Rel_s)⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"rewrite <- set_interA.\nunfold is_f, is_w, is_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗R_s ∩₁ F_s ∩₁ Rel_s ∪₁ R_s ∩₁ W_s ∩₁ Rel_s⦘ ≡ ∅₂.","conclusion":"⦗R_s ∩₁ F_s ∩₁ Rel_s ∪₁ R_s ∩₁ W_s ∩₁ Rel_s⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"unfold is_f, is_w, is_r.\nbasic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) : ⦗(fun a0 : actid =>\n  match lab_s a0 with\n  | Aload _ _ _ _ => true\n  | _ => false\n  end)\n ∩₁ (fun a0 : actid =>\n     match lab_s a0 with\n     | Afence _ => true\n     | _ => false\n     end) ∩₁ Rel_s\n ∪₁ (fun a0 : actid =>\n     match lab_s a0 with\n     | Aload _ _ _ _ => true\n     | _ => false\n     end)\n    ∩₁ (fun a0 : actid =>\n        match lab_s a0 with\n        | Astore _ _ _ _ => true\n        | _ => false\n        end) ∩₁ Rel_s⦘ ≡ ∅₂.","conclusion":"⦗(fun a0 : actid =>\n  match lab_s a0 with\n  | Aload _ _ _ _ => true\n  | _ => false\n  end)\n ∩₁ (fun a0 : actid =>\n     match lab_s a0 with\n     | Afence _ => true\n     | _ => false\n     end) ∩₁ Rel_s\n ∪₁ (fun a0 : actid =>\n     match lab_s a0 with\n     | Aload _ _ _ _ => true\n     | _ => false\n     end)\n    ∩₁ (fun a0 : actid =>\n        match lab_s a0 with\n        | Astore _ _ _ _ => true\n        | _ => false\n        end) ∩₁ Rel_s⦘ ≡ ∅₂","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘)","proofString":"basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel\n  (⦗eq a⦘ ⨾ ⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅.","conclusion":"codom_rel\n  (⦗eq a⦘ ⨾ ⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘)\n≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"rewrite <- seqA.\nrewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel\n  ((⦗eq a⦘ ⨾ ⦗R_s⦘)\n   ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ ⦗R_s⦘)\n   ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"rewrite <- seqA.\napply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel\n  (((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘)\n   ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ≡₁ ∅.","conclusion":"codom_rel\n  (((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘)\n   ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"apply empty_seq_codom.\nsplit; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ≡₁ ∅.","conclusion":"codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"split; try basic_solver.\nrewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅.","conclusion":"codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"rewrite READ.\nrewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel (((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅.","conclusion":"codom_rel (((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗R_s⦘) ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"rewrite seqA.\nrewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅.","conclusion":"codom_rel ((⦗eq a⦘ ⨾ ⦗R_s⦘) ⨾ ⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"rewrite codom_seq.\nrewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂) : codom_rel (⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅.","conclusion":"codom_rel (⦗R_s⦘ ⨾ ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘) ⊆₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (READ : ⦗eq a⦘ ≡ ⦗eq a⦘ ⨾ ⦗R_s⦘) (F : ⦗fun a0 : actid => R_s a0⦘ ⨾ ⦗(F_s ∪₁ (fun a0 : actid => W_s a0)) ∩₁ Rel_s⦘\n≡ ∅₂)","proofString":"rewrite F.\napply codom_empty."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅)","proofString":"assert (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nassert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅)","proofString":"apply empty_seq_codom; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅)","proofString":"assert (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) by vauto.\nassert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅)","proofString":"assert (EMP5 : codom_rel ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅).\napply empty_seq_codom; eauto.\nrewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅)","proofString":"apply empty_seq_codom; eauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (EMP5 : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅.","conclusion":"codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊)\n∪₁ codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (EMP1 : codom_rel ((⦗eq a⦘ ⨾ rpo_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP2 : codom_rel (⦗eq a⦘ ⨾ sw_s) ≡₁ ∅) (EMP3 : codom_rel ((⦗eq a⦘ ⨾ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅) (EMP4 : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (EMP5 : codom_rel\n  ((⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) ≡₁ ∅)","proofString":"rewrite EMP1, EMP3, EMP5.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rhb_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rhb_s ⨾ ⦗E_s \\₁ eq a⦘.","conclusion":"rhb_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rhb_s ⨾ ⦗E_s \\₁ eq a⦘","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"hahn_frame_r.\nunfold rhb.\nrewrite ct_begin.\nhahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rhb_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rhb_s.","conclusion":"rhb_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rhb_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"unfold rhb.\nrewrite ct_begin.\nhahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite ct_begin.\nhahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n⊆ ⦗E_s \\₁ eq a⦘\n  ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊\n⊆ ⦗E_s \\₁ eq a⦘\n  ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"hahn_frame_r.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s).","conclusion":"sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","conclusion":"sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ sw_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","conclusion":"sb_s ∩ same_loc_s ∪ rpo_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s.","conclusion":"sb_s ∩ same_loc_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s) x y.","conclusion":"(⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ (sb_s ∩ same_loc_s) z y.","conclusion":"exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ (sb_s ∩ same_loc_s) z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x /\\ (sb_s ∩ same_loc_s) x y.","conclusion":"⦗E_s \\₁ eq a⦘ x x /\\ (sb_s ∩ same_loc_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x.","conclusion":"⦗E_s \\₁ eq a⦘ x x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"red; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"assert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : (sb_s ∩ same_loc_s) x y)","proofString":"destruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : sb_s x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : sb_s x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y)","proofString":"apply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y)","proofString":"destruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (E_s \\₁ eq a) x'.","conclusion":"(E_s \\₁ eq a) x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : a <> x'.","conclusion":"a <> x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"intros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"unfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"destruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"destruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y.","conclusion":"exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x' y.","conclusion":"(⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : ⦗eq x'⦘ x' x' /\\ (sb_s ∩ same_loc_s) x' y.","conclusion":"⦗eq x'⦘ x' x' /\\ (sb_s ∩ same_loc_s) x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rpo_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","conclusion":"rpo_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ rpo_s) x y.","conclusion":"(⦗E_s \\₁ eq a⦘ ⨾ rpo_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ rpo_s z y.","conclusion":"exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ rpo_s z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ rpo_s x y.","conclusion":"⦗E_s \\₁ eq a⦘ x x /\\ rpo_s x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x.","conclusion":"⦗E_s \\₁ eq a⦘ x x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"red; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"assert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : rpo_s x y)","proofString":"apply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) x y) (PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) x y) (PATH' : rpo_s x y)","proofString":"destruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (E_s \\₁ eq a) x'.","conclusion":"(E_s \\₁ eq a) x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : a <> x'.","conclusion":"a <> x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"intros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"unfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"destruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"destruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y.","conclusion":"exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (⦗eq x'⦘ ⨾ rpo_s) x' y.","conclusion":"(⦗eq x'⦘ ⨾ rpo_s) x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : ⦗eq x'⦘ x' x' /\\ rpo_s x' y.","conclusion":"⦗eq x'⦘ x' x' /\\ rpo_s x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","conclusion":"sw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sw_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ sw_s) x y.","conclusion":"(⦗E_s \\₁ eq a⦘ ⨾ sw_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ sw_s z y.","conclusion":"exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ sw_s z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ sw_s x y.","conclusion":"⦗E_s \\₁ eq a⦘ x x /\\ sw_s x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x.","conclusion":"⦗E_s \\₁ eq a⦘ x x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"red; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"assert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : sw_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : sw_s x y)","proofString":"apply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) (PATH' : sw_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) (PATH' : sw_s x y)","proofString":"destruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y) : (E_s \\₁ eq a) x0.","conclusion":"(E_s \\₁ eq a) x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y)","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y) : a <> x0.","conclusion":"a <> x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y)","proofString":"intros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y)","proofString":"apply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : (⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x0 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : (⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x0 y)","proofString":"destruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (x1 : actid) (COND' : ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ x0 x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (x1 : actid) (COND' : ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ x0 x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"destruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (COND' : ((F_s ∪₁ W_s) ∩₁ Rel_s) x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (COND' : ((F_s ∪₁ W_s) ∩₁ Rel_s) x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"destruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (P1 : (F_s ∪₁ W_s) x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (P1 : (F_s ∪₁ W_s) x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"destruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : is_f lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : is_f lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"unfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : match lab_s x1 with\n| Afence _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : match lab_s x1 with\n| Afence _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y)","proofString":"desf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : is_w lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : is_w lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"unfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : match lab_s x1 with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : match lab_s x1 with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y)","proofString":"desf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s).","conclusion":"sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"unfold rhb.\nrewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s).","conclusion":"sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite !seq_union_r.\napply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","conclusion":"sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s\n  ∪ ⦗E_s \\₁ eq a⦘ ⨾ sw_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply union_mori.\napply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ∪ rpo_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","conclusion":"sb_s ∩ same_loc_s ∪ rpo_s\n⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s ∪ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply union_mori.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto.\nintros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s.","conclusion":"sb_s ∩ same_loc_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s) x y.","conclusion":"(⦗E_s \\₁ eq a⦘ ⨾ sb_s ∩ same_loc_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ (sb_s ∩ same_loc_s) z y.","conclusion":"exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ (sb_s ∩ same_loc_s) z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x /\\ (sb_s ∩ same_loc_s) x y.","conclusion":"⦗E_s \\₁ eq a⦘ x x /\\ (sb_s ∩ same_loc_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : ⦗E_s \\₁ eq a⦘ x x.","conclusion":"⦗E_s \\₁ eq a⦘ x x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"red; split; vauto.\nassert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (sb_s ∩ same_loc_s) x y)","proofString":"assert (PATH' : (sb_s ∩ same_loc_s) x y) by apply PATH.\ndestruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : (sb_s ∩ same_loc_s) x y)","proofString":"destruct PATH as (P1 & P2).\napply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : sb_s x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : sb_s x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y)","proofString":"apply wf_sbE in P1.\ndestruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (P1 : (⦗E_s⦘ ⨾ sb_s ⨾ ⦗E_s⦘) x y) (P2 : same_loc_s x y) (PATH' : (sb_s ∩ same_loc_s) x y)","proofString":"destruct P1 as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (E_s \\₁ eq a) x'.","conclusion":"(E_s \\₁ eq a) x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : a <> x'.","conclusion":"a <> x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"intros F; subst.\nunfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"unfold codom_rel in CODOM_SB_SL.\ndestruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"destruct CODOM_SB_SL as (IN1 & IN2).\ndestruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"destruct IN1 with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y.","conclusion":"exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x' y.","conclusion":"(⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y) : ⦗eq x'⦘ x' x' /\\ (sb_s ∩ same_loc_s) x' y.","conclusion":"⦗eq x'⦘ x' x' /\\ (sb_s ∩ same_loc_s) x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (IN1 : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0) ⊆₁ ∅) (IN2 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) x y0)) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (sb_s ⨾ ⦗E_s⦘) x' y) (PATH' : (sb_s ∩ same_loc_s) x' y) (P2 : same_loc_s x' y)","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rpo_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s.","conclusion":"rpo_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ rpo_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ rpo_s) x y.","conclusion":"(⦗E_s \\₁ eq a⦘ ⨾ rpo_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ rpo_s z y.","conclusion":"exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ rpo_s z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ rpo_s x y.","conclusion":"⦗E_s \\₁ eq a⦘ x x /\\ rpo_s x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : ⦗E_s \\₁ eq a⦘ x x.","conclusion":"⦗E_s \\₁ eq a⦘ x x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"red; split; vauto.\nassert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : rpo_s x y)","proofString":"assert (PATH' : (rpo_s) x y) by apply PATH.\napply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : rpo_s x y)","proofString":"apply wf_rpoE in PATH; vauto.\ndestruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) x y) (PATH' : rpo_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ rpo_s ⨾ ⦗E_s⦘) x y) (PATH' : rpo_s x y)","proofString":"destruct PATH as (x' & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (E_s \\₁ eq a) x'.","conclusion":"(E_s \\₁ eq a) x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : a <> x'.","conclusion":"a <> x'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x' : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"intros F; subst.\nunfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x'⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"unfold codom_rel in CODOM_RPO.\ndestruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"destruct CODOM_RPO.\ndestruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"destruct H with y.\nexists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y.","conclusion":"exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"exists x'.\nsplit with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : (⦗eq x'⦘ ⨾ rpo_s) x' y.","conclusion":"(⦗eq x'⦘ ⨾ rpo_s) x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"split with x'.\nsplit; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y) : ⦗eq x'⦘ x' x' /\\ rpo_s x' y.","conclusion":"⦗eq x'⦘ x' x' /\\ rpo_s x' y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x' : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x') (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x'⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x'⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x'⦘ ⊆ m ↑ rpo_t) (H : (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0) ⊆₁ ∅) (H0 : ∅ ⊆₁ (fun y0 : actid => exists x : actid, (⦗eq x'⦘ ⨾ rpo_s) x y0)) (NIN : set_disjoint (m ↑₁ E_t) (eq x')) (IS_ACQ : ~ is_acq lab_s x') (IS_R : is_r lab_s x') (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x') (REST : (rpo_s ⨾ ⦗E_s⦘) x' y) (PATH' : rpo_s x' y)","proofString":"split; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sw_s.","conclusion":"sw_s ⊆ ⦗E_s \\₁ eq a⦘ ⨾ sw_s","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\nunfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (⦗E_s \\₁ eq a⦘ ⨾ sw_s) x y.","conclusion":"(⦗E_s \\₁ eq a⦘ ⨾ sw_s) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"unfold seq.\nexists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ sw_s z y.","conclusion":"exists z : actid, ⦗E_s \\₁ eq a⦘ x z /\\ sw_s z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"exists x.\nsplit; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x /\\ sw_s x y.","conclusion":"⦗E_s \\₁ eq a⦘ x x /\\ sw_s x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"split; vauto.\nred; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : ⦗E_s \\₁ eq a⦘ x x.","conclusion":"⦗E_s \\₁ eq a⦘ x x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"red; split; vauto.\nassert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : sw_s x y)","proofString":"assert (PATH' : (sw_s) x y) by apply PATH.\napply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : sw_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH PATH' : sw_s x y)","proofString":"apply wf_swE in PATH; vauto.\ndestruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) (PATH' : sw_s x y) : (E_s \\₁ eq a) x.","conclusion":"(E_s \\₁ eq a) x","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (⦗E_s⦘ ⨾ sw_s ⨾ ⦗E_s⦘) x y) (PATH' : sw_s x y)","proofString":"destruct PATH as (x0 & (EQ & INE) & REST); subst.\nunfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y) : (E_s \\₁ eq a) x0.","conclusion":"(E_s \\₁ eq a) x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y)","proofString":"unfold set_minus; split; vauto.\nintros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y) : a <> x0.","conclusion":"a <> x0","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y x0 : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y)","proofString":"intros F; subst.\napply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : sw_s x0 y)","proofString":"apply wf_swD in PATH'; vauto.\ndestruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : (⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x0 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (PATH' : (⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ ⨾ sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x0 y)","proofString":"destruct PATH' as (x1 & COND' & REST').\ndestruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (x1 : actid) (COND' : ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ x0 x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x0 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x0) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x0⦘) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (CODOM_SB_SL : codom_rel (⦗eq x0⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x0⦘ ⊆ m ↑ rpo_t) (CODOM_RPO : codom_rel (⦗eq x0⦘ ⨾ rpo_s) ≡₁ ∅) (NIN : set_disjoint (m ↑₁ E_t) (eq x0)) (IS_ACQ : ~ is_acq lab_s x0) (IS_R : is_r lab_s x0) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (INE : E_s x0) (REST : (sw_s ⨾ ⦗E_s⦘) x0 y) (x1 : actid) (COND' : ⦗(F_s ∪₁ W_s) ∩₁ Rel_s⦘ x0 x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"destruct COND' as (EQ & COND'); subst.\ndestruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (COND' : ((F_s ∪₁ W_s) ∩₁ Rel_s) x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (COND' : ((F_s ∪₁ W_s) ∩₁ Rel_s) x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"destruct COND' as (P1 & P2).\ndestruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (P1 : (F_s ∪₁ W_s) x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (P1 : (F_s ∪₁ W_s) x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"destruct P1 as [F | W].\nunfold is_f, is_w, is_r in *.\ndesf.\nunfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : is_f lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : is_f lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"unfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : match lab_s x1 with\n| Afence _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (F : match lab_s x1 with\n| Afence _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y)","proofString":"desf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : is_w lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s x1) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : is_w lab_s x1) (P2 : is_rel lab_s x1) (REST' : (sw_s ⨾ ⦗(F_s ∪₁ R_s) ∩₁ Acq_s⦘) x1 y)","proofString":"unfold is_f, is_w, is_r in *.\ndesf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : match lab_s x1 with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y) : False.","conclusion":"False","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (x1 : actid) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq x1) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : match lab_s x1 with\n| Aload _ _ _ _ => true\n| _ => false\nend) (IS_ACQ : ~ is_acq lab_s x1) (NIN : set_disjoint (m ↑₁ E_t) (eq x1)) (CODOM_RPO : codom_rel (⦗eq x1⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq x1⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq x1⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq x1⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (y : actid) (REST : (sw_s ⨾ ⦗E_s⦘) x1 y) (INE : E_s x1) (W : match lab_s x1 with\n| Astore _ _ _ _ => true\n| _ => false\nend) (P2 : is_rel lab_s x1) (REST' : (sw_s\n ⨾ ⦗((fun a : actid => match lab_s a with\n                       | Afence _ => true\n                       | _ => false\n                       end)\n     ∪₁ (fun a : actid =>\n         match lab_s a with\n         | Aload _ _ _ _ => true\n         | _ => false\n         end)) ∩₁ Acq_s⦘) x1 y)","proofString":"desf."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n∪ sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t).","conclusion":"sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n∪ sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite !collect_rel_union.\napply union_mori.\napply union_mori.\nrewrite SB_SL_MAP.\nclear; basic_solver.\nrewrite RPO_MAP.\nclear; basic_solver.\nrewrite read_sw_sub_helper; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n∪ sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t) ∪ m ↑ rpo_t ∪ m ↑ sw_t.","conclusion":"sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n∪ sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t) ∪ m ↑ rpo_t ∪ m ↑ sw_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply union_mori.\napply union_mori.\nrewrite SB_SL_MAP.\nclear; basic_solver.\nrewrite RPO_MAP.\nclear; basic_solver.\nrewrite read_sw_sub_helper; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t) ∪ m ↑ rpo_t.","conclusion":"sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ∪ rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t) ∪ m ↑ rpo_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"apply union_mori.\nrewrite SB_SL_MAP.\nclear; basic_solver.\nrewrite RPO_MAP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t).","conclusion":"sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite SB_SL_MAP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ (sb_t ∩ same_loc_t) ⊆ m ↑ (sb_t ∩ same_loc_t).","conclusion":"m ↑ (sb_t ∩ same_loc_t) ⊆ m ↑ (sb_t ∩ same_loc_t)","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t.","conclusion":"rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite RPO_MAP.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ rpo_t ⊆ m ↑ rpo_t.","conclusion":"m ↑ rpo_t ⊆ m ↑ rpo_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ sw_t.","conclusion":"sw_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ sw_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite read_sw_sub_helper; eauto.\nclear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ sw_t ⊆ m ↑ sw_t.","conclusion":"m ↑ sw_t ⊆ m ↑ sw_t","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"clear; basic_solver."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"assert (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘                  ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nrewrite rhb_fin; vauto.\nintros x y PATH.\nunfold collect_rel in *.\ndestruct PATH as (x' & y' & (PATH & M1 & M2)).\nexists x', y'.\nsplits; vauto.\nassert (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘                  ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nassert (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺              ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nintros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto.\nrewrite <- TRIN at 2.\napply seq_mori; vauto.\nassert (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺                  ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\napply inclusion_t_ind_right; vauto.\nassert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                  ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"rewrite rhb_fin; vauto.\nintros x y PATH.\nunfold collect_rel in *.\ndestruct PATH as (x' & y' & (PATH & M1 & M2)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s)","proofString":"intros x y PATH.\nunfold collect_rel in *.\ndestruct PATH as (x' & y' & (PATH & M1 & M2)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)) x y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","conclusion":"(m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)) x y)","proofString":"unfold collect_rel in *.\ndestruct PATH as (x' & y' & (PATH & M1 & M2)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x' y' : actid, rpo_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x' y' : actid, (sb_t ∩ same_loc_t) x' y' /\\ m x' = x0 /\\ m y' = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, rf_t x' y' /\\ m x' = x0 /\\ m y' = y0)\n  ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, co_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, rmw_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y' /\\ m x' = x /\\ m y' = y) : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x' y' : actid, rpo_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x' y' : actid, (sb_t ∩ same_loc_t) x' y' /\\ m x' = x0 /\\ m y' = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, rf_t x' y' /\\ m x' = x0 /\\ m y' = y0)\n  ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, co_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x' y' : actid, rmw_t x' y' /\\ m x' = x0 /\\ m y' = y0)) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y : actid) (PATH : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y' /\\ m x' = x /\\ m y' = y)","proofString":"destruct PATH as (x' & y' & (PATH & M1 & M2)).\nexists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rpo_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid,\n     (sb_t ∩ same_loc_t) x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rf_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)\n  ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, co_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rmw_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' y' : actid) (PATH : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y') (M1 : m x' = x) (M2 : m y' = y) : exists x'0 y'0 : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y'0 /\\ m x'0 = x /\\ m y'0 = y.","conclusion":"exists x'0 y'0 : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y'0 /\\ m x'0 = x /\\ m y'0 = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rpo_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid,\n     (sb_t ∩ same_loc_t) x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rf_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)\n  ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, co_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rmw_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' y' : actid) (PATH : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y') (M1 : m x' = x) (M2 : m y' = y)","proofString":"exists x', y'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rpo_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid,\n     (sb_t ∩ same_loc_t) x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rf_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)\n  ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, co_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rmw_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' y' : actid) (PATH : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y') (M1 : m x' = x) (M2 : m y' = y) : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","conclusion":"(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rpo_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘\n⊆ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid,\n     (sb_t ∩ same_loc_t) x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RF_MAP : rf_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rf_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)\n  ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, co_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (RMW_MAP : rmw_s\n≡ (fun x0 y0 : actid =>\n   exists x'0 y'0 : actid, rmw_t x'0 y'0 /\\ m x'0 = x0 /\\ m y'0 = y0)) (WF_t : Wf G_t) (WF_s : Wf G_s) (x y x' y' : actid) (PATH : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x' y') (M1 : m x' = x) (M2 : m y' = y)","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"assert (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘                  ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nassert (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺              ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nintros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto.\nrewrite <- TRIN at 2.\napply seq_mori; vauto.\nassert (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺                  ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\napply inclusion_t_ind_right; vauto.\nassert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                  ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"assert (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺              ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\nintros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto.\nrewrite <- TRIN at 2.\napply seq_mori; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"intros x y PATH.\ndestruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (PATH : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","conclusion":"(m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (PATH : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y)","proofString":"destruct PATH as (x0 & P1 & P2).\nunfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x x0) (P2 : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x0 y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","conclusion":"(m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x x0) (P2 : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x0 y)","proofString":"unfold collect_rel in P1, P2.\nunfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = x0) (P2 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x0 /\\ m y' = y) : (m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y.","conclusion":"(m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = x0) (P2 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x0 /\\ m y' = y)","proofString":"unfold collect_rel.\ndestruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = x0) (P2 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x0 /\\ m y' = y) : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","conclusion":"exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = x0) (P2 : exists x' y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x0 /\\ m y' = y)","proofString":"destruct P1 as (x' & x0' & (P1 & M1 & M2)).\ndestruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (P2 : exists x'0 y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y' /\\ m x'0 = x0 /\\ m y' = y) : exists x'0 y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y' /\\ m x'0 = x /\\ m y' = y.","conclusion":"exists x'0 y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y' /\\ m x'0 = x /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (P2 : exists x'0 y' : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y' /\\ m x'0 = x0 /\\ m y' = y)","proofString":"destruct P2 as (x0'' & y' & (P2 & M3 & M4)).\nexists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y) : exists x'0 y'0 : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y'0 /\\ m x'0 = x /\\ m y'0 = y.","conclusion":"exists x'0 y'0 : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x'0 y'0 /\\ m x'0 = x /\\ m y'0 = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y)","proofString":"exists x', y'.\nsplits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y) : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y.","conclusion":"(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y' /\\ m x' = x /\\ m y' = y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (M1 : m x' = x) (M2 : m x0' = x0) (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = x0) (M4 : m y' = y)","proofString":"splits; vauto.\nassert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'.","conclusion":"(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0')","proofString":"assert (EQ : x0'' = x0').\napply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto.\nsubst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : x0'' = x0'.","conclusion":"x0'' = x0'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0')","proofString":"apply INJ; vauto.\napply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE.\napply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0''.","conclusion":"E_t x0''","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0')","proofString":"apply ct_begin in P2.\ndestruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊)\n  x0'' y') (M3 : m x0'' = m x0') : E_t x0''.","conclusion":"E_t x0''","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊)\n  x0'' y') (M3 : m x0'' = m x0')","proofString":"destruct P2 as (x1 & P2 & P3).\napply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x0'' x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0') : E_t x0''.","conclusion":"E_t x0''","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x0'' x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0')","proofString":"apply wf_rhb_immE in P2; vauto.\ndestruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 : actid) (P2 : (⦗E_t⦘ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x0'' x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0') : E_t x0''.","conclusion":"E_t x0''","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 : actid) (P2 : (⦗E_t⦘ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x0'' x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0')","proofString":"destruct P2 as (x2 & INE & REST).\napply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 x2 : actid) (INE : ⦗E_t⦘ x0'' x2) (REST : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x2 x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0') : E_t x0''.","conclusion":"E_t x0''","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' x1 x2 : actid) (INE : ⦗E_t⦘ x0'' x2) (REST : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x2 x1) (P3 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x1 y') (M3 : m x0'' = m x0')","proofString":"apply INE."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","conclusion":"E_t x0'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0')","proofString":"apply ct_end in P1.\ndestruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)) x'\n  x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","conclusion":"E_t x0'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)) x'\n  x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0')","proofString":"destruct P1 as (x1 & P1 & P1').\napply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' x1 : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x' x1) (P1' : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x1 x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","conclusion":"E_t x0'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' x1 : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x' x1) (P1' : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) x1 x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0')","proofString":"apply wf_rhb_immE in P1'; vauto.\ndestruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' x1 : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x' x1) (P1' : (⦗E_t⦘ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x1 x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') : E_t x0'.","conclusion":"E_t x0'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' x1 : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)＊ x' x1) (P1' : (⦗E_t⦘ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t) ⨾ ⦗E_t⦘) x1 x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0')","proofString":"destruct P1' as (x2 & P3 & (x3 & P4 & (EQ & P5))); vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') (EQ : x0'' = x0') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'.","conclusion":"(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (x0'' y' : actid) (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0'' y') (M3 : m x0'' = m x0') (EQ : x0'' = x0')","proofString":"subst.\napply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'.","conclusion":"(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y')","proofString":"apply ct_ct.\nunfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : ((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)\n  x' y'.","conclusion":"((sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ ⨾ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)\n  x' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y')","proofString":"unfold seq.\nexists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : exists z : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' z /\\\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ z y'.","conclusion":"exists z : actid,\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' z /\\\n  (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ z y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y')","proofString":"exists x0'.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y') : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0' /\\\n(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y'.","conclusion":"(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0' /\\\n(sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y'","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x' x0' : actid) (P1 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x' x0') (y' : actid) (M3 : m x0' = m x0') (P2 : (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺ x0' y')","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"rewrite <- TRIN at 2.\napply seq_mori; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n  ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n  ⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (TRIN : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"apply seq_mori; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"assert (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺                  ⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺).\napply inclusion_t_ind_right; vauto.\nassert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                  ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"apply inclusion_t_ind_right; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"assert (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘ ⊆                  ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺).\ninduction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto.\nrewrite IND4; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺)","proofString":"induction 1 as (x0 & (P1 & P2)).\ndestruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x0) (P2 : ⦗E_s \\₁ eq a⦘ x0 y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y x0 : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x0) (P2 : ⦗E_s \\₁ eq a⦘ x0 y)","proofString":"destruct P2 as (EQ & COND); subst.\ninduction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (COND : (E_s \\₁ eq a) y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (COND : (E_s \\₁ eq a) y)","proofString":"induction P1 as [x y STT | x].\napply ct_step.\nunfold seq.\nexists y.\nsplits; vauto.\napply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y)","proofString":"apply ct_step.\nunfold seq.\nexists y.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘) x y.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘) x y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y)","proofString":"unfold seq.\nexists y.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : exists z : actid, (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x z /\\ ⦗E_s \\₁ eq a⦘ z y.","conclusion":"exists z : actid, (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x z /\\ ⦗E_s \\₁ eq a⦘ z y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y)","proofString":"exists y.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y /\\ ⦗E_s \\₁ eq a⦘ y y.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y /\\ ⦗E_s \\₁ eq a⦘ y y","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y : actid) (STT : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x y) (COND : (E_s \\₁ eq a) y)","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (P1_2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ y z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (P1_2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ y z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z)","proofString":"apply ct_begin in P1_2.\ndestruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (P1_2 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) y\n  z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (P1_2 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊) y\n  z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z)","proofString":"destruct P1_2 as (x0 & P1 & P2).\neapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (x0 : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) y x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (x0 : actid) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) y x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z)","proofString":"eapply read_rhb_imm_start in P1; vauto.\ndestruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (x0 : actid) (P1 : (⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)) y x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x y z : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x y) (x0 : actid) (P1 : (⦗E_s \\₁ eq a⦘ ⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)) y x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_1 : (E_s \\₁ eq a) y -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x y) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ y z)","proofString":"destruct P1 as (x1 & (EQ' & COND') & P1); subst.\napply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : (E_s \\₁ eq a) x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : (E_s \\₁ eq a) x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1)","proofString":"apply IHP1_1 in COND'.\napply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : (E_s \\₁ eq a) z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1)","proofString":"apply IHP1_2 in COND.\napply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z.","conclusion":"((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1)","proofString":"apply ct_ct.\nunfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : (((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n ⨾ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺) x z.","conclusion":"(((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n ⨾ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺) x z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1)","proofString":"unfold seq.\nexists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : exists z0 : actid,\n  (fun x2 y : actid =>\n   exists z1 : actid,\n     (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z1 /\\ ⦗E_s \\₁ eq a⦘ z1 y)⁺ x z0 /\\\n  (fun x2 y : actid =>\n   exists z1 : actid,\n     (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z1 /\\ ⦗E_s \\₁ eq a⦘ z1 y)⁺ z0 z.","conclusion":"exists z0 : actid,\n  (fun x2 y : actid =>\n   exists z1 : actid,\n     (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z1 /\\ ⦗E_s \\₁ eq a⦘ z1 y)⁺ x z0 /\\\n  (fun x2 y : actid =>\n   exists z1 : actid,\n     (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z1 /\\ ⦗E_s \\₁ eq a⦘ z1 y)⁺ z0 z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1)","proofString":"exists x1.\nsplits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) : (fun x2 y : actid =>\n exists z0 : actid,\n   (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z0 /\\ ⦗E_s \\₁ eq a⦘ z0 y)⁺ x x1 /\\\n(fun x2 y : actid =>\n exists z0 : actid,\n   (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z0 /\\ ⦗E_s \\₁ eq a⦘ z0 y)⁺ x1 z.","conclusion":"(fun x2 y : actid =>\n exists z0 : actid,\n   (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z0 /\\ ⦗E_s \\₁ eq a⦘ z0 y)⁺ x x1 /\\\n(fun x2 y : actid =>\n exists z0 : actid,\n   (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x2 z0 /\\ ⦗E_s \\₁ eq a⦘ z0 y)⁺ x1 z","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (x z x1 : actid) (P1_1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ x x1) (x0 : actid) (COND' : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1) (P1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) x1 x0) (P2 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)＊ x0 z) (COND : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_2 : (E_s \\₁ eq a) z -> ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x1 z) (IHP1_1 : (E_s \\₁ eq a) x1 ->\n((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺ x x1)","proofString":"splits; vauto."},{"statement":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺) : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺.","conclusion":"(sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺","hypotheses":"(m : actid -> actid) (INJ : inj_dom E_t m) (E_MAP : E_s ≡₁ m ↑₁ E_t ∪₁ eq a) (LABS : eq_dom E_t (lab_s ∘ m) lab_t) (IS_R : is_r lab_s a) (IS_ACQ : ~ is_acq lab_s a) (NIN : set_disjoint (m ↑₁ E_t) (eq a)) (CODOM_RPO : codom_rel (⦗eq a⦘ ⨾ rpo_s) ≡₁ ∅) (RPO_MAP : rpo_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ rpo_t) (CODOM_SB_SL : codom_rel (⦗eq a⦘ ⨾ sb_s ∩ same_loc_s) ≡₁ ∅) (SB_SL_MAP : sb_s ∩ same_loc_s ⨾ ⦗E_s \\₁ eq a⦘ ⊆ m ↑ (sb_t ∩ same_loc_t)) (RF_MAP : rf_s ≡ m ↑ rf_t ∪ srf_s ⨾ ⦗eq a⦘) (CO_MAP : co_s ≡ m ↑ co_t) (RMW_MAP : rmw_s ≡ m ↑ rmw_t) (WF_t : Wf G_t) (WF_s : Wf G_s) (IND1 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND2 : m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺\n⨾ (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND3 : ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺\n⊆ m ↑ (sb_t ∩ same_loc_t ∪ rpo_t ∪ sw_t)⁺) (IND4 : (sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s)⁺ ⨾ ⦗E_s \\₁ eq a⦘\n⊆ ((sb_s ∩ same_loc_s ∪ rpo_s ∪ sw_s) ⨾ ⦗E_s \\₁ eq a⦘)⁺)","proofString":"rewrite IND4; vauto."}]}