{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/arm/Stacklayout.v","fileSamples":[{"statement":"(b : bounds) (fe : frame_env) : 0 <=\nalign\n  (size_callee_save_area b\n     (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8 /\\\nalign\n  (size_callee_save_area b\n     (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8 +\nbound_stack_data b <=\nalign\n  (align\n     (size_callee_save_area b\n        (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8 +\n   bound_stack_data b) 8.","conclusion":"0 <=\nalign\n  (size_callee_save_area b\n     (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8 /\\\nalign\n  (size_callee_save_area b\n     (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8 +\nbound_stack_data b <=\nalign\n  (align\n     (size_callee_save_area b\n        (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8 +\n   bound_stack_data b) 8","hypotheses":"(b : bounds) (fe : frame_env)","proofString":"set (olink := 4 * b.(bound_outgoing));  set (ora := olink + 4);  set (ol := align (ora + 4) 8);  set (ocs := ol + 4 * b.(bound_local));  set (ostkdata := align (size_callee_save_area b ocs) 8).\ngeneralize b.(bound_local_pos) b.(bound_outgoing_pos) b.(bound_stack_data_pos); intros.\nassert (0 <= olink) by (unfold olink; lia).\nassert (olink <= ora) by (unfold ora; lia).\nassert (ora + 4 <= ol) by (apply align_le; lia).\nassert (ol + 4 * b.(bound_local) <= ocs) by (unfold ocs; lia).\nassert (ocs <= size_callee_save_area b ocs) by apply size_callee_save_area_incr.\nassert (size_callee_save_area b ocs <= ostkdata) by (apply align_le; lia).\nsplit.\nlia.\napply align_le; lia."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= olink) (H3 : olink <= ora) (H4 : ora + 4 <= ol) (H5 : ol + 4 * bound_local b <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ostkdata) : 0 <= ostkdata /\\\nostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 8.","conclusion":"0 <= ostkdata /\\\nostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 8","hypotheses":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= olink) (H3 : olink <= ora) (H4 : ora + 4 <= ol) (H5 : ol + 4 * bound_local b <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ostkdata)","proofString":"split.\nlia.\napply align_le; lia."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= olink) (H3 : olink <= ora) (H4 : ora + 4 <= ol) (H5 : ol + 4 * bound_local b <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ostkdata) : 0 <= ostkdata.","conclusion":"0 <= ostkdata","hypotheses":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= olink) (H3 : olink <= ora) (H4 : ora + 4 <= ol) (H5 : ol + 4 * bound_local b <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ostkdata)","proofString":"lia."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= olink) (H3 : olink <= ora) (H4 : ora + 4 <= ol) (H5 : ol + 4 * bound_local b <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ostkdata) : ostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 8.","conclusion":"ostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 8","hypotheses":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= olink) (H3 : olink <= ora) (H4 : ora + 4 <= ol) (H5 : ol + 4 * bound_local b <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ostkdata)","proofString":"apply align_le; lia."},{"statement":"(b : bounds) (fe : frame_env) : (8 | fe_ofs_arg) /\\\n(8 | align (4 * bound_outgoing b + 4 + 4) 8) /\\\n(8\n| align\n    (size_callee_save_area b\n       (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8) /\\\n(4 | 4 * bound_outgoing b) /\\ (4 | 4 * bound_outgoing b + 4).","conclusion":"(8 | fe_ofs_arg) /\\\n(8 | align (4 * bound_outgoing b + 4 + 4) 8) /\\\n(8\n| align\n    (size_callee_save_area b\n       (align (4 * bound_outgoing b + 4 + 4) 8 + 4 * bound_local b)) 8) /\\\n(4 | 4 * bound_outgoing b) /\\ (4 | 4 * bound_outgoing b + 4)","hypotheses":"(b : bounds) (fe : frame_env)","proofString":"set (olink := 4 * b.(bound_outgoing));  set (ora := olink + 4);  set (ol := align (ora + 4) 8);  set (ocs := ol + 4 * b.(bound_local));  set (ostkdata := align (size_callee_save_area b ocs) 8).\nsplit.\napply Z.divide_0_r.\nsplit.\napply align_divides; lia.\nsplit.\napply align_divides; lia.\nunfold ora, olink; auto using Z.divide_mul_l, Z.divide_add_r, Z.divide_refl."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z) : (8 | fe_ofs_arg).","conclusion":"(8 | fe_ofs_arg)","hypotheses":"(b : bounds) (fe : frame_env) (olink : Z) (ora : Z) (ol : Z) (ocs : Z) (ostkdata : Z)","proofString":"apply Z.divide_0_r."}]}