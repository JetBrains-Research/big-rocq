{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/bigRocq/dataset/imm/src/ocamlmm/OCamlToimm_s.v","fileSamples":[{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ sw.","proofString":"arewrite (Sc ⊆₁ Acq)      by mode_solver.\nunfold imm_s_hb.sw, imm_s_hb.release, imm_s_hb.rs.\nrewrite !seqA.\nhahn_frame.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 40."},{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘ ⊆ sw.","proofString":"unfold imm_s_hb.sw, imm_s_hb.release, imm_s_hb.rs.\nrewrite !seqA.\nhahn_frame.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 40."},{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊)\n  ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","proofString":"rewrite !seqA.\nhahn_frame.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 40."},{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","proofString":"hahn_frame.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 40."},{"statement":"rf\n⊆ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^?.","proofString":"rewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 40."},{"statement":"⦗W⦘ ⨾ rf\n⊆ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^?.","proofString":"basic_solver 40."},{"statement":"rf ⊆ rf ∩ same_loc.","proofString":"apply inclusion_inter_r; try basic_solver.\napply (wf_rfl WF)."},{"statement":"rf ⊆ same_loc.","proofString":"apply (wf_rfl WF)."},{"statement":"⦗Sc⦘ ⨾ rf ∩ same_loc ⨾ ⦗Sc⦘ ⊆ psc_base G.","proofString":"rewrite <- seq_eqvK, !seqA.\narewrite (⦗Sc⦘ ⨾ rf ∩ same_loc ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc).\napply inclusion_inter_r.\nrewrite inclusion_inter_l1.\nrewrite sc_rf_in_sw.\napply sw_in_hb.\nbasic_solver.\nunfold psc_base.\nhahn_frame.\narewrite (hb ∩ same_loc ⊆ scb G).\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ rf ∩ same_loc ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⊆ psc_base G.","proofString":"arewrite (⦗Sc⦘ ⨾ rf ∩ same_loc ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc).\napply inclusion_inter_r.\nrewrite inclusion_inter_l1.\nrewrite sc_rf_in_sw.\napply sw_in_hb.\nbasic_solver.\nunfold psc_base.\nhahn_frame.\narewrite (hb ∩ same_loc ⊆ scb G).\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ rf ∩ same_loc ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc.","proofString":"apply inclusion_inter_r.\nrewrite inclusion_inter_l1.\nrewrite sc_rf_in_sw.\napply sw_in_hb.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ rf ∩ same_loc ⨾ ⦗Sc⦘ ⊆ hb.","proofString":"rewrite inclusion_inter_l1.\nrewrite sc_rf_in_sw.\napply sw_in_hb."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb.","proofString":"rewrite sc_rf_in_sw.\napply sw_in_hb."},{"statement":"sw ⊆ hb.","proofString":"apply sw_in_hb."},{"statement":"⦗Sc⦘ ⨾ rf ∩ same_loc ⨾ ⦗Sc⦘ ⊆ same_loc.","proofString":"basic_solver."},{"statement":"⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘ ⊆ psc_base G.","proofString":"unfold psc_base.\nhahn_frame.\narewrite (hb ∩ same_loc ⊆ scb G).\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘\n⊆ ⦗Sc⦘ ⨾ (⦗F⦘ ⨾ hb)^? ⨾ scb G ⨾ (hb ⨾ ⦗F⦘)^? ⨾ ⦗Sc⦘.","proofString":"hahn_frame.\narewrite (hb ∩ same_loc ⊆ scb G).\nbasic_solver 10."},{"statement":"hb ∩ same_loc ⊆ (⦗F⦘ ⨾ hb)^? ⨾ scb G ⨾ (hb ⨾ ⦗F⦘)^?.","proofString":"arewrite (hb ∩ same_loc ⊆ scb G).\nbasic_solver 10."},{"statement":"scb G ⊆ (⦗F⦘ ⨾ hb)^? ⨾ scb G ⨾ (hb ⨾ ⦗F⦘)^?.","proofString":"basic_solver 10."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : (sb ∪ ⦗Sc⦘ ⨾ (co ∪ rf) ⨾ ⦗Sc⦘)⁺ ⊆ hb.","proofString":"rewrite !seq_union_l, !seq_union_r.\nrewrite co_sc_in_hb; eauto.\nsin_rewrite sc_rf_in_sw.\nrewrite sb_in_hb, sw_in_hb, !unionK.\nunfold imm_s_hb.hb.\nby rewrite ct_of_ct."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : (sb ∪ (⦗Sc⦘ ⨾ co ⨾ ⦗Sc⦘ ∪ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘))⁺ ⊆ hb.","proofString":"rewrite co_sc_in_hb; eauto.\nsin_rewrite sc_rf_in_sw.\nrewrite sb_in_hb, sw_in_hb, !unionK.\nunfold imm_s_hb.hb.\nby rewrite ct_of_ct."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : (sb ∪ (hb ∪ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘))⁺ ⊆ hb.","proofString":"sin_rewrite sc_rf_in_sw.\nrewrite sb_in_hb, sw_in_hb, !unionK.\nunfold imm_s_hb.hb.\nby rewrite ct_of_ct."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : (sb ∪ (hb ∪ sw))⁺ ⊆ hb.","proofString":"rewrite sb_in_hb, sw_in_hb, !unionK.\nunfold imm_s_hb.hb.\nby rewrite ct_of_ct."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : hb⁺ ⊆ hb.","proofString":"unfold imm_s_hb.hb.\nby rewrite ct_of_ct."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : ((sb ∪ sw)⁺)⁺ ⊆ (sb ∪ sw)⁺.","proofString":"by rewrite ct_of_ct."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : irreflexive (hb ⨾ (co ∪ fr)).","proofString":"arewrite (co ∪ fr ⊆ eco^?).\nrewrite co_in_eco, fr_in_eco.\nbasic_solver.\napply IPC."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : co ∪ fr ⊆ eco^?.","proofString":"rewrite co_in_eco, fr_in_eco.\nbasic_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : eco ∪ eco ⊆ eco^?.","proofString":"basic_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) : irreflexive (hb ⨾ eco^?).","proofString":"apply IPC."},{"statement":"(co ∪ fr) ⨾ (co ∪ fr) ⊆ co ∪ fr.","proofString":"rewrite seq_union_r.\ndo 2 rewrite seq_union_l.\nrewrite co_co, fr_co, fr_fr, co_fr; auto.\nbasic_solver."},{"statement":"(co ∪ fr) ⨾ co ∪ (co ∪ fr) ⨾ fr ⊆ co ∪ fr.","proofString":"do 2 rewrite seq_union_l.\nrewrite co_co, fr_co, fr_fr, co_fr; auto.\nbasic_solver."},{"statement":"co ⨾ co ∪ fr ⨾ co ∪ (co ⨾ fr ∪ fr ⨾ fr) ⊆ co ∪ fr.","proofString":"rewrite co_co, fr_co, fr_fr, co_fr; auto.\nbasic_solver."},{"statement":"co ∪ fr ∪ (∅₂ ∪ ∅₂) ⊆ co ∪ fr.","proofString":"basic_solver."},{"statement":"⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ (⦗F⦘ ⨾ hb)^? ⨾ scb G ⨾ (hb ⨾ ⦗F⦘)^? ⨾ ⦗Sc⦘.","proofString":"basic_solver 10."},{"statement":"Sc ⊆₁ set_compl (fun a : actid => is_only_pln lab a).","proofString":"mode_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ ⦗R⦘ ⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"rewrite (wf_rfE WF) at 1.\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗Eninit \\₁ F⦘ ⨾ ⦗Sc⦘).\narewrite (Sc ⊆₁ Sc ∩₁ set_compl is_init).\ngeneralize sc_ninit.\nbasic_solver.\ntype_solver.\nrewrite <- id_inter.\narewrite (E ∩₁ R ⊆₁ Eninit \\₁ F).\nrewrite init_w; eauto.\ntype_solver.\nseq_rewrite seq_eqvC.\nrewrite !seqA.\nsin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W⦘ ⨾ (⦗E⦘ ⨾ rf ⨾ ⦗E⦘) ⨾ ⦗R⦘ ⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"rewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗Eninit \\₁ F⦘ ⨾ ⦗Sc⦘).\narewrite (Sc ⊆₁ Sc ∩₁ set_compl is_init).\ngeneralize sc_ninit.\nbasic_solver.\ntype_solver.\nrewrite <- id_inter.\narewrite (E ∩₁ R ⊆₁ Eninit \\₁ F).\nrewrite init_w; eauto.\ntype_solver.\nseq_rewrite seq_eqvC.\nrewrite !seqA.\nsin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ rf ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"arewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗Eninit \\₁ F⦘ ⨾ ⦗Sc⦘).\narewrite (Sc ⊆₁ Sc ∩₁ set_compl is_init).\ngeneralize sc_ninit.\nbasic_solver.\ntype_solver.\nrewrite <- id_inter.\narewrite (E ∩₁ R ⊆₁ Eninit \\₁ F).\nrewrite init_w; eauto.\ntype_solver.\nseq_rewrite seq_eqvC.\nrewrite !seqA.\nsin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⨾ ⦗Sc⦘.","proofString":"arewrite (Sc ⊆₁ Sc ∩₁ set_compl is_init).\ngeneralize sc_ninit.\nbasic_solver.\ntype_solver."},{"statement":"Sc ⊆₁ Sc ∩₁ set_compl (fun a : actid => is_init a).","proofString":"generalize sc_ninit.\nbasic_solver."},{"statement":"Sc ⊆₁ set_compl (fun a : actid => is_init a) ->\nSc ⊆₁ Sc ∩₁ set_compl (fun a : actid => is_init a).","proofString":"basic_solver."},{"statement":"⦗Sc ∩₁ set_compl (fun a : actid => is_init a)⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘\n⊆ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⨾ ⦗Sc⦘.","proofString":"type_solver."},{"statement":"⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗E⦘ ⨾ ⦗R⦘\n⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"rewrite <- id_inter.\narewrite (E ∩₁ R ⊆₁ Eninit \\₁ F).\nrewrite init_w; eauto.\ntype_solver.\nseq_rewrite seq_eqvC.\nrewrite !seqA.\nsin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗E ∩₁ R⦘\n⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"arewrite (E ∩₁ R ⊆₁ Eninit \\₁ F).\nrewrite init_w; eauto.\ntype_solver.\nseq_rewrite seq_eqvC.\nrewrite !seqA.\nsin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"E ∩₁ R ⊆₁ (E \\₁ (fun a : actid => is_init a)) \\₁ F.","proofString":"rewrite init_w; eauto.\ntype_solver."},{"statement":"E ∩₁ R ⊆₁ (E \\₁ W) \\₁ F.","proofString":"type_solver."},{"statement":"⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘\n⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⊆ \n⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"seq_rewrite seq_eqvC.\nrewrite !seqA.\nsin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"(⦗Sc⦘ ⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘)\n⨾ rf ⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⊆ \n⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"rewrite !seqA.\nsin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗Sc⦘\n⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘\n  ⨾ rf ⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⊆ \n⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"sin_rewrite sl_mode; [| by apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗Sc⦘ ⨾ (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ∪ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘) ⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"mode_solver."},{"statement":"⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (⦗W⦘ ⨾ rf ⨾ ⦗R⦘) ⨾ ⦗Sc⦘\n⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"rewrite WF.(wf_rfE) at 1.\nrewrite !seqA.\narewrite (⦗set_compl is_init⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗Eninit \\₁ F⦘) by type_solver.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗Eninit \\₁ F⦘).\nrewrite init_w; eauto.\ntype_solver.\nsin_rewrite sl_mode; [| apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗set_compl (fun a : actid => is_init a)⦘\n⨾ (⦗W⦘ ⨾ (⦗E⦘ ⨾ rf ⨾ ⦗E⦘) ⨾ ⦗R⦘) ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"rewrite !seqA.\narewrite (⦗set_compl is_init⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗Eninit \\₁ F⦘) by type_solver.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗Eninit \\₁ F⦘).\nrewrite init_w; eauto.\ntype_solver.\nsin_rewrite sl_mode; [| apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗set_compl (fun a : actid => is_init a)⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ rf ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Sc⦘\n⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"arewrite (⦗set_compl is_init⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗Eninit \\₁ F⦘) by type_solver.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗Eninit \\₁ F⦘).\nrewrite init_w; eauto.\ntype_solver.\nsin_rewrite sl_mode; [| apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⨾ rf ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Sc⦘\n⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"arewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗Eninit \\₁ F⦘).\nrewrite init_w; eauto.\ntype_solver.\nsin_rewrite sl_mode; [| apply (wf_rfl WF) ].\nmode_solver."},{"statement":"⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘.","proofString":"rewrite init_w; eauto.\ntype_solver."},{"statement":"⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗(E \\₁ W) \\₁ F⦘.","proofString":"type_solver."},{"statement":"⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘\n⨾ rf ⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⨾ ⦗Sc⦘ ⊆ \n⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"sin_rewrite sl_mode; [| apply (wf_rfl WF) ].\nmode_solver."},{"statement":"(⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ∪ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘) ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"mode_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : ⦗dom⦘ ⨾ (r ⨾ ⦗dom⦘)＊ ⊆ ⦗dom⦘ ⨾ (r ⨾ ⦗dom⦘)＊ ⨾ ⦗dom⦘.","proofString":"rewrite rtE at 1.\nrewrite seq_union_r.\nunionL; [basic_solver| ].\nhahn_frame.\nrewrite ct_end at 1.\nrewrite <- seq_eqvK at 2.\nhahn_frame_r.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : ⦗dom⦘ ⨾ (⦗fun _ : A => True⦘ ∪ (r ⨾ ⦗dom⦘)⁺) ⊆ ⦗dom⦘ ⨾ (r ⨾ ⦗dom⦘)＊ ⨾ ⦗dom⦘.","proofString":"rewrite seq_union_r.\nunionL; [basic_solver| ].\nhahn_frame.\nrewrite ct_end at 1.\nrewrite <- seq_eqvK at 2.\nhahn_frame_r.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : ⦗dom⦘ ⨾ ⦗fun _ : A => True⦘ ∪ ⦗dom⦘ ⨾ (r ⨾ ⦗dom⦘)⁺\n⊆ ⦗dom⦘ ⨾ (r ⨾ ⦗dom⦘)＊ ⨾ ⦗dom⦘.","proofString":"unionL; [basic_solver| ].\nhahn_frame.\nrewrite ct_end at 1.\nrewrite <- seq_eqvK at 2.\nhahn_frame_r.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : ⦗dom⦘ ⨾ (r ⨾ ⦗dom⦘)⁺ ⊆ ⦗dom⦘ ⨾ (r ⨾ ⦗dom⦘)＊ ⨾ ⦗dom⦘.","proofString":"hahn_frame.\nrewrite ct_end at 1.\nrewrite <- seq_eqvK at 2.\nhahn_frame_r.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : (r ⨾ ⦗dom⦘)⁺ ⊆ (r ⨾ ⦗dom⦘)＊ ⨾ ⦗dom⦘.","proofString":"rewrite ct_end at 1.\nrewrite <- seq_eqvK at 2.\nhahn_frame_r.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : (r ⨾ ⦗dom⦘)＊ ⨾ r ⨾ ⦗dom⦘ ⊆ (r ⨾ ⦗dom⦘)＊ ⨾ ⦗dom⦘.","proofString":"rewrite <- seq_eqvK at 2.\nhahn_frame_r.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : (r ⨾ ⦗dom⦘)＊ ⨾ r ⨾ ⦗dom⦘ ⨾ ⦗dom⦘ ⊆ (r ⨾ ⦗dom⦘)＊ ⨾ ⦗dom⦘.","proofString":"hahn_frame_r.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : (r ⨾ ⦗dom⦘)＊ ⨾ r ⨾ ⦗dom⦘ ⊆ (r ⨾ ⦗dom⦘)＊.","proofString":"rewrite <- ct_end.\nbasic_solver."},{"statement":"(A : Type) (dom : A -> Prop) (r : relation A) : (r ⨾ ⦗dom⦘)⁺ ⊆ (r ⨾ ⦗dom⦘)＊.","proofString":"basic_solver."},{"statement":"⦗set_compl (fun a : actid => is_init a)⦘ ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⊆ ⦗W ∩₁ Sc ∪₁ W ∩₁ ORlx⦘.","proofString":"unfolder.\nins.\ndesf.\nsplits; auto.\ndestruct wr_mode with (x:=y); auto.\nbasic_solver."},{"statement":"forall x y : actid,\nx = y /\\ ~ is_init x /\\ E x /\\ is_w lab x ->\nx = y /\\ (is_w lab x /\\ is_sc lab x \\/ is_w lab x /\\ is_only_rlx lab x).","proofString":"ins.\ndesf.\nsplits; auto.\ndestruct wr_mode with (x:=y); auto.\nbasic_solver."},{"statement":"(x y : actid) (H : x = y /\\ ~ is_init x /\\ E x /\\ is_w lab x) : x = y /\\ (is_w lab x /\\ is_sc lab x \\/ is_w lab x /\\ is_only_rlx lab x).","proofString":"desf.\nsplits; auto.\ndestruct wr_mode with (x:=y); auto.\nbasic_solver."},{"statement":"(y : actid) (H2 : is_w lab y) (H1 : E y) (H0 : ~ is_init y) : y = y /\\ (true /\\ is_sc lab y \\/ true /\\ is_only_rlx lab y).","proofString":"splits; auto.\ndestruct wr_mode with (x:=y); auto.\nbasic_solver."},{"statement":"(y : actid) (H2 : is_w lab y) (H1 : E y) (H0 : ~ is_init y) : true /\\ is_sc lab y \\/ true /\\ is_only_rlx lab y.","proofString":"destruct wr_mode with (x:=y); auto.\nbasic_solver."},{"statement":"(y : actid) (H2 : is_w lab y) (H1 : E y) (H0 : ~ is_init y) : ((E \\₁ (fun a : actid => is_init a)) ∩₁ (W ∪₁ R)) y.","proofString":"basic_solver."},{"statement":"⦗E \\₁ F⦘ ⨾ (sb \\ rmw) ⨾ ⦗W ∩₁ ORlx⦘ ⊆ sb ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘.","proofString":"rewrite <- (seq_eqvK (W ∩₁ ORlx)).\nrewrite WRLXF at 1.\nunfolder.\nintros e w H'.\ndestruct H' as [H'' [H' [[f' [f U]] T']]].\ndesf.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"⦗E \\₁ F⦘ ⨾ (sb \\ rmw) ⨾ ⦗W ∩₁ ORlx⦘ ⨾ ⦗W ∩₁ ORlx⦘\n⊆ sb ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘.","proofString":"rewrite WRLXF at 1.\nunfolder.\nintros e w H'.\ndestruct H' as [H'' [H' [[f' [f U]] T']]].\ndesf.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"⦗E \\₁ F⦘\n⨾ (sb \\ rmw) ⨾ ⦗codom_rel (⦗F ∩₁ Acqrel⦘ ⨾ immediate sb)⦘ ⨾ ⦗W ∩₁ ORlx⦘\n⊆ sb ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘.","proofString":"unfolder.\nintros e w H'.\ndestruct H' as [H'' [H' [[f' [f U]] T']]].\ndesf.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"forall x y : actid,\n(E x /\\ ~ is_f lab x) /\\\n(sb x y /\\ ~ rmw x y) /\\\n(exists x0 z : actid,\n   (x0 = z /\\ is_f lab x0 /\\ is_acqrel lab x0) /\\\n   sb z y /\\ (forall c : actid, sb z c -> sb c y -> False)) /\\\nis_w lab y /\\ is_only_rlx lab y ->\nexists z : actid,\n  sb x z /\\\n  (is_f lab z /\\ is_acqrel lab z) /\\\n  sb z y /\\ is_only_rlx lab y /\\ is_w lab y.","proofString":"intros e w H'.\ndestruct H' as [H'' [H' [[f' [f U]] T']]].\ndesf.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H' : (E e /\\ ~ is_f lab e) /\\\n(sb e w /\\ ~ rmw e w) /\\\n(exists x z : actid,\n   (x = z /\\ is_f lab x /\\ is_acqrel lab x) /\\\n   sb z w /\\ (forall c : actid, sb z c -> sb c w -> False)) /\\\nis_w lab w /\\ is_only_rlx lab w) : exists z : actid,\n  sb e z /\\\n  (is_f lab z /\\ is_acqrel lab z) /\\\n  sb z w /\\ is_only_rlx lab w /\\ is_w lab w.","proofString":"destruct H' as [H'' [H' [[f' [f U]] T']]].\ndesf.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e /\\ ~ is_f lab e) (H' : sb e w /\\ ~ rmw e w) (f' f : actid) (U : (f' = f /\\ is_f lab f' /\\ is_acqrel lab f') /\\\nsb f w /\\ (forall c : actid, sb f c -> sb c w -> False)) (T' : is_w lab w /\\ is_only_rlx lab w) : exists z : actid,\n  sb e z /\\\n  (is_f lab z /\\ is_acqrel lab z) /\\\n  sb z w /\\ is_only_rlx lab w /\\ is_w lab w.","proofString":"desf.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) : exists z : actid,\n  sb e z /\\ (is_f lab z /\\ is_acqrel lab z) /\\ sb z w /\\ true /\\ true.","proofString":"assert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) : ~ is_init f.","proofString":"generalize (@read_or_fence_is_not_init G WF f).\ntype_solver."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) : (is_r lab f \\/ is_f lab f -> ~ is_init f) -> ~ is_init f.","proofString":"type_solver."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) : exists z : actid,\n  sb e z /\\ (is_f lab z /\\ is_acqrel lab z) /\\ sb z w /\\ true /\\ true.","proofString":"exists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) : sb e f /\\ (is_f lab f /\\ is_acqrel lab f) /\\ sb f w /\\ true /\\ true.","proofString":"splits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) : sb e f.","proofString":"assert (e <> f) as NEQfe.\nred.\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) : e <> f.","proofString":"red.\ntype_solver."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) : e = f -> False.","proofString":"type_solver."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) (NEQfe : e <> f) : sb e f.","proofString":"pose (sb_semi_total_r WF NINITf NEQfe H' U0 ) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) (NEQfe : e <> f) (SB : sb e f \\/ sb f e) : sb e f.","proofString":"destruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) (NEQfe : e <> f) (H : sb f e) : sb e f.","proofString":"exfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : forall c : actid, sb f c -> sb c w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) (NEQfe : e <> f) (H : sb f e) : False.","proofString":"specialize (U1 e).\nauto."},{"statement":"(e w : actid) (H'' : E e) (H''0 : ~ is_f lab e) (H' : sb e w) (H'0 : ~ rmw e w) (f : actid) (U3 : is_acqrel lab f) (U2 : is_f lab f) (U0 : sb f w) (U1 : sb f e -> sb e w -> False) (T' : is_w lab w) (T'0 : is_only_rlx lab w) (NINITf : ~ is_init f) (NEQfe : e <> f) (H : sb f e) : False.","proofString":"auto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) : immediate sb r' w.","proofString":"apply (wf_rmwi WF) in Z0.\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : immediate sb r' w) (V : is_w lab w) (V0 : is_sc lab w) : immediate sb r' w.","proofString":"auto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : sb r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) : sb f w.","proofString":"apply (sb_trans Z Z0)."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) : e <> f.","proofString":"red.\ntype_solver."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) : e = f -> False.","proofString":"type_solver."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) : sb e f.","proofString":"assert (sb e r') as SBer'.\nassert (e <> r') as NEQer'.\nred.\ntype_solver.\nassert (~is_init r') as NINITr'.\napply ((wf_rmwD WF)), seq_eqv_l in Z0.\ndesf.\ngeneralize (@read_or_fence_is_not_init G WF r').\ntype_solver 10.\npose (sb_semi_total_r WF NINITr' NEQer' w') as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (IMMr'w e).\nauto.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe SBer' Z) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (Z1 e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) : sb e r'.","proofString":"assert (e <> r') as NEQer'.\nred.\ntype_solver.\nassert (~is_init r') as NINITr'.\napply ((wf_rmwD WF)), seq_eqv_l in Z0.\ndesf.\ngeneralize (@read_or_fence_is_not_init G WF r').\ntype_solver 10.\npose (sb_semi_total_r WF NINITr' NEQer' w') as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (IMMr'w e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) : e <> r'.","proofString":"red.\ntype_solver."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) : e = r' -> False.","proofString":"type_solver."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') : sb e r'.","proofString":"assert (~is_init r') as NINITr'.\napply ((wf_rmwD WF)), seq_eqv_l in Z0.\ndesf.\ngeneralize (@read_or_fence_is_not_init G WF r').\ntype_solver 10.\npose (sb_semi_total_r WF NINITr' NEQer' w') as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (IMMr'w e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') : ~ is_init r'.","proofString":"apply ((wf_rmwD WF)), seq_eqv_l in Z0.\ndesf.\ngeneralize (@read_or_fence_is_not_init G WF r').\ntype_solver 10."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : is_r lab r' /\\ (rmw ⨾ ⦗W⦘) r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') : ~ is_init r'.","proofString":"desf.\ngeneralize (@read_or_fence_is_not_init G WF r').\ntype_solver 10."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : is_r lab r') (Z2 : (rmw ⨾ ⦗W⦘) r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') : ~ is_init r'.","proofString":"generalize (@read_or_fence_is_not_init G WF r').\ntype_solver 10."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : is_r lab r') (Z2 : (rmw ⨾ ⦗W⦘) r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') : (is_r lab r' \\/ is_f lab r' -> ~ is_init r') -> ~ is_init r'.","proofString":"type_solver 10."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') (NINITr' : ~ is_init r') : sb e r'.","proofString":"pose (sb_semi_total_r WF NINITr' NEQer' w') as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (IMMr'w e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') (NINITr' : ~ is_init r') (SB : sb r' w -> sb e r' \\/ sb r' e) : sb e r'.","proofString":"destruct SB; auto.\nexfalso.\nspecialize (IMMr'w e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') (NINITr' : ~ is_init r') (H : sb r' e) : sb e r'.","proofString":"exfalso.\nspecialize (IMMr'w e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (NEQer' : e <> r') (NINITr' : ~ is_init r') (H : sb r' e) : False.","proofString":"specialize (IMMr'w e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : sb r' e -> sb e w -> False) (NEQfe : e <> f) (NEQer' : e <> r') (NINITr' : ~ is_init r') (H : sb r' e) : False.","proofString":"auto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') : sb e f.","proofString":"assert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe SBer' Z) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (Z1 e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') : ~ is_init f.","proofString":"generalize (@read_or_fence_is_not_init G WF f).\ntype_solver."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') : (is_r lab f \\/ is_f lab f -> ~ is_init f) -> ~ is_init f.","proofString":"type_solver."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') (NINITf : ~ is_init f) : sb e f.","proofString":"pose (sb_semi_total_r WF NINITf NEQfe SBer' Z) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (Z1 e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') (NINITf : ~ is_init f) (SB : sb e f \\/ sb f e) : sb e f.","proofString":"destruct SB; auto.\nexfalso.\nspecialize (Z1 e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') (NINITf : ~ is_init f) (H : sb f e) : sb e f.","proofString":"exfalso.\nspecialize (Z1 e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : forall c : actid, sb f c -> sb c r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') (NINITf : ~ is_init f) (H : sb f e) : False.","proofString":"specialize (Z1 e).\nauto."},{"statement":"(e w : actid) (H' : E e) (H'0 : ~ is_f lab e) (w' : sb e w) (w'0 : ~ rmw e w) (f : actid) (N1 : is_acq lab f) (N0 : is_f lab f) (r' : actid) (Z : sb f r') (Z1 : sb f e -> sb e r' -> False) (Z0 : rmw r' w) (V : is_w lab w) (V0 : is_sc lab w) (SBr'w : sb r' w) (IMMr'w : forall c : actid, sb r' c -> sb c w -> False) (NEQfe : e <> f) (SBer' : sb e r') (NINITf : ~ is_init f) (H : sb f e) : False.","proofString":"auto."},{"statement":"⦗E \\₁ F⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘.","proofString":"rewrite <- (seq_eqvK (R ∩₁ Sc)).\nrewrite RSCF at 1.\nunfolder.\nintros e r [A [C [[f' [f U]] V]]].\ndesf.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"⦗E \\₁ F⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⨾ ⦗R ∩₁ Sc⦘\n⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⨾ ⦗R ∩₁ Sc⦘.","proofString":"rewrite RSCF at 1.\nunfolder.\nintros e r [A [C [[f' [f U]] V]]].\ndesf.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"⦗E \\₁ F⦘ ⨾ sb ⨾ ⦗codom_rel (⦗F ∩₁ Acq⦘ ⨾ immediate sb)⦘ ⨾ ⦗R ∩₁ Sc⦘\n⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⨾ ⦗R ∩₁ Sc⦘.","proofString":"unfolder.\nintros e r [A [C [[f' [f U]] V]]].\ndesf.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"forall x y : actid,\n(E x /\\ ~ is_f lab x) /\\\nsb x y /\\\n(exists x0 z : actid,\n   (x0 = z /\\ is_f lab x0 /\\ is_acq lab x0) /\\\n   sb z y /\\ (forall c : actid, sb z c -> sb c y -> False)) /\\\nis_r lab y /\\ is_sc lab y ->\nexists z : actid,\n  sb x z /\\\n  (is_f lab z /\\ is_acq lab z) /\\\n  sb z y /\\ (is_r lab y /\\ is_sc lab y) /\\ is_r lab y /\\ is_sc lab y.","proofString":"intros e r [A [C [[f' [f U]] V]]].\ndesf.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e /\\ ~ is_f lab e) (C : sb e r) (f' f : actid) (U : (f' = f /\\ is_f lab f' /\\ is_acq lab f') /\\\nsb f r /\\ (forall c : actid, sb f c -> sb c r -> False)) (V : is_r lab r /\\ is_sc lab r) : exists z : actid,\n  sb e z /\\\n  (is_f lab z /\\ is_acq lab z) /\\\n  sb z r /\\ (is_r lab r /\\ is_sc lab r) /\\ is_r lab r /\\ is_sc lab r.","proofString":"desf.\nexists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) : exists z : actid,\n  sb e z /\\\n  (is_f lab z /\\ is_acq lab z) /\\ sb z r /\\ (true /\\ true) /\\ true /\\ true.","proofString":"exists f.\nsplits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) : sb e f /\\\n(is_f lab f /\\ is_acq lab f) /\\ sb f r /\\ (true /\\ true) /\\ true /\\ true.","proofString":"splits; auto.\nassert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) : sb e f.","proofString":"assert (e <> f) as NEQfe.\nred.\ntype_solver.\nassert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) : e <> f.","proofString":"red.\ntype_solver."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) : e = f -> False.","proofString":"type_solver."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) : sb e f.","proofString":"assert (~is_init f) as NINITf.\ngeneralize (@read_or_fence_is_not_init G WF f).\ntype_solver.\npose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) : ~ is_init f.","proofString":"generalize (@read_or_fence_is_not_init G WF f).\ntype_solver."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) : (is_r lab f \\/ is_f lab f -> ~ is_init f) -> ~ is_init f.","proofString":"type_solver."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) (NINITf : ~ is_init f) : sb e f.","proofString":"pose (sb_semi_total_r WF NINITf NEQfe C U0) as SB.\ndestruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) (NINITf : ~ is_init f) (SB : sb e f \\/ sb f e) : sb e f.","proofString":"destruct SB; auto.\nexfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) (NINITf : ~ is_init f) (H : sb f e) : sb e f.","proofString":"exfalso.\nspecialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : forall c : actid, sb f c -> sb c r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) (NINITf : ~ is_init f) (H : sb f e) : False.","proofString":"specialize (U1 e).\nauto."},{"statement":"(e r : actid) (A : E e) (A0 : ~ is_f lab e) (C : sb e r) (f : actid) (U3 : is_acq lab f) (U2 : is_f lab f) (U0 : sb f r) (U1 : sb f e -> sb e r -> False) (V : is_r lab r) (V0 : is_sc lab r) (NEQfe : e <> f) (NINITf : ~ is_init f) (H : sb f e) : False.","proofString":"auto."},{"statement":"(sb ⨾ ⦗fun x : actid => ~ is_init x⦘) ⨾ rf ⨾ ⦗Sc⦘ ⊆ sb ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"rewrite !seqA.\nby sin_rewrite sc_rf_r."},{"statement":"sb ⨾ ⦗fun x : actid => ~ is_init x⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ sb ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘.","proofString":"by sin_rewrite sc_rf_r."},{"statement":"same_loc ⨾ same_loc ⊆ same_loc.","proofString":"rewrite rewrite_trans by apply same_loc_trans.\nbasic_solver."},{"statement":"same_loc ⊆ same_loc.","proofString":"basic_solver."},{"statement":"sb ⨾ sw ⊆ hb.","proofString":"unfold imm_s_hb.hb.\nrewrite ct_begin, <- inclusion_t_rt, ct_begin.\nbasic_solver 10."},{"statement":"sb ⨾ sw ⊆ (sb ∪ sw)⁺.","proofString":"rewrite ct_begin, <- inclusion_t_rt, ct_begin.\nbasic_solver 10."},{"statement":"sb ⨾ sw ⊆ (sb ∪ sw) ⨾ (sb ∪ sw) ⨾ (sb ∪ sw)＊.","proofString":"basic_solver 10."},{"statement":"(⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘ ⨾ rf ∪ sb ⨾ ⦗Sc⦘ ⨾ rf)\n⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"rewrite seq_union_l, !seqA.\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nassert (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) as REL.\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊).\nbasic_solver 10.\narewrite (⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?); [|done].\nmode_solver 10.\nrewrite inclusion_seq_eqv_l with (dom:=ORlx).\nsin_rewrite REL.\nunionL.\nrewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘\n∪ sb ⨾ ⦗Sc⦘ ⨾ rf ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"seq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nassert (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) as REL.\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊).\nbasic_solver 10.\narewrite (⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?); [|done].\nmode_solver 10.\nrewrite inclusion_seq_eqv_l with (dom:=ORlx).\nsin_rewrite REL.\nunionL.\nrewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘ ⨾ ((rf ⨾ rmw)＊ ⨾ rf) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘\n∪ sb ⨾ ⦗Sc⦘ ⨾ ((rf ⨾ rmw)＊ ⨾ rf) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"rewrite !seqA.\nassert (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) as REL.\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊).\nbasic_solver 10.\narewrite (⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?); [|done].\nmode_solver 10.\nrewrite inclusion_seq_eqv_l with (dom:=ORlx).\nsin_rewrite REL.\nunionL.\nrewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘\n∪ sb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"assert (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) as REL.\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊).\nbasic_solver 10.\narewrite (⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?); [|done].\nmode_solver 10.\nrewrite inclusion_seq_eqv_l with (dom:=ORlx).\nsin_rewrite REL.\nunionL.\nrewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release.","proofString":"unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊).\nbasic_solver 10.\narewrite (⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?); [|done].\nmode_solver 10."},{"statement":"⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊.","proofString":"arewrite (⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊).\nbasic_solver 10.\narewrite (⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?); [|done].\nmode_solver 10."},{"statement":"⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊.","proofString":"basic_solver 10."},{"statement":"⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊.","proofString":"arewrite (⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?); [|done].\nmode_solver 10."},{"statement":"⦗F ∩₁ Acqrel⦘ ⨾ sb ⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?.","proofString":"mode_solver 10."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘\n∪ sb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"rewrite inclusion_seq_eqv_l with (dom:=ORlx).\nsin_rewrite REL.\nunionL.\nrewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘\n∪ sb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"sin_rewrite REL.\nunionL.\nrewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : release ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘\n∪ sb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"unionL.\nrewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : release ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"rewrite <- sw_in_hb.\nunfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : release ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ sw.","proofString":"unfold imm_s_hb.sw.\nhahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : release ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","proofString":"hahn_frame.\nrewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","proofString":"rewrite id_inter.\nsin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : sb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","proofString":"sin_rewrite (r_step (sb ⨾ ⦗F⦘)).\nbasic_solver 10."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","proofString":"basic_solver 10."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : sb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"arewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘).\nrewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver.\nsin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘.","proofString":"rewrite RMWSC.\ndo 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ (rf ⨾ ⦗Sc⦘ ⨾ rmw ⨾ ⦗Sc⦘)＊ ⊆ ⦗Sc⦘ ⨾ (rf ⨾ ⦗Sc⦘ ⨾ rmw ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘.","proofString":"do 2 rewrite <- seqA.\nsin_rewrite dom_crt.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ (((rf ⨾ ⦗Sc⦘) ⨾ rmw) ⨾ ⦗Sc⦘)＊\n⊆ ⦗Sc⦘ ⨾ (((rf ⨾ ⦗Sc⦘) ⨾ rmw) ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘.","proofString":"sin_rewrite dom_crt.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ (((rf ⨾ ⦗Sc⦘) ⨾ rmw) ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘\n⊆ ⦗Sc⦘ ⨾ (((rf ⨾ ⦗Sc⦘) ⨾ rmw) ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘.","proofString":"basic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : sb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"sin_rewrite sc_rf_l.\narewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : sb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"arewrite (sb ⊆ hb).\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⨾ hb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"sin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ sw ⨾ hb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"sin_rewrite sw_in_hb.\narewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⨾ hb ⨾ hb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"arewrite (⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊).\nrewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver.\nrewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ (rf ⨾ rmw)＊ ⊆ hb＊.","proofString":"rewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ ⦗fun _ : actid => True⦘ ∪ ⦗Sc⦘ ⨾ (rf ⨾ rmw)⁺ ⊆ hb＊.","proofString":"unionL; [basic_solver| ].\nrewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ (rf ⨾ rmw)⁺ ⊆ hb＊.","proofString":"rewrite ct_rotl.\nrewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ rf ⨾ (rmw ⨾ rf)＊ ⨾ rmw ⊆ hb＊.","proofString":"rewrite rmw_rf_hbl.\nsin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : ⦗Sc⦘ ⨾ rf ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊ ⨾ rmw ⊆ hb＊.","proofString":"sin_rewrite sc_rf_l.\nsin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘) ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊ ⨾ rmw ⊆ hb＊.","proofString":"sin_rewrite (rmw_in_sb WF).\nsin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘) ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊ ⨾ sb ⊆ hb＊.","proofString":"sin_rewrite sb_in_hb.\nsin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘) ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊ ⨾ hb ⊆ hb＊.","proofString":"sin_rewrite sc_rf_in_sw.\nsin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : sw ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊ ⨾ hb ⊆ hb＊.","proofString":"sin_rewrite sw_in_hb.\nrewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊ ⨾ hb ⊆ hb＊.","proofString":"rewrite inclusion_seq_eqv_l,  inclusion_seq_eqv_r.\narewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ (hb ∩ same_loc)＊ ⨾ hb ⊆ hb＊.","proofString":"arewrite (hb ∩ same_loc ⊆ hb).\nseq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ hb＊ ⨾ hb ⊆ hb＊.","proofString":"seq_rewrite <- ct_begin.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb⁺ ⨾ hb ⊆ hb＊.","proofString":"rewrite ct_unit.\nbasic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb⁺ ⊆ hb＊.","proofString":"basic_solver."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ hb＊ ⨾ hb ⨾ hb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb.","proofString":"rewrite inclusion_seq_eqv_r.\nseq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb ⨾ hb＊ ⨾ hb ⨾ hb ⊆ hb.","proofString":"seq_rewrite <- ct_begin.\ndo 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb⁺ ⨾ hb ⨾ hb ⊆ hb.","proofString":"do 2 sin_rewrite ct_unit.\napply ct_of_trans, hb_trans."},{"statement":"(REL : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⊆ release) : hb⁺ ⊆ hb.","proofString":"apply ct_of_trans, hb_trans."},{"statement":"(⦗Sc⦘ ⨾ ⦗Sc⦘) ⨾ rf ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘.","proofString":"rewrite <- seq_eqvK at 3.\nrewrite !seqA.\nhahn_frame.\nunfold scb.\narewrite (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc).\napply inclusion_inter_r.\nrewrite <- sw_in_hb.\napply sc_rf_in_sw.\nrewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\napply (wf_rfl WF).\nbasic_solver 10."},{"statement":"(⦗Sc⦘ ⨾ ⦗Sc⦘) ⨾ rf ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘.","proofString":"rewrite !seqA.\nhahn_frame.\nunfold scb.\narewrite (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc).\napply inclusion_inter_r.\nrewrite <- sw_in_hb.\napply sc_rf_in_sw.\nrewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\napply (wf_rfl WF).\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘.","proofString":"hahn_frame.\nunfold scb.\narewrite (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc).\napply inclusion_inter_r.\nrewrite <- sw_in_hb.\napply sc_rf_in_sw.\nrewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\napply (wf_rfl WF).\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ scb G.","proofString":"unfold scb.\narewrite (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc).\napply inclusion_inter_r.\nrewrite <- sw_in_hb.\napply sc_rf_in_sw.\nrewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\napply (wf_rfl WF).\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"arewrite (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc).\napply inclusion_inter_r.\nrewrite <- sw_in_hb.\napply sc_rf_in_sw.\nrewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\napply (wf_rfl WF).\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb ∩ same_loc.","proofString":"apply inclusion_inter_r.\nrewrite <- sw_in_hb.\napply sc_rf_in_sw.\nrewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\napply (wf_rfl WF)."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ hb.","proofString":"rewrite <- sw_in_hb.\napply sc_rf_in_sw."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ sw.","proofString":"apply sc_rf_in_sw."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ same_loc.","proofString":"rewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\napply (wf_rfl WF)."},{"statement":"rf ⊆ same_loc.","proofString":"apply (wf_rfl WF)."},{"statement":"hb ∩ same_loc\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"basic_solver 10."},{"statement":"(sb \\ same_loc) ⨾ hb＊ ⨾ (sb \\ same_loc)\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"rewrite rtE.\nrepeat case_union _ _.\nunionL.\nseq_rewrite seq_id_r.\ndo 2 arewrite (sb \\ same_loc ⊆ sb).\nrewrite rewrite_trans; [| apply sb_trans].\nbasic_solver 10.\nrewrite ct_of_trans; [| apply hb_trans].\nbasic_solver 20."},{"statement":"(sb \\ same_loc) ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⨾ (sb \\ same_loc)\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"repeat case_union _ _.\nunionL.\nseq_rewrite seq_id_r.\ndo 2 arewrite (sb \\ same_loc ⊆ sb).\nrewrite rewrite_trans; [| apply sb_trans].\nbasic_solver 10.\nrewrite ct_of_trans; [| apply hb_trans].\nbasic_solver 20."},{"statement":"(sb \\ same_loc) ⨾ ⦗fun _ : actid => True⦘ ⨾ (sb \\ same_loc)\n∪ (sb \\ same_loc) ⨾ hb⁺ ⨾ (sb \\ same_loc)\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"unionL.\nseq_rewrite seq_id_r.\ndo 2 arewrite (sb \\ same_loc ⊆ sb).\nrewrite rewrite_trans; [| apply sb_trans].\nbasic_solver 10.\nrewrite ct_of_trans; [| apply hb_trans].\nbasic_solver 20."},{"statement":"(sb \\ same_loc) ⨾ ⦗fun _ : actid => True⦘ ⨾ (sb \\ same_loc)\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"seq_rewrite seq_id_r.\ndo 2 arewrite (sb \\ same_loc ⊆ sb).\nrewrite rewrite_trans; [| apply sb_trans].\nbasic_solver 10."},{"statement":"(sb \\ same_loc) ⨾ (sb \\ same_loc)\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"do 2 arewrite (sb \\ same_loc ⊆ sb).\nrewrite rewrite_trans; [| apply sb_trans].\nbasic_solver 10."},{"statement":"sb ⨾ sb\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"rewrite rewrite_trans; [| apply sb_trans].\nbasic_solver 10."},{"statement":"sb ⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"basic_solver 10."},{"statement":"(sb \\ same_loc) ⨾ hb⁺ ⨾ (sb \\ same_loc)\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"rewrite ct_of_trans; [| apply hb_trans].\nbasic_solver 20."},{"statement":"(sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc)\n⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"basic_solver 20."},{"statement":"⦗(fun a : actid => match lab a with\n                   | Astore _ _ _ _ => true\n                   | _ => false\n                   end)\n ∪₁ (fun a : actid =>\n     match lab a with\n     | Aload _ _ _ _ => true\n     | _ => false\n     end)⦘\n⨾ sb\n  ⨾ ⦗fun a : actid => match lab a with\n                      | Afence _ => true\n                      | _ => false\n                      end⦘\n⊆ sb \\\n  (fun x y : actid =>\n   match lab x with\n   | Aload _ _ l _ | Astore _ _ l _ => Some l\n   | Afence _ => None\n   end =\n   match lab y with\n   | Aload _ _ l _ | Astore _ _ l _ => Some l\n   | Afence _ => None\n   end).","proofString":"unfolder.\nins.\ndesf."},{"statement":"forall x y : actid,\n(match lab x with\n | Astore _ _ _ _ => true\n | _ => false\n end \\/ match lab x with\n        | Aload _ _ _ _ => true\n        | _ => false\n        end) /\\\nsb x y /\\ match lab y with\n          | Afence _ => true\n          | _ => false\n          end ->\nsb x y /\\\nmatch lab x with\n| Aload _ _ l _ | Astore _ _ l _ => Some l\n| Afence _ => None\nend <>\nmatch lab y with\n| Aload _ _ l _ | Astore _ _ l _ => Some l\n| Afence _ => None\nend.","proofString":"ins.\ndesf."},{"statement":"(x y : actid) (H : (match lab x with\n | Astore _ _ _ _ => true\n | _ => false\n end \\/ match lab x with\n        | Aload _ _ _ _ => true\n        | _ => false\n        end) /\\\nsb x y /\\ match lab y with\n          | Afence _ => true\n          | _ => false\n          end) : sb x y /\\\nmatch lab x with\n| Aload _ _ l _ | Astore _ _ l _ => Some l\n| Afence _ => None\nend <>\nmatch lab y with\n| Aload _ _ l _ | Astore _ _ l _ => Some l\n| Afence _ => None\nend.","proofString":"desf."},{"statement":"⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G.","proofString":"rewrite rtE.\nrepeat case_union _ _.\nunionL.\nrepeat rewrite inclusion_seq_eqv_l.\nhahn_frame.\nrewrite inclusion_seq_eqv_r, rewrite_trans; [| apply sb_trans].\nunfold scb.\nbasic_solver 10.\narewrite (F ∩₁ Acq ⊆₁ F) by basic_solver.\nsin_rewrite wr_fb_nl.\narewrite (W ⊆₁ W ∪₁ R).\nsin_rewrite fb_wr_nl.\nhahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"⦗W ∪₁ R⦘\n⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ scb G.","proofString":"repeat case_union _ _.\nunionL.\nrepeat rewrite inclusion_seq_eqv_l.\nhahn_frame.\nrewrite inclusion_seq_eqv_r, rewrite_trans; [| apply sb_trans].\nunfold scb.\nbasic_solver 10.\narewrite (F ∩₁ Acq ⊆₁ F) by basic_solver.\nsin_rewrite wr_fb_nl.\narewrite (W ⊆₁ W ∪₁ R).\nsin_rewrite fb_wr_nl.\nhahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n∪ ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb⁺ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ \nscb G.","proofString":"unionL.\nrepeat rewrite inclusion_seq_eqv_l.\nhahn_frame.\nrewrite inclusion_seq_eqv_r, rewrite_trans; [| apply sb_trans].\nunfold scb.\nbasic_solver 10.\narewrite (F ∩₁ Acq ⊆₁ F) by basic_solver.\nsin_rewrite wr_fb_nl.\narewrite (W ⊆₁ W ∪₁ R).\nsin_rewrite fb_wr_nl.\nhahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ scb G.","proofString":"repeat rewrite inclusion_seq_eqv_l.\nhahn_frame.\nrewrite inclusion_seq_eqv_r, rewrite_trans; [| apply sb_trans].\nunfold scb.\nbasic_solver 10."},{"statement":"sb ⨾ sb ⨾ ⦗W⦘ ⊆ scb G.","proofString":"hahn_frame.\nrewrite inclusion_seq_eqv_r, rewrite_trans; [| apply sb_trans].\nunfold scb.\nbasic_solver 10."},{"statement":"sb ⨾ sb ⨾ ⦗W⦘ ⊆ scb G.","proofString":"rewrite inclusion_seq_eqv_r, rewrite_trans; [| apply sb_trans].\nunfold scb.\nbasic_solver 10."},{"statement":"sb ⊆ scb G.","proofString":"unfold scb.\nbasic_solver 10."},{"statement":"sb ⊆ sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr.","proofString":"basic_solver 10."},{"statement":"⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb⁺ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G.","proofString":"arewrite (F ∩₁ Acq ⊆₁ F) by basic_solver.\nsin_rewrite wr_fb_nl.\narewrite (W ⊆₁ W ∪₁ R).\nsin_rewrite fb_wr_nl.\nhahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F⦘ ⨾ hb⁺ ⨾ ⦗F⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G.","proofString":"sin_rewrite wr_fb_nl.\narewrite (W ⊆₁ W ∪₁ R).\nsin_rewrite fb_wr_nl.\nhahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"(sb \\ same_loc) ⨾ hb⁺ ⨾ ⦗F⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G.","proofString":"arewrite (W ⊆₁ W ∪₁ R).\nsin_rewrite fb_wr_nl.\nhahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"(sb \\ same_loc) ⨾ hb⁺ ⨾ ⦗F⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⊆ scb G.","proofString":"sin_rewrite fb_wr_nl.\nhahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"(sb \\ same_loc) ⨾ hb⁺ ⨾ (sb \\ same_loc) ⊆ scb G.","proofString":"hahn_frame.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"(sb \\ same_loc) ⨾ hb⁺ ⨾ (sb \\ same_loc) ⊆ scb G.","proofString":"rewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"(sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ⊆ scb G.","proofString":"arewrite (hb ⊆ hb＊).\napply sbnl_hb_scb."},{"statement":"(sb \\ same_loc) ⨾ hb＊ ⨾ (sb \\ same_loc) ⊆ scb G.","proofString":"apply sbnl_hb_scb."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ (sb ⨾ ⦗Sc⦘ ⨾ ⦗W⦘ ⨾ rf) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"seq_rewrite (seq_eqvC Sc W).\nrewrite !seqA.\nsin_rewrite sc_rf_l.\nrewrite <- seqA with (r2:=⦗W⦘).\nsin_rewrite SCB'.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ (sb ⨾ (⦗W⦘ ⨾ ⦗Sc⦘) ⨾ rf) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !seqA.\nsin_rewrite sc_rf_l.\nrewrite <- seqA with (r2:=⦗W⦘).\nsin_rewrite SCB'.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite sc_rf_l.\nrewrite <- seqA with (r2:=⦗W⦘).\nsin_rewrite SCB'.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ sb\n            ⨾ ⦗W⦘ ⨾ (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seqA with (r2:=⦗W⦘).\nsin_rewrite SCB'.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ (sb ⨾ ⦗W⦘)\n            ⨾ (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite SCB'.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘\n⨾ scb G ⨾ ((⦗Sc⦘ ⨾ ⦗Sc⦘) ⨾ rf ⨾ ⦗Sc⦘) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !seqA.\nrewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- ct_ct.\nrewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite ct_begin at 1.\nhahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ ((⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘) ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊) ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"hahn_frame.\nsin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite rf_scb.\nrewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seq_eqvK at 2.\nrewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !seqA.\nrewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite rt_ct, ct_begin.\nhahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘) ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"hahn_frame.\nrewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"rewrite rmw_rf_hbl.\narewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"arewrite (hb ∩ same_loc ⊆ scb G).\nrewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"rewrite <- !seqA with (r3:=(⦗Sc⦘)).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : (⦗Sc⦘ ⨾ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)＊ ⨾ sb ⨾ ⦗W ∪₁ R⦘) ⨾ ⦗Sc⦘\n⊆ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)＊.","proofString":"sin_rewrite dom_crt.\nrewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ((⦗Sc⦘ ⨾ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘) ⨾ sb ⨾ ⦗W ∪₁ R⦘) ⨾ ⦗Sc⦘\n⊆ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)＊.","proofString":"rewrite !seqA.\nrewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"rewrite (inclusion_seq_eqv_l).\nrewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"rewrite <- rt_rt at 2.\nhahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"hahn_frame_l.\nrewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"rewrite inclusion_seq_eqv_l with (dom:=(W ∪₁ R)).\narewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ sb ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"arewrite (sb ⊆ scb G).\nrewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"rewrite <- inclusion_t_rt.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘) ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"hahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : sb ⨾ ⦗ORlx⦘ ⨾ rf ⊆ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"rewrite ((wf_rfE WF)), ((wf_rfD WF)) at 1.\nrewrite no_sb_to_init, (no_rf_to_init WF) at 1.\nhahn_frame_l.\narewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗ORlx⦘ ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⊆ ⦗ORlx⦘ ⨾ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\narewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\nrewrite (sl_mode (wf_rfl WF)).\nrewrite seq_union_r.\nunionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : sb ⨾ ⦗ORlx⦘ ⨾ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rf ⨾ ⦗R⦘) ⨾ ⦗E⦘ ⊆ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"rewrite no_sb_to_init, (no_rf_to_init WF) at 1.\nhahn_frame_l.\narewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗ORlx⦘ ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⊆ ⦗ORlx⦘ ⨾ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\narewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\nrewrite (sl_mode (wf_rfl WF)).\nrewrite seq_union_r.\nunionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : (sb ⨾ ⦗fun x : actid => ~ is_init x⦘)\n⨾ ⦗ORlx⦘ ⨾ ⦗E⦘ ⨾ (⦗W⦘ ⨾ (rf ⨾ ⦗fun x : actid => ~ is_init x⦘) ⨾ ⦗R⦘) ⨾ ⦗E⦘\n⊆ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"hahn_frame_l.\narewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗ORlx⦘ ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⊆ ⦗ORlx⦘ ⨾ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\narewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\nrewrite (sl_mode (wf_rfl WF)).\nrewrite seq_union_r.\nunionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗fun x : actid => ~ is_init x⦘\n⨾ ⦗ORlx⦘ ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ ⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗R⦘ ⨾ ⦗E⦘\n⊆ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"arewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗ORlx⦘ ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⊆ ⦗ORlx⦘ ⨾ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\narewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\nrewrite (sl_mode (wf_rfl WF)).\nrewrite seq_union_r.\nunionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘\n⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘\n  ⨾ rf ⨾ ⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗R⦘ ⨾ ⦗E⦘ ⊆ \n⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"arewrite (⦗fun x : actid => ~ is_init x⦘ ⨾ ⦗R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ (fun a : actid => is_init a) \\₁ F⦘) by mode_solver.\nrewrite (sl_mode (wf_rfl WF)).\nrewrite seq_union_r.\nunionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘\n⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘\n  ⨾ rf ⨾ ⦗(E \\₁ (fun a : actid => is_init a)) \\₁ F⦘ ⊆ \n⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"rewrite (sl_mode (wf_rfl WF)).\nrewrite seq_union_r.\nunionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ (⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ∪ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘) ⊆ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"rewrite seq_union_r.\nunionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ∪ ⦗ORlx⦘ ⨾ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘\n⊆ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"unionL; [mode_solver| ].\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘ ⊆ ⦗ORlx⦘ ⨾ rf ⨾ ⦗ORlx⦘.","proofString":"basic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ (rmw ⨾ rf)＊ ⊆ ⦗ORlx⦘.","proofString":"rewrite rtE, seq_union_r.\nunionL; [basic_solver| ].\nrewrite ct_begin, RMWSC, !seqA.\nmode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ ⦗fun _ : actid => True⦘ ∪ ⦗ORlx⦘ ⨾ (rmw ⨾ rf)⁺ ⊆ ⦗ORlx⦘.","proofString":"unionL; [basic_solver| ].\nrewrite ct_begin, RMWSC, !seqA.\nmode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ (rmw ⨾ rf)⁺ ⊆ ⦗ORlx⦘.","proofString":"rewrite ct_begin, RMWSC, !seqA.\nmode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ ⦗Sc⦘ ⨾ rmw ⨾ ⦗Sc⦘ ⨾ rf ⨾ (⦗Sc⦘ ⨾ rmw ⨾ ⦗Sc⦘ ⨾ rf)＊ ⊆ ⦗ORlx⦘.","proofString":"mode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ ⦗Sc⦘ ⨾ (rmw ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘.","proofString":"mode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : sb ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘.","proofString":"arewrite (W ⊆₁ W ∪₁ R) at 1.\nhahn_frame.\nmode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : sb ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W ∪₁ R⦘\n⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘.","proofString":"hahn_frame.\nmode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘ ⊆ ⦗F ∩₁ Acq⦘ ⨾ sb.","proofString":"mode_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb ⨾ ⦗R⦘ ⨾ ⦗Sc⦘ ⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘.","proofString":"rewrite sb_r_sc_sync.\narewrite (R ⊆₁ W ∪₁ R) at 1.\nhahn_frame.\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗R⦘ ⨾ ⦗Sc⦘\n⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘.","proofString":"arewrite (R ⊆₁ W ∪₁ R) at 1.\nhahn_frame.\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘.","proofString":"hahn_frame.\nbasic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗ORlx⦘ ⨾ sb ⊆ sb.","proofString":"basic_solver."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ ⦗F ∩₁ Acqrel⦘\n            ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"pose f_hb.\nrewrite seq_union_l,  <- inclusion_union_r1 in i.\nrewrite rtE, <- inclusion_union_r1, seq_id_l, !seqA in i.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq)) at 3.\nrewrite seqA.\nsin_rewrite i.\nsin_rewrite (@inclusion_seq_eqv_l actid hb (F ∩₁ Acq)).\nseq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ∪ sb ⨾ ⦗Sc⦘ ⨾ rf)\n⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ ⦗F ∩₁ Acqrel⦘\n            ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite seq_union_l,  <- inclusion_union_r1 in i.\nrewrite rtE, <- inclusion_union_r1, seq_id_l, !seqA in i.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq)) at 3.\nrewrite seqA.\nsin_rewrite i.\nsin_rewrite (@inclusion_seq_eqv_l actid hb (F ∩₁ Acq)).\nseq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf) ⨾ (rmw ⨾ rf)＊ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ ⦗F ∩₁ Acqrel⦘\n            ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite rtE, <- inclusion_union_r1, seq_id_l, !seqA in i.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq)) at 3.\nrewrite seqA.\nsin_rewrite i.\nsin_rewrite (@inclusion_seq_eqv_l actid hb (F ∩₁ Acq)).\nseq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ ⦗F ∩₁ Acqrel⦘\n            ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seq_eqvK with (dom:=(F ∩₁ Acq)) at 3.\nrewrite seqA.\nsin_rewrite i.\nsin_rewrite (@inclusion_seq_eqv_l actid hb (F ∩₁ Acq)).\nseq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ ⦗F ∩₁ Acqrel⦘\n            ⨾ sb\n              ⨾ ⦗ORlx⦘\n                ⨾ rf ⨾ sb ⨾ (⦗F ∩₁ Acq⦘ ⨾ ⦗F ∩₁ Acq⦘) ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite seqA.\nsin_rewrite i.\nsin_rewrite (@inclusion_seq_eqv_l actid hb (F ∩₁ Acq)).\nseq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘\n      ⨾ hb＊\n        ⨾ ⦗F ∩₁ Acq⦘\n          ⨾ ⦗F ∩₁ Acqrel⦘\n            ⨾ sb\n              ⨾ ⦗ORlx⦘\n                ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite i.\nsin_rewrite (@inclusion_seq_eqv_l actid hb (F ∩₁ Acq)).\nseq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ sb\n    ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite (@inclusion_seq_eqv_l actid hb (F ∩₁ Acq)).\nseq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ hb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"seq_rewrite <- ct_end.\nrewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb⁺ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite ct_of_trans by apply hb_trans.\narewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (F ∩₁ Acq ⊆₁ F) by mode_solver.\nsin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F⦘ ⨾ hb ⨾ ⦗F⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite wr_fb_nl.\nsin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘ ⨾ (sb \\ same_loc) ⨾ hb ⨾ ⦗F⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite fb_wr_nl.\npose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) : ⦗Sc⦘ ⨾ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"pose sbnl_hb_scb.\nrewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) (i0 : (sb \\ same_loc) ⨾ hb＊ ⨾ (sb \\ same_loc) ⊆ scb G) : ⦗Sc⦘ ⨾ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite rtE, <- inclusion_union_r2, ct_of_trans in i0; [| apply hb_trans].\nsin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) (i0 : (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ⊆ scb G) : ⦗Sc⦘ ⨾ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite i0.\nrewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) (i0 : (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite ct_begin.\nhahn_frame."},{"statement":"(SCB' : ⦗W ∪₁ R⦘ ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ hb＊ ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ scb G) (i : ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ⨾ sb ⨾ ⦗F ∩₁ Acq⦘ ⊆ hb) (i0 : (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ⊆ scb G) : ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘) ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊.","proofString":"hahn_frame."},{"statement":"(⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (hb ∩ same_loc ⊆ scb G).\narewrite ((⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⨾ ⦗Sc⦘).\nrewrite ct_end.\nrewrite <- seq_eqvK at 4.\nbasic_solver.\narewrite (⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘).\nunfold scb.\nbasic_solver 10.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite ((⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⨾ ⦗Sc⦘).\nrewrite ct_end.\nrewrite <- seq_eqvK at 4.\nbasic_solver.\narewrite (⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘).\nunfold scb.\nbasic_solver 10.\nrewrite ct_unit.\nbasic_solver."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⨾ ⦗Sc⦘.","proofString":"rewrite ct_end.\nrewrite <- seq_eqvK at 4.\nbasic_solver."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘\n⊆ ((⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘) ⨾ ⦗Sc⦘.","proofString":"rewrite <- seq_eqvK at 4.\nbasic_solver."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘\n⊆ ((⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘) ⨾ ⦗Sc⦘.","proofString":"basic_solver."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⨾ ⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘).\nunfold scb.\nbasic_solver 10.\nrewrite ct_unit.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘.","proofString":"arewrite (⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘).\nunfold scb.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ sb ⨾ ⦗Sc⦘ ⊆ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘.","proofString":"unfold scb.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ sb ⨾ ⦗Sc⦘\n⊆ ⦗Sc⦘\n  ⨾ (sb ∪ (sb \\ same_loc) ⨾ hb ⨾ (sb \\ same_loc) ∪ hb ∩ same_loc ∪ co ∪ fr)\n    ⨾ ⦗Sc⦘.","proofString":"basic_solver 10."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⨾ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite ct_unit.\nbasic_solver."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"basic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite rtE.\ndo 2 case_union _ _.\nunionL.\narewrite (sb ⊆ scb G).\nrewrite <- ct_step.\nbasic_solver.\nrewrite !id_inter, !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (sb ⨾ rf)⁺ ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺).\nrewrite ct_rotl at 1.\narewrite (rf ≡ rf ⨾ ⦗R⦘) at 1 by eapply (dom_r (wf_rfD WF)).\narewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10.\nrewrite (dom_l (wf_rfD WF)) at 1.\nsin_rewrite sb_w_sync.\nrewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘\n⨾ (⦗fun _ : actid => True⦘ ∪ (sb ⨾ rf)⁺) ⨾ sb ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"do 2 case_union _ _.\nunionL.\narewrite (sb ⊆ scb G).\nrewrite <- ct_step.\nbasic_solver.\nrewrite !id_inter, !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (sb ⨾ rf)⁺ ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺).\nrewrite ct_rotl at 1.\narewrite (rf ≡ rf ⨾ ⦗R⦘) at 1 by eapply (dom_r (wf_rfD WF)).\narewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10.\nrewrite (dom_l (wf_rfD WF)) at 1.\nsin_rewrite sb_w_sync.\nrewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ sb ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n∪ ⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)⁺ ⨾ sb ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"unionL.\narewrite (sb ⊆ scb G).\nrewrite <- ct_step.\nbasic_solver.\nrewrite !id_inter, !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (sb ⨾ rf)⁺ ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺).\nrewrite ct_rotl at 1.\narewrite (rf ≡ rf ⨾ ⦗R⦘) at 1 by eapply (dom_r (wf_rfD WF)).\narewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10.\nrewrite (dom_l (wf_rfD WF)) at 1.\nsin_rewrite sb_w_sync.\nrewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ sb ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (sb ⊆ scb G).\nrewrite <- ct_step.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ scb G ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- ct_step.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ scb G ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n⊆ ⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘.","proofString":"basic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)⁺ ⨾ sb ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !id_inter, !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (sb ⨾ rf)⁺ ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺).\nrewrite ct_rotl at 1.\narewrite (rf ≡ rf ⨾ ⦗R⦘) at 1 by eapply (dom_r (wf_rfD WF)).\narewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10.\nrewrite (dom_l (wf_rfD WF)) at 1.\nsin_rewrite sb_w_sync.\nrewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (sb ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (sb ⨾ rf)⁺ ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺).\nrewrite ct_rotl at 1.\narewrite (rf ≡ rf ⨾ ⦗R⦘) at 1 by eapply (dom_r (wf_rfD WF)).\narewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10.\nrewrite (dom_l (wf_rfD WF)) at 1.\nsin_rewrite sb_w_sync.\nrewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (sb ⨾ rf)⁺ ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"rewrite ct_rotl at 1.\narewrite (rf ≡ rf ⨾ ⦗R⦘) at 1 by eapply (dom_r (wf_rfD WF)).\narewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⨾ (rf ⨾ sb)＊ ⨾ rf\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"arewrite (rf ≡ rf ⨾ ⦗R⦘) at 1 by eapply (dom_r (wf_rfD WF)).\narewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⨾ (rf ⨾ ⦗R⦘ ⨾ sb)＊ ⨾ rf\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"arewrite (rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘).\nrewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver.\narewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"rf ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘.","proofString":"rewrite (dom_r (wf_rfE WF)) at 1.\nrewrite seqA.\nhahn_frame.\ntype_solver."},{"statement":"(rf ⨾ ⦗E⦘) ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘.","proofString":"rewrite seqA.\nhahn_frame.\ntype_solver."},{"statement":"rf ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⊆ rf ⨾ ⦗E \\₁ F⦘.","proofString":"hahn_frame.\ntype_solver."},{"statement":"⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘.","proofString":"type_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⨾ (rf ⨾ ⦗E \\₁ F⦘ ⨾ sb)＊ ⨾ rf\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"arewrite (⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb).\nrewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver.\nrewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb.","proofString":"rewrite <- (seq_eqvK (W ∪₁ R)) at 1.\nrewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ (⦗W ∪₁ R⦘ ⨾ ⦗W ∪₁ R⦘) ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb.","proofString":"rewrite <- (seq_eqvK (Sc)) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver."},{"statement":"(⦗Sc⦘ ⨾ ⦗Sc⦘) ⨾ (⦗W ∪₁ R⦘ ⨾ ⦗W ∪₁ R⦘) ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb.","proofString":"rewrite !seqA.\nseq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb.","proofString":"seq_rewrite (seq_eqvC (Sc) (W ∪₁ R)).\narewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ (⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘) ⨾ ⦗W ∪₁ R⦘ ⨾ sb ⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb.","proofString":"arewrite (sb ≡ ⦗E⦘ ⨾ sb) by eapply (dom_l (wf_sbE G)).\narewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⨾ sb\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ ⦗E⦘ ⨾ sb.","proofString":"arewrite (⦗W ∪₁ R⦘ ⨾ ⦗E⦘ ⊆ ⦗E \\₁ F⦘) by mode_solver.\nhahn_frame.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ ⦗E⦘ ⨾ sb.","proofString":"hahn_frame.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗E \\₁ F⦘ ⊆ ⦗E \\₁ F⦘ ⨾ ⦗E⦘.","proofString":"basic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb ⨾ (rf ⨾ ⦗E \\₁ F⦘ ⨾ sb)＊ ⨾ rf\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"rewrite <- seq_eqvK at 1.\nrewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"(⦗Sc⦘ ⨾ ⦗Sc⦘) ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb ⨾ (rf ⨾ ⦗E \\₁ F⦘ ⨾ sb)＊ ⨾ rf\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"rewrite seqA at 1.\nrewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗E \\₁ F⦘ ⨾ sb ⨾ (rf ⨾ ⦗E \\₁ F⦘ ⨾ sb)＊ ⨾ rf\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"rewrite <- (seqA _ sb _).\nrewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb) ⨾ (rf ⨾ ⦗E \\₁ F⦘ ⨾ sb)＊ ⨾ rf\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"rewrite <- ct_rotl.\nseq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ((⦗E \\₁ F⦘ ⨾ sb) ⨾ rf)⁺\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"seq_rewrite seq_eqvK.\nbasic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ((⦗E \\₁ F⦘ ⨾ sb) ⨾ rf)⁺\n⊆ ⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺.","proofString":"basic_solver 10."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite (dom_l (wf_rfD WF)) at 1.\nsin_rewrite sb_w_sync.\nrewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗E \\₁ F⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite sb_w_sync.\nrewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ ((sb ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n      ∪ rmw ⨾ ⦗W⦘) ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ \n(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seq_eqvK with (dom:=F ∩₁ Acqrel).\ncase_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ ((sb\n      ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘) ⨾ sb ⨾ ⦗ORlx⦘\n         ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ∪ rmw ⨾ ⦗W⦘) ⨾ rf)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"case_union _ _.\nseq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ ((sb\n      ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘) ⨾ sb ⨾ ⦗ORlx⦘\n         ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘) ⨾ rf ∪ (rmw ⨾ ⦗W⦘) ⨾ rf)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"seq_rewrite ct_unionE.\ncase_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (((rmw ⨾ ⦗W⦘) ⨾ rf)⁺\n     ∪ ((rmw ⨾ ⦗W⦘) ⨾ rf)＊\n       ⨾ (((sb\n            ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘) ⨾ sb ⨾ ⦗ORlx⦘\n               ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘) ⨾ rf) ⨾ \n          ((rmw ⨾ ⦗W⦘) ⨾ rf)＊)⁺) ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"case_union ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ _.\ndo 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n     ∪ (((rmw ⨾ ⦗W⦘) ⨾ rf)＊\n        ⨾ (((sb\n             ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘) ⨾ sb ⨾ ⦗ORlx⦘\n                ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘) ⨾ rf) ⨾ \n           ((rmw ⨾ ⦗W⦘) ⨾ rf)＊)⁺) ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘)\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"do 2 rewrite seq_union_r.\nunionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n∪ ⦗Sc⦘\n  ⨾ ⦗W ∪₁ R⦘\n    ⨾ (((rmw ⨾ ⦗W⦘) ⨾ rf)＊\n       ⨾ (((sb\n            ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘) ⨾ sb ⨾ ⦗ORlx⦘\n               ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘) ⨾ rf) ⨾ \n          ((rmw ⨾ ⦗W⦘) ⨾ rf)＊)⁺) ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"unionL.\nrewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver.\nrewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ ((rmw ⨾ ⦗W⦘) ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite inclusion_seq_eqv_r.\nsin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite rmw_rf_ct_sb_scb.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗W ∪₁ R⦘ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"basic_solver."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (((rmw ⨾ ⦗W⦘) ⨾ rf)＊\n     ⨾ (((sb\n          ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘) ⨾ sb ⨾ ⦗ORlx⦘\n             ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘) ⨾ rf) ⨾ \n        ((rmw ⨾ ⦗W⦘) ⨾ rf)＊)⁺) ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !seqA.\narewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊\n    ⨾ (sb\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n          ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n      ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘).\nrewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver.\nrewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗W ∪₁ R⦘ ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘.","proofString":"rewrite inclusion_seq_eqv_l with (dom:=W).\nrewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘.","proofString":"rewrite (dom_r (wf_rfD WF)) at 1.\narewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf ⨾ ⦗R⦘)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘.","proofString":"arewrite (R ⊆₁ W ∪₁ R) at 2.\nrewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf ⨾ ⦗W ∪₁ R⦘)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘.","proofString":"rewrite <- seqA.\nrewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"⦗W ∪₁ R⦘ ⨾ ((rmw ⨾ rf) ⨾ ⦗W ∪₁ R⦘)＊ ⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘.","proofString":"rewrite dom_crt.\nrewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"⦗W ∪₁ R⦘ ⨾ ((rmw ⨾ rf) ⨾ ⦗W ∪₁ R⦘)＊ ⨾ ⦗W ∪₁ R⦘\n⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘.","proofString":"rewrite !seqA.\nhahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf ⨾ ⦗W ∪₁ R⦘)＊ ⨾ ⦗W ∪₁ R⦘\n⊆ ⦗W ∪₁ R⦘ ⨾ (rmw ⨾ rf)＊ ⨾ ⦗W ∪₁ R⦘.","proofString":"hahn_frame.\nrewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"(rmw ⨾ rf ⨾ ⦗W ∪₁ R⦘)＊ ⊆ (rmw ⨾ rf)＊.","proofString":"rewrite inclusion_seq_eqv_r.\nbasic_solver."},{"statement":"(rmw ⨾ rf)＊ ⊆ (rmw ⨾ rf)＊.","proofString":"basic_solver."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (rmw ⨾ rf)＊\n    ⨾ ⦗W ∪₁ R⦘\n      ⨾ (sb\n         ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n            ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n        ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite rmw_rf_hbl at 1.\narewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (⦗Sc⦘ ⨾ hb ∩ same_loc ⨾ ⦗Sc⦘)＊\n    ⨾ ⦗W ∪₁ R⦘\n      ⨾ (sb\n         ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n            ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n        ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (hb ∩ same_loc ⊆ scb G).\nseq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊\n    ⨾ ⦗W ∪₁ R⦘\n      ⨾ (sb\n         ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n            ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n        ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"seq_rewrite (@seq_eqvC _ Sc _).\nrewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘)\n⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊\n  ⨾ ⦗W ∪₁ R⦘\n    ⨾ (sb\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n          ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n      ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite seqA.\nrewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗W ∪₁ R⦘\n⨾ ⦗Sc⦘\n  ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊\n    ⨾ ⦗W ∪₁ R⦘\n      ⨾ (sb\n         ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n            ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n        ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seqA with (r3:=⦗Sc⦘).\nsin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗W ∪₁ R⦘\n⨾ ⦗Sc⦘\n  ⨾ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)＊\n    ⨾ ⦗W ∪₁ R⦘\n      ⨾ (sb\n         ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n            ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n        ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)⁺.","proofString":"sin_rewrite dom_crt.\nrewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗W ∪₁ R⦘\n⨾ (⦗Sc⦘ ⨾ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)＊ ⨾ ⦗Sc⦘)\n  ⨾ ⦗W ∪₁ R⦘\n    ⨾ (sb\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n          ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n      ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ ((⦗Sc⦘ ⨾ scb G) ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !seqA.\nrewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗W ∪₁ R⦘\n⨾ ⦗Sc⦘\n  ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊\n    ⨾ ⦗Sc⦘\n      ⨾ ⦗W ∪₁ R⦘\n        ⨾ (sb\n           ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n              ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n          ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- rt_ct with (r:=(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)).\ndo 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗W ∪₁ R⦘\n⨾ ⦗Sc⦘\n  ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊\n    ⨾ ⦗Sc⦘\n      ⨾ ⦗W ∪₁ R⦘\n        ⨾ (sb\n           ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n              ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n          ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"do 2 rewrite inclusion_seq_eqv_l at 1.\nhahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊\n⨾ ⦗Sc⦘\n  ⨾ ⦗W ∪₁ R⦘\n    ⨾ (sb\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n          ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺\n      ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)＊ ⨾ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"hahn_frame_l.\npose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘)\n       ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"pose scb_chain.\nrewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ⨾ rf ∪ sb ⨾ ⦗Sc⦘ ⨾ rf) ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘)\n       ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- !seqA with (r3:=rf) in i.\nrewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘) ⨾ rf ∪ (sb ⨾ ⦗Sc⦘) ⨾ rf)\n         ⨾ (rmw ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ \n(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘)\n       ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seq_union_l in i.\narewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf) ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘)\n       ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"arewrite (Acqrel ⊆₁ Acq) at 1 by mode_solver.\nrewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf) ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ (⦗F ∩₁ Acq⦘ ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘)\n       ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite <- seq_union_r.\ndo 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf) ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ (⦗F ∩₁ Acq⦘ ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘))\n       ⨾ ⦗W⦘ ⨾ rf ⨾ (rmw ⨾ ⦗W⦘ ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘\n⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"do 2 sin_rewrite (@inclusion_seq_eqv_r actid _ W).\nrewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf) ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ (⦗F ∩₁ Acq⦘ ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘))\n       ⨾ rf ⨾ (rmw ⨾ rf)＊)⁺ ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ \n(⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !seqA.\nrewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ ((⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf) ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"rewrite !seqA in i.\nauto."},{"statement":"(i : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺) : ⦗Sc⦘\n⨾ ⦗W ∪₁ R⦘\n  ⨾ (sb\n     ⨾ ⦗F ∩₁ Acq⦘\n       ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗Sc⦘) ⨾ rf ⨾ (rmw ⨾ rf)＊)⁺\n    ⨾ sb ⨾ ⦗W ∪₁ R⦘ ⨾ ⦗Sc⦘ ⊆ (⦗Sc⦘ ⨾ scb G ⨾ ⦗Sc⦘)⁺.","proofString":"auto."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ rf ⨾ ⦗Sc⦘ ⊆ (psc_base G)⁺.","proofString":"sin_rewrite sb_rf_sc_sc; auto.\nrewrite (dom_l (wf_rfD WF)) at 2.\nrewrite <- seq_eqvK with (dom:=Sc) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC Sc W).\nrewrite !seqA.\nsin_rewrite (sc_rf_in_pscb); auto.\nrewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ (psc_base G)⁺.","proofString":"rewrite (dom_l (wf_rfD WF)) at 2.\nrewrite <- seq_eqvK with (dom:=Sc) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC Sc W).\nrewrite !seqA.\nsin_rewrite (sc_rf_in_pscb); auto.\nrewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ (⦗W⦘ ⨾ rf) ⨾ ⦗Sc⦘ ⊆ (psc_base G)⁺.","proofString":"rewrite <- seq_eqvK with (dom:=Sc) at 1.\nrewrite !seqA.\nseq_rewrite (seq_eqvC Sc W).\nrewrite !seqA.\nsin_rewrite (sc_rf_in_pscb); auto.\nrewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ (⦗Sc⦘ ⨾ ⦗Sc⦘) ⨾ (⦗W⦘ ⨾ rf) ⨾ ⦗Sc⦘\n⊆ (psc_base G)⁺.","proofString":"rewrite !seqA.\nseq_rewrite (seq_eqvC Sc W).\nrewrite !seqA.\nsin_rewrite (sc_rf_in_pscb); auto.\nrewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ ⦗Sc⦘\n⊆ (psc_base G)⁺.","proofString":"seq_rewrite (seq_eqvC Sc W).\nrewrite !seqA.\nsin_rewrite (sc_rf_in_pscb); auto.\nrewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ (⦗W⦘ ⨾ ⦗Sc⦘) ⨾ rf ⨾ ⦗Sc⦘\n⊆ (psc_base G)⁺.","proofString":"rewrite !seqA.\nsin_rewrite (sc_rf_in_pscb); auto.\nrewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ ⦗W⦘ ⨾ ⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘\n⊆ (psc_base G)⁺.","proofString":"sin_rewrite (sc_rf_in_pscb); auto.\nrewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ ⦗W⦘ ⨾ psc_base G ⊆ (psc_base G)⁺.","proofString":"rewrite ct_end.\nhahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ ⦗W⦘ ⨾ psc_base G\n⊆ (psc_base G)＊ ⨾ psc_base G.","proofString":"hahn_frame.\narewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗Sc⦘ ⨾ ⦗W⦘ ⊆ (psc_base G)＊.","proofString":"arewrite (⦗Sc⦘ ⨾ ⦗W⦘ ⊆ ⦗(W ∪₁ R) ∩₁ Sc⦘) by mode_solver.\nrewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"⦗Sc ∩₁ (W ∪₁ R)⦘ ⨾ (sb ⨾ rf)＊ ⨾ sb ⨾ ⦗(W ∪₁ R) ∩₁ Sc⦘ ⊆ (psc_base G)＊.","proofString":"rewrite sc_sb_rf_ct_sb_pscb.\nbasic_solver."},{"statement":"(psc_base G)⁺ ⊆ (psc_base G)＊.","proofString":"basic_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) : acyclic (sb ∪ rf).","proofString":"cdes IC.\nrewrite rfi_union_rfe, <- unionA.\narewrite (rfi ⊆ sb).\nrewrite unionK.\napply acyclic_union.\nrewrite sb_in_hb.\ncdes Cint.\nred.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto].\nrewrite acyclic_rotl, rtE, seq_union_l, seq_id_l.\nrewrite ct_of_trans by apply sb_trans.\nred in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic (sb ∪ rf).","proofString":"rewrite rfi_union_rfe, <- unionA.\narewrite (rfi ⊆ sb).\nrewrite unionK.\napply acyclic_union.\nrewrite sb_in_hb.\ncdes Cint.\nred.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto].\nrewrite acyclic_rotl, rtE, seq_union_l, seq_id_l.\nrewrite ct_of_trans by apply sb_trans.\nred in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic (sb ∪ rfi ∪ rfe).","proofString":"arewrite (rfi ⊆ sb).\nrewrite unionK.\napply acyclic_union.\nrewrite sb_in_hb.\ncdes Cint.\nred.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto].\nrewrite acyclic_rotl, rtE, seq_union_l, seq_id_l.\nrewrite ct_of_trans by apply sb_trans.\nred in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic (sb ∪ sb ∪ rfe).","proofString":"rewrite unionK.\napply acyclic_union.\nrewrite sb_in_hb.\ncdes Cint.\nred.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto].\nrewrite acyclic_rotl, rtE, seq_union_l, seq_id_l.\nrewrite ct_of_trans by apply sb_trans.\nred in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic (sb ∪ rfe).","proofString":"apply acyclic_union.\nrewrite sb_in_hb.\ncdes Cint.\nred.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto].\nrewrite acyclic_rotl, rtE, seq_union_l, seq_id_l.\nrewrite ct_of_trans by apply sb_trans.\nred in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic sb.","proofString":"rewrite sb_in_hb.\ncdes Cint.\nred.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto]."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic hb.","proofString":"cdes Cint.\nred.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto]."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) (Cint0 : irreflexive (hb ⨾ eco^?)) : acyclic hb.","proofString":"red.\nrewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto]."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) (Cint0 : irreflexive (hb ⨾ eco^?)) : irreflexive hb⁺.","proofString":"rewrite ct_of_trans; [| apply hb_trans].\narewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto]."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) (Cint0 : irreflexive (hb ⨾ eco^?)) : irreflexive hb.","proofString":"arewrite (hb ⊆ hb ⨾ eco^?); [basic_solver|auto]."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic (rfe ⨾ sb＊).","proofString":"rewrite acyclic_rotl, rtE, seq_union_l, seq_id_l.\nrewrite ct_of_trans by apply sb_trans.\nred in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic (rfe ∪ sb⁺ ⨾ rfe).","proofString":"rewrite ct_of_trans by apply sb_trans.\nred in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyc_ext G sc) (Cat : rmw_atomicity G) : acyclic (rfe ∪ sb ⨾ rfe).","proofString":"red in Cext.\ncdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) : acyclic (rfe ∪ sb ⨾ rfe).","proofString":"cdes Cext.\napply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (rfe ∪ sb ⨾ rfe).","proofString":"apply acyclic_union.\napply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver.\nrewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic rfe.","proofString":"apply acyclic_disj.\nrewrite (wf_rfeD WF).\nmode_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : rfe ⨾ rfe ≡ ∅₂.","proofString":"rewrite (wf_rfeD WF).\nmode_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘ ≡ ∅₂.","proofString":"mode_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic ((sb ⨾ rfe) ⨾ rfe＊).","proofString":"rewrite seqA, <- ct_begin.\narewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (sb ⨾ rfe⁺).","proofString":"arewrite (rfe⁺ ≡ rfe).\nrewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver.\nrewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : rfe⁺ ≡ rfe.","proofString":"rewrite ct_begin, rtE, seq_union_r.\nrewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : rfe ⨾ ⦗fun _ : actid => True⦘ ∪ rfe ⨾ rfe⁺ ≡ rfe.","proofString":"rewrite ct_begin.\nrewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : rfe ⨾ ⦗fun _ : actid => True⦘ ∪ rfe ⨾ rfe ⨾ rfe＊ ≡ rfe.","proofString":"rewrite (wf_rfeD WF) at 2.\nrewrite (wf_rfeD WF) at 3.\ntype_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : rfe ⨾ ⦗fun _ : actid => True⦘ ∪ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ rfe ⨾ rfe＊ ≡ rfe.","proofString":"rewrite (wf_rfeD WF) at 3.\ntype_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : rfe ⨾ ⦗fun _ : actid => True⦘ ∪ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ rfe＊\n≡ rfe.","proofString":"type_solver."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (sb ⨾ rfe).","proofString":"rewrite (wf_rfeD WF), (dom_r (wf_rfeE WF)), seqA.\narewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (sb ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗E⦘ ⨾ ⦗R⦘).","proofString":"arewrite (⦗E⦘ ⨾ ⦗R⦘ ⊆ ⦗E \\₁ F⦘) by type_solver.\narewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (sb ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗E \\₁ F⦘).","proofString":"arewrite (rfe ⊆ ar sc).\ndo 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (sb ⨾ ⦗W⦘ ⨾ ar sc ⨾ ⦗E \\₁ F⦘).","proofString":"do 2 rewrite <- seqA.\nrewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (((sb ⨾ ⦗W⦘) ⨾ ar sc) ⨾ ⦗E \\₁ F⦘).","proofString":"rewrite acyclic_rotl, !seqA.\nsin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (⦗E \\₁ F⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ar sc).","proofString":"sin_rewrite sb_w_sync.\nseq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  ((sb ⨾ (⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n    ∪ rmw ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"seq_rewrite seq_union_r.\narewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((sb ⨾ ⦗F ∩₁ Acqrel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n    ∪ rmw ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"arewrite (F ∩₁ Acqrel ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\narewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗F ∩₁ Acq⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n    ∪ rmw ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"arewrite (F ∩₁ Acq ⊆₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗Sc⦘)\n    ⨾ ⦗W⦘ ∪ rmw ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"rewrite <- seq_eqvK with (dom:=(F ∩₁ Acq/Rel)), !seqA.\nrepeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗ORlx⦘\n     ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ∪ \n    rmw ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"repeat arewrite (sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ imm_bob.bob G).\nrepeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((bob ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗ORlx⦘ ∪ bob ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗Sc⦘)\n    ⨾ ⦗W⦘ ∪ rmw ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"repeat arewrite (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (((bob ⨾ bob ⨾ ⦗ORlx⦘ ∪ bob ⨾ bob ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ∪ rmw ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"rewrite RMWSC, (wf_rmwD WF).\nrewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((bob ⨾ bob ⨾ ⦗ORlx⦘ ∪ bob ⨾ bob ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n    ∪ (⦗Sc⦘ ⨾ (⦗R⦘ ⨾ rmw ⨾ ⦗W⦘) ⨾ ⦗Sc⦘) ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"rewrite !seqA.\narewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((bob ⨾ bob ⨾ ⦗ORlx⦘ ∪ bob ⨾ bob ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n    ∪ ⦗Sc⦘ ⨾ ⦗R⦘ ⨾ rmw ⨾ ⦗W⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"arewrite (⦗Sc⦘ ⨾ ⦗R⦘ ⊆ ⦗R ∩₁ Acq⦘) by mode_solver.\nrewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((bob ⨾ bob ⨾ ⦗ORlx⦘ ∪ bob ⨾ bob ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n    ∪ ⦗R ∩₁ Acq⦘ ⨾ rmw ⨾ ⦗W⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"rewrite (rmw_in_sb WF).\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((bob ⨾ bob ⨾ ⦗ORlx⦘ ∪ bob ⨾ bob ⨾ ⦗Sc⦘) ⨾ ⦗W⦘\n    ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W⦘) ⨾ ar sc).","proofString":"arewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ imm_bob.bob G).\nrewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic\n  (((bob ⨾ bob ⨾ ⦗ORlx⦘ ∪ bob ⨾ bob ⨾ ⦗Sc⦘) ⨾ ⦗W⦘ ∪ bob ⨾ ⦗W⦘ ⨾ ⦗Sc⦘ ⨾ ⦗W⦘)\n   ⨾ ar sc).","proofString":"rewrite bob_in_ar.\nrepeat rewrite inclusion_seq_eqv_r.\ndo 2 rewrite seq_union_l.\nrewrite !seqA, unionK.\narewrite (ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺).\ndo 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10.\narewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc)⁺.","proofString":"do 2 rewrite <- ct_ct at 1.\nrewrite <- !ct_step.\nbasic_solver 10."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : ar sc ⨾ ar sc ⨾ ar sc ⊆ ((ar sc)⁺ ⨾ (ar sc)⁺) ⨾ (ar sc)⁺.","proofString":"rewrite <- !ct_step.\nbasic_solver 10."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : ar sc ⨾ ar sc ⨾ ar sc ⊆ (ar sc ⨾ ar sc) ⨾ ar sc.","proofString":"basic_solver 10."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic ((ar sc)⁺ ∪ ar sc ⨾ ar sc).","proofString":"arewrite (ar sc ⨾ ar sc ⊆ (ar sc)⁺).\nrewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10.\nrewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : ar sc ⨾ ar sc ⊆ (ar sc)⁺.","proofString":"rewrite <- ct_ct at 1.\nrewrite <- ct_step.\nbasic_solver 10."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : ar sc ⨾ ar sc ⊆ (ar sc)⁺ ⨾ (ar sc)⁺.","proofString":"rewrite <- ct_step.\nbasic_solver 10."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : ar sc ⨾ ar sc ⊆ ar sc ⨾ ar sc.","proofString":"basic_solver 10."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic ((ar sc)⁺ ∪ (ar sc)⁺).","proofString":"rewrite unionK.\nred in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : acyclic (ar sc)) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (ar sc)⁺.","proofString":"red in Cext.\nred.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : irreflexive (ar sc)⁺) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : acyclic (ar sc)⁺.","proofString":"red.\nrewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : irreflexive (ar sc)⁺) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : irreflexive ((ar sc)⁺)⁺.","proofString":"rewrite ct_of_ct.\nauto."},{"statement":"(sc : relation actid) (IPC : imm_psc_consistent G sc) (IC : imm_consistent G sc) (Cpsc : acyclic (psc_f G ∪ psc_base G)) (Wf_sc : wf_sc G sc) (Csc : coh_sc G sc) (Comp : complete G) (Cint : coherence G) (Cext : irreflexive (ar sc)⁺) (Cat : rmw_atomicity G) (Cext0 : irreflexive (ar sc)⁺) : irreflexive (ar sc)⁺.","proofString":"auto."}]}