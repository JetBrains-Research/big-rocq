{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/powerpc/Conventions1.v","fileSamples":[{"statement":"(s1 s2 : signature) (H : sig_res s1 = sig_res s2) : loc_result s1 = loc_result s2.","conclusion":"loc_result s1 = loc_result s2","hypotheses":"(s1 s2 : signature) (H : sig_res s1 = sig_res s2)","proofString":"unfold loc_result, loc_result_32, loc_result_64, proj_sig_res.\ndestruct Archi.ptr64; rewrite H; auto."},{"statement":"(s1 s2 : signature) (H : sig_res s1 = sig_res s2) : (if Archi.ptr64\n then\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tfloat | Tsingle => One F1\n  | _ => One R3\n  end\n else\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tlong => Twolong R3 R4\n  | Tint | Tany32 => One R3\n  | _ => One F1\n  end) s1 =\n(if Archi.ptr64\n then\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tfloat | Tsingle => One F1\n  | _ => One R3\n  end\n else\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tlong => Twolong R3 R4\n  | Tint | Tany32 => One R3\n  | _ => One F1\n  end) s2.","conclusion":"(if Archi.ptr64\n then\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tfloat | Tsingle => One F1\n  | _ => One R3\n  end\n else\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tlong => Twolong R3 R4\n  | Tint | Tany32 => One R3\n  | _ => One F1\n  end) s1 =\n(if Archi.ptr64\n then\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tfloat | Tsingle => One F1\n  | _ => One R3\n  end\n else\n  fun s : signature =>\n  match proj_xtype (sig_res s) with\n  | Tlong => Twolong R3 R4\n  | Tint | Tany32 => One R3\n  | _ => One F1\n  end) s2","hypotheses":"(s1 s2 : signature) (H : sig_res s1 = sig_res s2)","proofString":"destruct Archi.ptr64; rewrite H; auto."}]}