[{"statement":"Lemma ppo_in_sb WF: ppo ⊆ sb.","proof":"unfold ppo.\nrewrite (addr_in_sb WF), (data_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (rfi ⊆ sb).\narewrite_id ⦗R_ex⦘.\ngeneralize (@sb_trans G); ins; relsf.\nbasic_solver.\n"},{"statement":"Lemma rmw_in_ppo WF : rmw ⊆ ppo.","proof":"unfold ppo; rewrite (wf_rmwD WF) at 1.\nhahn_frame; unfolder; econs; basic_solver 10.\n"},{"statement":"Lemma rmw_sb_W_in_ppo WF : rmw ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","proof":"unfold ppo; rewrite (wf_rmwD WF) at 1.\nrewrite <- ct_step.\nbasic_solver 12.\n"},{"statement":"Lemma data_in_ppo WF : data ⊆ ppo.","proof":"unfold ppo; rewrite (wf_dataD WF) at 1.\nhahn_frame; econs; basic_solver 12.\n"},{"statement":"Lemma R_ex_sb_in_ppo WF : ⦗R_ex⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","proof":"arewrite (⦗R_ex⦘ ⊆ ⦗R⦘ ⨾ ⦗R_ex⦘) by type_solver.\nunfold ppo.\nhahn_frame.\nrewrite <- ct_step.\neauto with hahn.\n"},{"statement":"Lemma rmw_sb_cr_W_in_ppo WF : rmw ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppo.","proof":"rewrite crE.\nrewrite seq_union_l, seq_union_r, seq_id_l.\nrewrite (rmw_sb_W_in_ppo WF).\nrewrite (rmw_in_ppo WF).\neauto with hahn hahn_full.\n"},{"statement":"Lemma wf_ppoE WF : ppo ≡ ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ppo.\narewrite ((data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ rmw ⨾ sb^? ∪ ⦗R_ex⦘ ⨾ sb ∪ rmw_dep)⁺  ⊆ ⦗E⦘ ⨾ (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ rmw ⨾ sb^?  ∪ ⦗R_ex⦘ ⨾ sb ∪ rmw_dep)⁺ ⨾ ⦗E⦘) at 1.\n2: basic_solver 42.\nrewrite <- inclusion_ct_seq_eqv_r, <- inclusion_ct_seq_eqv_l.\napply inclusion_t_t.\nunfold Execution.rfi.\nrewrite (wf_rfE WF), (wf_dataE WF), (wf_rmw_depE WF) at 1.\nrewrite (wf_addrE WF), (wf_ctrlE WF), (wf_rmwE WF).\nrewrite wf_sbE at 1 2 3 4.\nbasic_solver 21.\n"},{"statement":"Lemma wf_ar_intE WF : ar_int ≡ ⦗E⦘ ⨾ ar_int ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ar_int.\nrewrite (wf_bobE WF), (wf_ppoE WF) at 1.\nrewrite (wf_detourE WF), (@wf_sbE G), (wf_rfiE WF).\nbasic_solver 42.\n"},{"statement":"Lemma wf_ppoD: ppo ≡ ⦗R⦘ ⨾ ppo ⨾ ⦗W⦘.","proof":"split; [|basic_solver].\nunfold ppo; basic_solver.\n"},{"statement":"Lemma fwbob_ppo WF: fwbob ⨾ ppo ⊆ fwbob.","proof":"rewrite wf_ppoD, (ppo_in_sb WF).\nsin_rewrite fwbob_r_sb.\nbasic_solver.\n"},{"statement":"Lemma bob_ppo WF: bob ⨾ ppo ⊆ bob.","proof":"rewrite wf_ppoD, (ppo_in_sb WF).\nsin_rewrite bob_r_sb.\nbasic_solver.\n"},{"statement":"Lemma ar_int_in_sb WF: ar_int ⊆ sb.","proof":"unfold ar_int.\nrewrite bob_in_sb.\nrewrite (ppo_in_sb WF).\narewrite (detour ⊆ sb).\narewrite (rfi ⊆ sb).\nbasic_solver 21.\n"},{"statement":"Lemma ppo_rfi_ppo : ppo ⨾ rfi ⨾ ppo ⊆ ppo.","proof":"unfold ppo.\nrewrite !seqA.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗R⦘ at 2.\narewrite (rfi ⊆ (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ rmw ⨾ sb^? ∪ ⦗R_ex⦘ ⨾ sb ∪ rmw_dep)＊) at 2.\n{\nrewrite rtE, <- ct_step.\neauto with hahn.\n}\nrewrite inclusion_t_rt at 1.\nrelsf.\n"},{"statement":"Lemma deps_rfi_in_ppo : ⦗R⦘ ⨾ (deps ∪ rfi)⁺ ⨾ ⦗W⦘ ⊆ ppo.","proof":"unfold ppo, Execution.deps.\nhahn_frame.\napply inclusion_t_t; basic_solver 21.\n"},{"statement":"Lemma ppo_alt WF \n  (RMW_DEPS : rmw ⊆ ctrl ∪ data)\n  (RMW_CTRL_FAIL : ⦗R_ex⦘ ⨾ sb ⊆ rmw ∪ ctrl)\n  (DATA_RMW : data ⨾ ⦗W_ex⦘ ⨾ sb ⊆ ctrl)\n  (DEPS_RMW_FAIL : rmw_dep ⨾ (rmw ∪ ctrl) ⊆ ctrl) : \n  ppo ≡ ⦗R⦘ ⨾ (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi)⁺ ⨾ ⦗W⦘.","proof":"generalize (@sb_trans G); ins.\nunfold ppo.\nsplit.\n2: by hahn_frame; apply inclusion_t_t; basic_solver 12.\nsin_rewrite RMW_CTRL_FAIL; rewrite <- !unionA.\narewrite (rmw ⨾ sb^? ⊆ ctrl ∪ data).\n{\nrewrite rmw_W_ex, !seqA.\nrewrite RMW_DEPS.\nrewrite seq_union_l.\nunionL.\n{\ngeneralize (ctrl_sb WF).\nclear.\nbasic_solver 10.\n}\ngeneralize DATA_RMW.\nclear.\nbasic_solver 10.\n}\narewrite (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ (ctrl ∪ data)                 ∪ rmw ∪ ctrl ∪ rmw_dep ⊆            data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ rmw_dep).\n{\nrewrite RMW_DEPS.\nunionL; eauto with hahn.\n}\nrewrite path_ut_first; relsf; unionL.\n{\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 12.\n}\narewrite ((data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ rmw_dep) ⊆ sb).\n{\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\narewrite (rfi ⊆ sb).\nrewrite (rmw_dep_in_sb WF).\nrelsf.\n}\nrelsf.\nrewrite (dom_r (wf_rmw_depD WF)), !seqA.\nrewrite (crE sb) at 2; relsf; unionL.\n{\nrewrite R_ex_in_R; type_solver.\n}\nhahn_frame.\nsin_rewrite RMW_CTRL_FAIL.\nrewrite DEPS_RMW_FAIL.\nrewrite ct_end.\napply inclusion_seq_mon; [apply inclusion_rt_rt|]; basic_solver 42.\n"},{"statement":"Lemma bob_in_ar_int : bob ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma ppo_in_ar_int : ppo ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma detour_in_ar_int : detour ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma w_ex_acq_sb_w_in_ar_int : ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma W_ex_rfi_Acq_in_ar_int : ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R∩₁Acq⦘ ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma bob_ppo_W_sb WF :\n  (bob ∪ ppo ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺ ⊆ ppo ∪ ppo ^? ⨾ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺.","proof":"arewrite (bob ∪ ppo ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆         (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘) ∪ ppo).\nbasic_solver 12.\napply ct_ind_left with (P:= fun r =>  r).\nby auto with hahn.\n- arewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺).\narewrite(⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺) at 2.\nbasic_solver 12.\n- intros k H.\nrewrite H; clear k H; rewrite crE; relsf; unionL.\n+ rewrite (bob_ppo WF).\narewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺).\nbasic_solver.\n+ rewrite (wf_ppoD) at 1.\ntype_solver.\n+ rewrite (wf_ppoD) at 1 2.\ntype_solver.\n+ arewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)＊); relsf.\n+ sin_rewrite (bob_ppo WF).\narewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)＊); relsf.\n+ arewrite(⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)＊) at 1; relsf.\n+ rewrite (wf_ppoD) at 1.\ntype_solver.\n+ basic_solver 12.\n+ rewrite (wf_ppoD) at 1 2.\ntype_solver.\n"}]