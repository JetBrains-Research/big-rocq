{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/aarch64/Stacklayout.v","fileSamples":[{"statement":"(b : bounds) (fe : frame_env) : 0 <=\nalign\n  (align (size_callee_save_area b (align (4 * bound_outgoing b) 8 + 8 + 8)) 8 +\n   4 * bound_local b) 8 /\\\nalign\n  (align (size_callee_save_area b (align (4 * bound_outgoing b) 8 + 8 + 8)) 8 +\n   4 * bound_local b) 8 + bound_stack_data b <=\nalign\n  (align\n     (align\n        (size_callee_save_area b (align (4 * bound_outgoing b) 8 + 8 + 8)) 8 +\n      4 * bound_local b) 8 + bound_stack_data b) 16.","proofString":"set (olink := align (4 * b.(bound_outgoing)) 8).\nset (oretaddr := olink + 8).\nset (ocs := oretaddr + 8).\nset (ol :=  align (size_callee_save_area b ocs) 8).\nset (ostkdata := align (ol + 4 * b.(bound_local)) 8).\ngeneralize b.(bound_local_pos) b.(bound_outgoing_pos) b.(bound_stack_data_pos); intros.\nassert (0 <= 4 * b.(bound_outgoing)) by lia.\nassert (4 * b.(bound_outgoing) <= olink) by (apply align_le; lia).\nassert (olink + 8 <= oretaddr) by (unfold oretaddr; lia).\nassert (oretaddr + 8 <= ocs) by (unfold ocs; lia).\nassert (ocs <= size_callee_save_area b ocs) by (apply size_callee_save_area_incr).\nassert (size_callee_save_area b ocs <= ol) by (apply align_le; lia).\nassert (ol + 4 * b.(bound_local) <= ostkdata) by (apply align_le; lia).\nsplit.\nlia.\napply align_le.\nlia."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= 4 * bound_outgoing b) (H3 : 4 * bound_outgoing b <= olink) (H4 : olink + 8 <= oretaddr) (H5 : oretaddr + 8 <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ol) (H8 : ol + 4 * bound_local b <= ostkdata) : 0 <= ostkdata /\\\nostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 16.","proofString":"split.\nlia.\napply align_le.\nlia."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= 4 * bound_outgoing b) (H3 : 4 * bound_outgoing b <= olink) (H4 : olink + 8 <= oretaddr) (H5 : oretaddr + 8 <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ol) (H8 : ol + 4 * bound_local b <= ostkdata) : 0 <= ostkdata.","proofString":"lia."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= 4 * bound_outgoing b) (H3 : 4 * bound_outgoing b <= olink) (H4 : olink + 8 <= oretaddr) (H5 : oretaddr + 8 <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ol) (H8 : ol + 4 * bound_local b <= ostkdata) : ostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 16.","proofString":"apply align_le.\nlia."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : bound_local b >= 0) (H0 : bound_outgoing b >= 0) (H1 : bound_stack_data b >= 0) (H2 : 0 <= 4 * bound_outgoing b) (H3 : 4 * bound_outgoing b <= olink) (H4 : olink + 8 <= oretaddr) (H5 : oretaddr + 8 <= ocs) (H6 : ocs <= size_callee_save_area b ocs) (H7 : size_callee_save_area b ocs <= ol) (H8 : ol + 4 * bound_local b <= ostkdata) : 16 > 0.","proofString":"lia."},{"statement":"(b : bounds) (fe : frame_env) : (8 | fe_ofs_arg) /\\\n(8\n| align (size_callee_save_area b (align (4 * bound_outgoing b) 8 + 8 + 8)) 8) /\\\n(8\n| align\n    (align (size_callee_save_area b (align (4 * bound_outgoing b) 8 + 8 + 8))\n       8 + 4 * bound_local b) 8) /\\\n(align_chunk Mptr | align (4 * bound_outgoing b) 8) /\\\n(align_chunk Mptr | align (4 * bound_outgoing b) 8 + 8).","proofString":"set (olink := align (4 * b.(bound_outgoing)) 8).\nset (oretaddr := olink + 8).\nset (ocs := oretaddr + 8).\nset (ol :=  align (size_callee_save_area b ocs) 8).\nset (ostkdata := align (ol + 4 * b.(bound_local)) 8).\nchange (align_chunk Mptr) with 8.\nsplit.\napply Z.divide_0_r.\nsplit.\napply align_divides; lia.\nsplit.\napply align_divides; lia.\nsplit.\napply align_divides; lia.\napply Z.divide_add_r.\napply align_divides; lia.\napply Z.divide_refl."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) : (8 | fe_ofs_arg).","proofString":"apply Z.divide_0_r."},{"statement":"(b : bounds) (fe : frame_env) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) : (8 | 8).","proofString":"apply Z.divide_refl."}]}