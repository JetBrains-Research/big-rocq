{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/imm/src/travorder/EventsTraversalOrder.v","fileSamples":[{"statement":"sb ⨾ ⦗E⦘ ⊆ E × (E \\₁ Init).","conclusion":"sb ⨾ ⦗E⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite sb_E_ENI.\nbasic_solver."},{"statement":"E × (E \\₁ Init) ⨾ ⦗E⦘ ⊆ E × (E \\₁ Init).","conclusion":"E × (E \\₁ Init) ⨾ ⦗E⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ∪ sc)⁺ ⨾ ⦗action ↓₁ eq ta_cover⦘\n  ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc.","conclusion":"⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ∪ sc)⁺ ⨾ ⦗action ↓₁ eq ta_cover⦘\n  ∪ RF G ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc","hypotheses":"","proofString":"rewrite <- ct_step, <- inclusion_union_r1 with (r' := sc).\nrewrite inclusion_seq_eqv_r with (r := sb).\nintuition (auto with *)."},{"statement":"⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ sb ⨾ ⦗action ↓₁ eq ta_cover⦘ ∪ RF G\n  ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc.","conclusion":"⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ sb ⨾ ⦗action ↓₁ eq ta_cover⦘ ∪ RF G\n  ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc","hypotheses":"","proofString":"rewrite inclusion_seq_eqv_r with (r := sb).\nintuition (auto with *)."},{"statement":"⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ sb ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ sb ⨾ ⦗action ↓₁ eq ta_cover⦘ ∪ RF G\n  ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc.","conclusion":"⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ sb ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ sb ⨾ ⦗action ↓₁ eq ta_cover⦘ ∪ RF G\n  ∪ FWBOB G ∪ AR G sc ∪ IPROP G ∪ PROP G sc","hypotheses":"","proofString":"intuition (auto with *)."},{"statement":"dom_rel (sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel (sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"apply dom_sb_coverable."},{"statement":"⦗C⦘ ⨾ sb ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ sb.","conclusion":"⦗C⦘ ⨾ sb ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ sb","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗C⦘ ⨾ sb ⨾ ⦗C⦘ ≡ ⦗C⦘ ⨾ ⦗C⦘ ⨾ sb ⨾ ⦗C⦘.","conclusion":"⦗C⦘ ⨾ sb ⨾ ⦗C⦘ ≡ ⦗C⦘ ⨾ ⦗C⦘ ⨾ sb ⨾ ⦗C⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_rf_coverable."},{"statement":"⦗I⦘ ⨾ rf ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ rf.","conclusion":"⦗I⦘ ⨾ rf ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ rf","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗I⦘ ⨾ rf ⨾ ⦗C⦘ ≡ ⦗I⦘ ⨾ ⦗I⦘ ⨾ rf ⨾ ⦗C⦘.","conclusion":"⦗I⦘ ⨾ rf ⨾ ⦗C⦘ ≡ ⦗I⦘ ⨾ ⦗I⦘ ⨾ rf ⨾ ⦗C⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"apply dom_sc_coverable."},{"statement":"⦗C⦘ ⨾ sc ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ sc.","conclusion":"⦗C⦘ ⨾ sc ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ sc","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗C⦘ ⨾ sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sc.","conclusion":"⦗C⦘ ⨾ sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sc","hypotheses":"","proofString":"basic_solver."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(⦗W⦘ ⨾ (ar_int G)⁺) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(⦗W⦘ ⨾ (ar_int G)⁺) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite ar_int_in_sb, ct_of_trans, wf_sbE, no_sb_to_init; try basic_solver.\napply sb_trans."},{"statement":"transitive sb.","conclusion":"transitive sb","hypotheses":"","proofString":"apply sb_trans."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (ar_int G)⁺) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (ar_int G)⁺) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (ar_int G)⁺) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (ar_int G)⁺) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"event ↓ (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"(ar_int G)⁺ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"(ar_int G)⁺ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"apply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"ar_int G ⊆ ar ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"ar_int G ⊆ ar ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"unfold ar.\nbasic_solver."},{"statement":"ar_int G ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"ar_int G ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel ((sc ∪ rfe ∪ ar_int G) ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel ((sc ∪ rfe ∪ ar_int G) ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite !seq_union_l.\nrewrite ar_int_in_sb, rfe_in_rf; eauto.\nrewrite sb_coverable, rf_coverable, sc_coverable.\nbasic_solver."},{"statement":"dom_rel\n  (sc ⨾ ⦗coverable G sc T⦘ ∪ rfe ⨾ ⦗coverable G sc T⦘\n   ∪ ar_int G ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel\n  (sc ⨾ ⦗coverable G sc T⦘ ∪ rfe ⨾ ⦗coverable G sc T⦘\n   ∪ ar_int G ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite ar_int_in_sb, rfe_in_rf; eauto.\nrewrite sb_coverable, rf_coverable, sc_coverable.\nbasic_solver."},{"statement":"dom_rel\n  (sc ⨾ ⦗coverable G sc T⦘ ∪ rf ⨾ ⦗coverable G sc T⦘\n   ∪ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel\n  (sc ⨾ ⦗coverable G sc T⦘ ∪ rf ⨾ ⦗coverable G sc T⦘\n   ∪ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite sb_coverable, rf_coverable, sc_coverable.\nbasic_solver."},{"statement":"dom_rel (⦗C⦘ ⨾ sc ∪ ⦗I⦘ ⨾ rf ∪ ⦗C⦘ ⨾ sb) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (⦗C⦘ ⨾ sc ∪ ⦗I⦘ ⨾ rf ∪ ⦗C⦘ ⨾ sb) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel ((sc ∪ rfe ∪ ar_int G) ⨾ ⦗C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel ((sc ∪ rfe ∪ ar_int G) ⨾ ⦗C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite !seq_union_l.\nrewrite (ar_int_in_sb WF).\narewrite (rfe ⊆ rf).\nrewrite sb_covered, rf_covered.\nrewrite sc_covered.\nbasic_solver."},{"statement":"dom_rel (sc ⨾ ⦗C⦘ ∪ rfe ⨾ ⦗C⦘ ∪ ar_int G ⨾ ⦗C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (sc ⨾ ⦗C⦘ ∪ rfe ⨾ ⦗C⦘ ∪ ar_int G ⨾ ⦗C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite (ar_int_in_sb WF).\narewrite (rfe ⊆ rf).\nrewrite sb_covered, rf_covered.\nrewrite sc_covered.\nbasic_solver."},{"statement":"dom_rel (sc ⨾ ⦗C⦘ ∪ rfe ⨾ ⦗C⦘ ∪ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (sc ⨾ ⦗C⦘ ∪ rfe ⨾ ⦗C⦘ ∪ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"arewrite (rfe ⊆ rf).\nrewrite sb_covered, rf_covered.\nrewrite sc_covered.\nbasic_solver."},{"statement":"dom_rel (sc ⨾ ⦗C⦘ ∪ rf ⨾ ⦗C⦘ ∪ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (sc ⨾ ⦗C⦘ ∪ rf ⨾ ⦗C⦘ ∪ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite sb_covered, rf_covered.\nrewrite sc_covered.\nbasic_solver."},{"statement":"dom_rel (sc ⨾ ⦗C⦘ ∪ ⦗I⦘ ⨾ rf ⨾ ⦗C⦘ ∪ ⦗C⦘ ⨾ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (sc ⨾ ⦗C⦘ ∪ ⦗I⦘ ⨾ rf ⨾ ⦗C⦘ ∪ ⦗C⦘ ⨾ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite sc_covered.\nbasic_solver."},{"statement":"dom_rel (⦗C⦘ ⨾ sc ∪ ⦗I⦘ ⨾ rf ⨾ ⦗C⦘ ∪ ⦗C⦘ ⨾ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (⦗C⦘ ⨾ sc ∪ ⦗I⦘ ⨾ rf ⨾ ⦗C⦘ ∪ ⦗C⦘ ⨾ sb ⨾ ⦗C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ rmw)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ rmw)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rfrmw_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺) ⨾ ⦗I⦘)\n⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺) ⨾ ⦗I⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite !seq_union_l, !seq_union_r, dom_union; unionL.\nbasic_solver.\napply ar_rf_ppo_loc_ct_I_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_I_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_rt_I_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite issued_in_issuable at 1; eauto.\napply ar_rf_ppo_loc_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_I_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ rmw)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ rmw)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rfrmw_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_ct_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply W_ar_coverable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply W_ar_coverable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗I⦘) ∪₁ dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗I⦘) ∪₁ dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"unionL; [basic_solver|].\nby apply ar_ct_I_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_ct_I_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_W_sb_coverable_in_I."},{"statement":"(rf ⨾ ppo ∩ same_loc) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(rf ⨾ ppo ∩ same_loc) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite wf_rfE, ppo_in_sb, wf_sbE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ iord_simpl G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ iord_simpl G sc","hypotheses":"","proofString":"transitivity (AR G sc); [| unfold iord_simpl; basic_solver].\nunfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nhahn_frame.\nrewrite <- ct_step.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nhahn_frame.\nrewrite <- ct_step.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nhahn_frame.\nrewrite <- ct_step.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"event ↓ (rf ⨾ ppo ∩ same_loc ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (rf ⨾ ppo ∩ same_loc ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done| ].\nhahn_frame.\nrewrite <- ct_step.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"rf ⨾ ppo ∩ same_loc ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"rf ⨾ ppo ∩ same_loc ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\nrewrite <- ct_step.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"rf ⨾ ppo ∩ same_loc ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"rf ⨾ ppo ∩ same_loc ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_step.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"rf ⨾ ppo ∩ same_loc ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"rf ⨾ ppo ∩ same_loc ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"rewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"(⦗W⦘ ⨾ rf) ⨾ ppo ∩ same_loc ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"(⦗W⦘ ⨾ rf) ⨾ ppo ∩ same_loc ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite <- id_inter.\nrewrite w_coverable_issued; eauto.\nrewrite issued_in_issuable at 1; eauto.\nrewrite rfe_in_rf.\neapply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗W ∩₁ coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗W ∩₁ coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite w_coverable_issued; eauto.\nrewrite issued_in_issuable at 1; eauto.\nrewrite rfe_in_rf.\neapply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite issued_in_issuable at 1; eauto.\nrewrite rfe_in_rf.\neapply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite rfe_in_rf.\neapply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"eapply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ rfi ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ rfi ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite inclusion_inter_l1.\nrewrite (ppo_in_sb WF), rfi_in_sb.\nsin_rewrite sb_sb.\nrewrite dom_W_sb_coverable_in_I; auto."},{"statement":"dom_rel (⦗W⦘ ⨾ rfi ⨾ ppo ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ rfi ⨾ ppo ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (ppo_in_sb WF), rfi_in_sb.\nsin_rewrite sb_sb.\nrewrite dom_W_sb_coverable_in_I; auto."},{"statement":"dom_rel (⦗W⦘ ⨾ sb ⨾ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ sb ⨾ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"sin_rewrite sb_sb.\nrewrite dom_W_sb_coverable_in_I; auto."},{"statement":"dom_rel (⦗W⦘ ⨾ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ sb ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_W_sb_coverable_in_I; auto."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply rf_ppo_loc_coverable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply rf_ppo_loc_coverable_in_I."},{"statement":"dom_rel (rf ⨾ rmw ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ rmw ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply rfrmw_coverable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘)\n∪₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘)\n∪₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"unionL.\napply rf_ppo_loc_coverable_in_I.\napply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply rf_ppo_loc_coverable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply rf_ppo_loc_coverable_issuable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply rf_ppo_loc_issuable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply rf_ppo_loc_I_in_I."},{"statement":"dom_rel ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seqA.\napply rf_ppo_loc_I_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"apply rf_ppo_loc_I_in_I."},{"statement":"dom_rel ((rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply rf_ppo_loc_rt_I_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C⦘) ∪₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘)\n⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C⦘) ∪₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘)\n⊆₁ I","hypotheses":"","proofString":"unionL.\nby apply rf_ppo_loc_C_in_I.\nby apply rf_ppo_loc_I_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"by apply rf_ppo_loc_C_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply rf_ppo_loc_I_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply rf_ppo_loc_CI_in_I."},{"statement":"dom_rel (ar ⨾ ⦗coverable G sc T⦘)\n∪₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ \nC ∪₁ I.","conclusion":"dom_rel (ar ⨾ ⦗coverable G sc T⦘)\n∪₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ \nC ∪₁ I","hypotheses":"","proofString":"unionL.\nby apply ar_coverable_in_CI.\nrewrite rf_ppo_loc_coverable_in_I; eauto with hahn."},{"statement":"dom_rel (ar ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (ar ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"by apply ar_coverable_in_CI."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite rf_ppo_loc_coverable_in_I; eauto with hahn."},{"statement":"dom_rel ((ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel ((ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_coverable_in_CI."},{"statement":"dom_rel ((ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel ((ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_coverable_in_CI."},{"statement":"dom_rel ((ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel ((ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_C_in_CI."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply W_ar_coverable_issuable_in_CI."},{"statement":"dom_rel (⦗W⦘ ⨾ (rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite_id ⦗W⦘.\nrewrite seq_id_l.\napply rf_ppo_loc_coverable_issuable_in_I."},{"statement":"dom_rel\n  (⦗fun _ : actid => True⦘\n   ⨾ rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel\n  (⦗fun _ : actid => True⦘\n   ⨾ rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_id_l.\napply rf_ppo_loc_coverable_issuable_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply rf_ppo_loc_coverable_issuable_in_I."},{"statement":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_coverable_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"by apply W_ar_C_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_I_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_CI_in_CI."},{"statement":"dom_rel (⦗W⦘ ⨾ (rf ⨾ ppo ∩ same_loc) ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (rf ⨾ ppo ∩ same_loc) ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite_id ⦗W⦘.\nrewrite seq_id_l.\napply rf_ppo_loc_CI_in_I."},{"statement":"dom_rel (⦗fun _ : actid => True⦘ ⨾ rf ⨾ ppo ∩ same_loc ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗fun _ : actid => True⦘ ⨾ rf ⨾ ppo ∩ same_loc ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_id_l.\napply rf_ppo_loc_CI_in_I."},{"statement":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"apply rf_ppo_loc_CI_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rf_ppo_loc_CI_in_I."},{"statement":"(x : actid) (AA : is_w lab x) (y : actid) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc) x y) (BB : (coverable G sc T ∪₁ issuable G sc T) y) : I x.","conclusion":"I x","hypotheses":"(x : actid) (AA : is_w lab x) (y : actid) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc) x y) (BB : (coverable G sc T ∪₁ issuable G sc T) y)","proofString":"eapply ar_rf_ppo_loc_coverable_issuable_in_I.\nbasic_solver 10."},{"statement":"(x : actid) (AA : is_w lab x) (y : actid) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc) x y) (BB : (coverable G sc T ∪₁ issuable G sc T) y) : dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n  x.","conclusion":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n  x","hypotheses":"(x : actid) (AA : is_w lab x) (y : actid) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc) x y) (BB : (coverable G sc T ∪₁ issuable G sc T) y)","proofString":"basic_solver 10."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (coverable G sc T ∪₁ issuable G sc T) y.","conclusion":"(coverable G sc T ∪₁ issuable G sc T) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"right.\napply issued_in_issuable; eauto.\napply rf_ppo_loc_coverable_issuable_in_I.\nexists z.\napply seqA.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : issuable G sc T y.","conclusion":"issuable G sc T y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply issued_in_issuable; eauto.\napply rf_ppo_loc_coverable_issuable_in_I.\nexists z.\napply seqA.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : I y.","conclusion":"I y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply rf_ppo_loc_coverable_issuable_in_I.\nexists z.\napply seqA.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) y.","conclusion":"dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"exists z.\napply seqA.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) y z.","conclusion":"(rf ⨾ ppo ∩ same_loc ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply seqA.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) y z.","conclusion":"((rf ⨾ ppo ∩ same_loc) ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : (rf ⨾ ppo ∩ same_loc) y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : (coverable G sc T ∪₁ issuable G sc T) z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"basic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) x.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) x","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"exists z.\napply seq_eqv_lr.\nsplits; auto.\napply ct_end.\nexists y.\nsplit; auto.\nby apply clos_trans_in_rt.\nby left."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) x z.","conclusion":"(⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗issuable G sc T⦘) x z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply seq_eqv_lr.\nsplits; auto.\napply ct_end.\nexists y.\nsplit; auto.\nby apply clos_trans_in_rt.\nby left."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : is_w lab x /\\ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x z /\\ issuable G sc T z.","conclusion":"is_w lab x /\\ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x z /\\ issuable G sc T z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"splits; auto.\napply ct_end.\nexists y.\nsplit; auto.\nby apply clos_trans_in_rt.\nby left."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x z.","conclusion":"(ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply ct_end.\nexists y.\nsplit; auto.\nby apply clos_trans_in_rt.\nby left."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : ((ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)) x z.","conclusion":"((ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)) x z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"exists y.\nsplit; auto.\nby apply clos_trans_in_rt.\nby left."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (ar ∪ rf ⨾ ppo ∩ same_loc)＊ x y /\\ (ar ∪ rf ⨾ ppo ∩ same_loc) y z.","conclusion":"(ar ∪ rf ⨾ ppo ∩ same_loc)＊ x y /\\ (ar ∪ rf ⨾ ppo ∩ same_loc) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"split; auto.\nby apply clos_trans_in_rt.\nby left."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (ar ∪ rf ⨾ ppo ∩ same_loc)＊ x y.","conclusion":"(ar ∪ rf ⨾ ppo ∩ same_loc)＊ x y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"by apply clos_trans_in_rt."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (ar ∪ rf ⨾ ppo ∩ same_loc) y z.","conclusion":"(ar ∪ rf ⨾ ppo ∩ same_loc) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : issuable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"by left."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (coverable G sc T ∪₁ issuable G sc T) y.","conclusion":"(coverable G sc T ∪₁ issuable G sc T) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"destruct QQ as [[QQ|QQ]|QQ].\nleft.\napply covered_in_coverable; eauto.\napply dom_sc_coverable.\nexists z.\nbasic_solver.\nright.\napply issued_in_issuable; eauto.\napply dom_rf_coverable.\nexists z.\ndo 2 red in QQ.\nbasic_solver.\nleft.\napply covered_in_coverable; eauto.\napply dom_sb_coverable.\nexists z.\napply seq_eqv_r.\nsplit; auto.\nby apply ar_int_in_sb."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (coverable G sc T ∪₁ issuable G sc T) y.","conclusion":"(coverable G sc T ∪₁ issuable G sc T) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"left.\napply covered_in_coverable; eauto.\napply dom_sc_coverable.\nexists z.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : coverable G sc T y.","conclusion":"coverable G sc T y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply covered_in_coverable; eauto.\napply dom_sc_coverable.\nexists z.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : C y.","conclusion":"C y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply dom_sc_coverable.\nexists z.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : dom_rel (sc ⨾ ⦗coverable G sc T⦘) y.","conclusion":"dom_rel (sc ⨾ ⦗coverable G sc T⦘) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"exists z.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (sc ⨾ ⦗coverable G sc T⦘) y z.","conclusion":"(sc ⨾ ⦗coverable G sc T⦘) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : sc y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"basic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (coverable G sc T ∪₁ issuable G sc T) y.","conclusion":"(coverable G sc T ∪₁ issuable G sc T) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"right.\napply issued_in_issuable; eauto.\napply dom_rf_coverable.\nexists z.\ndo 2 red in QQ.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : issuable G sc T y.","conclusion":"issuable G sc T y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply issued_in_issuable; eauto.\napply dom_rf_coverable.\nexists z.\ndo 2 red in QQ.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : I y.","conclusion":"I y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply dom_rf_coverable.\nexists z.\ndo 2 red in QQ.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : dom_rel (rf ⨾ ⦗coverable G sc T⦘) y.","conclusion":"dom_rel (rf ⨾ ⦗coverable G sc T⦘) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"exists z.\ndo 2 red in QQ.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (rf ⨾ ⦗coverable G sc T⦘) y z.","conclusion":"(rf ⨾ ⦗coverable G sc T⦘) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rfe y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"do 2 red in QQ.\nbasic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rf y z /\\ ~ sb y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (rf ⨾ ⦗coverable G sc T⦘) y z.","conclusion":"(rf ⨾ ⦗coverable G sc T⦘) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : rf y z /\\ ~ sb y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"basic_solver."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (coverable G sc T ∪₁ issuable G sc T) y.","conclusion":"(coverable G sc T ∪₁ issuable G sc T) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"left.\napply covered_in_coverable; eauto.\napply dom_sb_coverable.\nexists z.\napply seq_eqv_r.\nsplit; auto.\nby apply ar_int_in_sb."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : coverable G sc T y.","conclusion":"coverable G sc T y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply covered_in_coverable; eauto.\napply dom_sb_coverable.\nexists z.\napply seq_eqv_r.\nsplit; auto.\nby apply ar_int_in_sb."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : C y.","conclusion":"C y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply dom_sb_coverable.\nexists z.\napply seq_eqv_r.\nsplit; auto.\nby apply ar_int_in_sb."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : dom_rel (sb ⨾ ⦗coverable G sc T⦘) y.","conclusion":"dom_rel (sb ⨾ ⦗coverable G sc T⦘) y","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"exists z.\napply seq_eqv_r.\nsplit; auto.\nby apply ar_int_in_sb."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : (sb ⨾ ⦗coverable G sc T⦘) y z.","conclusion":"(sb ⨾ ⦗coverable G sc T⦘) y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"apply seq_eqv_r.\nsplit; auto.\nby apply ar_int_in_sb."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : sb y z /\\ coverable G sc T z.","conclusion":"sb y z /\\ coverable G sc T z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"split; auto.\nby apply ar_int_in_sb."},{"statement":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x) : sb y z.","conclusion":"sb y z","hypotheses":"(x : actid) (AA : is_w lab x) (y z : actid) (QQ : ar_int G y z) (HH : (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ x y) (BB : coverable G sc T z) (IHHH : (coverable G sc T ∪₁ issuable G sc T) y -> I x)","proofString":"by apply ar_int_in_sb."},{"statement":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_coverable_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite issued_in_issuable at 1; eauto.\napply ar_rf_ppo_loc_ct_coverable_issuable_in_I."},{"statement":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_coverable_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_CI_in_I."},{"statement":"dom_rel\n  (⦗W⦘\n   ⨾ (⦗fun _ : actid => True⦘ ∪ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺)\n     ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘\n   ⨾ (⦗fun _ : actid => True⦘ ∪ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺)\n     ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !seq_union_l, !seq_union_r, dom_union, seq_id_l.\nunionL.\ngeneralize w_coverable_issued.\nbasic_solver.\narewrite (coverable G sc T ⊆₁ coverable G sc T ∪₁ issuable G sc T).\napply ar_rf_ppo_loc_ct_coverable_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗coverable G sc T⦘)\n∪₁ dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗coverable G sc T⦘)\n∪₁ dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"unionL.\ngeneralize w_coverable_issued.\nbasic_solver.\narewrite (coverable G sc T ⊆₁ coverable G sc T ∪₁ issuable G sc T).\napply ar_rf_ppo_loc_ct_coverable_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"generalize w_coverable_issued.\nbasic_solver."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (coverable G sc T ⊆₁ coverable G sc T ∪₁ issuable G sc T).\napply ar_rf_ppo_loc_ct_coverable_issuable_in_I."},{"statement":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗coverable G sc T ∪₁ issuable G sc T⦘)\n⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_coverable_issuable_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_rt_coverable_in_I."},{"statement":"dom_rel\n  (⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺) ⨾ ⦗C ∪₁ I⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺) ⨾ ⦗C ∪₁ I⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite !seq_union_l, !seq_union_r, dom_union, seq_id_l.\nunionL.\ngeneralize w_covered_issued.\nbasic_solver.\napply ar_rf_ppo_loc_ct_CI_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗C ∪₁ I⦘)\n∪₁ dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗C ∪₁ I⦘)\n∪₁ dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"unionL.\ngeneralize w_covered_issued.\nbasic_solver.\napply ar_rf_ppo_loc_ct_CI_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"generalize w_covered_issued.\nbasic_solver."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_ct_CI_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)＊ ⨾ ⦗C ∪₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_rf_ppo_loc_rt_CI_in_I."},{"statement":"(x : actid) (H : is_w lab x) (H1 : C x) : I x.","conclusion":"I x","hypotheses":"(x : actid) (H : is_w lab x) (H1 : C x)","proofString":"eapply w_covered_issued; basic_solver."},{"statement":"(x : actid) (H : is_w lab x) (y z : actid) (AA : sb y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x) : I x.","conclusion":"I x","hypotheses":"(x : actid) (H : is_w lab x) (y z : actid) (AA : sb y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x)","proofString":"apply IHclos_refl_trans_n1.\neapply dom_sb_covered; basic_solver 10."},{"statement":"(x : actid) (H : is_w lab x) (y z : actid) (AA : sb y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x) : C y.","conclusion":"C y","hypotheses":"(x : actid) (H : is_w lab x) (y z : actid) (AA : sb y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x)","proofString":"eapply dom_sb_covered; basic_solver 10."},{"statement":"(x : actid) (H : is_w lab x) (y z : actid) (AA : sc y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x) : C y.","conclusion":"C y","hypotheses":"(x : actid) (H : is_w lab x) (y z : actid) (AA : sc y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x)","proofString":"eapply dom_sc_covered; basic_solver 10."},{"statement":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x) : dom_rel (⦗W⦘ ⨾ ar＊ ⨾ ⦗I⦘) x.","conclusion":"dom_rel (⦗W⦘ ⨾ ar＊ ⨾ ⦗I⦘) x","hypotheses":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x)","proofString":"exists y.\nunfolder; splits; auto.\napply dom_rf_covered; auto.\neexists.\napply seq_eqv_r.\nby split; [apply AA|]."},{"statement":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x) : (⦗W⦘ ⨾ ar＊ ⨾ ⦗I⦘) x y.","conclusion":"(⦗W⦘ ⨾ ar＊ ⨾ ⦗I⦘) x y","hypotheses":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x)","proofString":"unfolder; splits; auto.\napply dom_rf_covered; auto.\neexists.\napply seq_eqv_r.\nby split; [apply AA|]."},{"statement":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x) : I y.","conclusion":"I y","hypotheses":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x)","proofString":"apply dom_rf_covered; auto.\neexists.\napply seq_eqv_r.\nby split; [apply AA|]."},{"statement":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x) : dom_rel (rf ⨾ ⦗C⦘) y.","conclusion":"dom_rel (rf ⨾ ⦗C⦘) y","hypotheses":"(x : actid) (H : is_w lab x) (y z : actid) (AA : rfe y z) (H2 : ar＊ x y) (H1 : C z) (IHclos_refl_trans_n1 : C y -> I x)","proofString":"eexists.\napply seq_eqv_r.\nby split; [apply AA|]."},{"statement":"dom_rel (⦗W⦘ ⨾ ar＊ ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar＊ ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rt_C_in_I."},{"statement":"dom_rel (⦗W⦘ ⨾ ar＊ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ar＊ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply ar_rt_I_in_I."},{"statement":"sb ⨾ ⦗C⦘ ∪ sb ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ ⦗C⦘ ⨾ sb ∪ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⨾ sb.","conclusion":"sb ⨾ ⦗C⦘ ∪ sb ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ ⦗C⦘ ⨾ sb ∪ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⨾ sb","hypotheses":"","proofString":"apply union_mori.\nrewrite sb_covered; eauto.\nbasic_solver.\ngeneralize (@sb_trans G).\nbasic_solver 10."},{"statement":"sb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sb.","conclusion":"sb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sb","hypotheses":"","proofString":"rewrite sb_covered; eauto.\nbasic_solver."},{"statement":"⦗C⦘ ⨾ sb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sb.","conclusion":"⦗C⦘ ⨾ sb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sb","hypotheses":"","proofString":"basic_solver."},{"statement":"sb ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⨾ sb.","conclusion":"sb ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⨾ sb","hypotheses":"","proofString":"generalize (@sb_trans G).\nbasic_solver 10."},{"statement":"transitive sb -> sb ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⨾ sb.","conclusion":"transitive sb -> sb ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⨾ sb","hypotheses":"","proofString":"basic_solver 10."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(rfe ⨾ ppo) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(rfe ⨾ ppo) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite wf_rfeE, ppo_in_sb, wf_sbE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ ppo) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ ppo) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ _); [| intro; apply proj2].\nunfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_rfeD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_rfeD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_rfeD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"event ↓ (rfe ⨾ ppo ⨾ ⦗W⦘) ⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (rfe ⨾ ppo ⨾ ⦗W⦘) ⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done| ].\nrewrite (dom_l (wf_rfeD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"rfe ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"rfe ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite (dom_l (wf_rfeD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"(⦗W⦘ ⨾ rfe) ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(⦗W⦘ ⨾ rfe) ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"rfe ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"rfe ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"rfe ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"rfe ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"unfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"rfe ⨾ ppo\n⊆ (sc ∪ rfe\n   ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n   ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe\n     ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n        ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"rfe ⨾ ppo\n⊆ (sc ∪ rfe\n   ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n   ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe\n     ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n        ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"apply seq_mori; basic_solver 10."},{"statement":"dom_rel (rfe ⨾ ppo ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ ppo ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_rfe_ppo_issuable_in_I."},{"statement":"(detour ⨾ ppo) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(detour ⨾ ppo) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite detour_in_sb, ppo_in_sb, wf_sbE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((detour ⨾ ppo) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((detour ⨾ ppo) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ _); [| intro; apply proj2].\nunfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((detour ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((detour ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((detour ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((detour ⨾ ppo) ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"event ↓ (detour ⨾ ppo ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (detour ⨾ ppo ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"detour ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"detour ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite (dom_l (wf_detourD WF)).\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"(⦗W⦘ ⨾ detour) ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(⦗W⦘ ⨾ detour) ⨾ ppo ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"detour ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"detour ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"detour ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"detour ⨾ ppo ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"unfold ar, ar_int.\napply seq_mori; basic_solver 10."},{"statement":"detour ⨾ ppo\n⊆ (sc ∪ rfe\n   ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n   ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe\n     ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n        ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"detour ⨾ ppo\n⊆ (sc ∪ rfe\n   ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n   ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe\n     ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n        ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"apply seq_mori; basic_solver 10."},{"statement":"dom_rel (detour ⨾ ppo ⨾ ⦗issuable G sc T⦘ ∪ rfe ⨾ ppo ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (detour ⨾ ppo ⨾ ⦗issuable G sc T⦘ ∪ rfe ⨾ ppo ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite dom_union.\nrewrite dom_rfe_ppo_issuable_in_I, dom_detour_ppo_issuable_in_I.\nbasic_solver."},{"statement":"dom_rel (detour ⨾ ppo ⨾ ⦗issuable G sc T⦘)\n∪₁ dom_rel (rfe ⨾ ppo ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (detour ⨾ ppo ⨾ ⦗issuable G sc T⦘)\n∪₁ dom_rel (rfe ⨾ ppo ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_rfe_ppo_issuable_in_I, dom_detour_ppo_issuable_in_I.\nbasic_solver."},{"statement":"I ∪₁ I ⊆₁ I.","conclusion":"I ∪₁ I ⊆₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel ((detour ∪ rfe) ⨾ ppo ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel ((detour ∪ rfe) ⨾ ppo ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_detour_rfe_ppo_issuable."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite detour_in_sb, wf_sbE, wf_rfeE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nunfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"event ↓ ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"(⦗W⦘ ⨾ (detour ∪ rfe)) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(⦗W⦘ ⨾ (detour ∪ rfe)) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_unit, <- ct_step.\nunfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"unfold ar, ar_int, bob.\napply seq_mori; basic_solver 10."},{"statement":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (sc ∪ rfe\n   ∪ (fwbob ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n      ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe\n     ∪ (fwbob ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n        ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"(detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (sc ∪ rfe\n   ∪ (fwbob ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n      ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe\n     ∪ (fwbob ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n        ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"apply seq_mori; basic_solver 10."},{"statement":"dom_rel ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_detour_rfe_acq_sb_issuable."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(⦗W⦘ ⨾ (rfe ∪ ar_int G)) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(⦗W⦘ ⨾ (rfe ∪ ar_int G)) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite rfe_in_rf, wf_rfE, ar_int_in_sb, wf_sbE, no_sb_to_init, no_rf_to_init; basic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (rfe ∪ ar_int G)) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (rfe ∪ ar_int G)) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\napply map_rel_mori; [done|].\nhahn_frame.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (rfe ∪ ar_int G)) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W⦘ ⨾ (rfe ∪ ar_int G)) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\napply map_rel_mori; [done|].\nhahn_frame.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver."},{"statement":"event ↓ (⦗W⦘ ⨾ (rfe ∪ ar_int G) ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (⦗W⦘ ⨾ (rfe ∪ ar_int G) ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\napply map_rel_mori; [done|].\nhahn_frame.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver."},{"statement":"event ↓ (⦗W⦘ ⨾ (rfe ∪ ar_int G) ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (⦗W⦘ ⨾ (rfe ∪ ar_int G) ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done|].\nhahn_frame.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver."},{"statement":"⦗W⦘ ⨾ (rfe ∪ ar_int G) ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (rfe ∪ ar_int G) ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver."},{"statement":"rfe ∪ ar_int G ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"rfe ∪ ar_int G ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_step.\nunfold ar.\nbasic_solver."},{"statement":"rfe ∪ ar_int G ⊆ ar ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"rfe ∪ ar_int G ⊆ ar ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"unfold ar.\nbasic_solver."},{"statement":"rfe ∪ ar_int G ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"rfe ∪ ar_int G ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel ((rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) ⊆₁ issuable G sc T.","conclusion":"dom_rel ((rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) ⊆₁ issuable G sc T","hypotheses":"","proofString":"apply dom_rel_clos_refl_trans_eqv.\ntransitivity (issued T); [| apply issued_in_issuable; auto].\nrewrite <- rf_ppo_loc_issuable_in_I; eauto.\nrewrite rfi_in_rf, rmw_in_ppo_loc; auto.\nbasic_solver."},{"statement":"dom_rel ((rfi ⨾ rmw) ⨾ ⦗issuable G sc T⦘) ⊆₁ issuable G sc T.","conclusion":"dom_rel ((rfi ⨾ rmw) ⨾ ⦗issuable G sc T⦘) ⊆₁ issuable G sc T","hypotheses":"","proofString":"transitivity (issued T); [| apply issued_in_issuable; auto].\nrewrite <- rf_ppo_loc_issuable_in_I; eauto.\nrewrite rfi_in_rf, rmw_in_ppo_loc; auto.\nbasic_solver."},{"statement":"dom_rel ((rfi ⨾ rmw) ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel ((rfi ⨾ rmw) ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite <- rf_ppo_loc_issuable_in_I; eauto.\nrewrite rfi_in_rf, rmw_in_ppo_loc; auto.\nbasic_solver."},{"statement":"dom_rel ((rfi ⨾ rmw) ⨾ ⦗issuable G sc T⦘)\n⊆₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘).","conclusion":"dom_rel ((rfi ⨾ rmw) ⨾ ⦗issuable G sc T⦘)\n⊆₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘)","hypotheses":"","proofString":"rewrite rfi_in_rf, rmw_in_ppo_loc; auto.\nbasic_solver."},{"statement":"dom_rel ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗issuable G sc T⦘)\n⊆₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘).","conclusion":"dom_rel ((rf ⨾ ppo ∩ same_loc) ⨾ ⦗issuable G sc T⦘)\n⊆₁ dom_rel (rf ⨾ ppo ∩ same_loc ⨾ ⦗issuable G sc T⦘)","hypotheses":"","proofString":"basic_solver."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"basic_solver."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : ((detour ∪ rfe) ⨾ rmw) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"((detour ∪ rfe) ⨾ rmw) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite rmw_in_sb, detour_in_sb, wf_rfeE, wf_sbE, no_sb_to_init; basic_solver."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : ⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ (((detour ∪ rfe) ⨾ rmw) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ (((detour ∪ rfe) ⨾ rmw) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : ⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ (((detour ∪ rfe) ⨾ rmw) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ (((detour ∪ rfe) ⨾ rmw) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : event ↓ ((detour ∪ rfe) ⨾ rmw ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ ((detour ∪ rfe) ⨾ rmw ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"apply map_rel_mori; [done| ].\nrewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : (detour ∪ rfe) ⨾ rmw ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(detour ∪ rfe) ⨾ rmw ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite (dom_l (wf_detourD WF)), (dom_l (wf_rfeD WF)), <- seq_union_r.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : (⦗W⦘ ⨾ (detour ∪ rfe)) ⨾ rmw ⨾ ⦗E ∩₁ W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(⦗W⦘ ⨾ (detour ∪ rfe)) ⨾ rmw ⨾ ⦗E ∩₁ W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nhahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : (⦗W⦘ ⨾ (detour ∪ rfe)) ⨾ rmw ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(⦗W⦘ ⨾ (detour ∪ rfe)) ⨾ rmw ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"hahn_frame.\nrewrite <- ct_unit, <- ct_step.\nunfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : (detour ∪ rfe) ⨾ rmw ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"(detour ∪ rfe) ⨾ rmw ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite <- ct_unit, <- ct_step.\nunfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : (detour ∪ rfe) ⨾ rmw\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"(detour ∪ rfe) ⨾ rmw\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"unfold ar.\napply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : (detour ∪ rfe) ⨾ rmw\n⊆ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"(detour ∪ rfe) ⨾ rmw\n⊆ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc)\n  ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"apply seq_mori.\nunfold ar_int.\nbasic_solver 10.\nrewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : detour ∪ rfe ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"detour ∪ rfe ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"unfold ar_int.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : detour ∪ rfe\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n  ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"detour ∪ rfe\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n  ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"basic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : rmw ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"rmw ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite rmw_in_ar_int; auto.\nbasic_solver 10."},{"statement":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘) : ar_int G ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"ar_int G ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"(D2 : (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗issuable G sc T⦘ ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"basic_solver 10."},{"statement":"dom_rel ((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel ((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"by apply dom_detour_rfe_rmw_rfi_rmw_rt_issuable_in_I."},{"statement":"dom_rel\n  ((detour ∪ rfe)\n   ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel\n  ((detour ∪ rfe)\n   ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_id_l.\napply dom_detour_rfe_acq_sb_issuable."},{"statement":"dom_rel ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_detour_rfe_acq_sb_issuable."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite wf_rfiE, wf_sbE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\napply map_rel_mori; [done|].\nrewrite <- seq_eqvK with (dom := codom_rel rmw), !seqA.\narewrite (codom_rel rmw ⊆₁ W) at 1 by (rewrite wf_rmwD; basic_solver).\nhahn_frame.\nrewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\napply map_rel_mori; [done|].\nrewrite <- seq_eqvK with (dom := codom_rel rmw), !seqA.\narewrite (codom_rel rmw ⊆₁ W) at 1 by (rewrite wf_rmwD; basic_solver).\nhahn_frame.\nrewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"event ↓ (⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\napply map_rel_mori; [done|].\nrewrite <- seq_eqvK with (dom := codom_rel rmw), !seqA.\narewrite (codom_rel rmw ⊆₁ W) at 1 by (rewrite wf_rmwD; basic_solver).\nhahn_frame.\nrewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"event ↓ (⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done|].\nrewrite <- seq_eqvK with (dom := codom_rel rmw), !seqA.\narewrite (codom_rel rmw ⊆₁ W) at 1 by (rewrite wf_rmwD; basic_solver).\nhahn_frame.\nrewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite <- seq_eqvK with (dom := codom_rel rmw), !seqA.\narewrite (codom_rel rmw ⊆₁ W) at 1 by (rewrite wf_rmwD; basic_solver).\nhahn_frame.\nrewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗codom_rel rmw⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗codom_rel rmw⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"arewrite (codom_rel rmw ⊆₁ W) at 1 by (rewrite wf_rmwD; basic_solver).\nhahn_frame.\nrewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\nrewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- seq_eqvK with (dom := R ∩₁ Acq), !seqA.\nrewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_unit.\ndo 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"do 2 rewrite <- seqA.\napply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc).","conclusion":"((⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)","hypotheses":"","proofString":"apply seq_mori.\nrewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10.\nunfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_step.\nunfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10."},{"statement":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘ ⊆ ar ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘ ⊆ ar ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"unfold ar, ar_int.\nunfold W_ex.\nbasic_solver 10."},{"statement":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n  ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n  ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"unfold W_ex.\nbasic_solver 10."},{"statement":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour\n     ∪ ⦗codom_rel rmw ∩₁ (fun a : actid => is_xacq lab a)⦘ ⨾ sb ⨾ ⦗W⦘\n     ∪ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"(⦗codom_rel rmw⦘ ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour\n     ∪ ⦗codom_rel rmw ∩₁ (fun a : actid => is_xacq lab a)⦘ ⨾ sb ⨾ ⦗W⦘\n     ∪ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"basic_solver 10."},{"statement":"⦗R ∩₁ Acq⦘ ⨾ sb ⊆ ar ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"⦗R ∩₁ Acq⦘ ⨾ sb ⊆ ar ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"unfold ar, ar_int.\nunfold bob.\nbasic_solver 10."},{"statement":"⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n  ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ sc ∪ rfe\n  ∪ (bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)\n  ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"unfold bob.\nbasic_solver 10."},{"statement":"⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ sc ∪ rfe\n  ∪ (fwbob ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n     ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"⦗R ∩₁ Acq⦘ ⨾ sb\n⊆ sc ∪ rfe\n  ∪ (fwbob ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n     ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(D1 : dom_rel (⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I) : dom_rel\n  ((detour ∪ rfe)\n   ⨾ (rmw ⨾ rfi)＊\n     ⨾ rmw ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((detour ∪ rfe)\n   ⨾ (rmw ⨾ rfi)＊\n     ⨾ rmw ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"(D1 : dom_rel (⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I)","proofString":"apply dom_rel_helper in D1.\nrewrite D1.\nrewrite <- !seqA.\ndo 5 rewrite dom_seq.\napply dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I."},{"statement":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) : dom_rel\n  ((detour ∪ rfe)\n   ⨾ (rmw ⨾ rfi)＊\n     ⨾ rmw ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((detour ∪ rfe)\n   ⨾ (rmw ⨾ rfi)＊\n     ⨾ rmw ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite D1.\nrewrite <- !seqA.\ndo 5 rewrite dom_seq.\napply dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I."},{"statement":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) : dom_rel\n  ((detour ∪ rfe)\n   ⨾ (rmw ⨾ rfi)＊\n     ⨾ rmw\n       ⨾ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((detour ∪ rfe)\n   ⨾ (rmw ⨾ rfi)＊\n     ⨾ rmw\n       ⨾ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite <- !seqA.\ndo 5 rewrite dom_seq.\napply dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I."},{"statement":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) : dom_rel\n  (((((((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘) ⨾ ⦗codom_rel rmw⦘)\n      ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘) ⨾ ⦗codom_rel rmw⦘)\n      ⨾ rfi) ⨾ ⦗R ∩₁ Acq⦘) ⨾ sb) ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)","proofString":"do 5 rewrite dom_seq.\napply dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I."},{"statement":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) : dom_rel ((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D1 : ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ ⦗codom_rel rmw⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)","proofString":"apply dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I."},{"statement":"dom_rel ((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel ((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"","proofString":"apply dom_detour_rmwrfi_rfe_acq_sb_issuable."},{"statement":"dom_rel ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel ((detour ∪ rfe) ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_detour_rfe_acq_sb_issuable."},{"statement":"dom_rel (rfe ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_rfe_acq_sb_issuable."},{"statement":"(⦗W_ex_acq⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘.","conclusion":"(⦗W_ex_acq⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite <- seq_eqvK with (dom := W) at 1.\narewrite (W_ex_acq ⊆₁ W) at 1.\nunfold W_ex.\nrewrite wf_rmwD; basic_solver.\nhahn_frame.\nunfold ar_int.\nbasic_solver 10."},{"statement":"(⦗W_ex_acq⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘.","conclusion":"(⦗W_ex_acq⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘","hypotheses":"","proofString":"arewrite (W_ex_acq ⊆₁ W) at 1.\nunfold W_ex.\nrewrite wf_rmwD; basic_solver.\nhahn_frame.\nunfold ar_int.\nbasic_solver 10."},{"statement":"W_ex_acq ⊆₁ W.","conclusion":"W_ex_acq ⊆₁ W","hypotheses":"","proofString":"unfold W_ex.\nrewrite wf_rmwD; basic_solver."},{"statement":"codom_rel rmw ∩₁ (fun a : actid => is_xacq lab a) ⊆₁ W.","conclusion":"codom_rel rmw ∩₁ (fun a : actid => is_xacq lab a) ⊆₁ W","hypotheses":"","proofString":"rewrite wf_rmwD; basic_solver."},{"statement":"⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\nunfold ar_int.\nbasic_solver 10."},{"statement":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ar_int G.","conclusion":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ar_int G","hypotheses":"","proofString":"unfold ar_int.\nbasic_solver 10."},{"statement":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘.","conclusion":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ bob ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘","hypotheses":"","proofString":"basic_solver 10."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(⦗W_ex_acq⦘ ⨾ sb) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(⦗W_ex_acq⦘ ⨾ sb) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite wf_sbE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W_ex_acq⦘ ⨾ sb) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W_ex_acq⦘ ⨾ sb) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nAR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite W_ex_acq_sb_in_ar_int_W.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W_ex_acq⦘ ⨾ sb) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((⦗W_ex_acq⦘ ⨾ sb) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite W_ex_acq_sb_in_ar_int_W.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver 10."},{"statement":"event ↓ (⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite W_ex_acq_sb_in_ar_int_W.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver 10."},{"statement":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite W_ex_acq_sb_in_ar_int_W.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver 10."},{"statement":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite W_ex_acq_sb_in_ar_int_W.\nrewrite <- ct_step.\nunfold ar.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite <- ct_step.\nunfold ar.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘","hypotheses":"","proofString":"unfold ar.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_wex_sb_issuable."},{"statement":"(SBT : transitive sb) : (rf ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"(rf ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb)","proofString":"eapply rt_ind_left with (P:= fun r => r ⨾ ⦗I⦘).\nby eauto with hahn.\nbasic_solver 12.\nintros k H; rewrite !seqA.\nsin_rewrite H.\nrewrite rfi_union_rfe at 1; relsf; unionL.\nrewrite <- seqA; seq_rewrite <- ct_begin; basic_solver 12.\nrewrite rtE at 2.\nrelsf; unionR left.\narewrite (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆                  ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘).\napply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10.\narewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) : good_ctx (fun r : relation actid => r ⨾ ⦗I⦘).","conclusion":"good_ctx (fun r : relation actid => r ⨾ ⦗I⦘)","hypotheses":"(SBT : transitive sb)","proofString":"by eauto with hahn."},{"statement":"(SBT : transitive sb) : ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb)","proofString":"basic_solver 12."},{"statement":"(SBT : transitive sb) : forall k : relation actid,\nk ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ->\n((rf ⨾ rmw) ⨾ k) ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"forall k : relation actid,\nk ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ->\n((rf ⨾ rmw) ⨾ k) ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb)","proofString":"intros k H; rewrite !seqA.\nsin_rewrite H.\nrewrite rfi_union_rfe at 1; relsf; unionL.\nrewrite <- seqA; seq_rewrite <- ct_begin; basic_solver 12.\nrewrite rtE at 2.\nrelsf; unionR left.\narewrite (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆                  ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘).\napply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10.\narewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rf ⨾ rmw ⨾ k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"rf ⨾ rmw ⨾ k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"sin_rewrite H.\nrewrite rfi_union_rfe at 1; relsf; unionL.\nrewrite <- seqA; seq_rewrite <- ct_begin; basic_solver 12.\nrewrite rtE at 2.\nrelsf; unionR left.\narewrite (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆                  ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘).\napply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10.\narewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rf ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"rf ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite rfi_union_rfe at 1; relsf; unionL.\nrewrite <- seqA; seq_rewrite <- ct_begin; basic_solver 12.\nrewrite rtE at 2.\nrelsf; unionR left.\narewrite (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆                  ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘).\napply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10.\narewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfi ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"rfi ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite <- seqA; seq_rewrite <- ct_begin; basic_solver 12."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite rtE at 2.\nrelsf; unionR left.\narewrite (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆                  ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘).\napply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10.\narewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (⦗fun _ : actid => True⦘ ∪ (rfi ⨾ rmw)⁺) ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊\n⊆ (⦗fun _ : actid => True⦘ ∪ (rfi ⨾ rmw)⁺) ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"relsf; unionR left.\narewrite (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆                  ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘).\napply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10.\narewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"arewrite (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆                  ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘).\napply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10.\narewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘.","conclusion":"rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"apply dom_rel_helper.\nrewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : dom_rel (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite <- dom_detour_rfe_rmw_rfi_rmw_rt_I_in_I at 2.\napply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : dom_rel (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘)\n⊆₁ dom_rel ((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘).","conclusion":"dom_rel (rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘)\n⊆₁ dom_rel ((((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘)","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"apply dom_rel_mori.\nhahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘\n⊆ (((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘.","conclusion":"rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘\n⊆ (((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊) ⨾ rmw) ⨾ ⦗I⦘","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"hahn_frame_r.\nrewrite <- rt_seq_swap.\nbasic_solver 10."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⊆ (detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊ ⨾ rmw.","conclusion":"rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⊆ (detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊ ⨾ rmw","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite <- rt_seq_swap.\nbasic_solver 10."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rfe ⨾ (rmw ⨾ rfi)＊ ⨾ rmw ⊆ (detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊ ⨾ rmw.","conclusion":"rfe ⨾ (rmw ⨾ rfi)＊ ⨾ rmw ⊆ (detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊ ⨾ rmw","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"basic_solver 10."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : ⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗I⦘ ⨾ rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"arewrite (rfe ⨾ rmw ⊆ rf ⨾ rmw).\narewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : ⦗I⦘ ⨾ rf ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗I⦘ ⨾ rf ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"arewrite (rfi ⊆ rf).\narewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : ⦗I⦘ ⨾ rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗I⦘ ⨾ rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"arewrite (rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺).\nrewrite <- seqA.\napply ct_begin.\narewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺.","conclusion":"rf ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite <- seqA.\napply ct_begin."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : (rf ⨾ rmw) ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺.","conclusion":"(rf ⨾ rmw) ⨾ (rf ⨾ rmw)＊ ⊆ (rf ⨾ rmw)⁺","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"apply ct_begin."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : ⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"arewrite_id ⦗I⦘ at 2.\nrewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : ⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⨾ ⦗fun _ : actid => True⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⨾ ⦗fun _ : actid => True⦘ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite seq_id_l.\nrewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : ⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⨾ (rf ⨾ rmw)＊ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"rewrite ct_rt.\nby rewrite inclusion_t_rt."},{"statement":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊) : ⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗I⦘ ⨾ (rf ⨾ rmw)⁺ ⊆ ⦗I⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(SBT : transitive sb) (k : relation actid) (H : k ⨾ ⦗I⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ ⦗I⦘ ⨾ (rf ⨾ rmw)＊)","proofString":"by rewrite inclusion_t_rt."},{"statement":"sb ∩ same_loc ⨾ sb ⊆ sb.","conclusion":"sb ∩ same_loc ⨾ sb ⊆ sb","hypotheses":"","proofString":"generalize (@sb_trans G).\nbasic_solver."},{"statement":"transitive sb -> sb ∩ same_loc ⨾ sb ⊆ sb.","conclusion":"transitive sb -> sb ∩ same_loc ⨾ sb ⊆ sb","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗I⦘ ⊆ ⦗W⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⊆ ⦗W⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"generalize issuedW.\nbasic_solver."},{"statement":"⦗W_ex_acq⦘ ⊆ ⦗W⦘ ⨾ ⦗W_ex_acq⦘.","conclusion":"⦗W_ex_acq⦘ ⊆ ⦗W⦘ ⨾ ⦗W_ex_acq⦘","hypotheses":"","proofString":"rewrite <- seq_eqvK at 1.\nrewrite (W_ex_in_W WF) at 1.\nbasic_solver."},{"statement":"⦗W_ex_acq⦘ ⨾ ⦗W_ex_acq⦘ ⊆ ⦗W⦘ ⨾ ⦗W_ex_acq⦘.","conclusion":"⦗W_ex_acq⦘ ⨾ ⦗W_ex_acq⦘ ⊆ ⦗W⦘ ⨾ ⦗W_ex_acq⦘","hypotheses":"","proofString":"rewrite (W_ex_in_W WF) at 1.\nbasic_solver."},{"statement":"⦗W ∩₁ (fun a : actid => is_xacq lab a)⦘ ⨾ ⦗W_ex_acq⦘ ⊆ ⦗W⦘ ⨾ ⦗W_ex_acq⦘.","conclusion":"⦗W ∩₁ (fun a : actid => is_xacq lab a)⦘ ⨾ ⦗W_ex_acq⦘ ⊆ ⦗W⦘ ⨾ ⦗W_ex_acq⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(((⦗W⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb) ⨾ ⦗W⦘) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(((⦗W⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb) ⨾ ⦗W⦘) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite wf_sbE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗W⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb) ⨾ ⦗W⦘) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗W⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb) ⨾ ⦗W⦘) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ AR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done|].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nsin_rewrite W_ex_acq_sb_in_ar_int_W.\nunfold ar.\nrewrite <- ct_step.\nbasic_solver 10."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗W⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb) ⨾ ⦗W⦘) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((((⦗W⦘ ⨾ ⦗W_ex_acq⦘) ⨾ sb) ⨾ ⦗W⦘) ⨾ ⦗E ∩₁ W⦘)\n  ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done|].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nsin_rewrite W_ex_acq_sb_in_ar_int_W.\nunfold ar.\nrewrite <- ct_step.\nbasic_solver 10."},{"statement":"event ↓ (⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done|].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nsin_rewrite W_ex_acq_sb_in_ar_int_W.\nunfold ar.\nrewrite <- ct_step.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nsin_rewrite W_ex_acq_sb_in_ar_int_W.\nunfold ar.\nrewrite <- ct_step.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"sin_rewrite W_ex_acq_sb_in_ar_int_W.\nunfold ar.\nrewrite <- ct_step.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ (⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"unfold ar.\nrewrite <- ct_step.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ (⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘) ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘) ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite <- ct_step.\nbasic_solver 10."},{"statement":"⦗W⦘ ⨾ (⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘) ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (⦗W⦘ ⨾ ar_int G ⨾ ⦗W⦘) ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc) ⨾ ⦗W⦘","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (rfe ⨾ rmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ rmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (rmw_in_ppo WF).\napply dom_rfe_ppo_issued."},{"statement":"dom_rel (rfe ⨾ ppo ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (rfe ⨾ ppo ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"apply dom_rfe_ppo_issued."},{"statement":"⦗W_ex_acq⦘ ⨾ rf ⊆ ⦗W_ex_acq⦘ ⨾ rfi ∪ rfe.","conclusion":"⦗W_ex_acq⦘ ⨾ rf ⊆ ⦗W_ex_acq⦘ ⨾ rfi ∪ rfe","hypotheses":"","proofString":"rewrite rfi_union_rfe.\nbasic_solver."},{"statement":"⦗W_ex_acq⦘ ⨾ (rfi ∪ rfe) ⊆ ⦗W_ex_acq⦘ ⨾ rfi ∪ rfe.","conclusion":"⦗W_ex_acq⦘ ⨾ (rfi ∪ rfe) ⊆ ⦗W_ex_acq⦘ ⨾ rfi ∪ rfe","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel ((⦗W_ex_acq⦘ ⨾ rfi ∪ rfe) ⨾ rmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗W_ex_acq⦘ ⨾ rfi ∪ rfe) ⨾ rmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"by apply wex_rfi_rfe_rmw_issued_is_issued."},{"statement":"C ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover).","conclusion":"C ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)","hypotheses":"","proofString":"basic_solver."},{"statement":"fwbob ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"fwbob ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite fwbob_in_sb, wf_sbE, no_sb_to_init; basic_solver."},{"statement":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ (fwbob ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nFWBOB G.","conclusion":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ (fwbob ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘ ⊆ \nFWBOB G","hypotheses":"","proofString":"unfold FWBOB.\nhahn_frame.\nbasic_solver."},{"statement":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ (fwbob ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (fwbob ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ (fwbob ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (fwbob ⨾ ⦗W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\nbasic_solver."},{"statement":"event ↓ (fwbob ⨾ ⦗E ∩₁ W⦘) ⊆ event ↓ (fwbob ⨾ ⦗W⦘).","conclusion":"event ↓ (fwbob ⨾ ⦗E ∩₁ W⦘) ⊆ event ↓ (fwbob ⨾ ⦗W⦘)","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (fwbob ⨾ ⦗issuable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel (fwbob ⨾ ⦗issuable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"apply fwbob_issuable_in_C."},{"statement":"I ⊆₁ dom_cond fwbob C.","conclusion":"I ⊆₁ dom_cond fwbob C","hypotheses":"","proofString":"apply dom_rel_to_cond, fwbob_I_in_C."},{"statement":"dom_rel (⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C.","conclusion":"dom_rel (⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_cond_elim1; [basic_solver 21|].\nunfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"dom_rel (((⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C.","conclusion":"dom_rel (((⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite dom_cond_elim1; [basic_solver 21|].\nunfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"(⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc) ⨾ ⦗W⦘ ⊆ fwbob.","conclusion":"(⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc) ⨾ ⦗W⦘ ⊆ fwbob","hypotheses":"","proofString":"unfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"(⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc) ⨾ ⦗W⦘\n⊆ sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘\n  ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb.","conclusion":"(⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc) ⨾ ⦗W⦘\n⊆ sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘\n  ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb","hypotheses":"","proofString":"basic_solver 12."},{"statement":"I ⊆₁ E ∩₁ W ∩₁ I.","conclusion":"I ⊆₁ E ∩₁ W ∩₁ I","hypotheses":"","proofString":"generalize issuedW, issuedE.\nbasic_solver."},{"statement":"⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗C ∪₁ I⦘\n⊆ ⦗C ∪₁ I⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘.","conclusion":"⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗C ∪₁ I⦘\n⊆ ⦗C ∪₁ I⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘","hypotheses":"","proofString":"arewrite (⦗W⦘ ⨾ ⦗C ∪₁ I⦘ ⊆ ⦗W⦘ ⨾ ⦗I⦘).\nrewrite <- !id_inter.\napply eqv_rel_mori.\nrewrite set_inter_union_r.\nrewrite <- set_interK with (s := W), set_interA.\nerewrite w_covered_issued; eauto.\nbasic_solver.\ngeneralize dom_W_Rel_sb_loc_I_in_C.\nbasic_solver 12."},{"statement":"⦗W⦘ ⨾ ⦗C ∪₁ I⦘ ⊆ ⦗W⦘ ⨾ ⦗I⦘.","conclusion":"⦗W⦘ ⨾ ⦗C ∪₁ I⦘ ⊆ ⦗W⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite <- !id_inter.\napply eqv_rel_mori.\nrewrite set_inter_union_r.\nrewrite <- set_interK with (s := W), set_interA.\nerewrite w_covered_issued; eauto.\nbasic_solver."},{"statement":"⦗W ∩₁ (C ∪₁ I)⦘ ⊆ ⦗W ∩₁ I⦘.","conclusion":"⦗W ∩₁ (C ∪₁ I)⦘ ⊆ ⦗W ∩₁ I⦘","hypotheses":"","proofString":"apply eqv_rel_mori.\nrewrite set_inter_union_r.\nrewrite <- set_interK with (s := W), set_interA.\nerewrite w_covered_issued; eauto.\nbasic_solver."},{"statement":"W ∩₁ (C ∪₁ I) ⊆₁ W ∩₁ I.","conclusion":"W ∩₁ (C ∪₁ I) ⊆₁ W ∩₁ I","hypotheses":"","proofString":"rewrite set_inter_union_r.\nrewrite <- set_interK with (s := W), set_interA.\nerewrite w_covered_issued; eauto.\nbasic_solver."},{"statement":"W ∩₁ C ∪₁ W ∩₁ I ⊆₁ W ∩₁ I.","conclusion":"W ∩₁ C ∪₁ W ∩₁ I ⊆₁ W ∩₁ I","hypotheses":"","proofString":"rewrite <- set_interK with (s := W), set_interA.\nerewrite w_covered_issued; eauto.\nbasic_solver."},{"statement":"W ∩₁ (W ∩₁ C) ∪₁ W ∩₁ W ∩₁ I ⊆₁ W ∩₁ W ∩₁ I.","conclusion":"W ∩₁ (W ∩₁ C) ∪₁ W ∩₁ W ∩₁ I ⊆₁ W ∩₁ W ∩₁ I","hypotheses":"","proofString":"erewrite w_covered_issued; eauto.\nbasic_solver."},{"statement":"W ∩₁ I ∪₁ W ∩₁ W ∩₁ I ⊆₁ W ∩₁ W ∩₁ I.","conclusion":"W ∩₁ I ∪₁ W ∩₁ W ∩₁ I ⊆₁ W ∩₁ W ∩₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C ∪₁ I⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘.","conclusion":"⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C ∪₁ I⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘","hypotheses":"","proofString":"generalize dom_W_Rel_sb_loc_I_in_C.\nbasic_solver 12."},{"statement":"dom_rel (⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘) ⊆₁ C ->\n⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C ∪₁ I⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘.","conclusion":"dom_rel (⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘) ⊆₁ C ->\n⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C ∪₁ I⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘","hypotheses":"","proofString":"basic_solver 12."},{"statement":"W ∩₁ Rel ∩₁ I ⊆₁ C ->\ndom_rel (sb ⨾ ⦗C⦘) ⊆₁ C ->\n(sb ⨾ ⦗W ∩₁ Rel⦘) ⨾ ⦗C ∪₁ I⦘ ⊆ ⦗C ∪₁ I⦘ ⨾ sb ⨾ ⦗W ∩₁ Rel⦘.","conclusion":"W ∩₁ Rel ∩₁ I ⊆₁ C ->\ndom_rel (sb ⨾ ⦗C⦘) ⊆₁ C ->\n(sb ⨾ ⦗W ∩₁ Rel⦘) ⨾ ⦗C ∪₁ I⦘ ⊆ ⦗C ∪₁ I⦘ ⨾ sb ⨾ ⦗W ∩₁ Rel⦘","hypotheses":"","proofString":"basic_solver 12."},{"statement":"⦗C⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘.","conclusion":"⦗C⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘ ⨾ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"I ⊆₁ dom_cond fwbob C.","conclusion":"I ⊆₁ dom_cond fwbob C","hypotheses":"","proofString":"apply dom_rel_to_cond, fwbob_I_in_C."},{"statement":"dom_rel (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C.","conclusion":"dom_rel (⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_cond_elim1; [basic_solver 21|].\nunfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"dom_rel ((⦗F ∩₁ Acq/Rel⦘ ⨾ sb) ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C.","conclusion":"dom_rel ((⦗F ∩₁ Acq/Rel⦘ ⨾ sb) ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite dom_cond_elim1; [basic_solver 21|].\nunfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ fwbob.","conclusion":"⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⊆ fwbob","hypotheses":"","proofString":"unfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"⦗F ∩₁ Acq/Rel⦘ ⨾ sb\n⊆ sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘\n  ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb.","conclusion":"⦗F ∩₁ Acq/Rel⦘ ⨾ sb\n⊆ sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘\n  ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb","hypotheses":"","proofString":"basic_solver 12."},{"statement":"⦗C⦘ ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb.","conclusion":"⦗C⦘ ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗C⦘ ⨾ release ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ release.","conclusion":"⦗C⦘ ⨾ release ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ release","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"generalize dom_rf_coverable.\nbasic_solver 21."},{"statement":"dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"by apply dom_release_rf_coverable."},{"statement":"⦗C⦘ ⨾ release ⨾ rf ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ release ⨾ rf.","conclusion":"⦗C⦘ ⨾ release ⨾ rf ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ release ⨾ rf","hypotheses":"","proofString":"basic_solver."},{"statement":"I ⊆₁ dom_cond fwbob C.","conclusion":"I ⊆₁ dom_cond fwbob C","hypotheses":"","proofString":"apply dom_rel_to_cond, fwbob_I_in_C."},{"statement":"dom_rel (sb ⨾ ⦗W ∩₁ Rel⦘ ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C.","conclusion":"dom_rel (sb ⨾ ⦗W ∩₁ Rel⦘ ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_cond_elim1; [basic_solver 21|].\nunfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"dom_rel ((sb ⨾ ⦗W ∩₁ Rel⦘) ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C.","conclusion":"dom_rel ((sb ⨾ ⦗W ∩₁ Rel⦘) ⨾ ⦗dom_cond fwbob C⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite dom_cond_elim1; [basic_solver 21|].\nunfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"sb ⨾ ⦗W ∩₁ Rel⦘ ⊆ fwbob.","conclusion":"sb ⨾ ⦗W ∩₁ Rel⦘ ⊆ fwbob","hypotheses":"","proofString":"unfold imm_bob.fwbob.\nbasic_solver 12."},{"statement":"sb ⨾ ⦗W ∩₁ Rel⦘\n⊆ sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘\n  ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb.","conclusion":"sb ⨾ ⦗W ∩₁ Rel⦘\n⊆ sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘\n  ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb","hypotheses":"","proofString":"basic_solver 12."},{"statement":"⦗C⦘ ⨾ sb ⨾ ⦗W ∩₁ Rel⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ sb ⨾ ⦗W ∩₁ Rel⦘.","conclusion":"⦗C⦘ ⨾ sb ⨾ ⦗W ∩₁ Rel⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ sb ⨾ ⦗W ∩₁ Rel⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel ((release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel ((release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"generalize dom_sb_coverable, dom_release_rf_coverable.\ngeneralize covered_in_coverable.\nbasic_solver 21."},{"statement":"dom_rel (sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel ((release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel (sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel ((release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"generalize covered_in_coverable.\nbasic_solver 21."},{"statement":"(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel ((release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (sb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (release ⨾ rf ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel ((release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"basic_solver 21."},{"statement":"⦗C⦘ ⨾ sw ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ sw.","conclusion":"⦗C⦘ ⨾ sw ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ sw","hypotheses":"","proofString":"basic_solver."},{"statement":"(sb ∪ sw)⁺ ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"(sb ∪ sw)⁺ ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"","proofString":"assert (A: (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺).\nrelsf.\nrewrite sb_coverable, sw_coverable.\nrewrite <- ct_step; basic_solver.\nunfold imm_s_hb.hb.\neapply ct_ind_left with (P:= fun r => r ⨾ ⦗coverable G sc T⦘); eauto with hahn.\nintros k H; rewrite !seqA, H.\nrewrite covered_in_coverable at 1; eauto.\nsin_rewrite A.\narewrite ((sb ∪ sw)⁺ ⊆ (sb ∪ sw)＊) at 1.\nrelsf."},{"statement":"(sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"(sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"","proofString":"relsf.\nrewrite sb_coverable, sw_coverable.\nrewrite <- ct_step; basic_solver."},{"statement":"sb ⨾ ⦗coverable G sc T⦘ ∪ sw ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"sb ⨾ ⦗coverable G sc T⦘ ∪ sw ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"","proofString":"rewrite sb_coverable, sw_coverable.\nrewrite <- ct_step; basic_solver."},{"statement":"⦗C⦘ ⨾ sb ∪ ⦗C⦘ ⨾ sw ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"⦗C⦘ ⨾ sb ∪ ⦗C⦘ ⨾ sw ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"","proofString":"rewrite <- ct_step; basic_solver."},{"statement":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) : (sb ∪ sw)⁺ ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"(sb ∪ sw)⁺ ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺)","proofString":"unfold imm_s_hb.hb.\neapply ct_ind_left with (P:= fun r => r ⨾ ⦗coverable G sc T⦘); eauto with hahn.\nintros k H; rewrite !seqA, H.\nrewrite covered_in_coverable at 1; eauto.\nsin_rewrite A.\narewrite ((sb ∪ sw)⁺ ⊆ (sb ∪ sw)＊) at 1.\nrelsf."},{"statement":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) : (sb ∪ sw)⁺ ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"(sb ∪ sw)⁺ ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺)","proofString":"eapply ct_ind_left with (P:= fun r => r ⨾ ⦗coverable G sc T⦘); eauto with hahn.\nintros k H; rewrite !seqA, H.\nrewrite covered_in_coverable at 1; eauto.\nsin_rewrite A.\narewrite ((sb ∪ sw)⁺ ⊆ (sb ∪ sw)＊) at 1.\nrelsf."},{"statement":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) : forall k : relation actid,\nk ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺ ->\n((sb ∪ sw) ⨾ k) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"forall k : relation actid,\nk ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺ ->\n((sb ∪ sw) ⨾ k) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺)","proofString":"intros k H; rewrite !seqA, H.\nrewrite covered_in_coverable at 1; eauto.\nsin_rewrite A.\narewrite ((sb ∪ sw)⁺ ⊆ (sb ∪ sw)＊) at 1.\nrelsf."},{"statement":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) : (sb ∪ sw) ⨾ ⦗C⦘ ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"(sb ∪ sw) ⨾ ⦗C⦘ ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺)","proofString":"rewrite covered_in_coverable at 1; eauto.\nsin_rewrite A.\narewrite ((sb ∪ sw)⁺ ⊆ (sb ∪ sw)＊) at 1.\nrelsf."},{"statement":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"(sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺)","proofString":"sin_rewrite A.\narewrite ((sb ∪ sw)⁺ ⊆ (sb ∪ sw)＊) at 1.\nrelsf."},{"statement":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) : (⦗C⦘ ⨾ (sb ∪ sw)⁺) ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"(⦗C⦘ ⨾ (sb ∪ sw)⁺) ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺)","proofString":"arewrite ((sb ∪ sw)⁺ ⊆ (sb ∪ sw)＊) at 1.\nrelsf."},{"statement":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) : ⦗C⦘ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺.","conclusion":"⦗C⦘ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)⁺ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺","hypotheses":"(A : (sb ∪ sw) ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺) (k : relation actid) (H : k ⨾ ⦗coverable G sc T⦘ ⊆ ⦗C⦘ ⨾ (sb ∪ sw)⁺)","proofString":"relsf."},{"statement":"(l : location) : dom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(l : location)","proofString":"unfold CombRelations.urr.\ngeneralize dom_hb_coverable.\ngeneralize dom_sc_coverable.\ngeneralize dom_rf_coverable.\ngeneralize covered_in_coverable.\ngeneralize w_coverable_issued.\nbasic_solver 21."},{"statement":"(l : location) : dom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(l : location)","proofString":"generalize dom_hb_coverable.\ngeneralize dom_sc_coverable.\ngeneralize dom_rf_coverable.\ngeneralize covered_in_coverable.\ngeneralize w_coverable_issued.\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(l : location)","proofString":"generalize dom_sc_coverable.\ngeneralize dom_rf_coverable.\ngeneralize covered_in_coverable.\ngeneralize w_coverable_issued.\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(l : location)","proofString":"generalize dom_rf_coverable.\ngeneralize covered_in_coverable.\ngeneralize w_coverable_issued.\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(l : location)","proofString":"generalize covered_in_coverable.\ngeneralize w_coverable_issued.\nbasic_solver 21."},{"statement":"(l : location) : (forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (sc ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel\n  ((⦗W_ l⦘ ⨾ rf^? ⨾ (hb ⨾ ⦗F ∩₁ Sc⦘)^? ⨾ sc^? ⨾ hb^?) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(l : location)","proofString":"generalize w_coverable_issued.\nbasic_solver 21."},{"statement":"(l : location) : ⦗I⦘ ⨾ urr l ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ urr l.","conclusion":"⦗I⦘ ⨾ urr l ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ urr l","hypotheses":"(l : location)","proofString":"basic_solver."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : dom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"generalize (@dom_urr_coverable l).\ngeneralize covered_in_coverable.\ngeneralize dom_release_issued.\ngeneralize dom_rf_coverable.\nbasic_solver 21."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : dom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"generalize covered_in_coverable.\ngeneralize dom_release_issued.\ngeneralize dom_rf_coverable.\nbasic_solver 21."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : (forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"generalize dom_release_issued.\ngeneralize dom_rf_coverable.\nbasic_solver 21."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : dom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\n(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\n(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"generalize dom_rf_coverable.\nbasic_solver 21."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\n(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (rf ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel (release ⨾ ⦗I⦘) ⊆₁ C ->\n(forall (G0 : execution) (sc0 : relation actid),\n Wf G0 ->\n forall T0 : trav_label -> Prop,\n tls_coherent G0 T0 ->\n iord_coherent G0 sc0 T0 -> covered T0 ⊆₁ coverable G0 sc0 T0) ->\ndom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ (release ⨾ rf)^? ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘)\n⊆₁ I","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"basic_solver 21."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : ⦗I⦘ ⨾ c_acq i l A ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ c_acq i l A.","conclusion":"⦗I⦘ ⨾ c_acq i l A ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ c_acq i l A","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"basic_solver."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : dom_rel ((urr l ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel ((urr l ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"generalize (@dom_urr_coverable l).\nbasic_solver 21."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : dom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel ((urr l ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel ((urr l ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘) ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"basic_solver 21."},{"statement":"(i : BinNums.positive) (l : location) (A : actid -> Prop) : ⦗I⦘ ⨾ c_cur i l A ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ c_cur i l A.","conclusion":"⦗I⦘ ⨾ c_cur i l A ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ c_cur i l A","hypotheses":"(i : BinNums.positive) (l : location) (A : actid -> Prop)","proofString":"basic_solver."},{"statement":"(i : BinNums.positive) (l l' : location) (A : actid -> Prop) : dom_rel\n  ((urr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘)\n   ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel\n  ((urr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘)\n   ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"(i : BinNums.positive) (l l' : location) (A : actid -> Prop)","proofString":"generalize (@dom_urr_coverable l).\nbasic_solver 21."},{"statement":"(i : BinNums.positive) (l l' : location) (A : actid -> Prop) : dom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘)\n   ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (urr l ⨾ ⦗coverable G sc T⦘) ⊆₁ I ->\ndom_rel\n  ((urr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ i ∪₁ Init⦘ ⨾ ⦗A⦘)\n   ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"(i : BinNums.positive) (l l' : location) (A : actid -> Prop)","proofString":"basic_solver 21."},{"statement":"(i : BinNums.positive) (l l' : location) (A : actid -> Prop) : ⦗I⦘ ⨾ c_rel i l l' A ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ c_rel i l l' A.","conclusion":"⦗I⦘ ⨾ c_rel i l l' A ⨾ ⦗coverable G sc T⦘ ⊆ ⦗I⦘ ⨾ c_rel i l l' A","hypotheses":"(i : BinNums.positive) (l l' : location) (A : actid -> Prop)","proofString":"basic_solver."},{"statement":"(l : location) (thread : BinNums.positive) : dom_rel (c_acq thread l (coverable G sc T)) ⊆₁ I.","conclusion":"dom_rel (c_acq thread l (coverable G sc T)) ⊆₁ I","hypotheses":"(l : location) (thread : BinNums.positive)","proofString":"rewrite (dom_r (wf_c_acqD G sc thread l (coverable G sc T))).\narewrite (⦗(Tid_ thread ∪₁ Init) ∩₁ coverable G sc  T⦘ ⊆ ⦗coverable G sc T⦘) by basic_solver.\nrewrite c_acq_coverable.\nbasic_solver."},{"statement":"(l : location) (thread : BinNums.positive) : dom_rel\n  (c_acq thread l (coverable G sc T)\n   ⨾ ⦗(Tid_ thread ∪₁ Init) ∩₁ coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel\n  (c_acq thread l (coverable G sc T)\n   ⨾ ⦗(Tid_ thread ∪₁ Init) ∩₁ coverable G sc T⦘) ⊆₁ I","hypotheses":"(l : location) (thread : BinNums.positive)","proofString":"arewrite (⦗(Tid_ thread ∪₁ Init) ∩₁ coverable G sc  T⦘ ⊆ ⦗coverable G sc T⦘) by basic_solver.\nrewrite c_acq_coverable.\nbasic_solver."},{"statement":"(l : location) (thread : BinNums.positive) : dom_rel (c_acq thread l (coverable G sc T) ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (c_acq thread l (coverable G sc T) ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"(l : location) (thread : BinNums.positive)","proofString":"rewrite c_acq_coverable.\nbasic_solver."},{"statement":"(l : location) (thread : BinNums.positive) : dom_rel (⦗I⦘ ⨾ c_acq thread l (coverable G sc T)) ⊆₁ I.","conclusion":"dom_rel (⦗I⦘ ⨾ c_acq thread l (coverable G sc T)) ⊆₁ I","hypotheses":"(l : location) (thread : BinNums.positive)","proofString":"basic_solver."},{"statement":"(l : location) (thread : BinNums.positive) : t_acq thread l (coverable G sc T) ⊆₁ I.","conclusion":"t_acq thread l (coverable G sc T) ⊆₁ I","hypotheses":"(l : location) (thread : BinNums.positive)","proofString":"by apply t_acq_coverable."},{"statement":"(l l' : location) (thread : BinNums.positive) : t_cur thread l (coverable G sc T) ⊆₁ I.","conclusion":"t_cur thread l (coverable G sc T) ⊆₁ I","hypotheses":"(l l' : location) (thread : BinNums.positive)","proofString":"by apply t_cur_coverable."},{"statement":"(l : location) : dom_rel (⦗W_ l⦘ ⨾ rf^? ⨾ hb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W_ l⦘ ⨾ rf^? ⨾ hb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"(l : location)","proofString":"generalize dom_hb_coverable.\ngeneralize w_coverable_issued.\ngeneralize dom_release_issued.\ngeneralize dom_rf_coverable.\ngeneralize covered_in_coverable.\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (⦗W_ l⦘ ⨾ rf^? ⨾ hb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (hb ⨾ ⦗coverable G sc T⦘) ⊆₁ C ->\ndom_rel (⦗W_ l⦘ ⨾ rf^? ⨾ hb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗coverable G sc T⦘) ⊆₁ I","hypotheses":"(l : location)","proofString":"generalize w_coverable_issued.\ngeneralize dom_release_issued.\ngeneralize dom_rf_coverable.\ngeneralize covered_in_coverable.\nbasic_solver 21."},{"statement":"(l : location) : dom_rel ((urr l ⨾ release) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((urr l ⨾ release) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(l : location)","proofString":"generalize dom_release_issued.\ngeneralize (@dom_urr_covered l).\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (release ⨾ ⦗I⦘) ⊆₁ C -> dom_rel ((urr l ⨾ release) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (release ⨾ ⦗I⦘) ⊆₁ C -> dom_rel ((urr l ⨾ release) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(l : location)","proofString":"generalize (@dom_urr_covered l).\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (urr l ⨾ ⦗C⦘) ⊆₁ I ->\ndom_rel (release ⨾ ⦗I⦘) ⊆₁ C -> dom_rel ((urr l ⨾ release) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (urr l ⨾ ⦗C⦘) ⊆₁ I ->\ndom_rel (release ⨾ ⦗I⦘) ⊆₁ C -> dom_rel ((urr l ⨾ release) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(l : location)","proofString":"basic_solver 21."},{"statement":"dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_int_ct_issuable_in_I."},{"statement":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"I ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver."},{"statement":"(rfe ⨾ (ar_int G ∪ rfe)＊) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"(rfe ⨾ (ar_int G ∪ rfe)＊) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite ar_int_in_sb, rfe_in_rf, sb_E_ENI, rf_E_ENI, unionK, <- ct_begin, ct_of_trans; auto.\nbasic_solver.\napply E_ENI_trans."},{"statement":"E × (E \\₁ Init) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init).","conclusion":"E × (E \\₁ Init) ⨾ ⦗E ∩₁ W⦘ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"basic_solver."},{"statement":"transitive (E × (E \\₁ Init)).","conclusion":"transitive (E × (E \\₁ Init))","hypotheses":"","proofString":"apply E_ENI_trans."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ (ar_int G ∪ rfe)＊) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ (ar_int G ∪ rfe)＊) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ AR G sc","hypotheses":"","proofString":"unfold AR.\nhahn_frame.\napply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite (dom_l (wf_rfeD WF)) at 1.\nhahn_frame.\narewrite (rfe ⊆ ar_int G ∪ rfe) at 1.\nrewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ (ar_int G ∪ rfe)＊) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘.","conclusion":"⦗action ↓₁ eq ta_issue⦘\n⨾ event ↓ ((rfe ⨾ (ar_int G ∪ rfe)＊) ⨾ ⦗E ∩₁ W⦘) ⨾ ⦗action ↓₁ eq ta_issue⦘\n⊆ ⦗action ↓₁ eq ta_issue⦘\n  ⨾ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)\n    ⨾ ⦗action ↓₁ eq ta_issue⦘","hypotheses":"","proofString":"hahn_frame.\napply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite (dom_l (wf_rfeD WF)) at 1.\nhahn_frame.\narewrite (rfe ⊆ ar_int G ∪ rfe) at 1.\nrewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"event ↓ (rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘).","conclusion":"event ↓ (rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗E ∩₁ W⦘)\n⊆ event ↓ (⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘)","hypotheses":"","proofString":"apply map_rel_mori; [done| ].\nerewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite (dom_l (wf_rfeD WF)) at 1.\nhahn_frame.\narewrite (rfe ⊆ ar_int G ∪ rfe) at 1.\nrewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗E ∩₁ W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"erewrite eqv_rel_mori with (x := _ ∩₁ W); [| intro; apply proj2].\nrewrite (dom_l (wf_rfeD WF)) at 1.\nhahn_frame.\narewrite (rfe ⊆ ar_int G ∪ rfe) at 1.\nrewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite (dom_l (wf_rfeD WF)) at 1.\nhahn_frame.\narewrite (rfe ⊆ ar_int G ∪ rfe) at 1.\nrewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"(⦗W⦘ ⨾ rfe) ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘.","conclusion":"(⦗W⦘ ⨾ rfe) ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗W⦘\n⊆ ⦗W⦘ ⨾ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⨾ ⦗W⦘","hypotheses":"","proofString":"hahn_frame.\narewrite (rfe ⊆ ar_int G ∪ rfe) at 1.\nrewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"rfe ⨾ (ar_int G ∪ rfe)＊ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"rfe ⨾ (ar_int G ∪ rfe)＊ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"arewrite (rfe ⊆ ar_int G ∪ rfe) at 1.\nrewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"(ar_int G ∪ rfe) ⨾ (ar_int G ∪ rfe)＊ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"(ar_int G ∪ rfe) ⨾ (ar_int G ∪ rfe)＊ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"rewrite <- ct_begin.\napply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"(ar_int G ∪ rfe)⁺ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺.","conclusion":"(ar_int G ∪ rfe)⁺ ⊆ (ar ∪ rf ⨾ ppo ∩ same_loc)⁺","hypotheses":"","proofString":"apply clos_trans_mori.\nunfold ar.\nbasic_solver."},{"statement":"ar_int G ∪ rfe ⊆ ar ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"ar_int G ∪ rfe ⊆ ar ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"unfold ar.\nbasic_solver."},{"statement":"ar_int G ∪ rfe ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc.","conclusion":"ar_int G ∪ rfe ⊆ sc ∪ rfe ∪ ar_int G ∪ rf ⨾ ppo ∩ same_loc","hypotheses":"","proofString":"basic_solver."},{"statement":"(D : dom_rel (rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) ⊆₁ I) : dom_rel (⦗W⦘ ⨾ (ar_int G)＊ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar_int G)＊ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"(D : dom_rel (rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) ⊆₁ I)","proofString":"apply dom_rel_helper in D.\nrewrite D.\nrewrite <- !seqA.\ndo 3 rewrite dom_seq.\nrewrite !seqA.\nrewrite rtE.\nrepeat case_union _ _.\nrewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ (ar_int G)＊ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar_int G)＊ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite D.\nrewrite <- !seqA.\ndo 3 rewrite dom_seq.\nrewrite !seqA.\nrewrite rtE.\nrepeat case_union _ _.\nrewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel\n  (⦗W⦘ ⨾ (ar_int G)＊ ⨾ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘ ⨾ (ar_int G)＊ ⨾ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)\n⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite <- !seqA.\ndo 3 rewrite dom_seq.\nrewrite !seqA.\nrewrite rtE.\nrepeat case_union _ _.\nrewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel\n  (((((⦗W⦘ ⨾ (ar_int G)＊) ⨾ ⦗I⦘) ⨾ rfe) ⨾ (ar_int G ∪ rfe)＊)\n   ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((⦗W⦘ ⨾ (ar_int G)＊) ⨾ ⦗I⦘) ⨾ rfe) ⨾ (ar_int G ∪ rfe)＊)\n   ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"do 3 rewrite dom_seq.\nrewrite !seqA.\nrewrite rtE.\nrepeat case_union _ _.\nrewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel ((⦗W⦘ ⨾ (ar_int G)＊) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗W⦘ ⨾ (ar_int G)＊) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite !seqA.\nrewrite rtE.\nrepeat case_union _ _.\nrewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ (ar_int G)＊ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar_int G)＊ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite rtE.\nrepeat case_union _ _.\nrewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (ar_int G)⁺) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (ar_int G)⁺) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"repeat case_union _ _.\nrewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ∪ ⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ∪ ⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite dom_union.\napply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘)\n∪₁ dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘)\n∪₁ dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"apply set_subset_union_l.\nsplit; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘) ⊆₁ I /\\\ndom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘) ⊆₁ I /\\\ndom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"split; [basic_solver| ].\nrewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"rewrite issued_in_issuable at 1; eauto.\napply ar_int_ct_issuable_in_I."},{"statement":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘) : dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (ar_int G)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"(D : rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘\n≡ ⦗I⦘ ⨾ rfe ⨾ (ar_int G ∪ rfe)＊ ⨾ ⦗issuable G sc T⦘)","proofString":"apply ar_int_ct_issuable_in_I."},{"statement":"sw ⨾ (⦗C⦘ ∪ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"sw ⨾ (⦗C⦘ ∪ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"","proofString":"rewrite seq_union_r.\nunionL.\nrewrite sw_covered; eauto.\nbasic_solver.\nassert (forall (s : actid -> Prop), s ∪₁ set_compl s ≡₁ fun _ => True) as AA.\nsplit; [basic_solver|].\nunfolder.\nins.\napply classic.\narewrite (sw ⊆ ⦗ C ∪₁ set_compl C ⦘ ⨾ sw) at 1.\nrewrite AA.\nby rewrite seq_id_l.\nrewrite id_union, !seq_union_l.\napply union_mori; [basic_solver|].\nrewrite (dom_r (wf_swD WF)).\nrewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"sw ⨾ ⦗C⦘ ∪ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"sw ⨾ ⦗C⦘ ∪ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"","proofString":"unionL.\nrewrite sw_covered; eauto.\nbasic_solver.\nassert (forall (s : actid -> Prop), s ∪₁ set_compl s ≡₁ fun _ => True) as AA.\nsplit; [basic_solver|].\nunfolder.\nins.\napply classic.\narewrite (sw ⊆ ⦗ C ∪₁ set_compl C ⦘ ⨾ sw) at 1.\nrewrite AA.\nby rewrite seq_id_l.\nrewrite id_union, !seq_union_l.\napply union_mori; [basic_solver|].\nrewrite (dom_r (wf_swD WF)).\nrewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"sw ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"sw ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"","proofString":"rewrite sw_covered; eauto.\nbasic_solver."},{"statement":"⦗C⦘ ⨾ sw ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"⦗C⦘ ⨾ sw ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"","proofString":"basic_solver."},{"statement":"sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"","proofString":"assert (forall (s : actid -> Prop), s ∪₁ set_compl s ≡₁ fun _ => True) as AA.\nsplit; [basic_solver|].\nunfolder.\nins.\napply classic.\narewrite (sw ⊆ ⦗ C ∪₁ set_compl C ⦘ ⨾ sw) at 1.\nrewrite AA.\nby rewrite seq_id_l.\nrewrite id_union, !seq_union_l.\napply union_mori; [basic_solver|].\nrewrite (dom_r (wf_swD WF)).\nrewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True).","conclusion":"forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)","hypotheses":"","proofString":"split; [basic_solver|].\nunfolder.\nins.\napply classic."},{"statement":"(s : actid -> Prop) : (fun _ : actid => True) ⊆₁ s ∪₁ set_compl s.","conclusion":"(fun _ : actid => True) ⊆₁ s ∪₁ set_compl s","hypotheses":"(s : actid -> Prop)","proofString":"unfolder.\nins.\napply classic."},{"statement":"(s : actid -> Prop) : forall x : actid, True -> s x \\/ ~ s x.","conclusion":"forall x : actid, True -> s x \\/ ~ s x","hypotheses":"(s : actid -> Prop)","proofString":"ins.\napply classic."},{"statement":"(s : actid -> Prop) (x : actid) (H : True) : s x \\/ ~ s x.","conclusion":"s x \\/ ~ s x","hypotheses":"(s : actid -> Prop) (x : actid) (H : True)","proofString":"apply classic."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"arewrite (sw ⊆ ⦗ C ∪₁ set_compl C ⦘ ⨾ sw) at 1.\nrewrite AA.\nby rewrite seq_id_l.\nrewrite id_union, !seq_union_l.\napply union_mori; [basic_solver|].\nrewrite (dom_r (wf_swD WF)).\nrewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : sw ⊆ ⦗C ∪₁ set_compl C⦘ ⨾ sw.","conclusion":"sw ⊆ ⦗C ∪₁ set_compl C⦘ ⨾ sw","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite AA.\nby rewrite seq_id_l."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : sw ⊆ ⦗fun _ : actid => True⦘ ⨾ sw.","conclusion":"sw ⊆ ⦗fun _ : actid => True⦘ ⨾ sw","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"by rewrite seq_id_l."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗C ∪₁ set_compl C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"⦗C ∪₁ set_compl C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite id_union, !seq_union_l.\napply union_mori; [basic_solver|].\nrewrite (dom_r (wf_swD WF)).\nrewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n∪ ⦗set_compl C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb.","conclusion":"⦗C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n∪ ⦗set_compl C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ ⦗C⦘ ⨾ sw ∪ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"apply union_mori; [basic_solver|].\nrewrite (dom_r (wf_swD WF)).\nrewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗set_compl C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘ ⨾ sw ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite (dom_r (wf_swD WF)).\nrewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗set_compl C⦘ ⨾ (sw ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘ ⨾ (sw ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite sw_in_ar0; auto.\nremember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗set_compl C⦘\n⨾ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺\n    ∪ sb) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺\n    ∪ sb) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"remember (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) as ax.\nrewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (ax : relation actid) (Heqax : ax = ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) : ⦗set_compl C⦘ ⨾ ((ax ∪ sb) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘ ⨾ ((ax ∪ sb) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (ax : relation actid) (Heqax : ax = ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺)","proofString":"rewrite !seq_union_l, !seq_union_r.\nunionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (ax : relation actid) (Heqax : ax = ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) : ⦗set_compl C⦘ ⨾ (ax ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n∪ ⦗set_compl C⦘ ⨾ (sb ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘ ⨾ (ax ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n∪ ⦗set_compl C⦘ ⨾ (sb ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (ax : relation actid) (Heqax : ax = ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺)","proofString":"unionL; [|basic_solver].\nsubst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (ax : relation actid) (Heqax : ax = ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) : ⦗set_compl C⦘ ⨾ (ax ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘ ⨾ (ax ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (ax : relation actid) (Heqax : ax = ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺)","proofString":"subst ax.\nrewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗set_compl C⦘\n⨾ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺)\n   ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺)\n   ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite !seqA.\narewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗set_compl C⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘\n      ⨾ (sb ∩ same_loc)^?\n        ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘\n      ⨾ (sb ∩ same_loc)^?\n        ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"arewrite ((sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ ⦗W⦘) by basic_solver.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗set_compl C⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘\n      ⨾ (sb ∩ same_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘\n      ⨾ (sb ∩ same_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"arewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release).\nunfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r.\nenough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ release","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"unfold imm_s_hb.release, imm_s_hb.rs.\nby rewrite <- inclusion_id_rt, seq_id_r."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"by rewrite <- inclusion_id_rt, seq_id_r."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗set_compl C⦘\n⨾ release ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ release ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"enough (dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) as BB.\nrewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (BB : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) : ⦗set_compl C⦘\n⨾ release ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ release ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘\n⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (BB : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I)","proofString":"rewrite (dom_rel_helper BB).\nseq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (BB : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) : ⦗set_compl C⦘\n⨾ release\n  ⨾ ⦗I⦘ ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ release\n  ⨾ ⦗I⦘ ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (BB : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I)","proofString":"seq_rewrite (dom_rel_helper dom_release_issued).\nbasic_solver."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (BB : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I) : ⦗set_compl C⦘\n⨾ (⦗C⦘ ⨾ release ⨾ ⦗I⦘)\n  ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb.","conclusion":"⦗set_compl C⦘\n⨾ (⦗C⦘ ⨾ release ⨾ ⦗I⦘)\n  ⨾ ⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘ ⊆ sb","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) (BB : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I)","proofString":"basic_solver."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘) ⊆₁ I","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : dom_rel (((⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel (((⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ ⦗dom_rel (sb^? ⨾ ⦗I⦘)⦘)\n⊆₁ I","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : dom_rel (((⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ sb^? ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (((⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺) ⨾ ⦗FR ∩₁ Acq⦘) ⨾ sb^? ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite !seqA.\narewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ sb^? ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗FR ∩₁ Acq⦘ ⨾ sb^? ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"arewrite (⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?).\nrewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\nseq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?.","conclusion":"⦗FR ∩₁ Acq⦘ ⨾ sb^? ⊆ (rfe ∪ ar_int G)^?","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite !crE, !seq_union_r.\napply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗FR ∩₁ Acq⦘ ⨾ ⦗fun _ : actid => True⦘ ∪ ⦗FR ∩₁ Acq⦘ ⨾ sb\n⊆ ⦗fun _ : actid => True⦘ ∪ (rfe ∪ ar_int G).","conclusion":"⦗FR ∩₁ Acq⦘ ⨾ ⦗fun _ : actid => True⦘ ∪ ⦗FR ∩₁ Acq⦘ ⨾ sb\n⊆ ⦗fun _ : actid => True⦘ ∪ (rfe ∪ ar_int G)","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"apply union_mori; [basic_solver|].\nunionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗FR ∩₁ Acq⦘ ⨾ sb ⊆ rfe ∪ ar_int G.","conclusion":"⦗FR ∩₁ Acq⦘ ⨾ sb ⊆ rfe ∪ ar_int G","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"unionR right.\nrewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗FR ∩₁ Acq⦘ ⨾ sb ⊆ ar_int G.","conclusion":"⦗FR ∩₁ Acq⦘ ⨾ sb ⊆ ar_int G","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite set_inter_union_l, id_union, seq_union_l.\nrewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗F ∩₁ Acq⦘ ⨾ sb ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ⊆ ar_int G.","conclusion":"⦗F ∩₁ Acq⦘ ⨾ sb ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ⊆ ar_int G","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite sb_from_r_acq_in_bob.\narewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗F ∩₁ Acq⦘ ⨾ sb ∪ bob ⊆ ar_int G.","conclusion":"⦗F ∩₁ Acq⦘ ⨾ sb ∪ bob ⊆ ar_int G","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"arewrite (Acq ⊆₁ Acq/Rel) by mode_solver.\nrewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ∪ bob ⊆ ar_int G.","conclusion":"⦗F ∩₁ Acq/Rel⦘ ⨾ sb ∪ bob ⊆ ar_int G","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite sb_from_f_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : bob ∪ bob ⊆ ar_int G.","conclusion":"bob ∪ bob ⊆ ar_int G","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite bob_in_ar_int.\neauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : ar_int G ∪ ar_int G ⊆ ar_int G.","conclusion":"ar_int G ∪ ar_int G ⊆ ar_int G","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"eauto with hahn."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ (rfe ∪ ar_int G)^? ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ (rfe ∪ ar_int G)^? ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"seq_rewrite ct_cr.\nrewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"rewrite issued_in_issuable at 1; eauto.\napply rfe_ar_int_ct_issuable_in_I."},{"statement":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True)) : dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ (rfe ∪ ar_int G)⁺ ⨾ ⦗issuable G sc T⦘) ⊆₁ I","hypotheses":"(AA : forall s : actid -> Prop, s ∪₁ set_compl s ≡₁ (fun _ : actid => True))","proofString":"apply rfe_ar_int_ct_issuable_in_I."},{"statement":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ ((sb ∪ sc)⁺ ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘ ⊆ \niord_simpl G sc.","conclusion":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ ((sb ∪ sc)⁺ ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘ ⊆ \niord_simpl G sc","hypotheses":"","proofString":"transitivity (SB G sc); [| unfold iord_simpl; basic_solver 10].\nunfold SB.\nbasic_solver."},{"statement":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ ((sb ∪ sc)⁺ ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘ ⊆ \nSB G sc.","conclusion":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ ((sb ∪ sc)⁺ ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘ ⊆ \nSB G sc","hypotheses":"","proofString":"unfold SB.\nbasic_solver."},{"statement":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ ((sb ∪ sc)⁺ ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ∪ sc)⁺ ⨾ ⦗action ↓₁ eq ta_cover⦘.","conclusion":"⦗action ↓₁ eq ta_cover⦘\n⨾ event ↓ ((sb ∪ sc)⁺ ⨾ ⦗E⦘) ⨾ ⦗action ↓₁ eq ta_cover⦘\n⊆ ⦗action ↓₁ eq ta_cover⦘ ⨾ event ↓ (sb ∪ sc)⁺ ⨾ ⦗action ↓₁ eq ta_cover⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"C ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover).","conclusion":"C ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)","hypotheses":"","proofString":"basic_solver."},{"statement":"(sb ∪ sc)⁺ ⊆ E × (E \\₁ Init).","conclusion":"(sb ∪ sc)⁺ ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite <- ct_of_trans with (r := _ × _); [| basic_solver].\napply clos_trans_mori.\nrewrite (wf_scE WFSC), (no_sc_to_init WF WFSC), wf_sbE, no_sb_to_init; eauto.\nbasic_solver."},{"statement":"(sb ∪ sc)⁺ ⊆ (E × (E \\₁ Init))⁺.","conclusion":"(sb ∪ sc)⁺ ⊆ (E × (E \\₁ Init))⁺","hypotheses":"","proofString":"apply clos_trans_mori.\nrewrite (wf_scE WFSC), (no_sc_to_init WF WFSC), wf_sbE, no_sb_to_init; eauto.\nbasic_solver."},{"statement":"sb ∪ sc ⊆ E × (E \\₁ Init).","conclusion":"sb ∪ sc ⊆ E × (E \\₁ Init)","hypotheses":"","proofString":"rewrite (wf_scE WFSC), (no_sc_to_init WF WFSC), wf_sbE, no_sb_to_init; eauto.\nbasic_solver."},{"statement":"⦗E⦘ ⨾ (sb ⨾ ⦗fun x : actid => ~ is_init x⦘) ⨾ ⦗E⦘\n∪ ⦗E⦘ ⨾ (sc ⨾ ⦗fun x : actid => ~ is_init x⦘) ⨾ ⦗E⦘ ⊆ \nE × (E \\₁ Init).","conclusion":"⦗E⦘ ⨾ (sb ⨾ ⦗fun x : actid => ~ is_init x⦘) ⨾ ⦗E⦘\n∪ ⦗E⦘ ⨾ (sc ⨾ ⦗fun x : actid => ~ is_init x⦘) ⨾ ⦗E⦘ ⊆ \nE × (E \\₁ Init)","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel ((sb ∪ sc)⁺ ⨾ ⦗coverable G sc T⦘) ⊆₁ C.","conclusion":"dom_rel ((sb ∪ sc)⁺ ⨾ ⦗coverable G sc T⦘) ⊆₁ C","hypotheses":"","proofString":"by apply dom_sb_sc_ct_coverable."}]}