{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/imm/src/basic/RMWinstrProps.v","fileSamples":[{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : W_ex (G s) ⊆₁ W_ex (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : W_ex (G s') ⊆₁ W_ex (G s') ∩₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"W_ex (G s') ⊆₁ W_ex (G s') ∩₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : W_ex (G s) ⊆₁ W_ex (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"apply set_subset_inter_r.\nsplit; [done|].\nunfold W_ex in *.\nunfold add in UG.\nrewrite UG at 1.\nsimpls.\nrewrite SS.\nrewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : W_ex (G s) ⊆₁ W_ex (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : W_ex (G s') ⊆₁ W_ex (G s') /\\\nW_ex (G s') ⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"W_ex (G s') ⊆₁ W_ex (G s') /\\\nW_ex (G s') ⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : W_ex (G s) ⊆₁ W_ex (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"split; [done|].\nunfold W_ex in *.\nunfold add in UG.\nrewrite UG at 1.\nsimpls.\nrewrite SS.\nrewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : W_ex (G s) ⊆₁ W_ex (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : W_ex (G s') ⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"W_ex (G s') ⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : W_ex (G s) ⊆₁ W_ex (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"unfold W_ex in *.\nunfold add in UG.\nrewrite UG at 1.\nsimpls.\nrewrite SS.\nrewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s')) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s')) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"unfold add in UG.\nrewrite UG at 1.\nsimpls.\nrewrite SS.\nrewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s')) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s')) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite UG at 1.\nsimpls.\nrewrite SS.\nrewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel\n  (rmw\n     {|\n       acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n       threads_set := eq thread ∪₁ threads_set (G s);\n       lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n       rmw := rmw (G s);\n       data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n       addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n       ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n       rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n       rf := ∅₂;\n       co := ∅₂\n     |}) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel\n  (rmw\n     {|\n       acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n       threads_set := eq thread ∪₁ threads_set (G s);\n       lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n       rmw := rmw (G s);\n       data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n       addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n       ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n       rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n       rf := ∅₂;\n       co := ∅₂\n     |}) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"simpls.\nrewrite SS.\nrewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s)) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s)) ⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite SS.\nrewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s) ⨾ ⦗acts_set (G s)⦘)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s) ⨾ ⦗acts_set (G s)⦘)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s)) ∩₁ acts_set (G s)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s)) ∩₁ acts_set (G s)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s))\n∩₁ (acts_set (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s))\n∩₁ (acts_set (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"unfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : forall x : actid,\n(exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x -> is_xacq (lab (G s')) x.","conclusion":"forall x : actid,\n(exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x -> is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"ins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x : actid) (H : (exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x) : is_xacq (lab (G s')) x.","conclusion":"is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x : actid) (H : (exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x)","proofString":"desc.\nunfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x) : is_xacq (lab (G s')) x.","conclusion":"is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x)","proofString":"unfold is_xacq, xmod.\nerewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x) : match\n  match lab (G s') x with\n  | Astore x1 _ _ _ => Some x1\n  | _ => None\n  end\nwith\n| Some Xacq => true\n| _ => false\nend.","conclusion":"match\n  match lab (G s') x with\n  | Astore x1 _ _ _ => Some x1\n  | _ => None\n  end\nwith\n| Some Xacq => true\n| _ => false\nend","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x)","proofString":"erewrite add_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite (dom_r (wft_rmwE WF)).\nrewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s) ⨾ ⦗acts_set (G s)⦘)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s) ⨾ ⦗acts_set (G s)⦘)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite codom_eqv1.\nrewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s)) ∩₁ acts_set (G s)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s)) ∩₁ acts_set (G s)\n∩₁ (fun a : actid => is_xacq (lab (G s)) a)\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite set_interA.\nunfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : codom_rel (rmw (G s))\n∩₁ (acts_set (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"codom_rel (rmw (G s))\n∩₁ (acts_set (G s) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"unfolder.\nins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : forall x : actid,\n(exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x -> is_xacq (lab (G s')) x.","conclusion":"forall x : actid,\n(exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x -> is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"ins.\ndesc.\nunfold is_xacq, xmod.\nerewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x : actid) (H : (exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x) : is_xacq (lab (G s')) x.","conclusion":"is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x : actid) (H : (exists x0 : actid, rmw (G s) x0 x) /\\\nacts_set (G s) x /\\ is_xacq (lab (G s)) x)","proofString":"desc.\nunfold is_xacq, xmod.\nerewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x) : is_xacq (lab (G s')) x.","conclusion":"is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x)","proofString":"unfold is_xacq, xmod.\nerewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x) : match\n  match lab (G s') x with\n  | Astore x1 _ _ _ => Some x1\n  | _ => None\n  end\nwith\n| Some Xacq => true\n| _ => false\nend.","conclusion":"match\n  match lab (G s') x with\n  | Astore x1 _ _ _ => Some x1\n  | _ => None\n  end\nwith\n| Some Xacq => true\n| _ => false\nend","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x x0 : actid) (H : rmw (G s) x0 x) (H0 : acts_set (G s) x) (H1 : is_xacq (lab (G s)) x)","proofString":"erewrite add_rmw_preserves_lab; eauto."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : (fun y : actid => y = ThreadEvent thread (eindex s + 1))\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a).","conclusion":"(fun y : actid => y = ThreadEvent thread (eindex s + 1))\n⊆₁ (fun a : actid => is_xacq (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"unfolder.\nins.\ndesf.\nrewrite UG.\nsimpls.\nunfold is_xacq, xmod.\nby rewrite upds."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : forall x : actid,\nx = ThreadEvent thread (eindex s + 1) -> is_xacq (lab (G s')) x.","conclusion":"forall x : actid,\nx = ThreadEvent thread (eindex s + 1) -> is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"ins.\ndesf.\nrewrite UG.\nsimpls.\nunfold is_xacq, xmod.\nby rewrite upds."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x : actid) (H : x = ThreadEvent thread (eindex s + 1)) : is_xacq (lab (G s')) x.","conclusion":"is_xacq (lab (G s')) x","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) (x : actid) (H : x = ThreadEvent thread (eindex s + 1))","proofString":"desf.\nrewrite UG.\nsimpls.\nunfold is_xacq, xmod.\nby rewrite upds."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : is_xacq (lab (G s')) (ThreadEvent thread (eindex s + 1)).","conclusion":"is_xacq (lab (G s')) (ThreadEvent thread (eindex s + 1))","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"rewrite UG.\nsimpls.\nunfold is_xacq, xmod.\nby rewrite upds."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : is_xacq\n  (lab\n     {|\n       acts_set :=\n         eq (ThreadEvent thread (eindex s + 1))\n         ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ \n         acts_set (G s);\n       threads_set := eq thread ∪₁ threads_set (G s);\n       lab :=\n         upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n           (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n       rmw :=\n         singl_rel (ThreadEvent thread (eindex s))\n           (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n       data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n       addr :=\n         addr (G s)\n         ∪ lc'\n           × (eq (ThreadEvent thread (eindex s))\n              ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n       ctrl :=\n         ctrl (G s)\n         ∪ cl\n           × (eq (ThreadEvent thread (eindex s))\n              ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n       rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n       rf := ∅₂;\n       co := ∅₂\n     |}) (ThreadEvent thread (eindex s + 1)).","conclusion":"is_xacq\n  (lab\n     {|\n       acts_set :=\n         eq (ThreadEvent thread (eindex s + 1))\n         ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ \n         acts_set (G s);\n       threads_set := eq thread ∪₁ threads_set (G s);\n       lab :=\n         upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n           (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n       rmw :=\n         singl_rel (ThreadEvent thread (eindex s))\n           (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n       data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n       addr :=\n         addr (G s)\n         ∪ lc'\n           × (eq (ThreadEvent thread (eindex s))\n              ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n       ctrl :=\n         ctrl (G s)\n         ∪ cl\n           × (eq (ThreadEvent thread (eindex s))\n              ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n       rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n       rf := ∅₂;\n       co := ∅₂\n     |}) (ThreadEvent thread (eindex s + 1))","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"simpls.\nunfold is_xacq, xmod.\nby rewrite upds."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : is_xacq\n  (upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n     (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc))\n  (ThreadEvent thread (eindex s + 1)).","conclusion":"is_xacq\n  (upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n     (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc))\n  (ThreadEvent thread (eindex s + 1))","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"unfold is_xacq, xmod.\nby rewrite upds."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a)) : match\n  match\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc)\n      (ThreadEvent thread (eindex s + 1))\n  with\n  | Astore x _ _ _ => Some x\n  | _ => None\n  end\nwith\n| Some Xacq => true\n| _ => false\nend.","conclusion":"match\n  match\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc)\n      (ThreadEvent thread (eindex s + 1))\n  with\n  | Astore x _ _ _ => Some x\n  | _ => None\n  end\nwith\n| Some Xacq => true\n| _ => false\nend","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl1 : label) (ordw : mode) (vl : location) (lc : value) (vl' lc' cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set :=\n    eq (ThreadEvent thread (eindex s + 1))\n    ∪₁ eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab :=\n    upd (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl1)\n      (ThreadEvent thread (eindex s + 1)) (Astore Xacq ordw vl lc);\n  rmw :=\n    singl_rel (ThreadEvent thread (eindex s))\n      (ThreadEvent thread (eindex s + 1)) ∪ rmw (G s);\n  data := data (G s) ∪ vl' × eq (ThreadEvent thread (eindex s + 1));\n  addr :=\n    addr (G s)\n    ∪ lc'\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  ctrl :=\n    ctrl (G s)\n    ∪ cl\n      × (eq (ThreadEvent thread (eindex s))\n         ∪₁ eq (ThreadEvent thread (eindex s + 1)));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : codom_rel (rmw (G s))\n⊆₁ codom_rel (rmw (G s)) ∩₁ (fun a : actid => is_xacq (lab (G s)) a))","proofString":"by rewrite upds."},{"statement":"(rmw : Instr.rmw) (rexmod : bool) (xmod : x_mode) (ordr ordw : mode) (reg : Reg.t) (lexpr : Instr.lexpr) (s : state) (XACQIN : rmw_is_xacq_instrs (instrs s)) (ISTEP : In (Instr.update rmw rexmod xmod ordr ordw reg lexpr) (instrs s)) : xmod = Xacq.","conclusion":"xmod = Xacq","hypotheses":"(rmw : Instr.rmw) (rexmod : bool) (xmod : x_mode) (ordr ordw : mode) (reg : Reg.t) (lexpr : Instr.lexpr) (s : state) (XACQIN : rmw_is_xacq_instrs (instrs s)) (ISTEP : In (Instr.update rmw rexmod xmod ordr ordw reg lexpr) (instrs s))","proofString":"apply XACQIN in ISTEP; simpls; desf."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : dom_rel (rmw (G s')) ⊆₁ (fun a : actid => R_ex (lab (G s')) a).","conclusion":"dom_rel (rmw (G s')) ⊆₁ (fun a : actid => R_ex (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' = add (G s) thread (eindex s) lbl vl lc cl ff) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"unfold add in UG.\nrewrite UG.\nsimpls.\nrewrite (dom_l (wft_rmwE WF)).\nrewrite dom_eqv1.\nrewrite SS.\nunfold R_ex.\nunfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : dom_rel (rmw (G s')) ⊆₁ (fun a : actid => R_ex (lab (G s')) a).","conclusion":"dom_rel (rmw (G s')) ⊆₁ (fun a : actid => R_ex (lab (G s')) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"rewrite UG.\nsimpls.\nrewrite (dom_l (wft_rmwE WF)).\nrewrite dom_eqv1.\nrewrite SS.\nunfold R_ex.\nunfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : dom_rel\n  (rmw\n     {|\n       acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n       threads_set := eq thread ∪₁ threads_set (G s);\n       lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n       rmw := rmw (G s);\n       data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n       addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n       ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n       rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n       rf := ∅₂;\n       co := ∅₂\n     |})\n⊆₁ (fun a : actid =>\n    R_ex\n      (lab\n         {|\n           acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n           threads_set := eq thread ∪₁ threads_set (G s);\n           lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n           rmw := rmw (G s);\n           data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n           addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n           ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n           rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n           rf := ∅₂;\n           co := ∅₂\n         |}) a).","conclusion":"dom_rel\n  (rmw\n     {|\n       acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n       threads_set := eq thread ∪₁ threads_set (G s);\n       lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n       rmw := rmw (G s);\n       data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n       addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n       ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n       rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n       rf := ∅₂;\n       co := ∅₂\n     |})\n⊆₁ (fun a : actid =>\n    R_ex\n      (lab\n         {|\n           acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n           threads_set := eq thread ∪₁ threads_set (G s);\n           lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n           rmw := rmw (G s);\n           data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n           addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n           ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n           rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n           rf := ∅₂;\n           co := ∅₂\n         |}) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"simpls.\nrewrite (dom_l (wft_rmwE WF)).\nrewrite dom_eqv1.\nrewrite SS.\nunfold R_ex.\nunfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : dom_rel (rmw (G s))\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a).","conclusion":"dom_rel (rmw (G s))\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"rewrite (dom_l (wft_rmwE WF)).\nrewrite dom_eqv1.\nrewrite SS.\nunfold R_ex.\nunfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : dom_rel (⦗acts_set (G s)⦘ ⨾ rmw (G s))\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a).","conclusion":"dom_rel (⦗acts_set (G s)⦘ ⨾ rmw (G s))\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"rewrite dom_eqv1.\nrewrite SS.\nunfold R_ex.\nunfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : acts_set (G s) ∩₁ dom_rel (rmw (G s))\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a).","conclusion":"acts_set (G s) ∩₁ dom_rel (rmw (G s))\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"rewrite SS.\nunfold R_ex.\nunfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : acts_set (G s) ∩₁ (fun a : actid => R_ex (lab (G s)) a)\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a).","conclusion":"acts_set (G s) ∩₁ (fun a : actid => R_ex (lab (G s)) a)\n⊆₁ (fun a : actid =>\n    R_ex (upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl) a)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"unfold R_ex.\nunfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) : acts_set (G s)\n∩₁ (fun a : actid =>\n    match lab (G s) a with\n    | Aload r _ _ _ => r\n    | _ => false\n    end)\n⊆₁ (fun a : actid =>\n    match upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl a with\n    | Aload r _ _ _ => r\n    | _ => false\n    end).","conclusion":"acts_set (G s)\n∩₁ (fun a : actid =>\n    match lab (G s) a with\n    | Aload r _ _ _ => r\n    | _ => false\n    end)\n⊆₁ (fun a : actid =>\n    match upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl a with\n    | Aload r _ _ _ => r\n    | _ => false\n    end)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a))","proofString":"unfolder.\nins.\ndesc.\nrewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (x : actid) (H : acts_set (G s) x) (H0 : match lab (G s) x with\n| Aload r _ _ _ => r\n| _ => false\nend) : match upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl x with\n| Aload r _ _ _ => r\n| _ => false\nend.","conclusion":"match upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl x with\n| Aload r _ _ _ => r\n| _ => false\nend","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (x : actid) (H : acts_set (G s) x) (H0 : match lab (G s) x with\n| Aload r _ _ _ => r\n| _ => false\nend)","proofString":"rewrite updo; auto.\nintros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (x : actid) (H : acts_set (G s) x) (H0 : match lab (G s) x with\n| Aload r _ _ _ => r\n| _ => false\nend) : x <> ThreadEvent thread (eindex s).","conclusion":"x <> ThreadEvent thread (eindex s)","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (x : actid) (H : acts_set (G s) x) (H0 : match lab (G s) x with\n| Aload r _ _ _ => r\n| _ => false\nend)","proofString":"intros HH; subst.\napply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (H0 : match lab (G s) (ThreadEvent thread (eindex s)) with\n| Aload r _ _ _ => r\n| _ => false\nend) (H : acts_set (G s) (ThreadEvent thread (eindex s))) : False.","conclusion":"False","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (H0 : match lab (G s) (ThreadEvent thread (eindex s)) with\n| Aload r _ _ _ => r\n| _ => false\nend) (H : acts_set (G s) (ThreadEvent thread (eindex s)))","proofString":"apply (acts_rep WF) in H.\ndesf.\nlia."},{"statement":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (ex : bool) (o : mode) (l : location) (v : value) (Heq : lab (G s) (ThreadEvent thread (eindex s)) = Aload true o l v) (H0 : ex) (LE : eindex s < eindex s) : False.","conclusion":"False","hypotheses":"(thread : thread_id) (s s' : state) (WF : wf_thread_state thread s) (lbl : label) (vl lc cl ff : actid -> Prop) (UG : G s' =\n{|\n  acts_set := eq (ThreadEvent thread (eindex s)) ∪₁ acts_set (G s);\n  threads_set := eq thread ∪₁ threads_set (G s);\n  lab := upd (lab (G s)) (ThreadEvent thread (eindex s)) lbl;\n  rmw := rmw (G s);\n  data := data (G s) ∪ vl × eq (ThreadEvent thread (eindex s));\n  addr := addr (G s) ∪ lc × eq (ThreadEvent thread (eindex s));\n  ctrl := ctrl (G s) ∪ cl × eq (ThreadEvent thread (eindex s));\n  rmw_dep := rmw_dep (G s) ∪ ff × eq (ThreadEvent thread (eindex s));\n  rf := ∅₂;\n  co := ∅₂\n|}) (SS : dom_rel (rmw (G s)) ⊆₁ (fun a : actid => R_ex (lab (G s)) a)) (ex : bool) (o : mode) (l : location) (v : value) (Heq : lab (G s) (ThreadEvent thread (eindex s)) = Aload true o l v) (H0 : ex) (LE : eindex s < eindex s)","proofString":"lia."},{"statement":"(rmw : Instr.rmw) (rexmod : bool) (xmod : x_mode) (ordr ordw : mode) (reg : Reg.t) (lexpr : Instr.lexpr) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (ISTEP : In (Instr.update rmw rexmod xmod ordr ordw reg lexpr) (instrs s)) : rexmod = true.","conclusion":"rexmod = true","hypotheses":"(rmw : Instr.rmw) (rexmod : bool) (xmod : x_mode) (ordr ordw : mode) (reg : Reg.t) (lexpr : Instr.lexpr) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (ISTEP : In (Instr.update rmw rexmod xmod ordr ordw reg lexpr) (instrs s))","proofString":"apply RMWREX in ISTEP; simpls; desf."},{"statement":"(old new : Instr.expr) (rexmod : bool) (xmod : x_mode) (ordr ordw : mode) (reg : Reg.t) (lexpr : Instr.lexpr) (s : state) (RMWREX : cas_produces_R_ex_instrs (instrs s)) (ISTEP : In (Instr.update (Instr.cas old new) rexmod xmod ordr ordw reg lexpr)\n  (instrs s)) : rexmod = true.","conclusion":"rexmod = true","hypotheses":"(old new : Instr.expr) (rexmod : bool) (xmod : x_mode) (ordr ordw : mode) (reg : Reg.t) (lexpr : Instr.lexpr) (s : state) (RMWREX : cas_produces_R_ex_instrs (instrs s)) (ISTEP : In (Instr.update (Instr.cas old new) rexmod xmod ordr ordw reg lexpr)\n  (instrs s))","proofString":"apply RMWREX in ISTEP; simpls; desf."},{"statement":"(thread : thread_id) (s s' : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (STEPS : clos_refl_trans_n1 state (step thread) s s') (SS : dom_rmw_in_rex s) : dom_rmw_in_rex s'.","conclusion":"dom_rmw_in_rex s'","hypotheses":"(thread : thread_id) (s s' : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (STEPS : clos_refl_trans_n1 state (step thread) s s') (SS : dom_rmw_in_rex s)","proofString":"induction STEPS; auto.\napply clos_rt_rtn1_iff in STEPS.\neapply dom_rmw_in_rex_thread_step with (s:=y); eauto.\nerewrite steps_preserve_instrs; eauto.\neapply wf_thread_state_steps; eauto."},{"statement":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : clos_refl_trans_n1 state (step thread) s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y) : dom_rmw_in_rex z.","conclusion":"dom_rmw_in_rex z","hypotheses":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : clos_refl_trans_n1 state (step thread) s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y)","proofString":"apply clos_rt_rtn1_iff in STEPS.\neapply dom_rmw_in_rex_thread_step with (s:=y); eauto.\nerewrite steps_preserve_instrs; eauto.\neapply wf_thread_state_steps; eauto."},{"statement":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : (step thread)＊ s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y) : dom_rmw_in_rex z.","conclusion":"dom_rmw_in_rex z","hypotheses":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : (step thread)＊ s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y)","proofString":"eapply dom_rmw_in_rex_thread_step with (s:=y); eauto.\nerewrite steps_preserve_instrs; eauto.\neapply wf_thread_state_steps; eauto."},{"statement":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : (step thread)＊ s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y) : rmw_is_rex_instrs (instrs y).","conclusion":"rmw_is_rex_instrs (instrs y)","hypotheses":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : (step thread)＊ s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y)","proofString":"erewrite steps_preserve_instrs; eauto."},{"statement":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : (step thread)＊ s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y) : wf_thread_state thread y.","conclusion":"wf_thread_state thread y","hypotheses":"(thread : thread_id) (s : state) (RMWREX : rmw_is_rex_instrs (instrs s)) (WF : wf_thread_state thread s) (y z : state) (H : step thread y z) (STEPS : (step thread)＊ s y) (SS : dom_rmw_in_rex s) (IHSTEPS : dom_rmw_in_rex y)","proofString":"eapply wf_thread_state_steps; eauto."}]}