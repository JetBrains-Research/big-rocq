{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/promising2ToImm/src/ext_traversal/ExtSimTraversalProperties.v","fileSamples":[{"statement":"(T T' : trav_label -> Prop) (STEPS : ((ext_sim_trav_step G sc)＊ ⨾ ext_sim_trav_step G sc) T T') : tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'.","conclusion":"tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'","hypotheses":"(T T' : trav_label -> Prop) (STEPS : ((ext_sim_trav_step G sc)＊ ⨾ ext_sim_trav_step G sc) T T')","proofString":"unfolder in STEPS.\ndesf.\neapply ext_sim_trav_step_coherence; eauto."},{"statement":"(T T' : trav_label -> Prop) (STEPS : exists z : trav_label -> Prop,\n  (ext_sim_trav_step G sc)＊ T z /\\ ext_sim_trav_step G sc z T') : tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'.","conclusion":"tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'","hypotheses":"(T T' : trav_label -> Prop) (STEPS : exists z : trav_label -> Prop,\n  (ext_sim_trav_step G sc)＊ T z /\\ ext_sim_trav_step G sc z T')","proofString":"desf.\neapply ext_sim_trav_step_coherence; eauto."},{"statement":"(T T' z : trav_label -> Prop) (STEPS : (ext_sim_trav_step G sc)＊ T z) (STEPS0 : ext_sim_trav_step G sc z T') : tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'.","conclusion":"tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'","hypotheses":"(T T' z : trav_label -> Prop) (STEPS : (ext_sim_trav_step G sc)＊ T z) (STEPS0 : ext_sim_trav_step G sc z T')","proofString":"eapply ext_sim_trav_step_coherence; eauto."},{"statement":"(T T' : trav_label -> Prop) (STEPS : (⦗fun _ : trav_label -> Prop => True⦘ ∪ (ext_sim_trav_step G sc)⁺) T T') (COH0 : tls_coherent G T /\\ iord_coherent G sc T /\\ reserve_coherent G T) : tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'.","conclusion":"tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'","hypotheses":"(T T' : trav_label -> Prop) (STEPS : (⦗fun _ : trav_label -> Prop => True⦘ ∪ (ext_sim_trav_step G sc)⁺) T T') (COH0 : tls_coherent G T /\\ iord_coherent G sc T /\\ reserve_coherent G T)","proofString":"unfolder in STEPS.\ndesf.\neapply ext_sim_trav_step_ct_coherence; eauto."},{"statement":"(T T' : trav_label -> Prop) (STEPS : T = T' /\\ True \\/ (ext_sim_trav_step G sc)⁺ T T') (COH0 : tls_coherent G T /\\ iord_coherent G sc T /\\ reserve_coherent G T) : tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'.","conclusion":"tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'","hypotheses":"(T T' : trav_label -> Prop) (STEPS : T = T' /\\ True \\/ (ext_sim_trav_step G sc)⁺ T T') (COH0 : tls_coherent G T /\\ iord_coherent G sc T /\\ reserve_coherent G T)","proofString":"desf.\neapply ext_sim_trav_step_ct_coherence; eauto."},{"statement":"(T T' : trav_label -> Prop) (STEPS : (ext_sim_trav_step G sc)⁺ T T') (COH0 : tls_coherent G T) (COH1 : iord_coherent G sc T) (COH2 : reserve_coherent G T) : tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'.","conclusion":"tls_coherent G T' /\\ iord_coherent G sc T' /\\ reserve_coherent G T'","hypotheses":"(T T' : trav_label -> Prop) (STEPS : (ext_sim_trav_step G sc)⁺ T T') (COH0 : tls_coherent G T) (COH1 : iord_coherent G sc T) (COH2 : reserve_coherent G T)","proofString":"eapply ext_sim_trav_step_ct_coherence; eauto."},{"statement":"(x y : trav_label -> Prop) (H : ext_sim_trav_step G sc x y) : issued x ⊆₁ issued y.","conclusion":"issued x ⊆₁ issued y","hypotheses":"(x y : trav_label -> Prop) (H : ext_sim_trav_step G sc x y)","proofString":"by apply ext_sim_trav_step_issued_le."},{"statement":"(x y z : trav_label -> Prop) (STEPS1 : (ext_sim_trav_step G sc)＊ x y) (STEPS2 : (ext_sim_trav_step G sc)＊ y z) (IHSTEPS1 : issued x ⊆₁ issued y) (IHSTEPS2 : issued y ⊆₁ issued z) : issued x ⊆₁ issued z.","conclusion":"issued x ⊆₁ issued z","hypotheses":"(x y z : trav_label -> Prop) (STEPS1 : (ext_sim_trav_step G sc)＊ x y) (STEPS2 : (ext_sim_trav_step G sc)＊ y z) (IHSTEPS1 : issued x ⊆₁ issued y) (IHSTEPS2 : issued y ⊆₁ issued z)","proofString":"etransitivity; eauto."},{"statement":"(x y : trav_label -> Prop) (H : ext_sim_trav_step G sc x y) : covered x ⊆₁ covered y.","conclusion":"covered x ⊆₁ covered y","hypotheses":"(x y : trav_label -> Prop) (H : ext_sim_trav_step G sc x y)","proofString":"by apply ext_sim_trav_step_covered_le."},{"statement":"(x y z : trav_label -> Prop) (STEPS1 : (ext_sim_trav_step G sc)＊ x y) (STEPS2 : (ext_sim_trav_step G sc)＊ y z) (IHSTEPS1 : covered x ⊆₁ covered y) (IHSTEPS2 : covered y ⊆₁ covered z) : covered x ⊆₁ covered z.","conclusion":"covered x ⊆₁ covered z","hypotheses":"(x y z : trav_label -> Prop) (STEPS1 : (ext_sim_trav_step G sc)＊ x y) (STEPS2 : (ext_sim_trav_step G sc)＊ y z) (IHSTEPS1 : covered x ⊆₁ covered y) (IHSTEPS2 : covered y ⊆₁ covered z)","proofString":"etransitivity; eauto."}]}