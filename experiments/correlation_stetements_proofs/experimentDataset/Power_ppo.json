[{"statement":"Lemma wf_ctrliE WF: ctrli ≡ ⦗E⦘ ⨾ ctrli ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ctrli.\nsin_rewrite (wf_ctrlE WF).\nsin_rewrite (wf_sbE).\nbasic_solver 42.\n"},{"statement":"Lemma wf_rdwE WF: rdw ≡ ⦗E⦘ ⨾ rdw ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold rdw.\nsin_rewrite (wf_freE WF).\nsin_rewrite (wf_rfeE WF).\nbasic_solver 42.\n"},{"statement":"Lemma wf_ii0E WF: ii0 ≡ ⦗E⦘ ⨾ ii0 ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ii0.\nrewrite (wf_addrE WF) at 1.\nrewrite (wf_dataE WF) at 1.\nrewrite (wf_rdwE WF) at 1.\nrewrite (wf_rfiE WF) at 1.\nbasic_solver 42.\n"},{"statement":"Lemma wf_ci0E WF: ci0 ≡ ⦗E⦘ ⨾ ci0 ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ci0.\nrewrite (wf_ctrliE WF) at 1.\nrewrite (wf_detourE WF) at 1.\nbasic_solver 42.\n"},{"statement":"Lemma wf_cc0E WF: cc0 ≡ ⦗E⦘ ⨾ cc0 ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold cc0.\nrewrite (wf_dataE WF) at 1.\nrewrite (wf_ctrlE WF) at 1.\nrewrite (wf_addrE WF) at 1.\nrewrite (wf_sbE) at 1.\nbasic_solver 42.\n"},{"statement":"Lemma wf_helperE WF:\nforall x y,\n(ii x y -> E x /\\ E y) /\\\n(ic x y -> E x /\\ E y) /\\\n(ci x y -> E x /\\ E y) /\\ \n(cc x y -> E x /\\ E y).","proof":"generalize (dom_to_doma (wf_ii0E WF)) (dom_to_domb (wf_ii0E WF)).\ngeneralize (dom_to_doma (wf_ci0E WF)) (dom_to_domb (wf_ci0E WF)).\ngeneralize (dom_to_doma (wf_cc0E WF)) (dom_to_domb (wf_cc0E WF)).\nunfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver.\n"},{"statement":"Lemma wf_iiE WF: ii ≡ ⦗E⦘ ⨾ ii ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply wf_helperE in H; desf.\n"},{"statement":"Lemma wf_icE WF: ic ≡ ⦗E⦘ ⨾ ic ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply wf_helperE in H; desf.\n"},{"statement":"Lemma wf_ciE WF: ci ≡ ⦗E⦘ ⨾ ci ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply wf_helperE in H; desf.\n"},{"statement":"Lemma wf_ccE WF: cc ≡ ⦗E⦘ ⨾ cc ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply wf_helperE in H; desf.\n"},{"statement":"Lemma wf_ppoE WF: ppo ≡ ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ppo.\nrewrite (wf_iiE WF) at 1.\nrewrite (wf_icE WF) at 1.\nbasic_solver 42.\n"},{"statement":"Lemma wf_ctrliD : ctrli ⊆ ⦗R⦘ ⨾ ctrli.","proof":"unfold ctrli; basic_solver 12.\n"},{"statement":"Lemma wf_rdwD WF : rdw ≡ ⦗R⦘ ⨾ rdw ⨾ ⦗R⦘.","proof":"split; [|basic_solver].\nunfold rdw.\nsin_rewrite (wf_freD WF).\nsin_rewrite (wf_rfeD WF).\nbasic_solver 42.\n"},{"statement":"Lemma wf_ppoD WF: ppo ≡ ⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfold ppo.\ntype_solver 42.\n"},{"statement":"Lemma wf_ii0D WF: ii0 ≡ ⦗RW⦘ ⨾ ii0 ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfold ii0.\nrewrite (wf_addrD WF) at 1.\nrewrite (wf_dataD WF) at 1.\nrewrite (wf_rdwD WF) at 1.\nrewrite (wf_rfiD WF) at 1.\ntype_solver 42.\n"},{"statement":"Lemma wf_ci0D WF: ci0 ≡ ⦗RW⦘ ⨾ ci0 ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfold ci0.\nrewrite wf_ctrliD at 1.\nrewrite (wf_detourD WF) at 1.\nbasic_solver 42.\n"},{"statement":"Lemma wf_cc0D WF: cc0 ≡ ⦗RW⦘ ⨾ cc0 ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfold cc0.\nrewrite (wf_dataD WF) at 1.\nrewrite (wf_ctrlD WF) at 1.\nrewrite (wf_addrD WF) at 1.\nbasic_solver 42.\n"},{"statement":"Lemma wf_helperD WF:\nforall x y,\n(ii x y -> RW x /\\ RW y) /\\\n(ic x y -> RW x /\\ RW y) /\\\n(ci x y -> RW x /\\ RW y) /\\ \n(cc x y -> RW x /\\ RW y).","proof":"generalize (dom_to_doma (wf_ii0D WF)) (dom_to_domb (wf_ii0D WF)).\ngeneralize (dom_to_doma (wf_ci0D WF)) (dom_to_domb (wf_ci0D WF)).\ngeneralize (dom_to_doma (wf_cc0D WF)) (dom_to_domb (wf_cc0D WF)).\nunfolder; intros A1 A2 A3 A4 A5 A6.\napply ppo_comp_ind; basic_solver.\n"},{"statement":"Lemma wf_iiD WF: ii ≡ ⦗RW⦘ ⨾ ii ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto.\n"},{"statement":"Lemma wf_icD WF: ic ≡ ⦗RW⦘ ⨾ ic ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto.\n"},{"statement":"Lemma wf_ciD WF: ci ≡ ⦗RW⦘ ⨾ ci ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto.\n"},{"statement":"Lemma wf_ccD WF: cc ≡ ⦗RW⦘ ⨾ cc ⨾ ⦗RW⦘.","proof":"split; [|basic_solver].\nunfolder; ins; splits; try done; eapply (wf_helperD WF) in H; desc; eauto.\n"},{"statement":"Lemma ctrli_in_sb WF : ctrli ⊆ sb.","proof":"unfold ctrli.\nrewrite (ctrl_in_sb WF).\ngeneralize (@sb_trans G); basic_solver.\n"},{"statement":"Lemma ctrli_sb : ctrli ⨾ sb ⊆ ctrli.","proof":"unfold ctrli.\ngeneralize (@sb_trans G); basic_solver 12.\n"},{"statement":"Lemma ctrli_in_ctrl WF : ctrli ⊆ ctrl.","proof":"unfold ctrli.\ngeneralize (ctrl_sb WF); basic_solver.\n"},{"statement":"Lemma ii0_in_ii : ii0 ⊆ ii.","proof":"vauto.\n"},{"statement":"Lemma ci0_in_ci : ci0 ⊆ ci.","proof":"vauto.\n"},{"statement":"Lemma cc0_in_cc : cc0 ⊆ cc.","proof":"vauto.\n"},{"statement":"Lemma ci_in_ii : ci ⊆ ii.","proof":"vauto.\n"},{"statement":"Lemma ci_in_ic : ci ⊆ ic.","proof":"vauto.\n"},{"statement":"Lemma ii_in_ic : ii ⊆ ic.","proof":"vauto.\n"},{"statement":"Lemma ci_in_cc : ci ⊆ cc.","proof":"vauto.\n"},{"statement":"Lemma cc_in_ic : cc ⊆ ic.","proof":"vauto.\n"},{"statement":"Lemma ic_ci_in_ii : ic ⨾ ci ⊆ ii.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma ii_ii_in_ii : ii ⨾ ii ⊆ ii.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma ic_cc_in_ic : ic ⨾ cc ⊆ ic.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma ii_ic_in_ic : ii ⨾ ic ⊆ ic.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma ci_ii_in_ci : ci ⨾ ii ⊆ ci.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma cc_ci_in_ci : cc ⨾ ci ⊆ ci.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma ci_ic_in_cc : ci ⨾ ic ⊆ cc.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma cc_cc_in_cc : cc ⨾ cc ⊆ cc.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma ii_cc_in_ic : ii ⨾ cc ⊆ ic.","proof":"unfolder; ins; desf; vauto.\n"},{"statement":"Lemma ii0_in_sb WF: ii0 ⊆ sb.","proof":"unfold ii0, rdw; ie_unfolder.\nrewrite addr_in_sb, data_in_sb; try done.\nbasic_solver 42.\n"},{"statement":"Lemma ci0_in_sb WF: ci0 ⊆ sb.","proof":"unfold ci0, Execution.detour.\nrewrite ctrli_in_sb; try done.\nbasic_solver 42.\n"},{"statement":"Lemma cc0_in_sb WF: cc0 ⊆ sb.","proof":"unfold cc0.\nrewrite addr_in_sb, data_in_sb, ctrl_in_sb; try done.\ngeneralize (@sb_trans G).\nbasic_solver 42.\n"},{"statement":"Lemma in_sb_helper WF:\nforall x y,\n(ii x y -> sb x y) /\\\n(ic x y -> sb x y) /\\\n(ci x y -> sb x y) /\\ \n(cc x y -> sb x y).","proof":"generalize (ii0_in_sb WF) (ci0_in_sb WF) (cc0_in_sb WF).\ngeneralize (@sb_trans G).\nunfolder; intros A A1 A2 A3.\napply ppo_comp_ind; basic_solver.\n"},{"statement":"Lemma ii_in_sb WF: ii ⊆ sb.","proof":"unfolder; ins; splits; try done; eapply in_sb_helper in H; desf.\n"},{"statement":"Lemma ic_in_sb WF: ic ⊆ sb.","proof":"unfolder; ins; splits; try done; eapply in_sb_helper in H; desf.\n"},{"statement":"Lemma ci_in_sb WF: ci ⊆ sb.","proof":"unfolder; ins; splits; try done; eapply in_sb_helper in H; desf.\n"},{"statement":"Lemma cc_in_sb WF: cc ⊆ sb.","proof":"unfolder; ins; splits; try done; eapply in_sb_helper in H; desf.\n"},{"statement":"Lemma ppo_in_sb WF : ppo ⊆ sb.","proof":"unfold ppo.\nrewrite ii_in_sb, ic_in_sb; try done.\nbasic_solver.\n"},{"statement":"Lemma rdw_in_ppo WF : rdw ⊆ ppo.","proof":"unfold ppo.\nrewrite (wf_rdwD WF).\nrewrite <- ii0_in_ii.\nunfold ii0; basic_solver 42.\n"},{"statement":"Lemma rfi_in_ii : rfi ⊆ ii.","proof":"rewrite <- ii0_in_ii.\nunfold ii0; basic_solver 42.\n"},{"statement":"Lemma detour_in_ci : detour ⊆ ci.","proof":"rewrite <- ci0_in_ci.\nunfold ci0; basic_solver 42.\n"},{"statement":"Lemma detour_in_ii : detour ⊆ ii.","proof":"by rewrite <- ci_in_ii, detour_in_ci.\n"},{"statement":"Lemma data_in_ii : data ⊆ ii.","proof":"rewrite <- ii0_in_ii.\nunfold ii0; basic_solver 42.\n"},{"statement":"Lemma addr_in_ii : addr ⊆ ii.","proof":"rewrite <- ii0_in_ii.\nunfold ii0; basic_solver 42.\n"},{"statement":"Lemma ctrl_in_cc : ctrl ⨾ ⦗RW⦘ ⊆ cc.","proof":"rewrite <- cc0_in_cc.\nunfold cc0; basic_solver 42.\n"},{"statement":"Lemma addr_sb_in_cc : addr ⨾ sb^? ⨾ ⦗RW⦘ ⊆ cc.","proof":"rewrite <- cc0_in_cc.\nunfold cc0; basic_solver 42.\n"},{"statement":"Lemma deps_in_ppo WF: deps ⨾ ⦗W⦘ ⊆ ppo.","proof":"unfold Execution.deps, ppo.\nrewrite (wf_dataD WF), (wf_addrD WF), (wf_ctrlD WF).\nrewrite data_in_ii, addr_in_ii.\ngeneralize ii_in_ic cc_in_ic ctrl_in_cc.\nbasic_solver 42.\n"},{"statement":"Lemma addrsbW_in_ppo WF: addr ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","proof":"unfold ppo.\nrewrite <- cc_in_ic, <- cc0_in_cc.\nrewrite (wf_addrD WF) at 1.\nunfold cc0; basic_solver 42.\n"},{"statement":"Lemma rdw_rbi_in_rbi WF: rdw ⨾ fri ⊆ fri.","proof":"unfold rdw; ie_unfolder.\ngeneralize (rf_fr WF) (fr_co WF) (@sb_trans G).\nbasic_solver 42.\n"},{"statement":"Lemma ctrli_fri_in_ci0 WF: ctrli ⨾ fri ⊆ ci0.","proof":"rewrite (wf_friD WF).\narewrite (⦗R⦘ ⨾ fri ⊆ sb).\nby ie_unfolder; basic_solver.\nsin_rewrite ctrli_sb.\nunfold ci0; type_solver.\n"},{"statement":"Lemma ctrli_fri_in_cc0 WF: ctrli ⨾ fri ⊆ cc0.","proof":"rewrite (wf_friD WF).\narewrite (⦗R⦘ ⨾ fri ⊆ sb).\nby ie_unfolder; basic_solver.\nsin_rewrite ctrli_sb.\nrewrite (ctrli_in_ctrl WF).\nunfold cc0; basic_solver 12.\n"},{"statement":"Lemma R_ci0_W_in_ppo : ⦗R⦘ ⨾ ci0 ⨾ ⦗W⦘ ⊆ ppo.","proof":"unfold ppo.\nrewrite <- ci_in_ic, <- ci0_in_ci.\nbasic_solver.\n"},{"statement":"Lemma L_in_union : L ⊆ ii ∪ ic ∪ ci ∪ cc.","proof":"red; ins.\napply L_rec with (x:=x)   (P:=fun y => (ii ∪ ic ∪ ci ∪ cc) x y) (P0:=fun y => (ii ∪ ci) x y);  auto; ins; try vauto; try (by unfolder in *; desf; (right + left); vauto).\n- left; left; right; unfolder in *; desf; vauto.\nassert (ci ⊆ ic) by (unfolder; vauto).\napply H3 in H1; vauto.\n"},{"statement":"Lemma seq_alt A (r r' r'' : relation A) :\n  (forall x y, r' x y -> forall z, r z x -> r'' z y) <->\n  r ⨾ r' ⊆ r''.","proof":"split.\n- ins; red; ins; unfold seq in H0; desf; eapply H; eauto; edone.\n- unfolder; ins; apply H; eexists; splits; eauto.\n"},{"statement":"Lemma basic_to_transitional : \n  (Li^? ⨾ ii ⊆ Li) /\\\n  (Li^? ⨾ ic ⊆ L) /\\\n  (L^? ⨾ ci ⊆ Li) /\\\n  (L^? ⨾ cc ⊆ L).","proof":"rewrite <- !seq_alt.\ncut (forall x y,     (ii x y -> forall z, Li^? z x -> Li z y) /\\     (ic x y -> forall z, Li^? z x -> L z y) /\\    (ci x y -> forall z, L^? z x -> Li z y) /\\    (cc x y -> forall z, L^? z x -> L z y)).\n{\nins; splits; ins; desf;    specialize (H x y); desf; eauto.\n}\napply ppo_comp_ind with   (*ii*) (P:=fun x y => forall z, (Li^?) z x -> Li z y)  (*ic*) (P0:=fun x y => forall z, (Li^?) z x -> L z y)  (*ci*) (P1:=fun x y => forall z, (L^?) z x -> Li z y)  (*cc*) (P2:=fun x y => forall z, (L^?) z x -> L z y);  rewrite ?seq_alt;  (* base cases *)  try (by unfolder; ins; desf; vauto);  ins;  (* single derivations *)  try (by apply H2; right; apply H0);  (* double derivations *)  try (by apply H0; red in H1; desf; (left + right); vauto);  by apply L_Li, H0.\n"},{"statement":"Lemma L_Li_in_ppo_components : Li ⊆ ii ∪ ci /\\ L ⊆ ii ∪ ic ∪ ci ∪ cc.","proof":"unfolder.\nassert (forall x y,    (L x y -> ii x y \\/ ic x y \\/ ci x y \\/ cc x y) /\\     (Li x y -> ii x y \\/ ci x y)  ).\n{\nins; apply L_comb with      (P := fun y => ii x y \\/ ic x y \\/ ci x y \\/ cc x y)      (P0 := fun y => ii x y \\/ ci x y);    auto; ins.\nall: try by vauto.\nall: try by (desf; by (left + right); vauto).\nall: try by (desf; by repeat right; vauto).\ndesf; by (right; left + (repeat right)); vauto.\n}\nsplit; ins; specialize (H x y); desf; intuition.\n"},{"statement":"Lemma Li_is_ii : Li ≡ ii.","proof":"split.\n- arewrite (Li ⊆ ii ∪ ci) by apply L_Li_in_ppo_components.\nrewrite ci_in_ii.\nbasic_solver.\n- generalize basic_to_transitional.\nbasic_solver 12.\n"},{"statement":"Lemma L_is_ic : L ≡ ic.","proof":"split.\n- arewrite (L ⊆ ii ∪ ic ∪ ci ∪ cc) by apply L_Li_in_ppo_components.\nrewrite ii_in_ic, ci_in_ic, cc_in_ic; basic_solver.\n- red; ins.\nassert (Li^? ⨾ ic ⊆ L) by apply basic_to_transitional.\napply H0; eexists; splits; eauto.\n"},{"statement":"Lemma wf_LD WF: L ⊆ ⦗RW⦘ ⨾ L ⨾ ⦗RW⦘.","proof":"by rewrite L_is_ic; apply wf_icD.\n"},{"statement":"Lemma wf_LiD WF: Li ⊆ ⦗RW⦘ ⨾ Li ⨾ ⦗RW⦘.","proof":"by rewrite Li_is_ii; apply wf_iiD.\n"},{"statement":"Lemma L_in_ppo : ⦗R⦘ ⨾ L ⨾ ⦗W⦘ ⊆ ppo.","proof":"rewrite L_is_ic; unfold ppo; basic_solver.\n"},{"statement":"Lemma Li_in_ppo WF: ⦗R⦘ ⨾ Li ⊆ ppo.","proof":"rewrite Li_is_ii; unfold ppo.\nrewrite (wf_iiD WF) at 1.\ngeneralize ii_in_ic.\nbasic_solver 42.\n"},{"statement":"Lemma Li_in_L : Li ⊆ L.","proof":"vauto.\n"},{"statement":"Lemma ppo_in_L WF: ppo ⊆ ⦗R⦘ ⨾ L.","proof":"unfold ppo.\nrewrite L_is_ic, ii_in_ic.\nrewrite (wf_icD WF) at 3.\nbasic_solver.\n"},{"statement":"Lemma ppo_R_in_R_Li WF: ppo ⨾ ⦗R⦘ ⊆ ⦗R⦘ ⨾ Li.","proof":"rewrite (wf_ppoD WF), Li_is_ii.\nunfold ppo; type_solver 12.\n"},{"statement":"Lemma ppo_W_in_R_L WF: ppo ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ L.","proof":"rewrite (wf_ppoD WF), L_is_ic.\nunfold ppo; type_solver 12.\n"},{"statement":"Lemma deps_in_cc: deps ⨾ ⦗RW⦘ ⊆ cc.","proof":"rewrite <- cc0_in_cc.\nunfold Execution.deps, cc0; basic_solver 42.\n"},{"statement":"Lemma deps_in_ic : deps ⨾ ⦗RW⦘ ⊆ ic.","proof":"rewrite <- cc_in_ic.\nby apply deps_in_cc.\n"},{"statement":"Lemma ctrli_RW_in_ic: ctrli ⨾ ⦗RW⦘ ⊆ ic.","proof":"rewrite <- ci_in_ic, <- ci0_in_ci; vauto.\n"},{"statement":"Lemma ctrli_R_in_ii: ctrli ⨾ ⦗RW⦘ ⊆ ii.","proof":"rewrite <- ci_in_ii, <- ci0_in_ci; vauto.\n"},{"statement":"Lemma ctrl_ctrli_in_ii WF: ctrl ⨾ ctrli ⨾ ⦗RW⦘ ⊆ ii.","proof":"rewrite wf_ctrliD.\nunfolder; ins; desc.\neapply CI, CC_CI.\napply CC0; unfold cc0; basic_solver 12.\napply CI0; unfold ci0; basic_solver 12.\n"},{"statement":"Lemma ctrl_ctrli_RW_in_ppo WF: ctrl ⨾ ctrli ⨾ ⦗RW⦘ ⊆ ppo.","proof":"rewrite (wf_ctrlD WF).\narewrite (⦗RW⦘ ⊆ ⦗RW⦘ ⨾ ⦗RW⦘) by basic_solver.\nsin_rewrite (ctrl_ctrli_in_ii WF).\nunfold ppo.\ngeneralize ii_in_ic.\nbasic_solver 12.\n"},{"statement":"Lemma ctrli_RW_in_ppo WF : ctrli ⨾ ⦗RW⦘ ⊆ ppo.","proof":"unfold ppo.\nrewrite wf_ctrliD.\ngeneralize ctrli_RW_in_ic, ctrli_R_in_ii.\nbasic_solver 12.\n"},{"statement":"Lemma ppo_trans : transitive ppo.","proof":"unfold transitive, ppo; unfolder.\nins; desf; try type_solver.\nby left; exists z2; split; auto; exists z; vauto.\nby right; exists z2; split; auto; exists z; splits; vauto.\n"},{"statement":"Lemma ct_ppo_ctrli_rw_in_ppo WF : (ppo ∪ ctrli)⁺ ⨾ ⦗RW⦘ ⊆ ppo.","proof":"apply ct_ind_left with (P:= fun r => r ⨾ ⦗RW⦘).\n- by eauto with hahn.\n- generalize ctrli_RW_in_ppo; basic_solver.\n- ins; rewrite !seqA, H.\nrewrite (dom_l (wf_ppoD WF)) at 2.\nrelsf.\narewrite (ctrli ⨾ ⦗R⦘ ⊆ ppo).\nby generalize ctrli_RW_in_ppo; basic_solver.\ngeneralize ppo_trans; basic_solver.\n"},{"statement":"Lemma deps_R_in_ppo WF: \n  (deps ∪ addr ⨾ sb) ⨾ ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","proof":"arewrite ((deps ∪ addr ⨾ sb) ⨾ ⦗R⦘ ⊆ ctrl ∪ addr ⨾ sb^?).\nby unfold Execution.deps; rewrite (wf_dataD WF); type_solver 42.\nrelsf.\nsin_rewrite (ctrl_sb WF).\narewrite (ctrl ⊆ deps).\ngeneralize (addrsbW_in_ppo WF) (deps_in_ppo WF).\ngeneralize (@sb_trans G).\nbasic_solver 42.\n"},{"statement":"Lemma ci0_fri WF:  ci0 ⨾ fri ⊆ ppo ∪ co.","proof":"unfold ci0.\nrewrite wf_ctrliD at 1.\nrewrite (wf_friD WF) at 1.\ngeneralize (ctrli_fri_in_ci0 WF), (R_ci0_W_in_ppo).\ngeneralize (detour_fr_in_co WF).\nie_unfolder.\nbasic_solver 42.\n"},{"statement":"Lemma L_ctrli_fri WF:  ⦗R⦘ ⨾  L ⨾ ctrli ⨾ fri ⊆ ppo.","proof":"rewrite (dom_r (wf_friD WF)).\nrewrite <- L_in_ppo.\nrewrite (ctrli_in_ctrl WF).\narewrite (fri ⊆ sb).\nsin_rewrite (ctrl_sb WF).\nunfolder; splits; auto; desf.\napply L_L_cc with z; auto.\nunfold cc0; basic_solver 20.\n"},{"statement":"Lemma ppo_fri WF : ppo ⨾ fri ⊆ ppo ∪ ppo ⨾ co ∪ co ∪ fri.","proof":"rewrite (wf_friD WF) at 1.\nrels.\nsin_rewrite ppo_R_in_R_Li; auto.\nred; ins.\nunfolder in H; desf.\nunfolder in H; desf; subst.\nrename y into c, x into a, z into b.\napply Li_rec with (P:=L a) (P0:=(fun b => fri b c -> (ppo ∪ ppo ⨾ co ∪ co ∪ fri) a c)) in H2; eauto; ins; vauto.\n- cut ((ppo ∪ co) a c).\nby basic_solver.\ngeneralize (ci0_fri WF).\nbasic_solver.\n- red in H3; unfolder in H3; desf.\n+ generalize (addrsbW_in_ppo WF).\nie_unfolder.\nunfolder in *.\nbasic_solver 12.\n+ exfalso.\napply (wf_dataD WF) in H3.\napply (wf_friD WF) in H4.\nunfolder in *; type_solver.\n+ generalize (rdw_rbi_in_rbi WF); basic_solver 12.\n+ generalize (rf_fr WF).\nie_unfolder.\nunfolder in *;  basic_solver 12.\n- unfold ci0 in *; unfolder in *; desf.\n+ generalize (L_ctrli_fri WF); basic_solver 12.\n+ generalize (L_ctrli_fri WF); basic_solver 12.\n+ apply (wf_detourD WF) in H5.\ngeneralize (detour_fr_in_co WF) L_in_ppo.\nie_unfolder.\nunfolder in *; basic_solver 42.\n- unfold ii0 in *; unfolder in *; desf.\n+ hahn_rewrite (wf_friD WF) in H6; unfolder in H6; desc.\ndo 3 left.\napply L_in_ppo.\nunfolder.\nsplits; auto.\napply L_L_cc with z; vauto.\nunfold cc0.\nie_unfolder.\nunfolder in *; basic_solver 42.\n+ exfalso.\napply (wf_dataD WF) in H5.\napply (wf_friD WF) in H6.\nunfolder in *; type_solver.\n+ generalize (rdw_rbi_in_rbi WF).\nbasic_solver 12.\n+ do 2 left; right.\neexists.\nsplit.\n* generalize L_in_ppo, L_Li.\napply (wf_rfiD WF) in H5.\nunfolder in *; basic_solver 12.\n* generalize (rf_fr WF).\nie_unfolder.\nunfolder in *; basic_solver.\n"},{"statement":"Lemma deps_rfi WF : \n  (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi)⁺ ⊆ ctrl ∪ addr ⨾ sb^? ∪ ii ⨾ (ctrl ∪ addr ⨾ sb^?)^?.","proof":"eapply ct_ind_left with (P:= fun x : _ => x).\nby eauto with hahn.\nby rewrite <- ii0_in_ii; unfold ii0; basic_solver 12.\nintros k H; desf; rewrite H; clear H.\nrewrite rfi_in_ii, data_in_ii at 1.\narewrite (ii ∪ ctrl ∪ addr ⨾ sb^? ∪ ii ⊆ ii ∪ ctrl ∪ addr ⨾ sb^?).\nrewrite !seq_union_l; unionL.\n- by generalize ii_ii_in_ii; basic_solver 12.\n- rewrite (ctrl_in_sb WF) at 2 3.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 1 2.\ngeneralize (ctrl_sb WF) (@sb_trans G); basic_solver 12.\n- rewrite (ctrl_in_sb WF) at 1 2.\nrewrite (ii_in_sb WF) at 1.\nrewrite (addr_in_sb WF) at 2 3.\ngeneralize (@sb_trans G); basic_solver 12.\n"},{"statement":"Lemma r_deps_rfi WF: ⦗R⦘ ⨾ (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi)⁺ ⨾ ⦗W⦘ ⊆ ppo.","proof":"rewrite (deps_rfi WF).\nunfold ppo.\nrewrite (wf_ctrlD WF) at 1.\nrewrite (dom_l (wf_iiD WF)) at 1.\ngeneralize addr_sb_in_cc, ctrl_in_cc, ii_in_ic, ii_cc_in_ic, cc_in_ic; basic_solver 22.\n"},{"statement":"Lemma ppo_detour_ppo WF : ppo ⨾  detour ⨾  ppo^?  ⊆ ppo.","proof":"rewrite (wf_detourD WF).\nunfold ppo.\nrewrite detour_in_ci.\nrelsf; rewrite !seqA.\narewrite_false !(⦗R⦘ ⨾ ⦗W⦘); [by type_solver|].\ngeneralize ic_ci_in_ii, ii_ii_in_ii, ii_ic_in_ic; basic_solver 22.\n"},{"statement":"Lemma ppo_rt_detour_ppo WF : ppo ⨾ (detour ⨾ ppo^?)⁺ ⊆ ppo.","proof":"eapply ct_ind_left.\nby eauto with hahn.\napply (ppo_detour_ppo WF).\nintros k H; desf; rewrite !seqA.\nby sin_rewrite (ppo_detour_ppo WF).\n"},{"statement":"Lemma r_ct_ppo_detour_ppo WF: ⦗R⦘ ⨾ (ppo ∪ ctrli ∪ detour)⁺ ⨾ ⦗RW⦘ ⊆ ppo.","proof":"rewrite path_union.\nrewrite (dom_l (wf_detourD WF)) at 1.\nrelsf.\nrewrite (ct_ppo_ctrli_rw_in_ppo WF).\narewrite (⦗W⦘ ⊆ ⦗RW⦘).\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\narewrite !((ppo ∪ ctrli)＊ ⨾ ⦗RW⦘ ⊆ ppo^?).\nby generalize (ct_ppo_ctrli_rw_in_ppo WF); basic_solver 12.\napply inclusion_union_l.\nby basic_solver.\nrewrite ct_seq_swap, ct_begin.\nrewrite (dom_l (wf_detourD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ppo^? ⨾ ⦗W⦘ ⊆ ppo) by type_solver.\narewrite (detour ⨾ ppo^? ⨾ (detour ⨾ ppo^?)＊ ⊆ (detour ⨾ ppo^?)⁺).\nby rewrite <- seqA, <- ct_begin.\napply (ppo_rt_detour_ppo WF).\n"}]