[{"statement":"Lemma global_sc_helper\n  (HSC: ⦗RW∩₁Sc⦘ ⨾ (sb' ∪ sb' ⨾ hb ⨾ sb') ⨾ ⦗RW∩₁Sc⦘ ⊆ hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb) :\n  ⦗F∩₁Sc⦘ ⨾ hb ⨾ eco^? ⨾\n    (⦗RW∩₁Sc⦘ ⨾ (sb' ∪ sb' ⨾ hb ⨾ sb' ∪ eco) ⨾ ⦗RW∩₁Sc⦘)＊ ⨾\n      eco^? ⨾ hb ⨾ ⦗F∩₁Sc⦘ ⊆ psc_f⁺.","proof":"assert (transitive eco) as TECO by (by apply eco_trans).\nassert (transitive hb ) as THB  by (by apply hb_trans).\nassert (⦗F ∩₁ Sc⦘ ⨾ hb ⨾ eco^? ⨾ hb ⨾ ⦗F ∩₁ Sc⦘ ⊆ psc_f) as HH.\n{\nunfold imm.psc_f.\narewrite (hb ⨾ eco^? ⨾ hb ⊆ hb ⨾ (eco ⨾ hb)^?).\n2: done.\ngeneralize THB.\nbasic_solver 20.\n}\neapply rt_ind_left with      (P:= fun __ => ⦗F∩₁Sc⦘ ⨾ hb ⨾ eco ^? ⨾ __ ⨾ eco ^? ⨾ hb ⨾ ⦗F∩₁Sc⦘).\n{\neauto with hahn.\n}\n{\nrewrite <- ct_step, seq_id_l.\narewrite (eco^? ⨾ eco^? ⊆ eco^?).\n2: by apply HH.\ngeneralize TECO.\nbasic_solver.\n}\nintros k IH.\narewrite (⦗RW∩₁Sc⦘ ⨾ (sb' ∪ sb' ⨾ hb ⨾ sb' ∪ eco) ⨾ ⦗RW∩₁Sc⦘ ⊆            ⦗RW∩₁Sc⦘ ⨾ (sb' ∪ sb' ⨾ hb ⨾ sb') ⨾ ⦗RW∩₁Sc⦘ ∪ eco)    by basic_solver 42.\nrewrite HSC.\narewrite (⦗F∩₁Sc⦘ ⨾ hb ⨾ eco ^? ⨾ (hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb ∪ eco) ⊆             ⦗F∩₁Sc⦘ ⨾ hb ⨾ eco ^? ⨾ hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb ⨾ eco^? ∪              ⦗F∩₁Sc⦘ ⨾ hb ⨾ eco^?)    by basic_solver 42.\nrelsf.\nrewrite !seqA.\nrewrite <- seq_eqvK at 2; rewrite !seqA.\nsin_rewrite IH.\napply inclusion_union_l; try done.\nsin_rewrite HH.\narewrite (psc_f ⊆ psc_f⁺).\napply transitiveI.\napply transitive_ct.\n"},{"statement":"Lemma RW_scb_RW :\n  ⦗RW∩₁Sc⦘ ⨾ scb ⨾ ⦗RW∩₁Sc⦘ ⊆\n  ⦗RW∩₁Sc⦘ ⨾\n    (sb ∪ sb_neq_loc ⨾ hb ⨾ sb_neq_loc ∪ ⦗RW⦘ ⨾ (hb∩same_loc) ⨾ ⦗RW⦘ ∪ co ∪ fr)\n      ⨾ ⦗RW∩₁Sc⦘.","proof":"unfold imm.scb; basic_solver 42.\n"},{"statement":"Lemma psc_base_rw_rw :\n  ⦗RW∩₁Sc⦘ ⨾ psc_base ⨾ ⦗RW∩₁Sc⦘ ⊆ ⦗RW∩₁Sc⦘ ⨾ scb ⨾ ⦗RW∩₁Sc⦘.","proof":"unfold imm.psc, imm.psc_base.\nrewrite !seqA.\nrewrite !crE.\nrewrite !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\narewrite_false !(⦗RW ∩₁ Sc⦘ ⨾ ⦗Sc⦘ ⨾ ⦗F⦘).\n{\ntype_solver.\n}\narewrite_false !(⦗F⦘ ⨾ ⦗Sc⦘ ⨾ ⦗RW ∩₁ Sc⦘).\n{\ntype_solver.\n}\nbasic_solver.\n"},{"statement":"Lemma scb_in_hb_eco : scb ⊆ hb ∪ eco.","proof":"unfold imm.scb.\nrewrite sb_in_hb, co_in_eco, fr_in_eco.\ngeneralize (@hb_trans G).\nbasic_solver.\n"},{"statement":"Lemma psc_base_f :\n  ⦗F∩₁Sc⦘ ⨾ psc_base ⨾ ⦗F∩₁Sc⦘ ⊆ ar⁺.","proof":"unfold imm.psc, imm.psc_base, imm.scb.\nrewrite sb_in_hb, co_in_eco, fr_in_eco.\narewrite (hb ∪ (hb \\ same_loc) ⨾ hb ⨾ (hb \\ same_loc) ∪ hb ∩ same_loc ⊆ hb).\n{\ngeneralize (@hb_trans G).\nbasic_solver.\n}\narewrite (hb ∪ eco ∪ eco ⊆ hb ∪ eco).\nrewrite !crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\narewrite_false !(⦗F ∩₁ Sc⦘ ⨾ ⦗Sc⦘ ⨾ eco).\n{\nrewrite (wf_ecoD WF).\ntype_solver.\n}\narewrite_false !(eco ⨾ ⦗Sc⦘ ⨾ ⦗F ∩₁ Sc⦘).\n{\nrewrite (wf_ecoD WF).\ntype_solver.\n}\nrewrite !seq_false_l, !seq_false_r, !union_false_l, !union_false_r.\nrepeat arewrite (hb ⨾ hb ⊆ hb).\nrepeat arewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗Sc⦘ ⊆ ⦗F ∩₁ Sc⦘).\nrepeat arewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗F⦘ ⊆ ⦗F ∩₁ Sc⦘).\nrepeat arewrite (⦗Sc⦘ ⨾ ⦗F ∩₁ Sc⦘ ⊆ ⦗F ∩₁ Sc⦘).\nrepeat arewrite (⦗F⦘ ⨾ ⦗F ∩₁ Sc⦘ ⊆ ⦗F ∩₁ Sc⦘).\nrewrite f_sc_hb_f_sc_in_ar; auto.\nunionL; eauto with hahn.\n"},{"statement":"Lemma psc_base_rw_f :\n  ⦗RW∩₁Sc⦘ ⨾ psc_base ⨾ ⦗F∩₁Sc⦘ ⊆ ⦗RW∩₁Sc⦘ ⨾ eco^? ⨾ hb ⨾ (⦗F∩₁Sc⦘).","proof":"unfold imm.psc, imm.psc_base.\nrewrite scb_in_hb_eco; auto.\nrewrite !seqA.\narewrite (⦗RW ∩₁ Sc⦘ ⨾ ⦗Sc⦘ ⨾ (⦗F⦘ ⨾ hb)^? ⊆ ⦗RW ∩₁ Sc⦘).\n{\nrewrite crE, !seq_union_r.\ntype_solver.\n}\nrewrite crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\narewrite_false !(eco ⨾ ⦗Sc⦘ ⨾ ⦗F ∩₁ Sc⦘).\n{\nrewrite (wf_ecoD WF).\ntype_solver.\n}\ngeneralize (@hb_trans G).\nbasic_solver 42.\n"},{"statement":"Lemma psc_base_f_rw :\n  ⦗F∩₁Sc⦘ ⨾ psc_base ⨾ ⦗RW∩₁Sc⦘ ⊆ ⦗F∩₁Sc⦘ ⨾ hb ⨾ eco^? ⨾ (⦗RW∩₁Sc⦘).","proof":"unfold imm.psc, imm.psc_base.\nrewrite scb_in_hb_eco; auto.\nrewrite !seqA.\narewrite ((hb ⨾ ⦗F⦘)^? ⨾ ⦗Sc⦘ ⨾ ⦗RW ∩₁ Sc⦘ ⊆ ⦗RW ∩₁ Sc⦘).\n{\nrewrite crE, !seq_union_l.\ntype_solver.\n}\nrewrite crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\narewrite_false !(⦗F ∩₁ Sc⦘ ⨾ ⦗Sc⦘ ⨾ eco).\n{\nrewrite (wf_ecoD WF).\ntype_solver.\n}\ngeneralize (@hb_trans G).\nbasic_solver 42.\n"},{"statement":"Lemma psc_base_f_f : (⦗F∩₁Sc⦘ ⨾ psc_base ⨾ ⦗F∩₁Sc⦘) ⊆ psc_f.","proof":"unfold imm.psc_f, imm.psc_base.\nrewrite scb_in_hb_eco.\nrewrite !crE.\nrewrite !seq_union_l, !seq_union_r, !seq_id_l.\nrewrite !seqA.\nrepeat arewrite (hb ⨾ hb ⊆ hb).\nrewrite !seq_union_l, !seq_union_r, !seqA.\nrepeat arewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗Sc⦘ ⊆ ⦗F ∩₁ Sc⦘).\nrepeat arewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗F⦘ ⊆ ⦗F ∩₁ Sc⦘).\nrepeat arewrite (⦗Sc⦘ ⨾ ⦗F ∩₁ Sc⦘ ⊆ ⦗F ∩₁ Sc⦘).\nrepeat arewrite (⦗F⦘ ⨾ ⦗F ∩₁ Sc⦘ ⊆ ⦗F ∩₁ Sc⦘).\nassert (⦗F ∩₁ Sc⦘ ⨾ eco ⊆ ∅₂) as AA.\n{\nrewrite (wf_ecoD WF).\ntype_solver 40.\n}\nrepeat sin_rewrite AA.\nassert (eco ⨾ ⦗F ∩₁ Sc⦘ ⊆ ∅₂) as BB.\n{\nrewrite (wf_ecoD WF).\ntype_solver 40.\n}\nrepeat sin_rewrite BB.\nunionL; try done.\nall: basic_solver.\n"},{"statement":"Lemma global_scb_rw_acyc\n      (HSC: ⦗RW∩₁Sc⦘ ⨾ (sb' ∪ sb' ⨾ hb ⨾ sb') ⨾ ⦗RW∩₁Sc⦘ ⊆ hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb)\n      (ACYC: acyclic psc) :\n  acyclic (⦗RW ∩₁ Sc⦘ ⨾ scb ⨾ ⦗RW ∩₁ Sc⦘).","proof":"rewrite RW_scb_RW.\nrewrite hb_loc_in_eco; auto.\narewrite (sb_neq_loc ⊆ sb').\n{\ngeneralize (wf_rmwl WF).\nbasic_solver.\n}\narewrite (sb ⊆ sb' ∪ rmw) at 1.\n{\nunfold inclusion, minus_rel, union; ins; tauto.\n}\nrewrite rmw_in_fr at 2; auto.\nrewrite co_in_eco; auto.\nrewrite fr_in_eco; auto.\nrewrite <- !unionA.\narewrite (sb' ∪ eco ∪ sb' ⨾ hb ⨾ sb' ∪ eco ∪ sb' ∪ sb' ⨾ hb ⨾ sb'                ∪ eco ∪ eco ⊆            sb' ∪ sb' ⨾ hb ⨾ sb' ∪ eco) by basic_solver 42.\nrewrite !seq_union_l, !seq_union_r, !seqA.\narewrite (⦗RW∩₁Sc⦘ ⨾ sb' ⨾ ⦗RW∩₁Sc⦘ ⊆ hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb).\n{\nrewrite <- HSC.\nbasic_solver 10.\n}\narewrite (⦗RW∩₁Sc⦘ ⨾ sb' ⨾ hb ⨾ sb' ⨾ ⦗RW∩₁Sc⦘ ⊆ hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb).\n{\nrewrite <- HSC.\nbasic_solver 10.\n}\nrewrite unionK.\napply acyclic_utt; splits.\n{\napply transitiveI.\narewrite_id ⦗F∩₁Sc⦘ at 1.\nrewrite seq_id_l.\ngeneralize (@hb_trans G).\nbasic_solver 10.\n}\n{\napply transitiveI.\ndo 2 (arewrite_id ⦗RW∩₁Sc⦘ at 2; rewrite seq_id_l).\ngeneralize (@eco_trans G).\nbasic_solver 10.\n}\n{\narewrite_id ⦗F∩₁Sc⦘ at 1.\nrewrite seq_id_l.\narewrite (hb ⨾ hb ⊆ hb).\nby apply hb_irr.\n}\n{\ngeneralize (eco_irr WF).\nbasic_solver 10.\n}\narewrite (⦗F∩₁Sc⦘ ⊆ ⦗F∩₁Sc⦘ ⨾ ⦗F∩₁Sc⦘) by basic_solver.\ndo 2 (apply acyclic_seqC; try rewrite !seqA).\neapply acyclic_mon with (r := psc); auto.\nunfold imm.psc.\nbasic_solver 12.\n"},{"statement":"Lemma global_sc\n      (HSC: ⦗RW∩₁Sc⦘ ⨾ (sb' ∪ sb' ⨾ hb ⨾ sb') ⨾ ⦗RW∩₁Sc⦘ ⊆ hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb)\n      (ACYC: acyclic psc_f) :\n  acyclic (psc_f ∪ psc_base).","proof":"assert (transitive eco) as TECO by (by apply eco_trans).\nassert (transitive hb ) as THB  by (by apply hb_trans).\neapply acyc_dom with (d:= RW∩₁Sc) (e:= F∩₁Sc); try edone.\n2: type_solver.\n{\narewrite (⦗RW∩₁Sc⦘ ∪ ⦗F∩₁Sc⦘ ≡ ⦗Sc⦘) by type_solver 42.\narewrite (psc_f ⊆ ⦗Sc⦘ ⨾ psc_f ⨾ ⦗Sc⦘).\n{\nunfold imm.psc_f.\nbasic_solver 10.\n}\narewrite (psc_base ⊆ ⦗Sc⦘ ⨾ psc_base ⨾ ⦗Sc⦘).\n{\nunfold imm.psc_base.\nbasic_solver 21.\n}\neauto 10 with hahn.\n}\n{\nrewrite !seq_union_l, !seq_union_r.\narewrite (⦗RW ∩₁ Sc⦘ ⨾ psc_f ⨾ ⦗RW ∩₁ Sc⦘ ⊆ ∅₂).\n{\nunfold imm.psc_f.\ntype_solver 10.\n}\nrewrite union_false_l.\nrewrite psc_base_rw_rw.\napply global_scb_rw_acyc; auto.\narewrite (psc ⊆ psc_f); auto.\nunfold imm.psc, imm.psc_f.\nbasic_solver 10.\n}\n{\nrewrite !seq_union_l, !seq_union_r.\nrewrite psc_base_f_f.\narewrite (⦗F ∩₁ Sc⦘ ⨾ psc_f ⨾ ⦗F ∩₁ Sc⦘ ∪ psc_f ⊆ psc_f); auto.\nbasic_solver.\n}\narewrite ((psc_f ∪ psc_base) ⨾ ⦗RW ∩₁ Sc⦘ ⊆ psc_base ⨾ ⦗RW ∩₁ Sc⦘).\n{\nrewrite seq_union_l.\nunionL; [|done].\nunfold imm.psc_f.\ntype_solver 40.\n}\narewrite (⦗RW ∩₁ Sc⦘ ⨾ (psc_f ∪ psc_base) ⊆ ⦗RW ∩₁ Sc⦘ ⨾ psc_base).\n{\nrewrite seq_union_r.\nunionL; [|done].\nunfold imm.psc_f.\ntype_solver 40.\n}\narewrite (⦗F ∩₁ Sc⦘ ⨾ (psc_f ∪ psc_base) ⨾ ⦗F ∩₁ Sc⦘ ⊆ psc_f).\n{\nrewrite seq_union_l, seq_union_r.\nunionL.\n{\nbasic_solver.\n}\napply psc_base_f_f.\n}\nrewrite psc_base_rw_rw.\nrewrite RW_scb_RW.\narewrite (      sb ∪ sb_neq_loc ⨾ hb ⨾ sb_neq_loc ∪ ⦗RW⦘ ⨾ (hb ∩ same_loc) ⨾ ⦗RW⦘ ∪ co ∪ fr         ⊆ sb' ∪ sb' ⨾ hb ⨾ sb' ∪ eco    ).\n{\narewrite (sb ⊆ sb' ∪ rmw).\n{\nunfold inclusion, minus_rel, union; ins; tauto.\n}\nrewrite rmw_in_fr at 2; auto.\nrewrite fr_in_eco, co_in_eco, hb_loc_in_eco; auto.\narewrite (sb_neq_loc ⊆ sb').\n{\ngeneralize (wf_rmwl WF).\nbasic_solver.\n}\nbasic_solver 10.\n}\nsin_rewrite psc_base_rw_f; auto.\nsin_rewrite psc_base_f_rw; auto.\narewrite_id ⦗RW∩₁Sc⦘ at 1.\narewrite_id ⦗RW∩₁Sc⦘ at 3.\nrels.\nrewrite <- !seqA with (r3 := psc_f ＊).\nrewrite global_sc_helper; auto.\nred; rels.\n"},{"statement":"Lemma global_sc_ar\n      (HSC: ⦗RW∩₁Sc⦘ ⨾ (sb' ∪ sb' ⨾ hb ⨾ sb') ⨾ ⦗RW∩₁Sc⦘ ⊆ hb ⨾ ⦗F∩₁Sc⦘ ⨾ hb)\n      (ACYC: acyclic ar) :\n  acyclic (psc_f ∪ psc_base).","proof":"apply global_sc; auto.\narewrite (psc_f ⊆ ar⁺); auto.\n2: {\nred.\nby rewrite ct_of_ct.\n}\nunfold imm.psc_f.\nrewrite crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\nrewrite f_sc_hb_f_sc_in_ar; auto.\neauto with hahn.\n"}]