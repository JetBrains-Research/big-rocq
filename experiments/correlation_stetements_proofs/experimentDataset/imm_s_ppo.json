[{"statement":"Lemma ppo_in_sb WF: ppo ⊆ sb.","proof":"unfold ppo.\narewrite_id ⦗R_ex⦘.\nrewrite (addr_in_sb WF), (data_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF).\narewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF) at 1.\nrewrite inclusion_seq_eqv_l, inclusion_seq_eqv_r.\nassert (sb⁺ ⊆ sb) as AA.\n{\ngeneralize (@sb_trans G).\nins.\nrelsf.\n}\netransitivity.\n2: by apply AA.\napply clos_trans_mori.\ngeneralize (@sb_trans G); ins; relsf.\n"},{"statement":"Lemma rmw_in_ppo WF : rmw ⊆ ppo.","proof":"unfold ppo; rewrite (wf_rmwD WF) at 1.\nrewrite <- ct_step.\nbasic_solver 10.\n"},{"statement":"Lemma rmw_in_ppo_loc WF : rmw ⊆ ppo ∩ same_loc.","proof":"apply inclusion_inter_r.\n{\nby apply rmw_in_ppo.\n}\napply (wf_rmwl WF).\n"},{"statement":"Lemma data_in_ppo WF : data ⊆ ppo.","proof":"unfold ppo; rewrite (wf_dataD WF) at 1.\nhahn_frame; econs; basic_solver 12.\n"},{"statement":"Lemma R_ex_sb_W_in_ppo : ⦗R_ex⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ppo.","proof":"arewrite (⦗R_ex⦘ ⊆ ⦗R⦘ ⨾ ⦗R_ex⦘).\n{\ngeneralize (@R_ex_in_R _ lab).\nbasic_solver.\n}\nunfold ppo.\nhahn_frame.\nrewrite <- ct_step.\neauto with hahn.\n"},{"statement":"Lemma wf_ppoE WF : ppo ≡ ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ppo.\nrewrite !seqA, seq_eqvC.\nhahn_frame.\nseq_rewrite seq_eqvC.\nrewrite !seqA.\nhahn_frame.\nrewrite <- inclusion_ct_seq_eqv_r, <- inclusion_ct_seq_eqv_l.\napply inclusion_t_t.\nunfold Execution.rfi.\nrewrite (wf_rfE WF), (wf_dataE WF), (wf_rmw_depE WF) at 1.\nrewrite (wf_addrE WF), (wf_ctrlE WF), (wf_rmwE WF) at 1.\nrewrite wf_sbE at 1 2 3 4.\nbasic_solver 21.\n"},{"statement":"Lemma wf_ar_intE WF : ar_int ≡ ⦗E⦘ ⨾ ar_int ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold ar_int.\nrewrite (wf_bobE WF), (wf_ppoE WF) at 1.\nrewrite (wf_detourE WF), (@wf_sbE G), (wf_rfiE WF).\nbasic_solver 42.\n"},{"statement":"Lemma wf_ppoD: ppo ≡ ⦗R⦘ ⨾ ppo ⨾ ⦗W⦘.","proof":"split; [|basic_solver].\nunfold ppo; basic_solver.\n"},{"statement":"Lemma fwbob_ppo WF: fwbob ⨾ ppo ⊆ fwbob.","proof":"rewrite wf_ppoD, (ppo_in_sb WF).\nsin_rewrite fwbob_r_sb.\nbasic_solver.\n"},{"statement":"Lemma bob_ppo WF: bob ⨾ ppo ⊆ bob.","proof":"rewrite wf_ppoD, (ppo_in_sb WF).\nsin_rewrite bob_r_sb.\nbasic_solver.\n"},{"statement":"Lemma ar_int_in_sb WF: ar_int ⊆ sb.","proof":"unfold ar_int.\nrewrite bob_in_sb.\nrewrite (ppo_in_sb WF).\narewrite (detour ⊆ sb).\narewrite (rfi ⊆ sb).\nbasic_solver 21.\n"},{"statement":"Lemma ppo_loc_in_fr WF\n      (COM : complete G)\n      (SPL : sc_per_loc G) :\n  ppo ∩ same_loc ⊆ fr.","proof":"rewrite wf_ppoD.\nrewrite (ppo_in_sb WF).\nrewrite seq_eqv_inter_ll.\nrewrite seq_eqv_inter_lr.\nrewrite r_sb_loc_w_in_fri; auto.\napply fri_in_fr.\n"},{"statement":"Lemma ppo_rfi_ppo : ppo ⨾ rfi ⨾ ppo ⊆ ppo.","proof":"unfold ppo.\nrewrite !seqA.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗R⦘ at 2.\narewrite (rfi ⊆ (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ rmw ∪ rmw_dep ⨾ sb^?∪ ⦗R_ex⦘ ⨾ sb)＊) at 2.\n{\nrewrite rtE.\nrewrite <- ct_step.\nbasic_solver 10.\n}\nrewrite inclusion_t_rt at 1.\nrelsf.\n"},{"statement":"Lemma deps_rfi_in_ppo : ⦗R⦘ ⨾ (deps ∪ rfi)⁺ ⨾ ⦗W⦘ ⊆ ppo.","proof":"unfold ppo, Execution.deps.\nhahn_frame.\napply inclusion_t_t; basic_solver 21.\n"},{"statement":"Lemma bob_in_ar_int : bob ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma ppo_in_ar_int : ppo ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma detour_in_ar_int : detour ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver.\n"},{"statement":"Lemma w_ex_acq_sb_w_in_ar_int : ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ar_int.","proof":"unfold ar_int.\nbasic_solver 10.\n"},{"statement":"Lemma bob_ppo_W_sb WF :\n  (bob ∪ ppo ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺ ⊆ ppo ∪ ppo ^? ⨾ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺.","proof":"arewrite (bob ∪ ppo ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆                (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘) ∪ ppo).\nbasic_solver 12.\napply ct_ind_left with (P:= fun r =>  r).\n{\nauto with hahn.\n}\n{\narewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺).\narewrite(⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺) at 2.\nbasic_solver 12.\n}\nintros k H.\nrewrite H; clear k H; rewrite crE; relsf; unionL.\n{\nrewrite (bob_ppo WF).\narewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺).\nbasic_solver.\n}\n{\nrewrite (wf_ppoD) at 1.\ntype_solver.\n}\n{\nrewrite (wf_ppoD) at 1 2.\ntype_solver.\n}\narewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)＊); relsf.\n{\nsin_rewrite (bob_ppo WF).\narewrite(bob ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)＊); relsf.\n}\n{\narewrite(⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)＊) at 1; relsf.\n}\n{\nrewrite (wf_ppoD) at 1.\ntype_solver.\n}\n{\nbasic_solver 12.\n}\nrewrite (wf_ppoD) at 1 2.\ntype_solver.\n"},{"statement":"Lemma bob_ppo_W_ex_rfi_W_sb WF :\n  (bob ∪ ppo ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺ ⊆\n  ppo ∪ ppo ^? ⨾ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺.","proof":"assert (⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⊆                 ppo ∪ ((bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺ ∪                 ppo ⨾ (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)⁺)) as AA.\n{\narewrite (⦗R ∩₁ Acq⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ ⦗R ∩₁ Acq⦘) at 1 by basic_solver.\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ bob).\nunionR right -> left.\nrewrite <- ct_ct.\nrewrite <- !ct_step.\nbasic_solver 10.\n}\narewrite (bob ∪ ppo ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⊆                (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘) ∪ ppo).\n{\nbasic_solver 12.\n}\napply ct_ind_left with (P:= fun r =>  r).\n{\nauto with hahn.\n}\n{\nrewrite <- ct_step.\nbasic_solver 10.\n}\nintros k H.\nrewrite H; clear k H; rewrite crE; relsf; unionL.\n{\nrewrite (bob_ppo WF).\nunionR right -> left.\nrewrite <- ct_step.\nbasic_solver.\n}\n{\nrewrite (wf_ppoD) at 1.\ntype_solver.\n}\n{\nrewrite (ppo_in_sb WF) at 1.\nrewrite !seqA.\napply AA.\n}\n{\nrewrite (wf_ppoD) at 1 2.\ntype_solver.\n}\n2: sin_rewrite (bob_ppo WF).\n1-3,5: unionR right -> left; rewrite <- ct_ct at 2;    rewrite <- ct_step at 2; basic_solver 10.\n{\nrewrite (wf_ppoD) at 1.\ntype_solver.\n}\n{\narewrite (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⊆ sb) at 1.\n{\nrewrite bob_in_sb.\narewrite (rfi ⊆ sb).\nbasic_solver.\n}\nrewrite (ppo_in_sb WF) at 1.\ngeneralize (@sb_trans G); ins; relsf.\n}\n{\nbasic_solver 10.\n}\nrewrite (wf_ppoD) at 1 2; type_solver.\n"},{"statement":"Lemma ppo_helper WF :\n  ppo ⊆ ⦗R⦘ ⨾ (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi ∪ rmw ∪ rmw_dep ⨾ sb^?)＊ ⨾  \n             (⦗R_ex⦘ ⨾ sb)^? ⨾ ⦗W⦘.","proof":"unfold ppo.\nrewrite path_ut_first.\nrewrite !seq_union_l, !seq_union_r; unionL.\n{\nbasic_solver 21.\n}\nhahn_frame_l.\nhahn_frame_l.\nhahn_frame_r.\nrewrite (data_in_sb WF).\nrewrite (ctrl_in_sb WF).\nrewrite (addr_in_sb WF).\nrewrite (rmw_dep_in_sb WF).\nrewrite (rmw_in_sb WF).\narewrite (rfi ⊆ sb).\narewrite_id ⦗R_ex⦘ at 2.\ngeneralize (@sb_trans G); ins; relsf.\n"},{"statement":"Lemma rf_rmw_sb_loc_in_rf_ppo_loc WF (RMWREX : dom_rel rmw ⊆₁ R_ex) :\n  rf ⨾ rmw ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ rf ⨾ ppo ∩ same_loc.","proof":"arewrite (rmw ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ (rmw ⨾ sb ⨾ ⦗W⦘) ∩ same_loc).\n{\narewrite (rmw ⊆ rmw ∩ same_loc).\n{\napply inclusion_inter_r; [done|].\napply (wf_rmwl WF).\n}\ngeneralize (@same_loc_trans _ lab).\nbasic_solver.\n}\nrewrite (dom_rel_helper RMWREX).\nrewrite !seqA.\nrewrite (rmw_in_sb WF).\narewrite (sb ⨾ sb ⊆ sb).\n{\ngeneralize (@sb_trans G).\nbasic_solver.\n}\nby rewrite R_ex_sb_W_in_ppo.\n"},{"statement":"Lemma rmw_in_ar_int WF : rmw ⊆ ar_int.","proof":"unfold ar_int.\nrewrite (rmw_in_ppo WF).\neauto with hahn.\n"},{"statement":"Lemma rfe_rmw_in_rfe_ar_int_ct WF : rfe ⨾ rmw ⊆ (rfe ∪ ar_int)⁺.","proof":"rewrite rmw_in_ar_int; auto.\narewrite (ar_int ⊆ rfe ∪ ar_int) at 1.\narewrite (rfe ⊆ rfe ∪ ar_int) at 1.\ndo 2 (rewrite ct_begin; rewrite rtE).\nrewrite <- ct_step.\nbasic_solver 10.\n"},{"statement":"Lemma ar_int_rfe_rfrmw_in_ar_int_rfe_ct WF : (rfe ∪ ar_int) ⨾ rf ⨾ rmw ⊆ (rfe ∪ ar_int)⁺.","proof":"remember (rfe ∪ ar_int) as ax.\nassert (sb ⨾ sb ⊆ sb) as AA.\n{\napply transitiveI.\napply sb_trans.\n}\nassert (rfi ⨾ rmw ⊆ sb) as BB.\n{\narewrite (rfi ⊆ sb).\nby rewrite rmw_in_sb.\n}\nrewrite rfi_union_rfe.\nrewrite seq_union_l, seq_union_r.\nunionL.\n2: {\nrewrite rfe_rmw_in_rfe_ar_int_ct; auto.\narewrite (ax ⊆ ax^?) at 1.\nsubst ax.\nrelsf.\n}\nsubst ax.\nrewrite !seq_union_l.\nunionL.\n{\nrewrite (dom_l (wf_rfiD WF)).\nrewrite (dom_r (wf_rfeD WF)).\ntype_solver.\n}\nunfold ar_int at 1.\nrewrite !seq_union_l.\nunionL.\n5: by rewrite (dom_l (wf_rfiD WF)); type_solver.\n3: {\nrewrite (wf_detourD WF).\nrewrite (wf_rfiD WF).\ntype_solver.\n}\n{\nunfold imm_bob.bob at 1.\nrewrite !seq_union_l, !seqA.\nunionL.\n2: {\nrewrite BB, AA.\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ bob).\nrewrite bob_in_ar_int.\nrewrite <- ct_step.\neauto with hahn.\n}\nrewrite fwbob_rfi_rmw_in_fwbob; auto.\nrewrite fwbob_in_bob.\nrewrite bob_in_ar_int.\neauto with hahn.\n}\n{\nrewrite (rmw_in_ppo WF), ppo_rfi_ppo.\nrewrite <- ct_step.\nrewrite ppo_in_ar_int.\neauto with hahn.\n}\narewrite_id ⦗W⦘.\nrewrite seq_id_l.\nrewrite (dom_r (wf_rmwD WF)).\nsin_rewrite BB.\nsin_rewrite AA.\nrewrite <- ct_step.\nrewrite w_ex_acq_sb_w_in_ar_int.\neauto with hahn.\n"},{"statement":"Lemma ar_int_rfe_rfrmw_rt_in_ar_int_rfe_ct WF :\n  (rfe ∪ ar_int) ⨾ (rf ⨾ rmw)＊ ⊆ (rfe ∪ ar_int)⁺.","proof":"apply rt_ind_left with (P:=fun r => (rfe ∪ ar_int) ⨾ r).\n{\neauto with hahn.\n}\n{\nby rewrite seq_id_r, <- ct_step.\n}\nins.\nsin_rewrite ar_int_rfe_rfrmw_in_ar_int_rfe_ct; auto.\nrewrite ct_end at 1.\nrewrite !seqA.\nrewrite H.\nrelsf.\n"},{"statement":"Lemma ar_int_rfe_ct_rfrmw_rt_in_ar_int_rfe_ct WF :\n  (rfe ∪ ar_int)⁺ ⨾ (rf ⨾ rmw)＊ ⊆ (rfe ∪ ar_int)⁺.","proof":"rewrite ct_end at 1.\nrewrite !seqA.\nrewrite ar_int_rfe_rfrmw_rt_in_ar_int_rfe_ct; auto.\nrelsf.\n"}]