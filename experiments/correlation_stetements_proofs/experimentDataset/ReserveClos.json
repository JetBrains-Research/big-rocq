[{"statement":"Lemma reserve_clos_union s s' :\n  reserve_clos (s ∪₁ s') ≡₁ reserve_clos s ∪₁ reserve_clos s'.","proof":"unfold reserve_clos.\nrewrite !issued_union.\nrewrite set_pair_union_r.\nclear.\nbasic_solver 10.\n"},{"statement":"Lemma reserve_clos_iord_coherent tc\n  (ICOH : iord_coherent G sc tc) :\n  iord_coherent G sc (reserve_clos tc).","proof":"unfold reserve_clos.\nred.\nrewrite id_union, seq_union_r, dom_union.\nunionL.\n{\nnow unionR left.\n}\ntransitivity (@set_empty trav_label).\n2: clear; basic_solver.\nrewrite iord_no_reserve.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\n"},{"statement":"Lemma reserve_clos_tls_coherent tc\n  (COH : tls_coherent G tc) :\n  tls_coherent G (reserve_clos tc).","proof":"unfold reserve_clos.\napply tls_coherent_ext_union; auto.\nunfold exec_tls.\narewrite (issued tc ≡₁ issued tc ∩₁ (is_init ∪₁ set_compl is_init)).\n{\nnow rewrite <- set_full_split, set_inter_full_r.\n}\nrewrite issued_EW; eauto.\nrewrite !set_inter_union_r, set_pair_union_r.\nunionL.\n{\ntransitivity (init_tls G); eauto with hahn.\nunfold init_tls.\napply set_pair_mori; eauto with hahn.\nclear.\nbasic_solver.\n}\nunionR right -> right.\napply set_pair_mori; eauto with hahn.\nclear.\nbasic_solver.\n"},{"statement":"Lemma covered_reserve_clos tc : covered (reserve_clos tc) ≡₁ covered tc.","proof":"ins.\nunfold reserve_clos.\nrewrite covered_union, covered_ta_reserve.\nnow rewrite set_union_empty_r.\n"},{"statement":"Lemma issued_reserve_clos tc : issued (reserve_clos tc) ≡₁ issued tc.","proof":"ins.\nunfold reserve_clos.\nrewrite issued_union, issued_ta_reserve.\nnow rewrite set_union_empty_r.\n"},{"statement":"Lemma reserved_reserve_clos tc : reserved (reserve_clos tc) ≡₁ reserved tc ∪₁ issued tc.","proof":"ins.\nunfold reserve_clos.\nnow rewrite reserved_union, reserved_ta_reserve.\n"},{"statement":"Lemma reserve_clos_eq_ta_cover w : reserve_clos (eq (ta_cover, w)) ≡₁ eq (ta_cover, w).","proof":"ins.\nunfold reserve_clos.\nrewrite issued_eq_ta_cover.\nunfold set_pair.\nunfolder.\nsplit; ins; do 2 desf; eauto.\n"},{"statement":"Lemma reserve_clos_eq_ta_issue w : reserve_clos (eq (ta_issue, w)) ≡₁ eq (ta_issue, w) ∪₁ eq (ta_reserve, w).","proof":"ins.\nunfold reserve_clos.\nrewrite issued_singleton.\napply set_union_more; eauto with hahn.\nnow rewrite set_pair_exact.\n"},{"statement":"Lemma reserve_clos_eq_ta_reserve w : reserve_clos (eq (ta_reserve, w)) ≡₁ eq (ta_reserve, w).","proof":"ins.\nunfold reserve_clos.\nrewrite issued_eq_ta_reserve.\nunfold set_pair.\nunfolder.\nsplit; ins; do 2 desf; eauto.\n"},{"statement":"Lemma reserve_clos_mon tc : tc ⊆₁ reserve_clos tc.","proof":"unfold reserve_clos.\neauto with hahn.\n"},{"statement":"Lemma reserve_clos_init_tls : reserve_clos (init_tls G) ≡₁ init_tls G.","proof":"split; auto using reserve_clos_mon.\nunfold reserve_clos.\nunionL; eauto with hahn.\nunfold init_tls at 1.\nrewrite !set_pair_union_l, !issued_union.\nrewrite !issued_ta_reserve, !issued_ta_issue, !issued_ta_cover,          !issued_is_ta_propagate_to_G.\nrewrite !set_union_empty_l, !set_union_empty_r.\nunfold init_tls.\nrewrite !set_pair_union_l.\neauto with hahn.\n"},{"statement":"Lemma reserve_clos_ta_reserve s :\n  reserve_clos (eq ta_reserve <*> s) ≡₁ eq ta_reserve <*> s.","proof":"unfold reserve_clos.\nnow autorewrite with cir_simplify.\n"}]