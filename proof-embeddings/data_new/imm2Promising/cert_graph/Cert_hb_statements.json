{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/promising2ToImm/src/cert_graph/Cert_hb.v","fileSamples":[{"statement":"dom_rel (Grf ⨾ ⦗D⦘) ⊆₁ D -> Grf ⨾ ⦗D⦘ ≡ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘.","conclusion":"dom_rel (Grf ⨾ ⦗D⦘) ⊆₁ D -> Grf ⨾ ⦗D⦘ ≡ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘","hypotheses":"","proofString":"basic_solver 12."},{"statement":"Crelease ⨾ ⦗D⦘ ⊆ Grelease ->\nGrelease ⨾ ⦗D⦘ ⊆ Crelease -> Crelease ⨾ ⦗D⦘ ≡ Grelease ⨾ ⦗D⦘.","conclusion":"Crelease ⨾ ⦗D⦘ ⊆ Grelease ->\nGrelease ⨾ ⦗D⦘ ⊆ Crelease -> Crelease ⨾ ⦗D⦘ ≡ Grelease ⨾ ⦗D⦘","hypotheses":"","proofString":"clear.\nbasic_solver."},{"statement":"Crelease ⨾ ⦗D⦘ ⊆ Grelease ->\nGrelease ⨾ ⦗D⦘ ⊆ Crelease -> Crelease ⨾ ⦗D⦘ ≡ Grelease ⨾ ⦗D⦘.","conclusion":"Crelease ⨾ ⦗D⦘ ⊆ Grelease ->\nGrelease ⨾ ⦗D⦘ ⊆ Crelease -> Crelease ⨾ ⦗D⦘ ≡ Grelease ⨾ ⦗D⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"Gsw ⊆ Gsb ∪ Csw.","conclusion":"Gsw ⊆ Gsb ∪ Csw","hypotheses":"","proofString":"unfold imm_s_hb.sw; ins.\nremember (Grf ⨾ ⦗D⦘ ∪ new_rf) as X.\nrewrite (cert_F _ SAME).\nrewrite (cert_Acq _ SAME).\nrewrite (cert_sb).\nrewrite !crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\nunionL.\narewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ Crelease\n    ⨾ cert_rf\n      ⨾ (Csb ⨾ ⦗fun a : actid => is_f lab' a⦘)^?\n        ⨾ ⦗fun a : actid => is_acq lab' a⦘.","conclusion":"Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ Crelease\n    ⨾ cert_rf\n      ⨾ (Csb ⨾ ⦗fun a : actid => is_f lab' a⦘)^?\n        ⨾ ⦗fun a : actid => is_acq lab' a⦘","hypotheses":"","proofString":"remember (Grf ⨾ ⦗D⦘ ∪ new_rf) as X.\nrewrite (cert_F _ SAME).\nrewrite (cert_Acq _ SAME).\nrewrite (cert_sb).\nrewrite !crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\nunionL.\narewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ Crelease\n    ⨾ cert_rf\n      ⨾ (Csb ⨾ ⦗fun a : actid => is_f lab' a⦘)^?\n        ⨾ ⦗fun a : actid => is_acq lab' a⦘.","conclusion":"Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ Crelease\n    ⨾ cert_rf\n      ⨾ (Csb ⨾ ⦗fun a : actid => is_f lab' a⦘)^?\n        ⨾ ⦗fun a : actid => is_acq lab' a⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite (cert_F _ SAME).\nrewrite (cert_Acq _ SAME).\nrewrite (cert_sb).\nrewrite !crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\nunionL.\narewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb ∪ Crelease ⨾ cert_rf ⨾ (Csb ⨾ ⦗F⦘)^? ⨾ ⦗fun a : actid => is_acq lab' a⦘.","conclusion":"Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb ∪ Crelease ⨾ cert_rf ⨾ (Csb ⨾ ⦗F⦘)^? ⨾ ⦗fun a : actid => is_acq lab' a⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite (cert_Acq _ SAME).\nrewrite (cert_sb).\nrewrite !crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\nunionL.\narewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb ∪ Crelease ⨾ cert_rf ⨾ (Csb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb ∪ Crelease ⨾ cert_rf ⨾ (Csb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite (cert_sb).\nrewrite !crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\nunionL.\narewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb ∪ Crelease ⨾ cert_rf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ Gsb ∪ Crelease ⨾ cert_rf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !crE, !seq_union_l, !seq_union_r, !seq_id_l, !seqA.\nunionL.\narewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unionL.\narewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite (⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘) at 1.\nunfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto.\nrewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘.","conclusion":"⦗Acq⦘ ⊆ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unfolder.\nins.\ndesf.\ndestruct (classic (D y)); eauto."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : forall x y : actid,\nx = y /\\ is_acq Glab x -> (x = y /\\ D x \\/ x = y /\\ ~ D x) /\\ is_acq Glab y.","conclusion":"forall x y : actid,\nx = y /\\ is_acq Glab x -> (x = y /\\ D x \\/ x = y /\\ ~ D x) /\\ is_acq Glab y","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"ins.\ndesf.\ndestruct (classic (D y)); eauto."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (x y : actid) (H : x = y /\\ is_acq Glab x) : (x = y /\\ D x \\/ x = y /\\ ~ D x) /\\ is_acq Glab y.","conclusion":"(x = y /\\ D x \\/ x = y /\\ ~ D x) /\\ is_acq Glab y","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (x y : actid) (H : x = y /\\ is_acq Glab x)","proofString":"desf.\ndestruct (classic (D y)); eauto."},{"statement":"(y : actid) (H0 : is_acq Glab y) : (y = y /\\ D y \\/ y = y /\\ ~ D y) /\\ true.","conclusion":"(y = y /\\ D y \\/ y = y /\\ ~ D y) /\\ true","hypotheses":"(y : actid) (H0 : is_acq Glab y)","proofString":"destruct (classic (D y)); eauto."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ (⦗D⦘ ∪ ⦗set_compl D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !seq_union_l, !seq_union_r.\nunionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unionL.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"seq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !seqA.\nsin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"sin_rewrite Grelease_D_in_Crelease.\nunfold Cert_rf.cert_rf.\nsubst X; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unfold Cert_rf.cert_rf.\nsubst X; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Crelease\n     ⨾ (Grf ⨾ ⦗D⦘ ∪ new_rf ⨾ ⦗set_compl (dom_rel Grmw)⦘\n        ∪ immediate cert_co ⨾ Grmw⁻¹ ⨾ ⦗set_compl D⦘) ⨾ ⦗Acq⦘\n     ∪ Crelease\n       ⨾ (Grf ⨾ ⦗D⦘ ∪ new_rf ⨾ ⦗set_compl (dom_rel Grmw)⦘\n          ∪ immediate cert_co ⨾ Grmw⁻¹ ⨾ ⦗set_compl D⦘) ⨾ \n         Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Crelease\n     ⨾ (Grf ⨾ ⦗D⦘ ∪ new_rf ⨾ ⦗set_compl (dom_rel Grmw)⦘\n        ∪ immediate cert_co ⨾ Grmw⁻¹ ⨾ ⦗set_compl D⦘) ⨾ ⦗Acq⦘\n     ∪ Crelease\n       ⨾ (Grf ⨾ ⦗D⦘ ∪ new_rf ⨾ ⦗set_compl (dom_rel Grmw)⦘\n          ∪ immediate cert_co ⨾ Grmw⁻¹ ⨾ ⦗set_compl D⦘) ⨾ \n         Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"subst X; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite rfi_union_rfe at 1.\nrewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ (Grfi ∪ Grfe) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ (Grfi ∪ Grfe) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !seq_union_l, !seq_union_r.\nunionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n∪ Grelease ⨾ Grfe ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n∪ Grelease ⨾ Grfe ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unionL; cycle 1.\ntransitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21.\nrewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grfe ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grfe ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"transitivity (fun _ _ : actid => False); [|basic_solver].\nrewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grfe ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"Grelease ⨾ Grfe ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite (dom_r (wf_rfeD WF)).\nunfold Cert_D.D; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ (Grfe ⨾ ⦗R⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"Grelease ⨾ (Grfe ⨾ ⦗R⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unfold Cert_D.D; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite (dom_r (wf_rfiE WF)) at 1.\nrewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ (Grfi ⨾ ⦗E⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ (Grfi ⨾ ⦗E⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite E_to_S.\nrewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ (Grfi ⨾ ⦗C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ (Grfi ⨾ ⦗C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite C_in_D with (G:=G) (T:=T) (thread:=thread).\nrewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ (Grfi ⨾ ⦗D ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ (Grfi ⨾ ⦗D ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite id_union, !seq_union_r, !seq_union_l, !seq_union_r, !seqA.\nunionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grfi ⨾ ⦗D⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n∪ Grelease ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grfi ⨾ ⦗D⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n∪ Grelease ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unionL; [basic_solver|].\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite rt_rf_rmw.\nrewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^?\n       ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^?\n       ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite rtE with (r:= Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^?\n       ⨾ ⦗W⦘\n         ⨾ (Grfi ⨾ Grmw)＊\n           ⨾ (⦗fun _ : actid => True⦘ ∪ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺))\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^?\n       ⨾ ⦗W⦘\n         ⨾ (Grfi ⨾ Grmw)＊\n           ⨾ (⦗fun _ : actid => True⦘ ∪ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺))\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !seq_union_r, !seq_union_l; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ ⦗fun _ : actid => True⦘)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ ⦗fun _ : actid => True⦘)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘\n        ⨾ (Gsb ⨾ Grmw)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ Gsb ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘\n        ⨾ (Gsb ⨾ Grmw)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ Gsb ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘\n        ⨾ (Gsb ⨾ Gsb)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ Gsb ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘\n        ⨾ (Gsb ⨾ Gsb)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ Gsb ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"generalize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (H : transitive Gsb) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ Gsb ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ Gsb ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (H : transitive Gsb)","proofString":"revert H; basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^?\n       ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗Rel⦘\n ⨾ (⦗F⦘ ⨾ Gsb)^?\n   ⨾ ⦗W⦘\n     ⨾ (Gsb ∩ Gsame_loc)^?\n       ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺)\n⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite ct_end, <- !seqA.\narewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ((((((((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n        ⨾ (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⨾ Grfe) ⨾ Grmw)\n    ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⨾ ⦗\n set_compl D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ ((Crelease ⨾ cert_rf) ⨾ ⦗Acq⦘\n     ∪ (((Crelease ⨾ cert_rf) ⨾ Gsb) ⨾ ⦗F⦘) ⨾ ⦗Acq⦘).","conclusion":"((((((((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n        ⨾ (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⨾ Grfe) ⨾ Grmw)\n    ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⨾ ⦗\n set_compl D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ ((Crelease ⨾ cert_rf) ⨾ ⦗Acq⦘\n     ∪ (((Crelease ⨾ cert_rf) ⨾ Gsb) ⨾ ⦗F⦘) ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite (((((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘) ⨾       (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊) ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\nassert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease.","conclusion":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grfi ⨾ Grmw)＊) ⨾ ((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite (Grfi ⊆ Grf).\narewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grf ⨾ Grmw)＊)＊ ⊆ Grelease.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grf ⨾ Grmw)＊)＊ ⊆ Grelease","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite (Grfe ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw ⨾ (Grf ⨾ Grmw)＊)＊ ⊆ Grelease.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw ⨾ (Grf ⨾ Grmw)＊)＊ ⊆ Grelease","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw) ⨾ (Grf ⨾ Grmw)＊)＊ ⊆ Grelease.","conclusion":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw) ⨾ (Grf ⨾ Grmw)＊)＊ ⊆ Grelease","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw)⁺)＊ ⊆ Grelease.","conclusion":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw)⁺)＊ ⊆ Grelease","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !seqA; relsf."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease\n⨾ Grfe\n  ⨾ Grmw\n    ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ Grfe\n  ⨾ Grmw\n    ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"assert (BB: Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end.\nsin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺.","conclusion":"Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"seq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ((Grmw ⨾ Grfi)＊ ⨾ Grmw) ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺.","conclusion":"((Grmw ⨾ Grfi)＊ ⨾ Grmw) ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !seqA.\nremember (Grmw ⨾ Grfi) as Y.\napply ct_end."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : (Grmw ⨾ Grfi)＊ ⨾ Grmw ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺.","conclusion":"(Grmw ⨾ Grfi)＊ ⨾ Grmw ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"remember (Grmw ⨾ Grfi) as Y.\napply ct_end."},{"statement":"(Y : relation actid) (HeqY : Y = Grmw ⨾ Grfi) (X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Y＊ ⨾ Y ⊆ Y⁺.","conclusion":"Y＊ ⨾ Y ⊆ Y⁺","hypotheses":"(Y : relation actid) (HeqY : Y = Grmw ⨾ Grfi) (X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"apply ct_end."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : Grelease\n⨾ Grfe\n  ⨾ Grmw\n    ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ Grfe\n  ⨾ Grmw\n    ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"sin_rewrite BB.\nassert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : Grelease\n⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"assert (AA: dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I).\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt.\nrewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"rewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi ⨾ ⦗R⦘)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ (Grmw ⨾ Grfi ⨾ ⦗R⦘)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"rewrite seq_eqvC.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi ⨾ ⦗R⦘)⁺ ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ (Grmw ⨾ Grfi ⨾ ⦗R⦘)⁺ ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel (((Grfe ⨾ ((Grmw ⨾ Grfi) ⨾ ⦗R⦘)⁺) ⨾ ⦗Acq⦘) ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel (((Grfe ⨾ ((Grmw ⨾ Grfi) ⨾ ⦗R⦘)⁺) ⨾ ⦗Acq⦘) ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘)\n⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"rewrite dom_rel_eqv_dom_rel, seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel ((Grfe ⨾ ((Grmw ⨾ Grfi) ⨾ ⦗R⦘)⁺) ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel ((Grfe ⨾ ((Grmw ⨾ Grfi) ⨾ ⦗R⦘)⁺) ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"rewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"arewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\nrewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32.\narewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘.","conclusion":"⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"rewrite crE; relsf.\nrewrite S_in_W at 1.\ntype_solver 32."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ ⦗S⦘ ∪ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘.","conclusion":"⦗R⦘ ⨾ ⦗Acq⦘ ⨾ ⦗S⦘ ∪ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"rewrite S_in_W at 1.\ntype_solver 32."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘.","conclusion":"⦗R⦘ ⨾ ⦗Acq⦘ ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb ⨾ ⦗S⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"type_solver 32."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"arewrite (Grfe ⊆ Gdetour ∪ Grfe).\nby rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) : dom_rel ((Gdetour ∪ Grfe) ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel ((Gdetour ∪ Grfe) ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺)","proofString":"by rewrite inclusion_t_rt."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite seq_eqvC.\nseq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"seq_rewrite (dom_rel_helper AA).\nrewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ (⦗I⦘ ⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘)\n  ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ (⦗I⦘ ⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘)\n  ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite !seqA.\narewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⊆               ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⨾               (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘).\napply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21.\narewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘\n⊆ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘\n  ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘.","conclusion":"(Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘\n⊆ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘\n  ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"apply dom_rel_helper.\nrewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite seq_eqvC, <- seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel (((Grmw ⨾ Grfi)⁺ ⨾ ⦗Acq⦘) ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel (((Grmw ⨾ Grfi)⁺ ⨾ ⦗Acq⦘) ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel (((Grmw ⨾ Grfi)⁺ ⨾ ⦗Acq⦘) ⨾ Gsb^? ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel (((Grmw ⨾ Grfi)⁺ ⨾ ⦗Acq⦘) ⨾ Gsb^? ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite (dom_r (wf_rfiD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel (((Grmw ⨾ Grfi ⨾ ⦗R⦘)⁺ ⨾ ⦗Acq⦘) ⨾ Gsb^? ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel (((Grmw ⨾ Grfi ⨾ ⦗R⦘)⁺ ⨾ ⦗Acq⦘) ⨾ Gsb^? ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel (((((Grmw ⨾ Grfi) ⨾ ⦗R⦘)⁺ ⨾ ⦗Acq⦘) ⨾ Gsb^?) ⨾ ⦗S⦘)\n⊆₁ dom_rel ((((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘) ⨾ Gsb) ⨾ ⦗S⦘).","conclusion":"dom_rel (((((Grmw ⨾ Grfi) ⨾ ⦗R⦘)⁺ ⨾ ⦗Acq⦘) ⨾ Gsb^?) ⨾ ⦗S⦘)\n⊆₁ dom_rel ((((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘) ⨾ Gsb) ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite inclusion_ct_seq_eqv_r, !seqA.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\ngeneralize S_in_W; clear; basic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘.","conclusion":"⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"generalize S_in_W; clear; basic_solver."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).\ntype_solver 21.\nrewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘.","conclusion":"⦗R⦘ ⨾ ⦗Acq⦘ ⨾ Gsb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"type_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite rtE.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)\n⊆₁ dom_rel\n     ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘).","conclusion":"dom_rel ((Grmw ⨾ Grfi)⁺ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)\n⊆₁ dom_rel\n     ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"basic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Grfe\n    ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘\n      ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Grfe\n    ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘\n      ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite (Grfe ⊆ Grf).\narewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Grf\n    ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘\n      ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Grf\n    ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘\n      ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite (Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf).\napply Grf_to_Acq_S_in_cert_rf; eauto.\nrewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf.","conclusion":"Grf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ Gsb ⨾ ⦗S⦘)⦘ ⊆ Crf","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"apply Grf_to_Acq_S_in_cert_rf; eauto."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Crf ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Crf ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite Grfi_in_cert_rfi at 1; try edone.\narewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ cert_rfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ cert_rfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite_id ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘.\narewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ cert_rfi)⁺ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ cert_rfi)⁺ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗set_compl D⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite_id ⦗set_compl D⦘.\narewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ cert_rfi)⁺\n      ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ cert_rfi)⁺\n      ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite (Crfi ⊆ Crf).\nseq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ Crf)⁺\n      ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ Crf\n    ⨾ (Grmw ⨾ Crf)⁺\n      ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"seq_rewrite <- ct_seq_swap.\nrewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ ((Crf ⨾ Grmw)⁺ ⨾ Crf)\n    ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ ((Crf ⨾ Grmw)⁺ ⨾ Crf)\n    ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite !seqA.\narewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease\n⨾ ⦗I⦘\n  ⨾ (Crf ⨾ Grmw)⁺\n    ⨾ Crf ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease\n⨾ ⦗I⦘\n  ⨾ (Crf ⨾ Grmw)⁺\n    ⨾ Crf ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"arewrite (Grelease ⨾ ⦗I⦘ ⊆ release certG).\nrewrite I_in_D; apply Grelease_D_in_Crelease.\nrels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Grelease ⨾ ⦗I⦘ ⊆ Crelease.","conclusion":"Grelease ⨾ ⦗I⦘ ⊆ Crelease","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite I_in_D; apply Grelease_D_in_Crelease."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Crelease\n⨾ (Crf ⨾ Grmw)⁺\n  ⨾ Crf ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease\n⨾ (Crf ⨾ Grmw)⁺\n  ⨾ Crf ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘ ⨾ ⦗fun _ : actid => True⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rels.\nrewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Crelease ⨾ (Crf ⨾ Grmw)⁺ ⨾ Crf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ (Crf ⨾ Grmw)⁺ ⨾ Crf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite inclusion_t_rt.\nrewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Crelease ⨾ (Crf ⨾ Grmw)＊ ⨾ Crf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ (Crf ⨾ Grmw)＊ ⨾ Crf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"rewrite <- cert_rmw.\nsin_rewrite release_rf_rmw_steps.\nsubst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I) : Crelease ⨾ Crf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ Crf ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) (BB : Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)⁺) (AA : dom_rel (Grfe ⨾ (Grmw ⨾ Grfi)⁺ ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘ ⨾ ⦗Acq⦘) ⊆₁ I)","proofString":"subst X; ins; basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘) at 1.\nby mode_solver 21.\narewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘.","conclusion":"⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"by mode_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘).\nforward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12.\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘.","conclusion":"Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"forward (eapply dom_sb_F_AcqRel_in_D with (T:=T) (thread:=thread)); try edone.\nbasic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : dom_rel (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘) ⊆₁ D ->\nGsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘.","conclusion":"dom_rel (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘) ⊆₁ D ->\nGsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"basic_solver 12."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"seq_rewrite dom_rf_D_helper.\nrewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"rewrite !seqA.\narewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"arewrite ( Grf ⨾ ⦗D⦘ ⊆ cert_rf).\nsin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Grelease ⨾ ⦗D⦘ ⨾ cert_rf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ cert_rf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"sin_rewrite Grelease_D_in_Crelease.\nunionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Crelease ⨾ cert_rf ⨾ ⦗Acq⦘ ∪ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"unionR right -> right.\nbasic_solver 21."},{"statement":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf) : Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘.","conclusion":"Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗Acq⦘\n⊆ Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘","hypotheses":"(X : actid -> actid -> Prop) (HeqX : X = Grf ⨾ ⦗D⦘ ∪ new_rf)","proofString":"basic_solver 21."},{"statement":"Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ cert_rf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"arewrite (Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ≡ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).\nrewrite (dom_r (@wf_sbE G)).\ngeneralize dom_sb_F_Acq_in_D.\nbasic_solver 12.\narewrite (cert_rf ⨾ ⦗D⦘ ⊆ Grf ⨾ ⦗D⦘) by (by apply cert_rf_D).\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\neauto with hahn."},{"statement":"Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ≡ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘.","conclusion":"Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ≡ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite (dom_r (@wf_sbE G)).\ngeneralize dom_sb_F_Acq_in_D.\nbasic_solver 12."},{"statement":"(Gsb ⨾ ⦗E⦘) ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ≡ ⦗D⦘ ⨾ (Gsb ⨾ ⦗E⦘) ⨾ ⦗F⦘ ⨾ ⦗Acq⦘.","conclusion":"(Gsb ⨾ ⦗E⦘) ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ≡ ⦗D⦘ ⨾ (Gsb ⨾ ⦗E⦘) ⨾ ⦗F⦘ ⨾ ⦗Acq⦘","hypotheses":"","proofString":"generalize dom_sb_F_Acq_in_D.\nbasic_solver 12."},{"statement":"Crelease ⨾ cert_rf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ cert_rf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"arewrite (cert_rf ⨾ ⦗D⦘ ⊆ Grf ⨾ ⦗D⦘) by (by apply cert_rf_D).\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\neauto with hahn."},{"statement":"Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"seq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\neauto with hahn."},{"statement":"Crelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘\n     ∪ Grelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘\n     ∪ Grelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"rewrite !seqA.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\neauto with hahn."},{"statement":"Crelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"seq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\neauto with hahn."},{"statement":"(Grelease ⨾ ⦗D⦘) ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(Grelease ⨾ ⦗D⦘) ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"rewrite !seqA.\neauto with hahn."},{"statement":"Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘\n⊆ Gsb\n  ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"eauto with hahn."},{"statement":"cert_rf ⊆ cert_rf ⨾ ⦗D⦘ ∪ cert_rf ⨾ ⦗set_compl D⦘.","conclusion":"cert_rf ⊆ cert_rf ⨾ ⦗D⦘ ∪ cert_rf ⨾ ⦗set_compl D⦘","hypotheses":"","proofString":"clear.\nunfolder.\nins.\ndesf.\ntauto."},{"statement":"cert_rf ⊆ cert_rf ⨾ ⦗D⦘ ∪ cert_rf ⨾ ⦗set_compl D⦘.","conclusion":"cert_rf ⊆ cert_rf ⨾ ⦗D⦘ ∪ cert_rf ⨾ ⦗set_compl D⦘","hypotheses":"","proofString":"unfolder.\nins.\ndesf.\ntauto."},{"statement":"forall x y : actid, cert_rf x y -> cert_rf x y /\\ D y \\/ cert_rf x y /\\ ~ D y.","conclusion":"forall x y : actid, cert_rf x y -> cert_rf x y /\\ D y \\/ cert_rf x y /\\ ~ D y","hypotheses":"","proofString":"ins.\ndesf.\ntauto."},{"statement":"(x y : actid) (H : cert_rf x y) : cert_rf x y /\\ D y \\/ cert_rf x y /\\ ~ D y.","conclusion":"cert_rf x y /\\ D y \\/ cert_rf x y /\\ ~ D y","hypotheses":"(x y : actid) (H : cert_rf x y)","proofString":"desf.\ntauto."},{"statement":"(x y : actid) (H : cert_rf x y) : cert_rf x y /\\ D y \\/ cert_rf x y /\\ ~ D y.","conclusion":"cert_rf x y /\\ D y \\/ cert_rf x y /\\ ~ D y","hypotheses":"(x y : actid) (H : cert_rf x y)","proofString":"tauto."},{"statement":"Crelease ⨾ (cert_rf ⨾ ⦗D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ (cert_rf ⨾ ⦗D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"arewrite (cert_rf ⨾ ⦗D⦘ ⊆ Grf ⨾ ⦗D⦘) by (by apply cert_rf_D).\nseq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nseq_rewrite Crelease_D_eq_Grelease_D.\nbasic_solver 20."},{"statement":"Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"seq_rewrite dom_rf_D_helper.\nrewrite !seqA.\nseq_rewrite Crelease_D_eq_Grelease_D.\nbasic_solver 20."},{"statement":"Crelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ (⦗D⦘ ⨾ Grf ⨾ ⦗D⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"rewrite !seqA.\nseq_rewrite Crelease_D_eq_Grelease_D.\nbasic_solver 20."},{"statement":"Crelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ ⦗D⦘ ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"seq_rewrite Crelease_D_eq_Grelease_D.\nbasic_solver 20."},{"statement":"(Grelease ⨾ ⦗D⦘) ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(Grelease ⨾ ⦗D⦘) ⨾ Grf ⨾ ⦗D⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"basic_solver 20."},{"statement":"E ∩₁ R ∩₁ (set_compl D ∩₁ Acq)\n⊆₁ codom_rel Grf ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq).","conclusion":"E ∩₁ R ∩₁ (set_compl D ∩₁ Acq)\n⊆₁ codom_rel Grf ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq)","hypotheses":"","proofString":"generalize COMP_ACQ.\nclear.\nbasic_solver 10."},{"statement":"(forall r : actid, (E ∩₁ R ∩₁ Acq) r -> exists w : actid, Grf w r) ->\nE ∩₁ R ∩₁ (set_compl D ∩₁ Acq)\n⊆₁ codom_rel Grf ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq).","conclusion":"(forall r : actid, (E ∩₁ R ∩₁ Acq) r -> exists w : actid, Grf w r) ->\nE ∩₁ R ∩₁ (set_compl D ∩₁ Acq)\n⊆₁ codom_rel Grf ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq)","hypotheses":"","proofString":"clear.\nbasic_solver 10."},{"statement":"(forall r : actid, (E ∩₁ R ∩₁ Acq) r -> exists w : actid, Grf w r) ->\nE ∩₁ R ∩₁ (set_compl D ∩₁ Acq)\n⊆₁ codom_rel Grf ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq).","conclusion":"(forall r : actid, (E ∩₁ R ∩₁ Acq) r -> exists w : actid, Grf w r) ->\nE ∩₁ R ∩₁ (set_compl D ∩₁ Acq)\n⊆₁ codom_rel Grf ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"codom_rel Grfe ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq) ⊆₁ ∅.","conclusion":"codom_rel Grfe ∩₁ set_compl D ∩₁ (E ∩₁ R ∩₁ Acq) ⊆₁ ∅","hypotheses":"","proofString":"unfold Cert_D.D.\nbasic_solver 20."},{"statement":"codom_rel Grfe\n∩₁ set_compl\n     (C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n      ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n      ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n      ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)) ∩₁ \n(E ∩₁ R ∩₁ Acq) ⊆₁ ∅.","conclusion":"codom_rel Grfe\n∩₁ set_compl\n     (C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n      ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n      ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n      ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)) ∩₁ \n(E ∩₁ R ∩₁ Acq) ⊆₁ ∅","hypotheses":"","proofString":"basic_solver 20."},{"statement":"Crelease ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ cert_rf ⨾ ⦗∅⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F ∩₁ Acq⦘).","conclusion":"Crelease ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ cert_rf ⨾ ⦗∅⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F ∩₁ Acq⦘)","hypotheses":"","proofString":"basic_solver."},{"statement":"Crelease\n⨾ ⦗W⦘\n  ⨾ ⦗E⦘ ⨾ cert_rf ⨾ (⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘) ⨾ (⦗E⦘ ⨾ ⦗R⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease\n⨾ ⦗W⦘\n  ⨾ ⦗E⦘ ⨾ cert_rf ⨾ (⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘) ⨾ (⦗E⦘ ⨾ ⦗R⦘) ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"rewrite !seqA.\narewrite (cert_rf ⨾ ⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘ ⊆ Grfi ⨾ ⦗set_compl D⦘).\nrewrite <- id_inter.\nintros x y HH.\napply seq_eqv_r in HH.\ndestruct HH as [HH [[x' AA] BB]].\nassert (x' = x); subst; auto.\neapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto.\nbasic_solver.\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= rfe certG ⨾ Crmw ⨾ (rfi certG ⨾ Crmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\nunionR left.\narewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nunionR right -> left.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Crelease\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ cert_rf ⨾ ⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ cert_rf ⨾ ⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"arewrite (cert_rf ⨾ ⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘ ⊆ Grfi ⨾ ⦗set_compl D⦘).\nrewrite <- id_inter.\nintros x y HH.\napply seq_eqv_r in HH.\ndestruct HH as [HH [[x' AA] BB]].\nassert (x' = x); subst; auto.\neapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto.\nbasic_solver.\nunfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= rfe certG ⨾ Crmw ⨾ (rfi certG ⨾ Crmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\nunionR left.\narewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nunionR right -> left.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"cert_rf ⨾ ⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘ ⊆ Grfi ⨾ ⦗set_compl D⦘.","conclusion":"cert_rf ⨾ ⦗codom_rel Grfi⦘ ⨾ ⦗set_compl D⦘ ⊆ Grfi ⨾ ⦗set_compl D⦘","hypotheses":"","proofString":"rewrite <- id_inter.\nintros x y HH.\napply seq_eqv_r in HH.\ndestruct HH as [HH [[x' AA] BB]].\nassert (x' = x); subst; auto.\neapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto.\nbasic_solver."},{"statement":"cert_rf ⨾ ⦗codom_rel Grfi ∩₁ set_compl D⦘ ⊆ Grfi ⨾ ⦗set_compl D⦘.","conclusion":"cert_rf ⨾ ⦗codom_rel Grfi ∩₁ set_compl D⦘ ⊆ Grfi ⨾ ⦗set_compl D⦘","hypotheses":"","proofString":"intros x y HH.\napply seq_eqv_r in HH.\ndestruct HH as [HH [[x' AA] BB]].\nassert (x' = x); subst; auto.\neapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto.\nbasic_solver."},{"statement":"(x y : actid) (HH : (cert_rf ⨾ ⦗codom_rel Grfi ∩₁ set_compl D⦘) x y) : (Grfi ⨾ ⦗set_compl D⦘) x y.","conclusion":"(Grfi ⨾ ⦗set_compl D⦘) x y","hypotheses":"(x y : actid) (HH : (cert_rf ⨾ ⦗codom_rel Grfi ∩₁ set_compl D⦘) x y)","proofString":"apply seq_eqv_r in HH.\ndestruct HH as [HH [[x' AA] BB]].\nassert (x' = x); subst; auto.\neapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto.\nbasic_solver."},{"statement":"(x y : actid) (HH : cert_rf x y /\\ (codom_rel Grfi ∩₁ set_compl D) y) : (Grfi ⨾ ⦗set_compl D⦘) x y.","conclusion":"(Grfi ⨾ ⦗set_compl D⦘) x y","hypotheses":"(x y : actid) (HH : cert_rf x y /\\ (codom_rel Grfi ∩₁ set_compl D) y)","proofString":"destruct HH as [HH [[x' AA] BB]].\nassert (x' = x); subst; auto.\neapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto.\nbasic_solver."},{"statement":"(x y : actid) (HH : cert_rf x y) (x' : actid) (AA : Grfi x' y) (BB : set_compl D y) : (Grfi ⨾ ⦗set_compl D⦘) x y.","conclusion":"(Grfi ⨾ ⦗set_compl D⦘) x y","hypotheses":"(x y : actid) (HH : cert_rf x y) (x' : actid) (AA : Grfi x' y) (BB : set_compl D y)","proofString":"assert (x' = x); subst; auto.\neapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto.\nbasic_solver."},{"statement":"(x y : actid) (HH : cert_rf x y) (x' : actid) (AA : Grfi x' y) (BB : set_compl D y) : x' = x.","conclusion":"x' = x","hypotheses":"(x y : actid) (HH : cert_rf x y) (x' : actid) (AA : Grfi x' y) (BB : set_compl D y)","proofString":"eapply cert_rff; eauto.\napply Grfi_in_cert_rfi; auto."},{"statement":"(x y : actid) (HH : cert_rf x y) (x' : actid) (AA : Grfi x' y) (BB : set_compl D y) : cert_rf⁻¹ y x'.","conclusion":"cert_rf⁻¹ y x'","hypotheses":"(x y : actid) (HH : cert_rf x y) (x' : actid) (AA : Grfi x' y) (BB : set_compl D y)","proofString":"apply Grfi_in_cert_rfi; auto."},{"statement":"(x y : actid) (HH : cert_rf x y) (AA : Grfi x y) (BB : set_compl D y) : (Grfi ⨾ ⦗set_compl D⦘) x y.","conclusion":"(Grfi ⨾ ⦗set_compl D⦘) x y","hypotheses":"(x y : actid) (HH : cert_rf x y) (AA : Grfi x y) (BB : set_compl D y)","proofString":"basic_solver."},{"statement":"Crelease ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"Crelease ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"unfold release at 1, rs at 1.\nrewrite rt_rf_rmw.\nrewrite rtE with (r:= rfe certG ⨾ Crmw ⨾ (rfi certG ⨾ Crmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\nunionR left.\narewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nunionR right -> left.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^? ⨾ ⦗CW⦘ ⨾ (Csb ∩ Csame_loc)^? ⨾ ⦗CW⦘ ⨾ (Crf ⨾ Crmw)＊)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^? ⨾ ⦗CW⦘ ⨾ (Csb ∩ Csame_loc)^? ⨾ ⦗CW⦘ ⨾ (Crf ⨾ Crmw)＊)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"rewrite rt_rf_rmw.\nrewrite rtE with (r:= rfe certG ⨾ Crmw ⨾ (rfi certG ⨾ Crmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\nunionR left.\narewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nunionR right -> left.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)＊)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)＊)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"rewrite rtE with (r:= rfe certG ⨾ Crmw ⨾ (rfi certG ⨾ Crmw)＊).\nrewrite !seq_union_r, !seq_union_l; unionL.\nunionR left.\narewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nunionR right -> left.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘\n         ⨾ (Crfi ⨾ Crmw)＊\n           ⨾ (⦗fun _ : actid => True⦘ ∪ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)⁺))\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘\n         ⨾ (Crfi ⨾ Crmw)＊\n           ⨾ (⦗fun _ : actid => True⦘ ∪ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)⁺))\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"rewrite !seq_union_r, !seq_union_l; unionL.\nunionR left.\narewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21.\nunionR right -> left.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^? ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗fun _ : actid => True⦘)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^? ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗fun _ : actid => True⦘)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"unionR left.\narewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^? ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗fun _ : actid => True⦘)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^? ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗fun _ : actid => True⦘)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite (Crfi ⊆ Gsb).\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘\n        ⨾ (Gsb ⨾ Crmw)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘\n        ⨾ (Gsb ⨾ Crmw)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘\n        ⨾ (Gsb ⨾ Crmw)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘\n        ⨾ (Gsb ⨾ Crmw)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘\n        ⨾ (Gsb ⨾ Gsb)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘\n        ⨾ (Gsb ⨾ Gsb)＊\n          ⨾ ⦗fun _ : actid => True⦘\n            ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"generalize (@sb_trans G); ins; relsf.\nrevert H; basic_solver 21."},{"statement":"(H : transitive Gsb) : ⦗fun a : actid => is_rel lab' a⦘\n⨾ (⦗fun a : actid => is_f lab' a⦘ ⨾ Csb)^?\n  ⨾ ⦗fun a : actid => is_w lab' a⦘\n    ⨾ (Csb ∩ same_loc lab')^?\n      ⨾ ⦗fun a : actid => is_w lab' a⦘\n        ⨾ Gsb^? ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗fun a : actid => is_rel lab' a⦘\n⨾ (⦗fun a : actid => is_f lab' a⦘ ⨾ Csb)^?\n  ⨾ ⦗fun a : actid => is_w lab' a⦘\n    ⨾ (Csb ∩ same_loc lab')^?\n      ⨾ ⦗fun a : actid => is_w lab' a⦘\n        ⨾ Gsb^? ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"revert H; basic_solver 21."},{"statement":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)⁺)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘).","conclusion":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)⁺)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Gsb ∪ (Grelease ⨾ Grf ⨾ ⦗Acq⦘ ∪ Grelease ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘)","hypotheses":"","proofString":"unionR right -> left.\nrewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)⁺)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"(⦗CRel⦘\n ⨾ (⦗CF⦘ ⨾ Csb)^?\n   ⨾ ⦗CW⦘\n     ⨾ (Csb ∩ Csame_loc)^?\n       ⨾ ⦗CW⦘ ⨾ (Crfi ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crfi ⨾ Crmw)＊)⁺)\n⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite ct_end, <- !seqA.\narewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(((((((((((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n           ⨾ (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⨾ Crfe)\n        ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊) ⨾ ⦗W⦘) ⨾ ⦗E⦘) ⨾ Grfi) ⨾ ⦗\n   set_compl D⦘) ⨾ ⦗E⦘) ⨾ ⦗R⦘) ⨾ ⦗Acq⦘ ⊆ (Grelease ⨾ Grf) ⨾ ⦗Acq⦘.","conclusion":"(((((((((((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n           ⨾ (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⨾ Crfe)\n        ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊) ⨾ ⦗W⦘) ⨾ ⦗E⦘) ⨾ Grfi) ⨾ ⦗\n   set_compl D⦘) ⨾ ⦗E⦘) ⨾ ⦗R⦘) ⨾ ⦗Acq⦘ ⊆ (Grelease ⨾ Grf) ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (((((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘) ⨾                (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊) ⊆ Crelease).\narewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf.\narewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n ⨾ (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊ ⊆ Crelease.","conclusion":"(((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n ⨾ (Crfi ⨾ Crmw)＊) ⨾ ((Crfe ⨾ Crmw) ⨾ (Crfi ⨾ Crmw)＊)＊ ⊆ Crelease","hypotheses":"","proofString":"arewrite (Crfi ⊆ Crf).\narewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘ ⨾ (Crf ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crf ⨾ Crmw)＊)＊ ⊆ Crelease.","conclusion":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘ ⨾ (Crf ⨾ Crmw)＊ ⨾ (Crfe ⨾ Crmw ⨾ (Crf ⨾ Crmw)＊)＊ ⊆ Crelease","hypotheses":"","proofString":"arewrite (Crfe ⊆ Crf).\nrewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘ ⨾ (Crf ⨾ Crmw)＊ ⨾ (Crf ⨾ Crmw ⨾ (Crf ⨾ Crmw)＊)＊ ⊆ Crelease.","conclusion":"⦗CRel⦘\n⨾ (⦗CF⦘ ⨾ Csb)^?\n  ⨾ ⦗CW⦘\n    ⨾ (Csb ∩ Csame_loc)^?\n      ⨾ ⦗CW⦘ ⨾ (Crf ⨾ Crmw)＊ ⨾ (Crf ⨾ Crmw ⨾ (Crf ⨾ Crmw)＊)＊ ⊆ Crelease","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"(((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n ⨾ (Crf ⨾ Crmw)＊) ⨾ ((Crf ⨾ Crmw) ⨾ (Crf ⨾ Crmw)＊)＊ ⊆ Crelease.","conclusion":"(((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n ⨾ (Crf ⨾ Crmw)＊) ⨾ ((Crf ⨾ Crmw) ⨾ (Crf ⨾ Crmw)＊)＊ ⊆ Crelease","hypotheses":"","proofString":"rewrite <- !ct_begin.\nrewrite !seqA; relsf."},{"statement":"(((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n ⨾ (Crf ⨾ Crmw)＊) ⨾ ((Crf ⨾ Crmw)⁺)＊ ⊆ Crelease.","conclusion":"(((((⦗CRel⦘ ⨾ (⦗CF⦘ ⨾ Csb)^?) ⨾ ⦗CW⦘) ⨾ (Csb ∩ Csame_loc)^?) ⨾ ⦗CW⦘)\n ⨾ (Crf ⨾ Crmw)＊) ⨾ ((Crf ⨾ Crmw)⁺)＊ ⊆ Crelease","hypotheses":"","proofString":"rewrite !seqA; relsf."},{"statement":"Crelease\n⨾ Crfe\n  ⨾ Crmw\n    ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Crelease\n⨾ Crfe\n  ⨾ Crmw\n    ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘.","conclusion":"⦗set_compl D⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘","hypotheses":"","proofString":"rewrite <- C_in_D.\nclear.\nbasic_solver."},{"statement":"⦗set_compl C⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘.","conclusion":"⦗set_compl C⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘","hypotheses":"","proofString":"clear.\nbasic_solver."},{"statement":"⦗set_compl C⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘.","conclusion":"⦗set_compl C⦘ ⨾ ⦗E⦘ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"Crelease\n⨾ Crfe\n  ⨾ Crmw\n    ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Crelease\n⨾ Crfe\n  ⨾ Crmw\n    ⨾ (Crfi ⨾ Crmw)＊ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite cert_rmw.\narewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Crelease\n⨾ Crfe\n  ⨾ Grmw\n    ⨾ (Crfi ⨾ Grmw)＊ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Crelease\n⨾ Crfe\n  ⨾ Grmw\n    ⨾ (Crfi ⨾ Grmw)＊ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite_id (⦗W⦘ ⨾ ⦗E⦘).\nby basic_solver.\nrels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗fun _ : actid => True⦘.","conclusion":"⦗W⦘ ⨾ ⦗E⦘ ⊆ ⦗fun _ : actid => True⦘","hypotheses":"","proofString":"by basic_solver."},{"statement":"Crelease\n⨾ Crfe\n  ⨾ Grmw\n    ⨾ (Crfi ⨾ Grmw)＊\n      ⨾ ⦗fun _ : actid => True⦘ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Crelease\n⨾ Crfe\n  ⨾ Grmw\n    ⨾ (Crfi ⨾ Grmw)＊\n      ⨾ ⦗fun _ : actid => True⦘ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rels.\narewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Crelease\n⨾ Crfe ⨾ Grmw ⨾ (Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Crelease\n⨾ Crfe ⨾ Grmw ⨾ (Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite ((Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘  ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi).\nrewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone.\narewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi.","conclusion":"(Crfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi","hypotheses":"","proofString":"rewrite cert_rfi_eq.\neapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone."},{"statement":"(cert_rfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi.","conclusion":"(cert_rfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq \\₁ C⦘ ⊆ (Grfi ⨾ Grmw)＊ ⨾ Grfi","hypotheses":"","proofString":"eapply cert_rfi_Grmw_rt_in_Grfi_Grmw; edone."},{"statement":"Crelease ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Crelease ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (Crfe ⊆ ⦗ I ⦘ ⨾ Crfe).\nrewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone.\nrewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Crfe ⊆ ⦗I⦘ ⨾ Crfe.","conclusion":"Crfe ⊆ ⦗I⦘ ⨾ Crfe","hypotheses":"","proofString":"rewrite cert_rfe_eq.\neapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone."},{"statement":"cert_rfe ⊆ ⦗I⦘ ⨾ cert_rfe.","conclusion":"cert_rfe ⊆ ⦗I⦘ ⨾ cert_rfe","hypotheses":"","proofString":"eapply dom_rel_helper with (r:=cert_rfe).\neapply dom_cert_rfe_in_I; edone."},{"statement":"dom_rel cert_rfe ⊆₁ I.","conclusion":"dom_rel cert_rfe ⊆₁ I","hypotheses":"","proofString":"eapply dom_cert_rfe_in_I; edone."},{"statement":"Crelease ⨾ ⦗I⦘ ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Crelease ⨾ ⦗I⦘ ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite I_in_D.\nseq_rewrite Crelease_D_eq_Grelease_D.\nrewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"(Grelease ⨾ ⦗D⦘) ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"(Grelease ⨾ ⦗D⦘) ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite !seqA.\narewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease ⨾ ⦗D⦘ ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ Crfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (Crfe ⊆ Crf).\narewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease ⨾ ⦗D⦘ ⨾ Crf ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ Crf ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊).\nrewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt.\nrewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊.","conclusion":"Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⊆ (Grmw ⨾ Grfi)＊","hypotheses":"","proofString":"rewrite rt_seq_swap.\nrewrite <- seqA, <- ct_begin.\napply inclusion_t_rt."},{"statement":"Grmw ⨾ Grfi ⨾ (Grmw ⨾ Grfi)＊ ⊆ (Grmw ⨾ Grfi)＊.","conclusion":"Grmw ⨾ Grfi ⨾ (Grmw ⨾ Grfi)＊ ⊆ (Grmw ⨾ Grfi)＊","hypotheses":"","proofString":"rewrite <- seqA, <- ct_begin.\napply inclusion_t_rt."},{"statement":"(Grmw ⨾ Grfi)⁺ ⊆ (Grmw ⨾ Grfi)＊.","conclusion":"(Grmw ⨾ Grfi)⁺ ⊆ (Grmw ⨾ Grfi)＊","hypotheses":"","proofString":"apply inclusion_t_rt."},{"statement":"Grelease ⨾ ⦗D⦘ ⨾ Crf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ Crf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite r_to_dom_rel_r_r with (r:=(Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘).\narewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease\n⨾ ⦗D⦘\n  ⨾ Crf\n    ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘)⦘\n      ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘ ⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease\n⨾ ⦗D⦘\n  ⨾ Crf\n    ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘)⦘\n      ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘ ⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (Crf ⨾ ⦗ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E∩₁R∩₁Acq \\₁ C⦘) ⦘ ⊆ Grf).\nrewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone.\narewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Crf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘)⦘ ⊆ Grf.","conclusion":"Crf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘)⦘ ⊆ Grf","hypotheses":"","proofString":"rewrite cert_rf_eq.\neapply cert_rf_to_Acq_nC_in_Grf; edone."},{"statement":"cert_rf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘)⦘ ⊆ Grf.","conclusion":"cert_rf ⨾ ⦗dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘)⦘ ⊆ Grf","hypotheses":"","proofString":"eapply cert_rf_to_Acq_nC_in_Grf; edone."},{"statement":"Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ ⦗D⦘ ⨾ Grf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite_id ⦗D⦘.\nrewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease\n⨾ ⦗fun _ : actid => True⦘ ⨾ Grf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease\n⨾ ⦗fun _ : actid => True⦘ ⨾ Grf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite seq_id_l.\narewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease ⨾ Grf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ Grf ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (Grfi ⊆ Grf).\nseq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease ⨾ Grf ⨾ (Grmw ⨾ Grf)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ Grf ⨾ (Grmw ⨾ Grf)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"seq_rewrite <- rt_seq_swap.\nrewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease ⨾ ((Grf ⨾ Grmw)＊ ⨾ Grf) ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ ((Grf ⨾ Grmw)＊ ⨾ Grf) ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite !seqA.\nsin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease ⨾ (Grf ⨾ Grmw)＊ ⨾ Grf ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ (Grf ⨾ Grmw)＊ ⨾ Grf ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘\n⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"sin_rewrite release_rf_rmw_steps.\nclear.\nbasic_solver."},{"statement":"Grelease ⨾ Grf ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘ ⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ Grf ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘ ⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"clear.\nbasic_solver."},{"statement":"Grelease ⨾ Grf ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘ ⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘.","conclusion":"Grelease ⨾ Grf ⨾ ⦗E ∩₁ R ∩₁ Acq \\₁ C⦘ ⊆ Grelease ⨾ Grf ⨾ ⦗Acq⦘","hypotheses":"","proofString":"basic_solver."}]}