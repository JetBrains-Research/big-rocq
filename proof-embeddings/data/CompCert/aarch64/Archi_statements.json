{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/aarch64/Archi.v","fileSamples":[{"statement":"(is_signaling : positive -> bool) (default n : bool * positive) : choose_nan is_signaling default (n :: n :: nil) =\nchoose_nan is_signaling default (n :: nil).","proofString":"destruct n as [s p]; unfold choose_nan; simpl.\ndestruct (is_signaling p); auto."},{"statement":"(is_signaling : positive -> bool) (default : bool * positive) (s : bool) (p : positive) : (if is_signaling p then (s, p) else if is_signaling p then (s, p) else (s, p)) =\n(if is_signaling p then (s, p) else (s, p)).","proofString":"destruct (is_signaling p); auto."}]}