[{"statement":"Lemma ct_ar_int_alt1 WF: (ar_int)⁺ ⊆ \nsb^? ⨾ ⦗F∩₁Acq/Rel⦘ ⨾ sb ∪\n⦗R∩₁Acq⦘ ⨾ sb ∪\n(sb ⨾ ⦗W∩₁Rel⦘ ∪ ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪\n  sb ⨾ ⦗F∩₁Acq/Rel⦘ ∪\n  detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R∩₁Acq⦘ ⨾ sb^?)⁺.","proof":"assert (helper: (sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘)＊⊆(sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ∪ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ ppo ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R∩₁Acq⦘ ⨾ sb^?)＊).\nby apply inclusion_rt_rt; basic_solver 12.\nunfold imm_s_ppo.ar_int, imm_bob.bob, imm_bob.fwbob.\narewrite (sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ∪ ⦗R ∩₁ Acq⦘ ⨾ sb ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⊆sb ⨾ ⦗W ∩₁ Rel⦘ ∪ ⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ sb ⨾ ⦗F ∩₁ Acq/Rel⦘  ∪ ppo ∪ detour ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ∪ (⦗R ∩₁ Acq⦘ ⨾ sb ∪ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb)) at 1.\nbasic_solver 12.\nrewrite path_ut_first; rels; unionL.\nby unionR right; apply inclusion_t_t; basic_solver 12.\narewrite (sb ∩ same_loc ⊆ sb) at 2.\nrewrite detour_in_sb, (ppo_in_sb WF) at 2.\narewrite (rfi ⊆ sb) at 2.\narewrite_id ⦗W_ex_acq⦘ at 2.\narewrite_id ⦗W_ex⦘ at 2.\narewrite_id ⦗W⦘ at 3.\narewrite_id ⦗R ∩₁ Acq⦘ at 3.\narewrite_id ⦗R ∩₁ Acq⦘ at 3.\narewrite_id  ⦗W ∩₁ Rel⦘ at 3.\narewrite_id  ⦗W ∩₁ Rel⦘ at 3.\narewrite_id ⦗W⦘ at 3.\narewrite_id ⦗F ∩₁ Acq/Rel⦘ at 3.\narewrite_id ⦗F ∩₁ Acq/Rel⦘ at 3.\ngeneralize (@sb_trans G); ins; relsf.\nrewrite !seqA; relsf.\nunionL.\n- rewrite rtE; relsf; unionL; [basic_solver 12|].\nunionR right.\nrewrite ct_end; relsf; unionL.\n* type_solver.\n* type_solver.\n* type_solver.\n* rewrite (dom_r (@wf_ppoD G)) at 2; type_solver.\n* rewrite ct_end, helper; basic_solver 40.\n* type_solver.\n* rewrite ct_end, helper; basic_solver 40.\n- arewrite (sb ∩ same_loc ⊆ sb) at 1.\nrewrite detour_in_sb, (ppo_in_sb WF) at 1.\narewrite_id ⦗W_ex_acq⦘ at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗F ∩₁ Acq/Rel⦘ at 1.\narewrite (rfi ⊆ sb) at 1.\narewrite_id  ⦗R ∩₁ Acq⦘ at 1.\narewrite_id  ⦗W_ex⦘ at 1.\nrelsf.\n"},{"statement":"Lemma ct_ar_int_alt2 WF: \n (sb ⨾ ⦗W∩₁Rel⦘ ∪ ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪\n  sb ⨾ ⦗F∩₁Acq/Rel⦘ ∪ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)⁺ ⊆ \nsb ⨾ ⦗F∩₁Acq/Rel⦘ ⨾ sb^? ∪\n(sb ⨾ ⦗W∩₁Rel⦘ ∪ ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪\n  detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)⁺.","proof":"arewrite (sb ⨾ ⦗W∩₁Rel⦘ ∪ ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪  sb ⨾ ⦗F∩₁Acq/Rel⦘ ∪ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪   ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^? ⊆sb ⨾ ⦗W∩₁Rel⦘ ∪ ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘  ∪ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪   ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^? ∪  sb ⨾ ⦗F∩₁Acq/Rel⦘) at 1.\nbasic_solver 12.\nrewrite path_ut_first; rels; unionL.\nby unionR right; apply inclusion_t_t; basic_solver 12.\narewrite (sb ∩ same_loc ⊆ sb) at 1.\narewrite (sb ∩ same_loc ⊆ sb) at 1.\nrewrite detour_in_sb, (ppo_in_sb WF) at 1 2.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗R ∩₁ Acq⦘ at 1.\narewrite_id ⦗R ∩₁ Acq⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W_ex_acq⦘ at 1.\narewrite_id  ⦗W_ex_acq⦘ at 1.\narewrite_id ⦗F ∩₁ Acq/Rel⦘ at 2.\narewrite (rfi ⊆ sb) at 1.\narewrite_id  ⦗R ∩₁ Acq⦘ at 1.\narewrite_id  ⦗W_ex⦘ at 1.\narewrite (rfi ⊆ sb) at 1.\narewrite_id  ⦗R ∩₁ Acq⦘ at 1.\narewrite_id  ⦗W_ex⦘ at 1.\ngeneralize (@sb_trans G); ins; relsf.\n"},{"statement":"Lemma W_sb_same_loc_detour WF (SC_PER_LOC: sc_per_loc G) :\n⦗fun x => ~ is_init x⦘ ⨾ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ detour ⊆ detour.","proof":"sin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nunfold Execution.detour.\nunfolder; ins; desf.\nsplits.\n- exists z0; splits; eauto.\napply coi_coe; eauto.\nbasic_solver.\n- ie_unfolder; unfolder in*; desf.\neapply (@sb_trans G); eauto.\n"},{"statement":"Lemma ct_ar_int_alt3 WF (SC_PER_LOC: sc_per_loc G) : \n(sb ⨾ ⦗W∩₁Rel⦘ ∪ ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪\n  detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)⁺ ⊆ \n⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪ \n(sb ⨾ ⦗W∩₁Rel⦘ ∪\n  detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ \n(⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n∪ \n(⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)⁺ ⨾\n(⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^?.","proof":"arewrite (sb ⨾ ⦗W∩₁Rel⦘ ∪ ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪  detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪   ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^? ⊆⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪ (sb ⨾ ⦗W∩₁Rel⦘ ∪  detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪   ppo  ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)) at 1.\nbasic_solver 12.\nassert (transitive (⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)).\n{\napply transitiveI.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗W ∩₁ Rel⦘ at 2.\ngeneralize (@sb_same_loc_trans G).\nins; relsf.\n}\nrewrite path_union.\nrelsf; unionL.\n- basic_solver 12.\n- unionR right.\nhahn_frame_r.\napply inclusion_t_t; unionL.\nall: case_refl (⦗W ∩₁ Rel⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘); [basic_solver 20|].\n* arewrite (sb ∩ same_loc ⊆ sb) at 1.\narewrite_id ⦗W⦘ at 1.\ngeneralize (@sb_trans G); ins; relsf.\nbasic_solver 12.\n* rewrite !seqA.\narewrite (⦗W ∩₁ Rel⦘ ⊆ ⦗fun x => ~ is_init x⦘ ⨾ ⦗W⦘).\n{\nunfolder; ins; desf; splits; eauto.\nintro K; apply (init_pln WF) in K; mode_solver.\n}\nsin_rewrite (W_sb_same_loc_detour WF SC_PER_LOC).\nbasic_solver 12.\n* rewrite (dom_l (@wf_ppoD G)) at 1; type_solver.\n* basic_solver 20.\n* basic_solver 20.\n"},{"statement":"Lemma ct_ar_int_alt4 WF: \n(sb ⨾ ⦗W∩₁Rel⦘ ∪\n  detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n∪ \n(⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)⁺\n \n\n⊆ \nsb ⨾ ⦗W∩₁Rel⦘ ∪\n( (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc)⨾ ⦗W⦘)^? ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n∪ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)⁺.","proof":"rewrite !unionA.\nassert (transitive (sb ⨾ ⦗W ∩₁ Rel⦘)).\n{\napply transitiveI.\narewrite_id ⦗W ∩₁ Rel⦘ at 1.\ngeneralize (@sb_trans G).\nins; relsf.\n}\nrewrite path_union.\nrelsf; unionL.\n- basic_solver 12.\n- rewrite crE at 5; relsf; unionL; cycle 1.\n* arewrite (sb ∩ same_loc ⊆ sb) at 1.\nrewrite detour_in_sb, (ppo_in_sb WF) at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗R ∩₁ Acq⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id  ⦗W_ex_acq⦘ at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗W_ex⦘ at 1.\narewrite_id ⦗R ∩₁ Acq⦘ at 1.\narewrite (rfi ⊆ sb) at 1.\narewrite (sb ∩ same_loc ⊆ sb) at 1.\narewrite_id  ⦗W ∩₁ Rel⦘ at 1.\ngeneralize (@sb_trans G); ins; relsf.\n* unionR right.\napply inclusion_t_t; unionL.\n+ basic_solver 12.\n+ rewrite crE at 1; relsf; unionL; [basic_solver 12|].\nrewrite (dom_l (@wf_ppoD G)) at 1; type_solver.\n+ basic_solver 21.\n+ basic_solver 30.\n"},{"statement":"Lemma ct_ar_int_alt5 WF: \n ((sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo  ∪ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc)⨾ ⦗W⦘)^? ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘\n∪ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?)⁺\n ⊆ \nppo ∪\n (ppo^? ⨾ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo^? ⨾ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪\nppo^? ⨾ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?\n)⁺\n⨾ ppo^?.","proof":"arewrite ((sb ⨾ ⦗W ∩₁ Rel⦘)^? ⨾ detour ⨾ (⦗R ∩₁ Acq⦘ ⨾ sb)^? ∪ ppo  ⊆ppo ∪ ((sb ⨾ ⦗W ∩₁ Rel⦘)^? ⨾ detour ⨾ (⦗R ∩₁ Acq⦘ ⨾ sb)^?)) at 1.\nrewrite !unionA.\nassert (transitive ppo).\n{\napply transitiveI.\nrewrite (dom_r (@wf_ppoD G)) at 1; rewrite (dom_l (@wf_ppoD G)) at 2; type_solver.\n}\nrewrite path_union.\nrelsf; unionL.\n"},{"statement":"Lemma ct_ar_int_alt WF \n(SC_PER_LOC: sc_per_loc G) : \n\n(ar_int)⁺ ⊆ \n\nsb^? ⨾ ⦗F∩₁Acq/Rel⦘ ⨾ sb ∪\n⦗R∩₁Acq⦘ ⨾ sb ∪\nsb ⨾ ⦗F∩₁Acq/Rel⦘ ⨾ sb^? ∪\n⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ∪ \nsb ⨾ ⦗W∩₁Rel⦘ ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ∪\nppo ⨾\n(⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ∪\n (ppo^? ⨾ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ detour ⨾ (⦗R∩₁Acq⦘ ⨾ sb)^? ∪ \n  ppo^? ⨾ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ∪ \n  ppo^? ⨾ (sb ⨾ ⦗W∩₁Rel⦘)^? ⨾ (⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^? ⨾ ⦗W_ex⦘ ⨾ rfi ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb^?\n)⁺ ⨾ ppo^? ⨾\n(⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘)^?.","proof":"rewrite (ct_ar_int_alt1 WF).\nunionL; [basic_solver 12| basic_solver 12|].\nrewrite (ct_ar_int_alt2 WF).\nunionL; [basic_solver 12|].\nrewrite (ct_ar_int_alt3 WF SC_PER_LOC).\nunionL; [basic_solver 12|].\nrewrite (ct_ar_int_alt4 WF).\nrewrite (ct_ar_int_alt5 WF).\nbasic_solver 21.\n"}]