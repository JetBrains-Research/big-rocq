{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/promising2ToImm/src/ext_traversal/ExtTraversal.v","fileSamples":[{"statement":"(e : actid) (r : relation actid) : dom_rel\n  (r\n   ⨾ sb\n     ⨾ ⦗reserved T ∪₁ eq e\n        ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (r\n   ⨾ sb\n     ⨾ ⦗reserved T ∪₁ eq e\n        ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"rewrite id_union.\nrewrite !seq_union_r, dom_union.\nunionL; [done|].\narewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\ngeneralize (@sb_trans G).\nbasic_solver 10."},{"statement":"(e : actid) (r : relation actid) : dom_rel\n  (r\n   ⨾ sb\n     ⨾ (⦗reserved T ∪₁ eq e⦘\n        ∪ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘))\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (r\n   ⨾ sb\n     ⨾ (⦗reserved T ∪₁ eq e⦘\n        ∪ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘))\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"rewrite !seq_union_r, dom_union.\nunionL; [done|].\narewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\ngeneralize (@sb_trans G).\nbasic_solver 10."},{"statement":"(e : actid) (r : relation actid) : dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)\n∪₁ dom_rel\n     (r\n      ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)\n∪₁ dom_rel\n     (r\n      ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"unionL; [done|].\narewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\ngeneralize (@sb_trans G).\nbasic_solver 10."},{"statement":"(e : actid) (r : relation actid) : dom_rel\n  (r ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (r ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"arewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\ngeneralize (@sb_trans G).\nbasic_solver 10."},{"statement":"(e : actid) (r : relation actid) : dom_rel (r ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel (r ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"generalize (@sb_trans G).\nbasic_solver 10."},{"statement":"(e : actid) (r : relation actid) : transitive sb ->\ndom_rel (r ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"transitive sb ->\ndom_rel (r ⨾ sb ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"basic_solver 10."},{"statement":"(e : actid) (r : relation actid) : dom_rel\n  (r\n   ⨾ rppo\n     ⨾ ⦗reserved T ∪₁ eq e\n        ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (r\n   ⨾ rppo\n     ⨾ ⦗reserved T ∪₁ eq e\n        ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"rewrite id_union.\nrewrite !seq_union_r, dom_union.\nunionL; [done|].\narewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\narewrite (reserved T ⊆₁ W ∩₁ reserved T) at 1.\ngeneralize (reservedW WF).\nbasic_solver.\ngeneralize (rppo_sb_in_rppo WF).\nbasic_solver 20."},{"statement":"(e : actid) (r : relation actid) : dom_rel\n  (r\n   ⨾ rppo\n     ⨾ (⦗reserved T ∪₁ eq e⦘\n        ∪ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘))\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (r\n   ⨾ rppo\n     ⨾ (⦗reserved T ∪₁ eq e⦘\n        ∪ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘))\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"rewrite !seq_union_r, dom_union.\nunionL; [done|].\narewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\narewrite (reserved T ⊆₁ W ∩₁ reserved T) at 1.\ngeneralize (reservedW WF).\nbasic_solver.\ngeneralize (rppo_sb_in_rppo WF).\nbasic_solver 20."},{"statement":"(e : actid) (r : relation actid) : dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)\n∪₁ dom_rel\n     (r\n      ⨾ rppo\n        ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)\n∪₁ dom_rel\n     (r\n      ⨾ rppo\n        ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"unionL; [done|].\narewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\narewrite (reserved T ⊆₁ W ∩₁ reserved T) at 1.\ngeneralize (reservedW WF).\nbasic_solver.\ngeneralize (rppo_sb_in_rppo WF).\nbasic_solver 20."},{"statement":"(e : actid) (r : relation actid) : dom_rel\n  (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"arewrite (dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw) ⊆₁            dom_rel (sb ⨾ ⦗reserved T⦘)) by basic_solver.\narewrite (reserved T ⊆₁ W ∩₁ reserved T) at 1.\ngeneralize (reservedW WF).\nbasic_solver.\ngeneralize (rppo_sb_in_rppo WF).\nbasic_solver 20."},{"statement":"(e : actid) (r : relation actid) : dom_rel (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"arewrite (reserved T ⊆₁ W ∩₁ reserved T) at 1.\ngeneralize (reservedW WF).\nbasic_solver.\ngeneralize (rppo_sb_in_rppo WF).\nbasic_solver 20."},{"statement":"(e : actid) (r : relation actid) : reserved T ⊆₁ W ∩₁ reserved T.","conclusion":"reserved T ⊆₁ W ∩₁ reserved T","hypotheses":"(e : actid) (r : relation actid)","proofString":"generalize (reservedW WF).\nbasic_solver."},{"statement":"(e : actid) (r : relation actid) : (forall T0 : trav_label -> Prop,\n tls_coherent G T0 -> reserve_coherent G T0 -> reserved T0 ⊆₁ W) ->\nreserved T ⊆₁ W ∩₁ reserved T.","conclusion":"(forall T0 : trav_label -> Prop,\n tls_coherent G T0 -> reserve_coherent G T0 -> reserved T0 ⊆₁ W) ->\nreserved T ⊆₁ W ∩₁ reserved T","hypotheses":"(e : actid) (r : relation actid)","proofString":"basic_solver."},{"statement":"(e : actid) (r : relation actid) : dom_rel (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗W ∩₁ reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗W ∩₁ reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"generalize (rppo_sb_in_rppo WF).\nbasic_solver 20."},{"statement":"(e : actid) (r : relation actid) : rppo ⨾ sb ⨾ ⦗W⦘ ⊆ rppo ->\ndom_rel (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗W ∩₁ reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"rppo ⨾ sb ⨾ ⦗W⦘ ⊆ rppo ->\ndom_rel (r ⨾ rppo ⨾ ⦗dom_rel (sb ⨾ ⦗W ∩₁ reserved T⦘)⦘)\n⊆₁ dom_rel (r ⨾ rppo ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (r : relation actid)","proofString":"basic_solver 20."},{"statement":"(e : actid) (AA : sb ≡ ⦗fun _ : actid => True⦘ ⨾ sb) : dom_rel\n  (sb\n   ⨾ ⦗reserved T ∪₁ eq e\n      ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n≡₁ dom_rel (sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (sb\n   ⨾ ⦗reserved T ∪₁ eq e\n      ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n≡₁ dom_rel (sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (AA : sb ≡ ⦗fun _ : actid => True⦘ ⨾ sb)","proofString":"rewrite AA at 1 3.\nrewrite !seqA.\nby apply dom_r_sb_new_reserved."},{"statement":"(e : actid) (AA : sb ≡ ⦗fun _ : actid => True⦘ ⨾ sb) : dom_rel\n  ((⦗fun _ : actid => True⦘ ⨾ sb)\n   ⨾ ⦗reserved T ∪₁ eq e\n      ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n≡₁ dom_rel ((⦗fun _ : actid => True⦘ ⨾ sb) ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  ((⦗fun _ : actid => True⦘ ⨾ sb)\n   ⨾ ⦗reserved T ∪₁ eq e\n      ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n≡₁ dom_rel ((⦗fun _ : actid => True⦘ ⨾ sb) ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (AA : sb ≡ ⦗fun _ : actid => True⦘ ⨾ sb)","proofString":"rewrite !seqA.\nby apply dom_r_sb_new_reserved."},{"statement":"(e : actid) (AA : sb ≡ ⦗fun _ : actid => True⦘ ⨾ sb) : dom_rel\n  (⦗fun _ : actid => True⦘\n   ⨾ sb\n     ⨾ ⦗reserved T ∪₁ eq e\n        ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n≡₁ dom_rel (⦗fun _ : actid => True⦘ ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘).","conclusion":"dom_rel\n  (⦗fun _ : actid => True⦘\n   ⨾ sb\n     ⨾ ⦗reserved T ∪₁ eq e\n        ∪₁ dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq e⦘ ⨾ rfi ⨾ rmw)⦘)\n≡₁ dom_rel (⦗fun _ : actid => True⦘ ⨾ sb ⨾ ⦗reserved T ∪₁ eq e⦘)","hypotheses":"(e : actid) (AA : sb ≡ ⦗fun _ : actid => True⦘ ⨾ sb)","proofString":"by apply dom_r_sb_new_reserved."},{"statement":"dom_rel (rfe ⨾ rppo ⨾ ⦗reserved T⦘)\n⊆₁ dom_rel ((detour ∪ rfe) ⨾ (data ∪ rfi ∪ rmw)＊ ⨾ rppo ⨾ ⦗reserved T⦘).","conclusion":"dom_rel (rfe ⨾ rppo ⨾ ⦗reserved T⦘)\n⊆₁ dom_rel ((detour ∪ rfe) ⨾ (data ∪ rfi ∪ rmw)＊ ⨾ rppo ⨾ ⦗reserved T⦘)","hypotheses":"","proofString":"rewrite <- inclusion_id_rt.\nrewrite seq_id_l.\nbasic_solver 10."},{"statement":"dom_rel (rfe ⨾ rppo ⨾ ⦗reserved T⦘)\n⊆₁ dom_rel ((detour ∪ rfe) ⨾ ⦗fun _ : actid => True⦘ ⨾ rppo ⨾ ⦗reserved T⦘).","conclusion":"dom_rel (rfe ⨾ rppo ⨾ ⦗reserved T⦘)\n⊆₁ dom_rel ((detour ∪ rfe) ⨾ ⦗fun _ : actid => True⦘ ⨾ rppo ⨾ ⦗reserved T⦘)","hypotheses":"","proofString":"rewrite seq_id_l.\nbasic_solver 10."},{"statement":"dom_rel (rfe ⨾ rppo ⨾ ⦗reserved T⦘)\n⊆₁ dom_rel ((detour ∪ rfe) ⨾ rppo ⨾ ⦗reserved T⦘).","conclusion":"dom_rel (rfe ⨾ rppo ⨾ ⦗reserved T⦘)\n⊆₁ dom_rel ((detour ∪ rfe) ⨾ rppo ⨾ ⦗reserved T⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (STEP : ext_itrav_step lbl T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) : E (event lbl).","conclusion":"E (event lbl)","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (STEP : ext_itrav_step lbl T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T)","proofString":"apply tlsc_E with (tc := T'); auto.\napply ets_upd0.\nbasic_solver."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (STEP : ext_itrav_step lbl T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) : T' lbl.","conclusion":"T' lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (STEP : ext_itrav_step lbl T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T)","proofString":"apply ets_upd0.\nbasic_solver."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (STEP : ext_itrav_step lbl T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) : (T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) lbl.","conclusion":"(T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (STEP : ext_itrav_step lbl T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T)","proofString":"basic_solver."},{"statement":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T) : is_w lab w.","conclusion":"is_w lab w","hypotheses":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T)","proofString":"eapply reservedW; [| by apply ets_tls_coh0 | ..]; auto.\napply reserved_union.\nright.\nred.\nvauto."},{"statement":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T) : reserved (T ∪₁ eq (mkTL ta_reserve w)) w.","conclusion":"reserved (T ∪₁ eq (mkTL ta_reserve w)) w","hypotheses":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T)","proofString":"apply reserved_union.\nright.\nred.\nvauto."},{"statement":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T) : (reserved T ∪₁ reserved (eq (mkTL ta_reserve w))) w.","conclusion":"(reserved T ∪₁ reserved (eq (mkTL ta_reserve w))) w","hypotheses":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T)","proofString":"right.\nred.\nvauto."},{"statement":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T) : reserved (eq (mkTL ta_reserve w)) w.","conclusion":"reserved (eq (mkTL ta_reserve w)) w","hypotheses":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T)","proofString":"red.\nvauto."},{"statement":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T) : (event ↑₁ (eq (mkTL ta_reserve w) ∩₁ action ↓₁ eq ta_reserve)) w.","conclusion":"(event ↑₁ (eq (mkTL ta_reserve w) ∩₁ action ↓₁ eq ta_reserve)) w","hypotheses":"(w : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve w) T (T ∪₁ eq (mkTL ta_reserve w))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve w))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve w))) (ets_new_ta0 : ~ T (mkTL ta_reserve w)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve w)) ->\naction (mkTL ta_reserve w) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve w))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve w)\n≡₁ T ∪₁ eq (mkTL ta_reserve w)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve w) T)","proofString":"vauto."},{"statement":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) : ~ reserved T e.","conclusion":"~ reserved T e","hypotheses":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T)","proofString":"intros RES.\napply ets_new_ta0.\nred in RES.\nunfolder in RES.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : reserved T e) : False.","conclusion":"False","hypotheses":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : reserved T e)","proofString":"apply ets_new_ta0.\nred in RES.\nunfolder in RES.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : reserved T e) : T (mkTL ta_reserve e).","conclusion":"T (mkTL ta_reserve e)","hypotheses":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : reserved T e)","proofString":"red in RES.\nunfolder in RES.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : (event ↑₁ (T ∩₁ action ↓₁ eq ta_reserve)) e) : T (mkTL ta_reserve e).","conclusion":"T (mkTL ta_reserve e)","hypotheses":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : (event ↑₁ (T ∩₁ action ↓₁ eq ta_reserve)) e)","proofString":"unfolder in RES.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : exists y : trav_label, (T y /\\ ta_reserve = action y) /\\ event y = e) : T (mkTL ta_reserve e).","conclusion":"T (mkTL ta_reserve e)","hypotheses":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (RES : exists y : trav_label, (T y /\\ ta_reserve = action y) /\\ event y = e)","proofString":"desc.\ndestruct y; ins; vauto."},{"statement":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (y : trav_label) (RES : T y) (RES1 : ta_reserve = action y) (RES0 : event y = e) : T (mkTL ta_reserve e).","conclusion":"T (mkTL ta_reserve e)","hypotheses":"(e : actid) (T : trav_label -> Prop) (STEP : ext_itrav_step (mkTL ta_reserve e) T (T ∪₁ eq (mkTL ta_reserve e))) (ets_tls_coh0 : tls_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_iord_coh0 : iord_coherent G sc (T ∪₁ eq (mkTL ta_reserve e))) (ets_reserve_coh0 : reserve_coherent G (T ∪₁ eq (mkTL ta_reserve e))) (ets_new_ta0 : ~ T (mkTL ta_reserve e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_reserve e)) ->\naction (mkTL ta_reserve e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_reserve e))) (ets_upd0 : T ∪₁ eq (mkTL ta_reserve e)\n≡₁ T ∪₁ eq (mkTL ta_reserve e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_reserve e) T) (y : trav_label) (RES : T y) (RES1 : ta_reserve = action y) (RES0 : event y = e)","proofString":"destruct y; ins; vauto."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) : False.","conclusion":"False","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl))","proofString":"inv STEP.\napply ets_new_ta0.\npose proof TCOH as [INIT _].\napply INIT.\nassert (T' lbl) as T'lbl by (apply ets_upd0; basic_solver).\neapply tls_coh_exec in T'lbl; eauto.\nred in T'lbl.\ndes; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) : False.","conclusion":"False","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T)","proofString":"apply ets_new_ta0.\npose proof TCOH as [INIT _].\napply INIT.\nassert (T' lbl) as T'lbl by (apply ets_upd0; basic_solver).\neapply tls_coh_exec in T'lbl; eauto.\nred in T'lbl.\ndes; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) : T lbl.","conclusion":"T lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T)","proofString":"pose proof TCOH as [INIT _].\napply INIT.\nassert (T' lbl) as T'lbl by (apply ets_upd0; basic_solver).\neapply tls_coh_exec in T'lbl; eauto.\nred in T'lbl.\ndes; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) : T lbl.","conclusion":"T lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T)","proofString":"apply INIT.\nassert (T' lbl) as T'lbl by (apply ets_upd0; basic_solver).\neapply tls_coh_exec in T'lbl; eauto.\nred in T'lbl.\ndes; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) : init_tls G lbl.","conclusion":"init_tls G lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T)","proofString":"assert (T' lbl) as T'lbl by (apply ets_upd0; basic_solver).\neapply tls_coh_exec in T'lbl; eauto.\nred in T'lbl.\ndes; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : T' lbl) : init_tls G lbl.","conclusion":"init_tls G lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : T' lbl)","proofString":"eapply tls_coh_exec in T'lbl; eauto.\nred in T'lbl.\ndes; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : (init_tls G ∪₁ exec_tls G) lbl) : init_tls G lbl.","conclusion":"init_tls G lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : (init_tls G ∪₁ exec_tls G) lbl)","proofString":"red in T'lbl.\ndes; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : init_tls G lbl \\/ exec_tls G lbl) : init_tls G lbl.","conclusion":"init_tls G lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : init_tls G lbl \\/ exec_tls G lbl)","proofString":"des; auto.\napply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : exec_tls G lbl) : init_tls G lbl.","conclusion":"init_tls G lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : exec_tls G lbl)","proofString":"apply exec_tls_ENI in T'lbl.\ndo 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : (event ↓₁ (E \\₁ Init)) lbl) : init_tls G lbl.","conclusion":"init_tls G lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : (event ↓₁ (E \\₁ Init)) lbl)","proofString":"do 2 red in T'lbl.\nby desc."},{"statement":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : E (event lbl) /\\ ~ is_init (event lbl)) : init_tls G lbl.","conclusion":"init_tls G lbl","hypotheses":"(lbl : trav_label) (T T' : trav_label -> Prop) (TCOH : tls_coherent G T) (STEP : ext_itrav_step lbl T T') (II : is_init (event lbl)) (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T lbl) (ets_issue_W_ex0 : W_ex (event lbl) -> action lbl = ta_issue -> T (ta_reserve, event lbl)) (ets_upd0 : T' ≡₁ T ∪₁ eq lbl ∪₁ eq ta_reserve <*> ets_upd_reserve lbl T) (INIT : init_tls G ⊆₁ T) (T'lbl : E (event lbl) /\\ ~ is_init (event lbl))","proofString":"by desc."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) : coverable G sc T e.","conclusion":"coverable G sc T e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T)","proofString":"red.\nassert (T' (mkTL ta_cover e)) as T'lbl by (apply ets_upd0; basic_solver).\nsplit.\neapply tlsc_E in T'lbl; eauto.\nexists (mkTL ta_cover e).\ndo 2 split; vauto.\nred.\nins.\nrewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) : (E ∩₁ event ↑₁ (dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover)) e.","conclusion":"(E ∩₁ event ↑₁ (dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover)) e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T)","proofString":"assert (T' (mkTL ta_cover e)) as T'lbl by (apply ets_upd0; basic_solver).\nsplit.\neapply tlsc_E in T'lbl; eauto.\nexists (mkTL ta_cover e).\ndo 2 split; vauto.\nred.\nins.\nrewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e)) : (E ∩₁ event ↑₁ (dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover)) e.","conclusion":"(E ∩₁ event ↑₁ (dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover)) e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e))","proofString":"split.\neapply tlsc_E in T'lbl; eauto.\nexists (mkTL ta_cover e).\ndo 2 split; vauto.\nred.\nins.\nrewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e)) : E e.","conclusion":"E e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e))","proofString":"eapply tlsc_E in T'lbl; eauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e)) : (event ↑₁ (dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover)) e.","conclusion":"(event ↑₁ (dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover)) e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e))","proofString":"exists (mkTL ta_cover e).\ndo 2 split; vauto.\nred.\nins.\nrewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e)) : (dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover) (mkTL ta_cover e) /\\\nevent (mkTL ta_cover e) = e.","conclusion":"(dom_cond (iord G sc) T ∩₁ action ↓₁ eq ta_cover) (mkTL ta_cover e) /\\\nevent (mkTL ta_cover e) = e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e))","proofString":"do 2 split; vauto.\nred.\nins.\nrewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e)) : dom_cond (iord G sc) T (mkTL ta_cover e).","conclusion":"dom_cond (iord G sc) T (mkTL ta_cover e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e))","proofString":"red.\nins.\nrewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e)) : dom_rel (iord G sc ⨾ ⦗eq (mkTL ta_cover e)⦘) ⊆₁ T.","conclusion":"dom_rel (iord G sc ⨾ ⦗eq (mkTL ta_cover e)⦘) ⊆₁ T","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (T'lbl : T' (mkTL ta_cover e))","proofString":"ins.\nrewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex e -> ta_cover = ta_issue -> T (ta_reserve, e)) (ets_upd0 : T' ≡₁ T ∪₁ eq (mkTL ta_cover e) ∪₁ eq ta_reserve <*> ∅) (T'lbl : T' (mkTL ta_cover e)) : dom_rel (iord G sc ⨾ ⦗eq (mkTL ta_cover e)⦘) ⊆₁ T.","conclusion":"dom_rel (iord G sc ⨾ ⦗eq (mkTL ta_cover e)⦘) ⊆₁ T","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex e -> ta_cover = ta_issue -> T (ta_reserve, e)) (ets_upd0 : T' ≡₁ T ∪₁ eq (mkTL ta_cover e) ∪₁ eq ta_reserve <*> ∅) (T'lbl : T' (mkTL ta_cover e))","proofString":"rewrite set_pair_alt, set_inter_empty_r, set_union_empty_r in ets_upd0.\netransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex e -> ta_cover = ta_issue -> T (ta_reserve, e)) (ets_upd0 : T' ≡₁ T ∪₁ eq (mkTL ta_cover e)) (T'lbl : T' (mkTL ta_cover e)) : dom_rel (iord G sc ⨾ ⦗eq (mkTL ta_cover e)⦘) ⊆₁ T.","conclusion":"dom_rel (iord G sc ⨾ ⦗eq (mkTL ta_cover e)⦘) ⊆₁ T","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex e -> ta_cover = ta_issue -> T (ta_reserve, e)) (ets_upd0 : T' ≡₁ T ∪₁ eq (mkTL ta_cover e)) (T'lbl : T' (mkTL ta_cover e))","proofString":"etransitivity.\neapply iord_coherent_element_prefix; eauto.\nrewrite ets_upd0.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex e -> ta_cover = ta_issue -> T (ta_reserve, e)) (ets_upd0 : T' ≡₁ T ∪₁ eq (mkTL ta_cover e)) (T'lbl : T' (mkTL ta_cover e)) : (T ∪₁ eq (mkTL ta_cover e)) \\₁ eq (mkTL ta_cover e) ⊆₁ T.","conclusion":"(T ∪₁ eq (mkTL ta_cover e)) \\₁ eq (mkTL ta_cover e) ⊆₁ T","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex e -> ta_cover = ta_issue -> T (ta_reserve, e)) (ets_upd0 : T' ≡₁ T ∪₁ eq (mkTL ta_cover e)) (T'lbl : T' (mkTL ta_cover e))","proofString":"basic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') : E e.","conclusion":"E e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T')","proofString":"apply ext_itrav_stepE in TSTEP; eauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') : dom_cond sb (covered T) e.","conclusion":"dom_cond sb (covered T) e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T')","proofString":"apply ext_itrav_step_cov_coverable in TSTEP; eauto.\nred.\nrewrite <- (@dom_sb_coverable G sc); eauto.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : coverable G sc T e) : dom_cond sb (covered T) e.","conclusion":"dom_cond sb (covered T) e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : coverable G sc T e)","proofString":"red.\nrewrite <- (@dom_sb_coverable G sc); eauto.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : coverable G sc T e) : dom_rel (sb ⨾ ⦗eq e⦘) ⊆₁ covered T.","conclusion":"dom_rel (sb ⨾ ⦗eq e⦘) ⊆₁ covered T","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : coverable G sc T e)","proofString":"rewrite <- (@dom_sb_coverable G sc); eauto.\nbasic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : coverable G sc T e) : dom_rel (sb ⨾ ⦗eq e⦘) ⊆₁ dom_rel (sb ⨾ ⦗coverable G sc T⦘).","conclusion":"dom_rel (sb ⨾ ⦗eq e⦘) ⊆₁ dom_rel (sb ⨾ ⦗coverable G sc T⦘)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : coverable G sc T e)","proofString":"basic_solver."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') : set_compl (covered T) e.","conclusion":"set_compl (covered T) e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T')","proofString":"inversion TSTEP.\nintros COV.\napply ets_new_ta0.\nred in COV.\nunfolder in COV.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) : set_compl (covered T) e.","conclusion":"set_compl (covered T) e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T)","proofString":"intros COV.\napply ets_new_ta0.\nred in COV.\nunfolder in COV.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : covered T e) : False.","conclusion":"False","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : covered T e)","proofString":"apply ets_new_ta0.\nred in COV.\nunfolder in COV.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : covered T e) : T (mkTL ta_cover e).","conclusion":"T (mkTL ta_cover e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : covered T e)","proofString":"red in COV.\nunfolder in COV.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) e) : T (mkTL ta_cover e).","conclusion":"T (mkTL ta_cover e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) e)","proofString":"unfolder in COV.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : exists y : trav_label, (T y /\\ ta_cover = action y) /\\ event y = e) : T (mkTL ta_cover e).","conclusion":"T (mkTL ta_cover e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (COV : exists y : trav_label, (T y /\\ ta_cover = action y) /\\ event y = e)","proofString":"desc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (y : trav_label) (COV : T y) (COV1 : ta_cover = action y) (COV0 : event y = e) : T (mkTL ta_cover e).","conclusion":"T (mkTL ta_cover e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TCOH : tls_coherent G T) (TSTEP : ext_itrav_step (mkTL ta_cover e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_cover e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_cover e)) ->\naction (mkTL ta_cover e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_cover e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_cover e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_cover e) T) (y : trav_label) (COV : T y) (COV1 : ta_cover = action y) (COV0 : event y = e)","proofString":"destruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) : ~ issued T e.","conclusion":"~ issued T e","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T)","proofString":"intros ISS.\napply ets_new_ta0.\nred in ISS.\nunfolder in ISS.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : issued T e) : False.","conclusion":"False","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : issued T e)","proofString":"apply ets_new_ta0.\nred in ISS.\nunfolder in ISS.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : issued T e) : T (mkTL ta_issue e).","conclusion":"T (mkTL ta_issue e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : issued T e)","proofString":"red in ISS.\nunfolder in ISS.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)) e) : T (mkTL ta_issue e).","conclusion":"T (mkTL ta_issue e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)) e)","proofString":"unfolder in ISS.\ndesc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : exists y : trav_label, (T y /\\ ta_issue = action y) /\\ event y = e) : T (mkTL ta_issue e).","conclusion":"T (mkTL ta_issue e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (ISS : exists y : trav_label, (T y /\\ ta_issue = action y) /\\ event y = e)","proofString":"desc.\ndestruct y; ins; vauto."},{"statement":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (y : trav_label) (ISS : T y) (ISS1 : ta_issue = action y) (ISS0 : event y = e) : T (mkTL ta_issue e).","conclusion":"T (mkTL ta_issue e)","hypotheses":"(T T' : trav_label -> Prop) (e : actid) (TSTEP : ext_itrav_step (mkTL ta_issue e) T T') (ets_tls_coh0 : tls_coherent G T') (ets_iord_coh0 : iord_coherent G sc T') (ets_reserve_coh0 : reserve_coherent G T') (ets_new_ta0 : ~ T (mkTL ta_issue e)) (ets_issue_W_ex0 : W_ex (event (mkTL ta_issue e)) ->\naction (mkTL ta_issue e) = ta_issue ->\nT (ta_reserve, event (mkTL ta_issue e))) (ets_upd0 : T'\n≡₁ T ∪₁ eq (mkTL ta_issue e)\n   ∪₁ eq ta_reserve <*> ets_upd_reserve (mkTL ta_issue e) T) (y : trav_label) (ISS : T y) (ISS1 : ta_issue = action y) (ISS0 : event y = e)","proofString":"destruct y; ins; vauto."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ rfi ⨾ rmw) ⊆₁ Tid_ (tid w).","conclusion":"dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ rfi ⨾ rmw) ⊆₁ Tid_ (tid w)","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"arewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\narewrite (sb ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nbasic_solver.\narewrite (⦗eq w⦘ ⊆ ⦗eq w⦘ ⨾ ⦗ set_compl is_init ⦘).\nbasic_solver.\nrewrite ninit_sb_same_tid.\nbasic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ sb ⨾ rmw) ⊆₁ Tid_ (tid w).","conclusion":"dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ sb ⨾ rmw) ⊆₁ Tid_ (tid w)","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"rewrite (rmw_in_sb WF).\narewrite (sb ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nbasic_solver.\narewrite (⦗eq w⦘ ⊆ ⦗eq w⦘ ⨾ ⦗ set_compl is_init ⦘).\nbasic_solver.\nrewrite ninit_sb_same_tid.\nbasic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ sb ⨾ sb) ⊆₁ Tid_ (tid w).","conclusion":"dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ sb ⨾ sb) ⊆₁ Tid_ (tid w)","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"arewrite (sb ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nbasic_solver.\narewrite (⦗eq w⦘ ⊆ ⦗eq w⦘ ⨾ ⦗ set_compl is_init ⦘).\nbasic_solver.\nrewrite ninit_sb_same_tid.\nbasic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : sb ⨾ sb ⊆ sb.","conclusion":"sb ⨾ sb ⊆ sb","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"generalize (@sb_trans G).\nbasic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : transitive sb -> sb ⨾ sb ⊆ sb.","conclusion":"transitive sb -> sb ⨾ sb ⊆ sb","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"basic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ sb) ⊆₁ Tid_ (tid w).","conclusion":"dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ sb) ⊆₁ Tid_ (tid w)","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"arewrite (⦗eq w⦘ ⊆ ⦗eq w⦘ ⨾ ⦗ set_compl is_init ⦘).\nbasic_solver.\nrewrite ninit_sb_same_tid.\nbasic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : ⦗eq w⦘ ⊆ ⦗eq w⦘ ⨾ ⦗set_compl Init⦘.","conclusion":"⦗eq w⦘ ⊆ ⦗eq w⦘ ⨾ ⦗set_compl Init⦘","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"basic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ ⦗set_compl Init⦘ ⨾ sb)\n⊆₁ Tid_ (tid w).","conclusion":"dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ ⦗set_compl Init⦘ ⨾ sb)\n⊆₁ Tid_ (tid w)","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"rewrite ninit_sb_same_tid.\nbasic_solver."},{"statement":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w) : dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ same_tid) ⊆₁ Tid_ (tid w).","conclusion":"dom_rel (sb ⨾ ⦗reserved T⦘) ∩₁ codom_rel (⦗eq w⦘ ⨾ same_tid) ⊆₁ Tid_ (tid w)","hypotheses":"(T : trav_label -> Prop) (w : actid) (NINIT : ~ is_init w)","proofString":"basic_solver."}]}