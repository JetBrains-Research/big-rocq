{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/bigRocq/dataset/imm/src/hardware/immToTSO.v","fileSamples":[{"statement":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n⊆ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊.","proofString":"arewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ sb^?) by basic_solver.\narewrite (⦗W⦘ ⊆ ⦗W⦘ ⨾ ⦗W⦘) at 1.\nby basic_solver.\nhahn_frame; relsf; unionL.\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 12.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite <- !seqA.\nrewrite <- rt_seq_swap.\narewrite_id ⦗W⦘ at 2; rels.\nrewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"sb^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n⊆ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊.","proofString":"arewrite (⦗W⦘ ⊆ ⦗W⦘ ⨾ ⦗W⦘) at 1.\nby basic_solver.\nhahn_frame; relsf; unionL.\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 12.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite <- !seqA.\nrewrite <- rt_seq_swap.\narewrite_id ⦗W⦘ at 2; rels.\nrewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⊆ ⦗W⦘ ⨾ ⦗W⦘.","proofString":"by basic_solver."},{"statement":"sb^? ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n⊆ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊.","proofString":"hahn_frame; relsf; unionL.\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 12.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite <- !seqA.\nrewrite <- rt_seq_swap.\narewrite_id ⦗W⦘ at 2; rels.\nrewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 12."},{"statement":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite (dom_r (wf_rmwD WF)).\nrewrite <- !seqA.\nrewrite <- rt_seq_swap.\narewrite_id ⦗W⦘ at 2; rels.\nrewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ⦗W⦘)＊ ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite <- !seqA.\nrewrite <- rt_seq_swap.\narewrite_id ⦗W⦘ at 2; rels.\nrewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ ((((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw) ⨾ ⦗W⦘)＊ ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite <- rt_seq_swap.\narewrite_id ⦗W⦘ at 2; rels.\nrewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"(⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)＊ ⨾ ⦗W⦘ ⊆ (ppot ∪ rfe)＊.","proofString":"arewrite_id ⦗W⦘ at 2; rels.\nrewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite <- (rt_of_rt (ppot ∪ rfe)).\napply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆ ((ppot ∪ rfe)＊)＊.","proofString":"apply inclusion_rt_rt.\nrewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite rfi_union_rfe; relsf; unionL.\narewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21.\nrewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ (ppot ∪ rfe)＊.","proofString":"arewrite (rfi ⊆ sb).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ sb ⨾ rmw ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite (dom_r (wf_rmwD WF)).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ sb ⨾ rmw ⨾ ⦗W⦘ ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ sb ⨾ sb ⨾ ⦗W⦘ ⊆ (ppot ∪ rfe)＊.","proofString":"generalize (@sb_trans G).\nrewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"transitive sb -> ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ sb ⨾ sb ⨾ ⦗W⦘ ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite rt_begin; rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw ⊆ (ppot ∪ rfe)＊.","proofString":"rewrite (wf_rfeD WF).\nrewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ rmw ⊆ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)＊.","proofString":"rewrite (dom_r (wf_rmwD WF)).\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ rmw ⨾ ⦗W⦘\n⊆ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)＊.","proofString":"rewrite rt_begin.\nrewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ rmw ⨾ ⦗W⦘\n⊆ ⦗fun _ : actid => True⦘\n  ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)＊.","proofString":"rewrite rt_begin.\nrewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ rmw ⨾ ⦗W⦘\n⊆ ⦗fun _ : actid => True⦘\n  ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)\n    ⨾ (⦗fun _ : actid => True⦘\n       ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)＊).","proofString":"rewrite rt_begin.\nrewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ rmw ⨾ ⦗W⦘\n⊆ ⦗fun _ : actid => True⦘\n  ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)\n    ⨾ (⦗fun _ : actid => True⦘\n       ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)\n         ⨾ (⦗fun _ : actid => True⦘\n            ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)＊)).","proofString":"rewrite (rmw_in_sb WF).\nrewrite TSO.ppo_alt; basic_solver 42."},{"statement":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗fun _ : actid => True⦘\n  ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)\n    ⨾ (⦗fun _ : actid => True⦘\n       ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)\n         ⨾ (⦗fun _ : actid => True⦘\n            ∪ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘) ⨾ (ppot ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)＊)).","proofString":"rewrite TSO.ppo_alt; basic_solver 42."},{"statement":"(H : transitive sb) : sw ⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"unfold imm_hb.sw.\nrewrite (dom_r (wf_releaseD WF)).\nrewrite release_in.\narewrite ((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sb^?) by basic_solver.\nrelsf; unionL.\nrewrite rtE; relsf; unionL.\nby arewrite (rfi ⊆ sb); basic_solver 12.\nrewrite path_ut_last at 1; relsf; unionL.\nrewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21.\nrewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA.\narewrite (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite (dom_r (wf_releaseD WF)).\nrewrite release_in.\narewrite ((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sb^?) by basic_solver.\nrelsf; unionL.\nrewrite rtE; relsf; unionL.\nby arewrite (rfi ⊆ sb); basic_solver 12.\nrewrite path_ut_last at 1; relsf; unionL.\nrewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21.\nrewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA.\narewrite (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : (release ⨾ ⦗W⦘) ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite release_in.\narewrite ((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sb^?) by basic_solver.\nrelsf; unionL.\nrewrite rtE; relsf; unionL.\nby arewrite (rfi ⊆ sb); basic_solver 12.\nrewrite path_ut_last at 1; relsf; unionL.\nrewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21.\nrewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA.\narewrite (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : ((sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊) ⨾ ⦗W⦘)\n⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite ((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sb^?) by basic_solver.\nrelsf; unionL.\nrewrite rtE; relsf; unionL.\nby arewrite (rfi ⊆ sb); basic_solver 12.\nrewrite path_ut_last at 1; relsf; unionL.\nrewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21.\nrewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA.\narewrite (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ ⦗W⦘ ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"relsf; unionL.\nrewrite rtE; relsf; unionL.\nby arewrite (rfi ⊆ sb); basic_solver 12.\nrewrite path_ut_last at 1; relsf; unionL.\nrewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21.\nrewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA.\narewrite (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ ⦗W⦘ ⨾ rfi ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite rtE; relsf; unionL.\nby arewrite (rfi ⊆ sb); basic_solver 12.\nrewrite path_ut_last at 1; relsf; unionL.\nrewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21.\nrewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ rfi ⨾ sb^? ⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"by arewrite (rfi ⊆ sb); basic_solver 12."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗W⦘ ⨾ rfi ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite path_ut_last at 1; relsf; unionL.\nrewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21.\nrewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ ppot⁺ ⨾ ⦗W⦘ ⨾ rfi ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite TSO.ppo_in_sb at 1.\narewrite (rfi ⊆ sb); relsf; basic_solver 21."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ sb⁺ ⨾ ⦗W⦘ ⨾ rfi ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (rfi ⊆ sb); relsf; basic_solver 21."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ ((ppot ∪ rfe)＊ ⨾ rfe ⨾ ppot＊) ⨾ ⦗W⦘ ⨾ rfi ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite TSO.ppo_in_sb at 2.\nrewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ ((ppot ∪ rfe)＊ ⨾ rfe ⨾ sb＊) ⨾ ⦗W⦘ ⨾ rfi ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite (dom_r (wf_rfiD WF)); rewrite (dom_r (wf_rfeD WF)) at 2; rewrite !seqA.\narewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ rfe ⨾ ⦗R⦘ ⨾ sb＊ ⨾ ⦗W⦘ ⨾ rfi ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (rfi ⊆ sb).\narewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ rfe ⨾ ⦗R⦘ ⨾ sb＊ ⨾ ⦗W⦘ ⨾ sb ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite_id ⦗W⦘ at 2.\nrelsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^?\n⨾ ⦗W⦘\n  ⨾ (ppot ∪ rfe)＊\n    ⨾ rfe ⨾ ⦗R⦘ ⨾ sb＊ ⨾ ⦗fun _ : actid => True⦘ ⨾ sb ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"relsf.\narewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘) at 2.\nbasic_solver.\narewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : ⦗R⦘ ⊆ ⦗R⦘ ⨾ ⦗R⦘.","proofString":"basic_solver."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : ⦗R⦘ ⨾ sb ⨾ ⦗R⦘ ⊆ ppot.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ rfe ⨾ ppot ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ rfe ⨾ (ppot ∪ rfe)＊ ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 2.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺ ⨾ (ppot ∪ rfe)＊ ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"relsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"rewrite (wf_rfeD WF) at 2; rewrite !seqA.\narewrite (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ ppot^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (ppot ⊆ (ppot ∪ rfe)＊) at 2.\narewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ ((ppot ∪ rfe)＊)^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"arewrite (rfe ⊆ (ppot ∪ rfe)⁺) at 3.\nrelsf."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)＊ ⨾ ((ppot ∪ rfe)＊)^? ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?\n⊆ sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?.","proofString":"relsf."},{"statement":"(H : transitive sb) : coherence G.","proofString":"generalize (eco_trans WF); ins.\ncdes CON; unfold TSO.hb in *.\napply coherence_alt.\nrewrite hb_in; relsf; unionL.\napply sb_irr.\nrotate 2; relsf.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊) at 1.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); apply SC_PER_LOC.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA; rotate 1.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (co_in_eco); relsf.\narewrite (co ⨾ rfe^? ⊆ co ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_coD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_coD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (fr_in_eco); relsf.\narewrite (fr ⨾ rfe^? ⊆ fr ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_frD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_frD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) : coherence G.","proofString":"cdes CON; unfold TSO.hb in *.\napply coherence_alt.\nrewrite hb_in; relsf; unionL.\napply sb_irr.\nrotate 2; relsf.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊) at 1.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); apply SC_PER_LOC.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA; rotate 1.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (co_in_eco); relsf.\narewrite (co ⨾ rfe^? ⊆ co ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_coD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_coD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (fr_in_eco); relsf.\narewrite (fr ⨾ rfe^? ⊆ fr ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_frD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_frD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : coherence G.","proofString":"apply coherence_alt.\nrewrite hb_in; relsf; unionL.\napply sb_irr.\nrotate 2; relsf.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊) at 1.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); apply SC_PER_LOC.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA; rotate 1.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (co_in_eco); relsf.\narewrite (co ⨾ rfe^? ⊆ co ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_coD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_coD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (fr_in_eco); relsf.\narewrite (fr ⨾ rfe^? ⊆ fr ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_frD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_frD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (hb ∪ hb ⨾ rfe ∪ hb ⨾ co ⨾ rfe^? ∪ hb ⨾ fr ⨾ rfe^?).","proofString":"rewrite hb_in; relsf; unionL.\napply sb_irr.\nrotate 2; relsf.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊) at 1.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); apply SC_PER_LOC.\nrewrite (wf_rfeD WF) at 2; rewrite !seqA; rotate 1.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (co_in_eco); relsf.\narewrite (co ⨾ rfe^? ⊆ co ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_coD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_coD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12].\narewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (fr_in_eco); relsf.\narewrite (fr ⨾ rfe^? ⊆ fr ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_frD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_frD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive sb.","proofString":"apply sb_irr."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?).","proofString":"rotate 2; relsf.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊) at 1.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺).","proofString":"arewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊) at 1.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (ppot^? ⨾ (ppot ∪ rfe)⁺).","proofString":"arewrite (ppot^? ⊆ (ppot ∪ rfe)＊) at 1.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺).","proofString":"relsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb ⨾ rfe).","proofString":"arewrite (rfe ⊆ rf); rewrite (rf_in_eco); apply SC_PER_LOC."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?) ⨾ rfe).","proofString":"rewrite (wf_rfeD WF) at 2; rewrite !seqA; rotate 1.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ rfe).","proofString":"arewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (ppot^? ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ rfe).","proofString":"arewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (ppot^? ⨾ (ppot ∪ rfe)⁺ ⨾ ppot^? ⨾ rfe).","proofString":"arewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺ ⨾ (ppot ∪ rfe)＊ ⨾ rfe).","proofString":"arewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺ ⨾ (ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)＊).","proofString":"relsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb ⨾ co ⨾ rfe^?).","proofString":"arewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (co_in_eco); relsf."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?) ⨾ co ⨾ rfe^?).","proofString":"arewrite (co ⨾ rfe^? ⊆ co ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_coD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_coD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : co ⨾ rfe^? ⊆ co ⨾ rfe^? ⨾ ⦗RW⦘.","proofString":"rewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_coD WF)).\nbasic_solver 12."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : co ⨾ (rfe ⨾ ⦗R⦘)^? ⊆ co ⨾ (rfe ⨾ ⦗R⦘)^? ⨾ ⦗RW⦘.","proofString":"rewrite (dom_r (wf_coD WF)).\nbasic_solver 12."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : (co ⨾ ⦗W⦘) ⨾ (rfe ⨾ ⦗R⦘)^? ⊆ (co ⨾ ⦗W⦘) ⨾ (rfe ⨾ ⦗R⦘)^? ⨾ ⦗RW⦘.","proofString":"basic_solver 12."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ co ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"rewrite (dom_l (wf_coD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive\n  (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ (⦗W⦘ ⨾ co) ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"rewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive\n  (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ co ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"arewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ppot^? ⨾ co ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ppot^? ⨾ co ⨾ rfe^?).","proofString":"arewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : ⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (ppot^? ⨾ (ppot ∪ rfe)⁺ ⨾ ppot^? ⨾ co ⨾ rfe^?).","proofString":"arewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺ ⨾ (ppot ∪ rfe)＊ ⨾ co ⨾ rfe^?).","proofString":"arewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive\n  ((ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺ ⨾ (ppot ∪ rfe)＊ ⨾ co ⨾ ((ppot ∪ rfe)＊)^?).","proofString":"rotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe)⁺ ⨾ co).","proofString":"arewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ co)).\narewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe ∪ co)⁺ ⨾ co).","proofString":"arewrite (co ⊆ (ppot ∪ rfe ∪ co)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe ∪ co)⁺ ⨾ (ppot ∪ rfe ∪ co)＊).","proofString":"relsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb ⨾ fr ⨾ rfe^?).","proofString":"arewrite (rfe ⊆ rf); rewrite (rf_in_eco); rewrite (fr_in_eco); relsf."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?) ⨾ fr ⨾ rfe^?).","proofString":"arewrite (fr ⨾ rfe^? ⊆ fr ⨾ rfe^? ⨾ ⦗RW⦘).\nrewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_frD WF)).\nbasic_solver 12.\nrewrite (dom_l (wf_frD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : fr ⨾ rfe^? ⊆ fr ⨾ rfe^? ⨾ ⦗RW⦘.","proofString":"rewrite (dom_r (wf_rfeD WF)).\nrewrite (dom_r (wf_frD WF)).\nbasic_solver 12."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : fr ⨾ (rfe ⨾ ⦗R⦘)^? ⊆ fr ⨾ (rfe ⨾ ⦗R⦘)^? ⨾ ⦗RW⦘.","proofString":"rewrite (dom_r (wf_frD WF)).\nbasic_solver 12."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : (fr ⨾ ⦗W⦘) ⨾ (rfe ⨾ ⦗R⦘)^? ⊆ (fr ⨾ ⦗W⦘) ⨾ (rfe ⨾ ⦗R⦘)^? ⨾ ⦗RW⦘.","proofString":"basic_solver 12."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ fr ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"rewrite (dom_l (wf_frD WF)).\nrewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive\n  (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ (⦗R⦘ ⨾ fr) ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"rewrite !seqA.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive\n  (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⨾ fr ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"arewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\nrotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : ⦗R⦘ ⨾ sb^? ⨾ ⦗R⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ppot^? ⨾ fr ⨾ rfe^? ⨾ ⦗RW⦘).","proofString":"rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ppot^? ⨾ fr ⨾ rfe^?).","proofString":"arewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?).\nrewrite TSO.ppo_alt; basic_solver 21.\narewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : ⦗RW⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ppot^?.","proofString":"rewrite TSO.ppo_alt; basic_solver 21."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive (ppot^? ⨾ (ppot ∪ rfe)⁺ ⨾ ppot^? ⨾ fr ⨾ rfe^?).","proofString":"arewrite (ppot^? ⊆ (ppot ∪ rfe)＊).\narewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺ ⨾ (ppot ∪ rfe)＊ ⨾ fr ⨾ rfe^?).","proofString":"arewrite (rfe ⊆ (ppot ∪ rfe)＊) at 4.\nrotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive\n  ((ppot ∪ rfe)＊ ⨾ (ppot ∪ rfe)⁺ ⨾ (ppot ∪ rfe)＊ ⨾ fr ⨾ ((ppot ∪ rfe)＊)^?).","proofString":"rotate 1; relsf.\narewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe)⁺ ⨾ fr).","proofString":"arewrite (ppot ∪ rfe ⊆ (ppot ∪ rfe ∪ fr)).\narewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe ∪ fr)⁺ ⨾ fr).","proofString":"arewrite (fr ⊆ (ppot ∪ rfe ∪ fr)＊) at 2.\nrelsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(H : transitive sb) (H0 : transitive eco) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)) : irreflexive ((ppot ∪ rfe ∪ fr)⁺ ⨾ (ppot ∪ rfe ∪ fr)＊).","proofString":"relsf; eapply acyclic_mon; [edone|basic_solver 12]."},{"statement":"(WF : Wf G) : acyclic (hb ∪ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"assert (coherence G) as COH by apply Coherence.\nassert (transitive hb) by apply hb_trans.\nassert (⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) as WWHB.\nunfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver.\nassert (⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) as RWHB.\nunfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver.\narewrite_id ⦗Rel⦘.\nrewrite seq_id_l.\napply acyclic_utt; auto.\nby apply sb_co_trans.\nsplits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) : acyclic (hb ∪ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"assert (transitive hb) by apply hb_trans.\nassert (⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) as WWHB.\nunfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver.\nassert (⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) as RWHB.\nunfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver.\narewrite_id ⦗Rel⦘.\nrewrite seq_id_l.\napply acyclic_utt; auto.\nby apply sb_co_trans.\nsplits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) : acyclic (hb ∪ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"assert (⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) as WWHB.\nunfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver.\nassert (⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) as RWHB.\nunfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver.\narewrite_id ⦗Rel⦘.\nrewrite seq_id_l.\napply acyclic_utt; auto.\nby apply sb_co_trans.\nsplits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt.","proofString":"unfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗RW⦘ \\ (fun x y : actid => is_w lab x /\\ is_r lab y) ∪ fence\n  ∪ implied_fence ∪ rfe ∪ co ∪ fr.","proofString":"repeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗RW⦘ \\ (fun x y : actid => is_w lab x /\\ is_r lab y).","proofString":"unfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) : forall x y : actid,\nis_w lab x /\\ sb x y /\\ is_w lab y ->\n((is_r lab x \\/ is_w lab x) /\\ sb x y /\\ (is_r lab y \\/ is_w lab y)) /\\\n~ (is_w lab x /\\ is_r lab y).","proofString":"ins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (x y : actid) (H0 : is_w lab x /\\ sb x y /\\ is_w lab y) : ((is_r lab x \\/ is_w lab x) /\\ sb x y /\\ (is_r lab y \\/ is_w lab y)) /\\\n~ (is_w lab x /\\ is_r lab y).","proofString":"desf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (x y : actid) (H0 : is_w lab x) (H1 : sb x y) (H2 : is_w lab y) : ((is_r lab x \\/ true) /\\ sb x y /\\ (is_r lab y \\/ true)) /\\\n~ (true /\\ is_r lab y).","proofString":"splits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (x y : actid) (H0 : is_w lab x) (H1 : sb x y) (H2 : is_w lab y) : ~ (true /\\ is_r lab y).","proofString":"intros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (x y : actid) (H0 : is_w lab x) (H1 : sb x y) (H2 : is_w lab y) (HH : true /\\ is_r lab y) : False.","proofString":"desf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (x y : actid) (H0 : is_w lab x) (H1 : sb x y) (H2 : is_w lab y) (HH : true) (HH0 : is_r lab y) : False.","proofString":"type_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ∪ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"assert (⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) as RWHB.\nunfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver.\narewrite_id ⦗Rel⦘.\nrewrite seq_id_l.\napply acyclic_utt; auto.\nby apply sb_co_trans.\nsplits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt.","proofString":"unfold TSO.hb, TSO.ppo.\nrepeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗RW⦘ \\ (fun x y : actid => is_w lab x /\\ is_r lab y) ∪ fence\n  ∪ implied_fence ∪ rfe ∪ co ∪ fr.","proofString":"repeat unionR left.\nunfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗RW⦘ \\ (fun x y : actid => is_w lab x /\\ is_r lab y).","proofString":"unfolder.\nins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : forall x y : actid,\nis_r lab x /\\ sb x y /\\ is_w lab y ->\n((is_r lab x \\/ is_w lab x) /\\ sb x y /\\ (is_r lab y \\/ is_w lab y)) /\\\n~ (is_w lab x /\\ is_r lab y).","proofString":"ins.\ndesf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (x y : actid) (H0 : is_r lab x /\\ sb x y /\\ is_w lab y) : ((is_r lab x \\/ is_w lab x) /\\ sb x y /\\ (is_r lab y \\/ is_w lab y)) /\\\n~ (is_w lab x /\\ is_r lab y).","proofString":"desf.\nsplits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (x y : actid) (H0 : is_r lab x) (H1 : sb x y) (H2 : is_w lab y) : ((true \\/ is_w lab x) /\\ sb x y /\\ (is_r lab y \\/ true)) /\\\n~ (is_w lab x /\\ is_r lab y).","proofString":"splits; auto.\nintros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (x y : actid) (H0 : is_r lab x) (H1 : sb x y) (H2 : is_w lab y) : ~ (is_w lab x /\\ is_r lab y).","proofString":"intros HH.\ndesf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (x y : actid) (H0 : is_r lab x) (H1 : sb x y) (H2 : is_w lab y) (HH : is_w lab x /\\ is_r lab y) : False.","proofString":"desf.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (x y : actid) (H0 : is_r lab x) (H1 : sb x y) (H2 : is_w lab y) (HH : is_w lab x) (HH0 : is_r lab y) : False.","proofString":"type_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ∪ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"arewrite_id ⦗Rel⦘.\nrewrite seq_id_l.\napply acyclic_utt; auto.\nby apply sb_co_trans.\nsplits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ∪ ⦗fun _ : actid => True⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"rewrite seq_id_l.\napply acyclic_utt; auto.\nby apply sb_co_trans.\nsplits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ∪ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"apply acyclic_utt; auto.\nby apply sb_co_trans.\nsplits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : transitive ((⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"by apply sb_co_trans."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : irreflexive hb /\\\nirreflexive ((⦗F⦘ ⨾ sb)^? ⨾ co) /\\ acyclic (hb ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"splits.\napply hb_irr; auto.\nby apply sb_co_irr.\narewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : irreflexive hb.","proofString":"apply hb_irr; auto."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : irreflexive ((⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"by apply sb_co_irr."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ⨾ (⦗F⦘ ⨾ sb)^? ⨾ co).","proofString":"arewrite_id ⦗F⦘.\nrewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ⨾ (⦗fun _ : actid => True⦘ ⨾ sb)^? ⨾ co).","proofString":"rewrite !seq_id_l.\nrewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ⨾ sb^? ⨾ co).","proofString":"rewrite sb_in_hb.\nsin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ⨾ hb^? ⨾ co).","proofString":"sin_rewrite rewrite_trans_seq_cr_r; auto.\nrewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hb ⨾ co).","proofString":"rewrite (wf_coD WF), <- !seqA.\napply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (((hb ⨾ ⦗W⦘) ⨾ co) ⨾ ⦗W⦘).","proofString":"apply acyclic_seqC.\nrewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (⦗W⦘ ⨾ (hb ⨾ ⦗W⦘) ⨾ co).","proofString":"rewrite !seqA.\narewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⨾ co).","proofString":"arewrite (⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺).\nrewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct.\narewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ hb ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"rewrite hb_in.\nrewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ (sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?) ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"rewrite seq_union_l, seq_union_r, !seqA.\nunionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"unionL.\nby rewrite <- ct_step.\narewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"by rewrite <- ct_step."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"arewrite (⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver.\narewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?.","proofString":"rewrite crE, seq_union_l, seq_union_r.\nrewrite WWHB.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt^?.","proofString":"rewrite WWHB.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗W⦘ ∪ hbt ⊆ hbt^?.","proofString":"basic_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : hbt^? ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"arewrite (ppot ⊆ hbt).\nunfold TSO.hb.\neauto with hahn.\narewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ppot ⊆ hbt.","proofString":"unfold TSO.hb.\neauto with hahn."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ppot ⊆ ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr.","proofString":"eauto with hahn."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : hbt^? ⨾ (hbt ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"arewrite (rfe ⊆ hbt).\nrewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : hbt^? ⨾ (hbt ∪ hbt)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"rewrite unionK.\narewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : hbt^? ⨾ hbt⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt⁺.","proofString":"arewrite (⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?).\nrewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver.\nby rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗R⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ hbt^?.","proofString":"rewrite crE, seq_union_l, seq_union_r.\nrewrite RWHB.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗R⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗W⦘ ∪ ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt^?.","proofString":"rewrite RWHB.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : ⦗R⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗W⦘ ∪ hbt ⊆ hbt^?.","proofString":"basic_solver."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : hbt^? ⨾ hbt⁺ ⨾ hbt^? ⊆ hbt⁺.","proofString":"by rewrite ct_cr, cr_ct."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hbt⁺ ⨾ co).","proofString":"arewrite (co ⊆ hbt).\nrewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic (hbt⁺ ⨾ hbt).","proofString":"rewrite ct_unit.\nred.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : acyclic hbt⁺.","proofString":"red.\nrewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : irreflexive (hbt⁺)⁺.","proofString":"rewrite ct_of_ct.\napply CON."},{"statement":"(WF : Wf G) (COH : coherence G) (H : transitive hb) (WWHB : ⦗W⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) (RWHB : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ hbt) : irreflexive hbt⁺.","proofString":"apply CON."},{"statement":"rf ∪ co ⨾ rf^? ∪ fr ⨾ rf^? ⊆ sb ∪ hbt⁺ ⨾ sb^?.","proofString":"rewrite rfi_union_rfe.\narewrite (rfi ⊆ sb).\nrewrite ct_begin.\nrewrite rt_begin.\nunfold TSO.hb.\nbasic_solver 40."},{"statement":"rfi ∪ rfe ∪ co ⨾ (rfi ∪ rfe)^? ∪ fr ⨾ (rfi ∪ rfe)^? ⊆ sb ∪ hbt⁺ ⨾ sb^?.","proofString":"arewrite (rfi ⊆ sb).\nrewrite ct_begin.\nrewrite rt_begin.\nunfold TSO.hb.\nbasic_solver 40."},{"statement":"sb ∪ rfe ∪ co ⨾ (sb ∪ rfe)^? ∪ fr ⨾ (sb ∪ rfe)^? ⊆ sb ∪ hbt⁺ ⨾ sb^?.","proofString":"rewrite ct_begin.\nrewrite rt_begin.\nunfold TSO.hb.\nbasic_solver 40."},{"statement":"sb ∪ rfe ∪ co ⨾ (sb ∪ rfe)^? ∪ fr ⨾ (sb ∪ rfe)^? ⊆ sb ∪ (hbt ⨾ hbt＊) ⨾ sb^?.","proofString":"rewrite rt_begin.\nunfold TSO.hb.\nbasic_solver 40."},{"statement":"sb ∪ rfe ∪ co ⨾ (sb ∪ rfe)^? ∪ fr ⨾ (sb ∪ rfe)^?\n⊆ sb ∪ (hbt ⨾ (⦗fun _ : actid => True⦘ ∪ hbt ⨾ hbt＊)) ⨾ sb^?.","proofString":"unfold TSO.hb.\nbasic_solver 40."},{"statement":"sb ∪ rfe ∪ co ⨾ (sb ∪ rfe)^? ∪ fr ⨾ (sb ∪ rfe)^?\n⊆ sb\n  ∪ ((ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)\n     ⨾ (⦗fun _ : actid => True⦘\n        ∪ (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)\n          ⨾ (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)＊)) ⨾ sb^?.","proofString":"basic_solver 40."},{"statement":"psc ⊆ ⦗MFENCE⦘ ⨾ psc ⨾ ⦗MFENCE⦘.","proofString":"by rewrite (@wf_pscD G) at 1."},{"statement":"psc_f ⊆ ⦗MFENCE⦘ ⨾ psc_f ⨾ ⦗MFENCE⦘.","proofString":"unfold imm.psc_f.\nrewrite !seqA.\nbasic_solver 10."},{"statement":"⦗MFENCE⦘ ⨾ hb ⨾ (eco ⨾ hb)^? ⨾ ⦗MFENCE⦘\n⊆ ⦗MFENCE⦘ ⨾ (⦗MFENCE⦘ ⨾ hb ⨾ (eco ⨾ hb)^? ⨾ ⦗MFENCE⦘) ⨾ ⦗MFENCE⦘.","proofString":"rewrite !seqA.\nbasic_solver 10."},{"statement":"⦗MFENCE⦘ ⨾ hb ⨾ (eco ⨾ hb)^? ⨾ ⦗MFENCE⦘\n⊆ ⦗MFENCE⦘ ⨾ ⦗MFENCE⦘ ⨾ hb ⨾ (eco ⨾ hb)^? ⨾ ⦗MFENCE⦘ ⨾ ⦗MFENCE⦘.","proofString":"basic_solver 10."},{"statement":"(H : transitive sb) : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ppot.","proofString":"rewrite TSO.ppo_alt.\nbasic_solver 21."},{"statement":"(H : transitive sb) : ⦗R⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗W⦘.","proofString":"basic_solver 21."},{"statement":"(H : transitive sb) : ppot ⊆ hbt⁺.","proofString":"unfold TSO.hb.\nrewrite <- ct_step.\nbasic_solver 12."},{"statement":"(H : transitive sb) : ppot ⊆ (ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr)⁺.","proofString":"rewrite <- ct_step.\nbasic_solver 12."},{"statement":"(H : transitive sb) : ppot ⊆ ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr.","proofString":"basic_solver 12."},{"statement":"(H : transitive sb) : irreflexive (sb^? ⨾ psc ⨾ sb^?)⁺.","proofString":"rewrite ct_psct; relsf; unionL.\ngeneralize sb_irr.\nbasic_solver 21.\nrewrite (wf_ct_hbD WF); rotate 4.\narewrite_id ⦗MFENCE⦘ at 1.\nrelsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : irreflexive (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^?).","proofString":"generalize sb_irr.\nbasic_solver 21."},{"statement":"(H : transitive sb) : irreflexive (sb^? ⨾ ⦗MFENCE⦘ ⨾ (sb ⨾ hbt⁺ ⨾ sb) ⨾ ⦗MFENCE⦘ ⨾ sb^?).","proofString":"rewrite (wf_ct_hbD WF); rotate 4.\narewrite_id ⦗MFENCE⦘ at 1.\nrelsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : irreflexive\n  (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⨾ hbt⁺).","proofString":"arewrite_id ⦗MFENCE⦘ at 1.\nrelsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : irreflexive\n  (⦗RW⦘\n   ⨾ sb ⨾ ⦗fun _ : actid => True⦘ ⨾ sb^? ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⨾ hbt⁺).","proofString":"relsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : irreflexive (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⨾ hbt⁺).","proofString":"arewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : irreflexive (fence ⨾ hbt⁺).","proofString":"arewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : irreflexive (hbt^? ⨾ hbt⁺).","proofString":"rels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : irreflexive hbt⁺.","proofString":"red; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic ((sb^? ⨾ psc ⨾ sb^?)⁺ ⨾ (hbt⁺)⁺).","proofString":"rewrite ct_psct; relsf.\nrewrite !seqA.\nrewrite (dom_r (wf_ct_hbD WF)) at 2.\nrewrite (dom_l (wf_ct_hbD WF)) at 3.\nrewrite !seqA; relsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\narewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  ((sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^?) ⨾ hbt⁺\n   ∪ (sb^? ⨾ ⦗MFENCE⦘ ⨾ (sb ⨾ hbt⁺ ⨾ sb) ⨾ ⦗MFENCE⦘ ⨾ sb^?) ⨾ hbt⁺).","proofString":"rewrite !seqA.\nrewrite (dom_r (wf_ct_hbD WF)) at 2.\nrewrite (dom_l (wf_ct_hbD WF)) at 3.\nrewrite !seqA; relsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\narewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺).","proofString":"rewrite (dom_r (wf_ct_hbD WF)) at 2.\nrewrite (dom_l (wf_ct_hbD WF)) at 3.\nrewrite !seqA; relsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\narewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ (hbt⁺ ⨾ ⦗RW⦘) ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺).","proofString":"rewrite (dom_l (wf_ct_hbD WF)) at 3.\nrewrite !seqA; relsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\narewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^?\n     ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ (hbt⁺ ⨾ ⦗RW⦘) ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⨾ hbt⁺).","proofString":"rewrite !seqA; relsf.\narewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\narewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺ ⨾ ⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⨾ hbt⁺).","proofString":"arewrite (⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\narewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : ⦗RW⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗RW⦘ ⊆ fence.","proofString":"case_refl _; [type_solver|vauto]."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺ ⨾ fence ⨾ hbt⁺).","proofString":"arewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\narewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺ ⨾ hbt^? ⨾ hbt⁺).","proofString":"arewrite (hbt⁺ ⊆ hbt＊ ) at 2.\nrelsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt＊ ⨾ hbt^? ⨾ hbt⁺).","proofString":"relsf.\narewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic\n  (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺\n   ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).","proofString":"arewrite (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?).\nbasic_solver.\narewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⊆ sb^?.","proofString":"basic_solver."},{"statement":"(H : transitive sb) : acyclic (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).","proofString":"arewrite (⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).\nrewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12.\nrels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : ⦗MFENCE⦘ ⨾ sb^? ⨾ hbt⁺ ⊆ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺.","proofString":"rewrite (dom_l (wf_ct_hbD WF)) at 1; type_solver 12."},{"statement":"(H : transitive sb) : acyclic (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺ ∪ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).","proofString":"rels.\nrewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic (sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ hbt⁺).","proofString":"rewrite (wf_ct_hbD WF); rotate 1.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⨾ hbt⁺).","proofString":"arewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence).\ncase_refl _; [type_solver|vauto].\narewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : ⦗RW⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⨾ sb ⨾ ⦗RW⦘ ⊆ fence.","proofString":"case_refl _; [type_solver|vauto]."},{"statement":"(H : transitive sb) : acyclic (fence ⨾ hbt⁺).","proofString":"arewrite (fence ⊆ hbt^?) by (unfold TSO.hb; basic_solver 12).\nrels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic (hbt^? ⨾ hbt⁺).","proofString":"rels.\nred; rels; eapply CON."},{"statement":"(H : transitive sb) : acyclic hbt⁺.","proofString":"red; rels; eapply CON."},{"statement":"psc_base ⊆ ⦗Sc⦘ ⨾ psc_base ⨾ ⦗Sc⦘.","proofString":"unfold imm.psc_base.\nbasic_solver 42."},{"statement":"⦗Sc⦘ ⨾ (⦗F⦘ ⨾ hb)^? ⨾ scb ⨾ (hb ⨾ ⦗F⦘)^? ⨾ ⦗Sc⦘\n⊆ ⦗Sc⦘ ⨾ (⦗Sc⦘ ⨾ (⦗F⦘ ⨾ hb)^? ⨾ scb ⨾ (hb ⨾ ⦗F⦘)^? ⨾ ⦗Sc⦘) ⨾ ⦗Sc⦘.","proofString":"basic_solver 42."},{"statement":"psc_f ⊆ ⦗Sc⦘ ⨾ psc_f ⨾ ⦗Sc⦘.","proofString":"unfold imm.psc_f.\nbasic_solver 42."},{"statement":"⦗MFENCE⦘ ⨾ hb ⨾ (eco ⨾ hb)^? ⨾ ⦗MFENCE⦘\n⊆ ⦗Sc⦘ ⨾ (⦗MFENCE⦘ ⨾ hb ⨾ (eco ⨾ hb)^? ⨾ ⦗MFENCE⦘) ⨾ ⦗Sc⦘.","proofString":"basic_solver 42."},{"statement":"ppot ∪ rfe ⊆ hbt.","proofString":"unfold TSO.hb.\nunionL; eauto 10 with hahn."},{"statement":"ppot ∪ rfe ⊆ ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr.","proofString":"unionL; eauto 10 with hahn."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) : ⦗MFENCE⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"assert (⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) as AA    by type_solver 10.\nassert (⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) as BB    by type_solver 10.\nrewrite hb_in.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nunionL.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\nrewrite <- ct_step.\nbasic_solver.\nsin_rewrite AA.\nsin_rewrite BB.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) : ⦗MFENCE⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"assert (⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) as BB    by type_solver 10.\nrewrite hb_in.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nunionL.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\nrewrite <- ct_step.\nbasic_solver.\nsin_rewrite AA.\nsin_rewrite BB.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"rewrite hb_in.\nrewrite !seq_union_l, !seq_union_r, !seqA.\nunionL.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\nrewrite <- ct_step.\nbasic_solver.\nsin_rewrite AA.\nsin_rewrite BB.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ (sb ∪ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^?) ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"rewrite !seq_union_l, !seq_union_r, !seqA.\nunionL.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\nrewrite <- ct_step.\nbasic_solver.\nsin_rewrite AA.\nsin_rewrite BB.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘\n∪ ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"unionL.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\nrewrite <- ct_step.\nbasic_solver.\nsin_rewrite AA.\nsin_rewrite BB.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ sb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"arewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\nrewrite <- ct_step.\nbasic_solver."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ ehbt ⊆ ehbt⁺.","proofString":"rewrite <- ct_step.\nbasic_solver."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ ehbt ⊆ ehbt.","proofString":"basic_solver."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"sin_rewrite AA.\nsin_rewrite BB.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : (⦗MFENCE⦘ ⨾ sb) ⨾ (ppot ∪ rfe)⁺ ⨾ ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"sin_rewrite BB.\narewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : (⦗MFENCE⦘ ⨾ sb) ⨾ (ppot ∪ rfe)⁺ ⨾ sb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"arewrite (sb ⨾ ⦗MFENCE⦘ ⊆ ehbt).\narewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ⦗MFENCE⦘ ⨾ sb ⨾ (ppot ∪ rfe)⁺ ⨾ ehbt ⊆ ehbt⁺.","proofString":"arewrite (⦗MFENCE⦘ ⨾ sb ⊆ ehbt).\nrewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ehbt ⨾ (ppot ∪ rfe)⁺ ⨾ ehbt ⊆ ehbt⁺.","proofString":"rewrite EE.\narewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ehbt ⨾ hbt⁺ ⨾ ehbt ⊆ ehbt⁺.","proofString":"arewrite (hbt ⊆ ehbt).\nrewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ehbt ⨾ ehbt⁺ ⨾ ehbt ⊆ ehbt⁺.","proofString":"rewrite ct_unit.\narewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ehbt ⨾ ehbt⁺ ⊆ ehbt⁺.","proofString":"arewrite (ehbt ⊆ ehbt⁺).\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : ehbt⁺ ⨾ ehbt⁺ ⊆ ehbt⁺.","proofString":"apply ct_ct."},{"statement":"ppot ∪ rfe ⊆ hbt.","proofString":"unfold TSO.hb.\nunionL; eauto 10 with hahn."},{"statement":"ppot ∪ rfe ⊆ ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr.","proofString":"unionL; eauto 10 with hahn."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊.","proofString":"red.\nins.\napply rt_step; eauto."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) : forall x y : actid, (hbt ⨾ ⦗RW⦘) x y -> (hbt ⨾ ⦗RW⦘)＊ x y.","proofString":"ins.\napply rt_step; eauto."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (x y : actid) (H : (hbt ⨾ ⦗RW⦘) x y) : (hbt ⨾ ⦗RW⦘)＊ x y.","proofString":"apply rt_step; eauto."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : ⦗MFENCE⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"apply fsc_hb_fsc_in_ehbt."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt ⨾ ⦗W⦘ ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"arewrite (hbt ⊆ hbt＊).\nbasic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt＊ ⨾ ⦗W⦘ ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"basic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : (hbt ⨾ ⦗fun _ : actid => True⦘)^? ⨾ hbt ⨾ ⦗R⦘ ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"rewrite seq_id_r.\narewrite (hbt ⊆ hbt＊) at 2.\narewrite (hbt^? ⨾ hbt＊ ⊆ hbt＊).\nbasic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt^? ⨾ hbt ⨾ ⦗R⦘ ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"arewrite (hbt ⊆ hbt＊) at 2.\narewrite (hbt^? ⨾ hbt＊ ⊆ hbt＊).\nbasic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt^? ⨾ hbt＊ ⨾ ⦗R⦘ ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"arewrite (hbt^? ⨾ hbt＊ ⊆ hbt＊).\nbasic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt＊ ⨾ ⦗R⦘ ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"basic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : (hbt ⨾ ⦗fun _ : actid => True⦘)^? ⨾ rfi ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"rewrite seq_id_r.\narewrite (hbt^? ⊆ hbt＊).\nrewrite (dom_l (wf_rfiD WF)).\nbasic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt^? ⨾ rfi ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"arewrite (hbt^? ⊆ hbt＊).\nrewrite (dom_l (wf_rfiD WF)).\nbasic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt＊ ⨾ rfi ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ rfi^?.","proofString":"rewrite (dom_l (wf_rfiD WF)).\nbasic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : hbt＊ ⨾ ⦗W⦘ ⨾ rfi ⊆ hbt＊ ⨾ ⦗RW⦘ ⨾ (⦗W⦘ ⨾ rfi)^?.","proofString":"basic_solver 10."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : transitive (sb ∪ sw)⁺.","proofString":"apply transitive_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : ehbt⁺ ⨾ hbt＊ ⨾ ehbt⁺ ⊆ ehbt⁺.","proofString":"arewrite (hbt ⊆ ehbt).\nrewrite rt_ct.\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : ehbt⁺ ⨾ ehbt＊ ⨾ ehbt⁺ ⊆ ehbt⁺.","proofString":"rewrite rt_ct.\napply ct_ct."},{"statement":"(EE : ppot ∪ rfe ⊆ hbt) (AA : ⦗MFENCE⦘ ⨾ sb^? ⨾ ⦗W⦘ ⊆ ⦗MFENCE⦘ ⨾ sb) (BB : ⦗R⦘ ⨾ sb^? ⨾ ⦗MFENCE⦘ ⊆ sb ⨾ ⦗MFENCE⦘) (FF : hbt ⨾ ⦗RW⦘ ⊆ (hbt ⨾ ⦗RW⦘)＊) : ehbt⁺ ⨾ ehbt⁺ ⊆ ehbt⁺.","proofString":"apply ct_ct."},{"statement":"⦗Sc⦘ ⨾ ⦗F ∪₁ RW⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"rewrite id_union, !seq_union_l, !seq_union_r.\narewrite (⦗Sc⦘ ⨾ ⦗F⦘ ⊆ ⦗MFENCE⦘) by basic_solver.\nrewrite fsc_hb_fsc_in_ehbt.\nrewrite rw_hb_fsc_in_ehbt.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ ⦗F⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ∪ ⦗Sc⦘ ⨾ ⦗RW⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"arewrite (⦗Sc⦘ ⨾ ⦗F⦘ ⊆ ⦗MFENCE⦘) by basic_solver.\nrewrite fsc_hb_fsc_in_ehbt.\nrewrite rw_hb_fsc_in_ehbt.\nbasic_solver."},{"statement":"⦗MFENCE⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ∪ ⦗Sc⦘ ⨾ ⦗RW⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"rewrite fsc_hb_fsc_in_ehbt.\nrewrite rw_hb_fsc_in_ehbt.\nbasic_solver."},{"statement":"ehbt⁺ ∪ ⦗Sc⦘ ⨾ ⦗RW⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ⊆ ehbt⁺.","proofString":"rewrite rw_hb_fsc_in_ehbt.\nbasic_solver."},{"statement":"ehbt⁺ ∪ ⦗Sc⦘ ⨾ ehbt⁺ ⊆ ehbt⁺.","proofString":"basic_solver."},{"statement":"⦗MFENCE⦘ ⨾ hb ⨾ ⦗F ∪₁ RW⦘ ⨾ ⦗Sc⦘ ⊆ ehbt⁺.","proofString":"rewrite id_union, !seq_union_l, !seq_union_r.\narewrite (⦗F⦘ ⨾ ⦗Sc⦘ ⊆ ⦗MFENCE⦘) by basic_solver.\nrewrite fsc_hb_fsc_in_ehbt.\nsin_rewrite fsc_hb_rw_in_ehbt.\nbasic_solver."},{"statement":"⦗MFENCE⦘ ⨾ hb ⨾ ⦗F⦘ ⨾ ⦗Sc⦘ ∪ ⦗MFENCE⦘ ⨾ hb ⨾ ⦗RW⦘ ⨾ ⦗Sc⦘ ⊆ ehbt⁺.","proofString":"arewrite (⦗F⦘ ⨾ ⦗Sc⦘ ⊆ ⦗MFENCE⦘) by basic_solver.\nrewrite fsc_hb_fsc_in_ehbt.\nsin_rewrite fsc_hb_rw_in_ehbt.\nbasic_solver."},{"statement":"⦗MFENCE⦘ ⨾ hb ⨾ ⦗MFENCE⦘ ∪ ⦗MFENCE⦘ ⨾ hb ⨾ ⦗RW⦘ ⨾ ⦗Sc⦘ ⊆ ehbt⁺.","proofString":"rewrite fsc_hb_fsc_in_ehbt.\nsin_rewrite fsc_hb_rw_in_ehbt.\nbasic_solver."},{"statement":"ehbt⁺ ∪ ⦗MFENCE⦘ ⨾ hb ⨾ ⦗RW⦘ ⨾ ⦗Sc⦘ ⊆ ehbt⁺.","proofString":"sin_rewrite fsc_hb_rw_in_ehbt.\nbasic_solver."},{"statement":"ehbt⁺ ∪ ehbt⁺ ⨾ ⦗Sc⦘ ⊆ ehbt⁺.","proofString":"basic_solver."},{"statement":"ppot ⊆ hbt.","proofString":"unfold TSO.hb.\neauto with hahn."},{"statement":"ppot ⊆ ppot ∪ fence ∪ implied_fence ∪ rfe ∪ co ∪ fr.","proofString":"eauto with hahn."},{"statement":"hbt ⊆ ehbt.","proofString":"unfold ehbt.\nbasic_solver."},{"statement":"hbt ⊆ hbt ∪ sb ⨾ ⦗MFENCE⦘ ∪ ⦗MFENCE⦘ ⨾ sb.","proofString":"basic_solver."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) : acyclic (ehbt⁺ ∪ psc_base).","proofString":"rewrite psc_base_in_ehbt; auto.\nrewrite unionK.\nred.\nrewrite ct_of_ct.\napply ehbt_ac."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) : acyclic (ehbt⁺ ∪ ehbt⁺).","proofString":"rewrite unionK.\nred.\nrewrite ct_of_ct.\napply ehbt_ac."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) : acyclic ehbt⁺.","proofString":"red.\nrewrite ct_of_ct.\napply ehbt_ac."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) : irreflexive (ehbt⁺)⁺.","proofString":"rewrite ct_of_ct.\napply ehbt_ac."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) : irreflexive ehbt⁺.","proofString":"apply ehbt_ac."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic hbt) : imm_consistent G.","proofString":"red; splits; eauto.\napply Coherence.\napply C_EXT.\nby apply C_SC."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic hbt) : coherence G.","proofString":"apply Coherence."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic hbt) : acyc_ext G.","proofString":"apply C_EXT."},{"statement":"(SCF : ⦗W ∩₁ Sc⦘ ⨾ sb ⨾ ⦗R ∩₁ Sc⦘ ⊆ sb ⨾ ⦗MFENCE⦘ ⨾ sb) (WF0 : Wf G) (COMP : complete G) (SC_PER_LOC : sc_per_loc G) (ATOMICITY : rmw_atomicity G) (GHB : acyclic hbt) : acyclic (psc_f ∪ psc_base).","proofString":"by apply C_SC."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (ar G)⁺).","proofString":"unfold ar.\narewrite (psc ⊆ ∅₂); [| rewrite union_false_l].\nrewrite (dom_l (wf_pscE WF)).\nrewrite (dom_l (wf_pscD G)).\nrewrite <- seqA, <- id_inter.\nrewrite SCF.\nclear; basic_solver 1.\npose proof WF as WF.\nrewrite rfe_in_rf.\nrewrite ar_int_in_sb; auto.\neapply thread_bounds_fsupp_ninit_ct; eauto; try apply WF.\nbasic_solver.\nrewrite unionC.\nby apply TSO_sb_rf_acyclic.\nrewrite no_rf_to_init, no_sb_to_init; auto.\nbasic_solver.\nrewrite wf_rfE, wf_sbE; auto.\nbasic_solver.\nrewrite seq_union_r.\napply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (psc ∪ rfe ∪ ar_int G)⁺).","proofString":"arewrite (psc ⊆ ∅₂); [| rewrite union_false_l].\nrewrite (dom_l (wf_pscE WF)).\nrewrite (dom_l (wf_pscD G)).\nrewrite <- seqA, <- id_inter.\nrewrite SCF.\nclear; basic_solver 1.\npose proof WF as WF.\nrewrite rfe_in_rf.\nrewrite ar_int_in_sb; auto.\neapply thread_bounds_fsupp_ninit_ct; eauto; try apply WF.\nbasic_solver.\nrewrite unionC.\nby apply TSO_sb_rf_acyclic.\nrewrite no_rf_to_init, no_sb_to_init; auto.\nbasic_solver.\nrewrite wf_rfE, wf_sbE; auto.\nbasic_solver.\nrewrite seq_union_r.\napply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : psc ⊆ ∅₂.","proofString":"rewrite (dom_l (wf_pscE WF)).\nrewrite (dom_l (wf_pscD G)).\nrewrite <- seqA, <- id_inter.\nrewrite SCF.\nclear; basic_solver 1."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : ⦗E⦘ ⨾ psc ⊆ ∅₂.","proofString":"rewrite (dom_l (wf_pscD G)).\nrewrite <- seqA, <- id_inter.\nrewrite SCF.\nclear; basic_solver 1."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : ⦗E⦘ ⨾ ⦗MFENCE⦘ ⨾ psc ⊆ ∅₂.","proofString":"rewrite <- seqA, <- id_inter.\nrewrite SCF.\nclear; basic_solver 1."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : ⦗E ∩₁ MFENCE⦘ ⨾ psc ⊆ ∅₂.","proofString":"rewrite SCF.\nclear; basic_solver 1."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : ⦗∅⦘ ⨾ psc ⊆ ∅₂.","proofString":"clear; basic_solver 1."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (rfe ∪ ar_int G)⁺).","proofString":"pose proof WF as WF.\nrewrite rfe_in_rf.\nrewrite ar_int_in_sb; auto.\neapply thread_bounds_fsupp_ninit_ct; eauto; try apply WF.\nbasic_solver.\nrewrite unionC.\nby apply TSO_sb_rf_acyclic.\nrewrite no_rf_to_init, no_sb_to_init; auto.\nbasic_solver.\nrewrite wf_rfE, wf_sbE; auto.\nbasic_solver.\nrewrite seq_union_r.\napply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (rfe ∪ ar_int G)⁺).","proofString":"rewrite rfe_in_rf.\nrewrite ar_int_in_sb; auto.\neapply thread_bounds_fsupp_ninit_ct; eauto; try apply WF.\nbasic_solver.\nrewrite unionC.\nby apply TSO_sb_rf_acyclic.\nrewrite no_rf_to_init, no_sb_to_init; auto.\nbasic_solver.\nrewrite wf_rfE, wf_sbE; auto.\nbasic_solver.\nrewrite seq_union_r.\napply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (rf ∪ ar_int G)⁺).","proofString":"rewrite ar_int_in_sb; auto.\neapply thread_bounds_fsupp_ninit_ct; eauto; try apply WF.\nbasic_solver.\nrewrite unionC.\nby apply TSO_sb_rf_acyclic.\nrewrite no_rf_to_init, no_sb_to_init; auto.\nbasic_solver.\nrewrite wf_rfE, wf_sbE; auto.\nbasic_solver.\nrewrite seq_union_r.\napply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (rf ∪ sb)⁺).","proofString":"eapply thread_bounds_fsupp_ninit_ct; eauto; try apply WF.\nbasic_solver.\nrewrite unionC.\nby apply TSO_sb_rf_acyclic.\nrewrite no_rf_to_init, no_sb_to_init; auto.\nbasic_solver.\nrewrite wf_rfE, wf_sbE; auto.\nbasic_solver.\nrewrite seq_union_r.\napply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : sb ⊆ rf ∪ sb.","proofString":"basic_solver."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : acyclic (rf ∪ sb).","proofString":"rewrite unionC.\nby apply TSO_sb_rf_acyclic."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : acyclic (sb ∪ rf).","proofString":"by apply TSO_sb_rf_acyclic."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : domb (rf ∪ sb) (set_compl (fun a : actid => is_init a)).","proofString":"rewrite no_rf_to_init, no_sb_to_init; auto.\nbasic_solver."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : domb\n  (rf ⨾ ⦗fun x : actid => ~ is_init x⦘ ∪ sb ⨾ ⦗fun x : actid => ~ is_init x⦘)\n  (set_compl (fun a : actid => is_init a)).","proofString":"basic_solver."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : doma (rf ∪ sb) E.","proofString":"rewrite wf_rfE, wf_sbE; auto.\nbasic_solver."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : doma (⦗E⦘ ⨾ rf ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ sb ⨾ ⦗E⦘) E.","proofString":"basic_solver."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ (rf ∪ sb)).","proofString":"rewrite seq_union_r.\napply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp\n  (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ rf\n   ∪ ⦗set_compl (fun a : actid => is_init a)⦘ ⨾ sb).","proofString":"apply fsupp_union.\nrewrite inclusion_seq_eqv_l.\nby apply fsupp_rf.\nby apply fsupp_sb."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ rf).","proofString":"rewrite inclusion_seq_eqv_l.\nby apply fsupp_rf."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp rf.","proofString":"by apply fsupp_rf."},{"statement":"(SCF : E ∩₁ MFENCE ⊆₁ ∅) (TB : fin_threads G) (WF : Wf G) : fsupp (⦗set_compl (fun a : actid => is_init a)⦘ ⨾ sb).","proofString":"by apply fsupp_sb."}]}