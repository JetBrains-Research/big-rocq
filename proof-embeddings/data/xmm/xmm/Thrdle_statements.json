{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/xmm/src/xmm/Thrdle.v","fileSamples":[{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : tid ↓ thrdle\n∪ (tid ↓ thrdle ⨾ sb ∪ (sb ⨾ tid ↓ thrdle ∪ sb ⨾ tid ↓ thrdle ⨾ sb))\n⊆ tid ↓ thrdle.","proofString":"apply inclusion_union_l; try done.\narewrite (tid ↓ thrdle ⨾ sb ⊆ tid ↓ thrdle).\nunfolder.\nintros x y (z & TID & SB).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], y as [yl | yt yn]; ins.\nexfalso.\nnow apply INIT_MIN with (tid x).\ndesf.\narewrite (sb ⨾ tid ↓ thrdle ⊆ tid ↓ thrdle).\nunfolder.\nintros x y (z & SB & TID).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf.\nclear.\nbasic_solver."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : tid ↓ thrdle ⨾ sb ∪ (sb ⨾ tid ↓ thrdle ∪ sb ⨾ tid ↓ thrdle ⨾ sb)\n⊆ tid ↓ thrdle.","proofString":"arewrite (tid ↓ thrdle ⨾ sb ⊆ tid ↓ thrdle).\nunfolder.\nintros x y (z & TID & SB).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], y as [yl | yt yn]; ins.\nexfalso.\nnow apply INIT_MIN with (tid x).\ndesf.\narewrite (sb ⨾ tid ↓ thrdle ⊆ tid ↓ thrdle).\nunfolder.\nintros x y (z & SB & TID).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf.\nclear.\nbasic_solver."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : tid ↓ thrdle ⨾ sb ⊆ tid ↓ thrdle.","proofString":"unfolder.\nintros x y (z & TID & SB).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], y as [yl | yt yn]; ins.\nexfalso.\nnow apply INIT_MIN with (tid x).\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : forall x y : actid,\n(exists z : actid, thrdle (tid x) (tid z) /\\ sb z y) ->\nthrdle (tid x) (tid y).","proofString":"intros x y (z & TID & SB).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], y as [yl | yt yn]; ins.\nexfalso.\nnow apply INIT_MIN with (tid x).\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x y z : actid) (TID : thrdle (tid x) (tid z)) (SB : sb z y) : thrdle (tid x) (tid y).","proofString":"unfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], y as [yl | yt yn]; ins.\nexfalso.\nnow apply INIT_MIN with (tid x).\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x y z : actid) (TID : thrdle (tid x) (tid z)) (SB : E z /\\ ext_sb z y /\\ E y) : thrdle (tid x) (tid y).","proofString":"destruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], y as [yl | yt yn]; ins.\nexfalso.\nnow apply INIT_MIN with (tid x).\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x y z : actid) (TID : thrdle (tid x) (tid z)) (SB : ext_sb z y) : thrdle (tid x) (tid y).","proofString":"destruct z as [zl | zt zn], y as [yl | yt yn]; ins.\nexfalso.\nnow apply INIT_MIN with (tid x).\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x : actid) (yt : thread_id) (yn : nat) (zl : location) (TID : thrdle (tid x) tid_init) (SB : True) : thrdle (tid x) yt.","proofString":"exfalso.\nnow apply INIT_MIN with (tid x)."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x : actid) (yt : thread_id) (yn : nat) (zl : location) (TID : thrdle (tid x) tid_init) (SB : True) : False.","proofString":"now apply INIT_MIN with (tid x)."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x : actid) (yt : thread_id) (yn : nat) (zt : thread_id) (zn : nat) (TID : thrdle (tid x) zt) (SB : zt = yt /\\ zn < yn) : thrdle (tid x) yt.","proofString":"desf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : tid ↓ thrdle ∪ (sb ⨾ tid ↓ thrdle ∪ sb ⨾ tid ↓ thrdle) ⊆ tid ↓ thrdle.","proofString":"arewrite (sb ⨾ tid ↓ thrdle ⊆ tid ↓ thrdle).\nunfolder.\nintros x y (z & SB & TID).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf.\nclear.\nbasic_solver."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : sb ⨾ tid ↓ thrdle ⊆ tid ↓ thrdle.","proofString":"unfolder.\nintros x y (z & SB & TID).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : forall x y : actid,\n(exists z : actid, sb x z /\\ thrdle (tid z) (tid y)) ->\nthrdle (tid x) (tid y).","proofString":"intros x y (z & SB & TID).\nunfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x y z : actid) (SB : sb x z) (TID : thrdle (tid z) (tid y)) : thrdle (tid x) (tid y).","proofString":"unfold sb in SB; unfolder in SB.\ndestruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x y z : actid) (TID : thrdle (tid z) (tid y)) (SB : E x /\\ ext_sb x z /\\ E z) : thrdle (tid x) (tid y).","proofString":"destruct SB as (_ & SB & _).\ndestruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (x y z : actid) (TID : thrdle (tid z) (tid y)) (SB : ext_sb x z) : thrdle (tid x) (tid y).","proofString":"destruct z as [zl | zt zn], x as [xl | xt xn]; ins.\napply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence.\ndesf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (xl : location) (y : actid) (zt : thread_id) (zn : nat) (TID : thrdle zt (tid y)) (SB : True) : thrdle tid_init (tid y).","proofString":"apply INIT_LEAST.\nintro F.\napply INIT_MIN with zt.\ncongruence."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (xl : location) (y : actid) (zt : thread_id) (zn : nat) (TID : thrdle zt (tid y)) (SB : True) : tid_init <> tid y.","proofString":"intro F.\napply INIT_MIN with zt.\ncongruence."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (xl : location) (y : actid) (zt : thread_id) (zn : nat) (TID : thrdle zt (tid y)) (SB : True) (F : tid_init = tid y) : False.","proofString":"apply INIT_MIN with zt.\ncongruence."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (xl : location) (y : actid) (zt : thread_id) (zn : nat) (TID : thrdle zt (tid y)) (SB : True) (F : tid_init = tid y) : thrdle zt tid_init.","proofString":"congruence."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) (xt : thread_id) (xn : nat) (y : actid) (zt : thread_id) (zn : nat) (TID : thrdle zt (tid y)) (SB : xt = zt /\\ xn < zn) : thrdle xt (tid y).","proofString":"desf."},{"statement":"(INIT_MIN : min_elt thrdle tid_init) (INIT_LEAST : least_elt thrdle tid_init) : tid ↓ thrdle ∪ (tid ↓ thrdle ∪ tid ↓ thrdle) ⊆ tid ↓ thrdle.","proofString":"clear.\nbasic_solver."},{"statement":"tid ↓ thrdle ∪ (tid ↓ thrdle ∪ tid ↓ thrdle) ⊆ tid ↓ thrdle.","proofString":"basic_solver."}]}