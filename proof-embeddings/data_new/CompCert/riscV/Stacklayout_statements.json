{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/riscV/Stacklayout.v","fileSamples":[{"statement":"(b : bounds) (fe : frame_env) : 0 <=\nalign\n  (align\n     (size_callee_save_area b\n        (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n         (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4))) 8 +\n   4 * bound_local b) 8 /\\\nalign\n  (align\n     (size_callee_save_area b\n        (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n         (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4))) 8 +\n   4 * bound_local b) 8 + bound_stack_data b <=\nalign\n  (align\n     (align\n        (size_callee_save_area b\n           (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n            (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4)))\n        8 + 4 * bound_local b) 8 + bound_stack_data b) 16.","conclusion":"0 <=\nalign\n  (align\n     (size_callee_save_area b\n        (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n         (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4))) 8 +\n   4 * bound_local b) 8 /\\\nalign\n  (align\n     (size_callee_save_area b\n        (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n         (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4))) 8 +\n   4 * bound_local b) 8 + bound_stack_data b <=\nalign\n  (align\n     (align\n        (size_callee_save_area b\n           (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n            (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4)))\n        8 + 4 * bound_local b) 8 + bound_stack_data b) 16","hypotheses":"(b : bounds) (fe : frame_env)","proofString":"set (w := if Archi.ptr64 then 8 else 4).\nset (olink := align (4 * b.(bound_outgoing)) w).\nset (oretaddr := olink + w).\nset (ocs := oretaddr + w).\nset (ol :=  align (size_callee_save_area b ocs) 8).\nset (ostkdata := align (ol + 4 * b.(bound_local)) 8).\nassert (0 < w) by (unfold w; destruct Archi.ptr64; lia).\ngeneralize b.(bound_local_pos) b.(bound_outgoing_pos) b.(bound_stack_data_pos); intros.\nassert (0 <= 4 * b.(bound_outgoing)) by lia.\nassert (4 * b.(bound_outgoing) <= olink) by (apply align_le; lia).\nassert (olink + w <= oretaddr) by (unfold oretaddr; lia).\nassert (oretaddr + w <= ocs) by (unfold ocs; lia).\nassert (ocs <= size_callee_save_area b ocs) by (apply size_callee_save_area_incr).\nassert (size_callee_save_area b ocs <= ol) by (apply align_le; lia).\nassert (ol + 4 * b.(bound_local) <= ostkdata) by (apply align_le; lia).\nsplit.\nlia.\napply align_le.\nlia."},{"statement":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata) : 0 <= ostkdata /\\\nostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 16.","conclusion":"0 <= ostkdata /\\\nostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 16","hypotheses":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata)","proofString":"split.\nlia.\napply align_le.\nlia."},{"statement":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata) : 0 <= ostkdata.","conclusion":"0 <= ostkdata","hypotheses":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata)","proofString":"lia."},{"statement":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata) : ostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 16.","conclusion":"ostkdata + bound_stack_data b <= align (ostkdata + bound_stack_data b) 16","hypotheses":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata)","proofString":"apply align_le.\nlia."},{"statement":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata) : 16 > 0.","conclusion":"16 > 0","hypotheses":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) (H0 : bound_local b >= 0) (H1 : bound_outgoing b >= 0) (H2 : bound_stack_data b >= 0) (H3 : 0 <= 4 * bound_outgoing b) (H4 : 4 * bound_outgoing b <= olink) (H5 : olink + w <= oretaddr) (H6 : oretaddr + w <= ocs) (H7 : ocs <= size_callee_save_area b ocs) (H8 : size_callee_save_area b ocs <= ol) (H9 : ol + 4 * bound_local b <= ostkdata)","proofString":"lia."},{"statement":"(b : bounds) (fe : frame_env) : (8 | fe_ofs_arg) /\\\n(8\n| align\n    (size_callee_save_area b\n       (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n        (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4))) 8) /\\\n(8\n| align\n    (align\n       (size_callee_save_area b\n          (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n           (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4)))\n       8 + 4 * bound_local b) 8) /\\\n(align_chunk Mptr\n| align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4)) /\\\n(align_chunk Mptr\n| align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n  (if Archi.ptr64 then 8 else 4)).","conclusion":"(8 | fe_ofs_arg) /\\\n(8\n| align\n    (size_callee_save_area b\n       (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n        (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4))) 8) /\\\n(8\n| align\n    (align\n       (size_callee_save_area b\n          (align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n           (if Archi.ptr64 then 8 else 4) + (if Archi.ptr64 then 8 else 4)))\n       8 + 4 * bound_local b) 8) /\\\n(align_chunk Mptr\n| align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4)) /\\\n(align_chunk Mptr\n| align (4 * bound_outgoing b) (if Archi.ptr64 then 8 else 4) +\n  (if Archi.ptr64 then 8 else 4))","hypotheses":"(b : bounds) (fe : frame_env)","proofString":"set (w := if Archi.ptr64 then 8 else 4).\nset (olink := align (4 * b.(bound_outgoing)) w).\nset (oretaddr := olink + w).\nset (ocs := oretaddr + w).\nset (ol :=  align (size_callee_save_area b ocs) 8).\nset (ostkdata := align (ol + 4 * b.(bound_local)) 8).\nassert (0 < w) by (unfold w; destruct Archi.ptr64; lia).\nreplace (align_chunk Mptr) with w by (rewrite align_chunk_Mptr; auto).\nsplit.\napply Z.divide_0_r.\nsplit.\napply align_divides; lia.\nsplit.\napply align_divides; lia.\nsplit.\napply align_divides; lia.\napply Z.divide_add_r.\napply align_divides; lia.\napply Z.divide_refl."},{"statement":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) : (8 | fe_ofs_arg).","conclusion":"(8 | fe_ofs_arg)","hypotheses":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w)","proofString":"apply Z.divide_0_r."},{"statement":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w) : (w | w).","conclusion":"(w | w)","hypotheses":"(b : bounds) (fe : frame_env) (w : Z) (olink : Z) (oretaddr : Z) (ocs : Z) (ol : Z) (ostkdata : Z) (H : 0 < w)","proofString":"apply Z.divide_refl."}]}