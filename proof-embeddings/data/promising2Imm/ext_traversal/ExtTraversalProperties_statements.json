{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/promising2ToImm/src/ext_traversal/ExtTraversalProperties.v","fileSamples":[{"statement":"dom_rel (rf ⨾ rmw ⨾ ⦗W_ex⦘ ⨾ ⦗S⦘) ⊆₁ I.","proofString":"arewrite (⦗W_ex⦘ ⨾ ⦗S⦘ ⊆ ⦗S ∩₁ W_ex⦘) by basic_solver.\nerewrite rcoh_S_W_ex_rfrmw_I; eauto.\nrewrite <- seqA with (r2:=rmw).\nintros x [y HH].\ndestruct_seq_r HH as BB.\ndestruct BB as [z BB].\ndestruct_seq_l BB as IZ.\nassert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"dom_rel (rf ⨾ rmw ⨾ ⦗S ∩₁ W_ex⦘) ⊆₁ I.","proofString":"erewrite rcoh_S_W_ex_rfrmw_I; eauto.\nrewrite <- seqA with (r2:=rmw).\nintros x [y HH].\ndestruct_seq_r HH as BB.\ndestruct BB as [z BB].\ndestruct_seq_l BB as IZ.\nassert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"dom_rel (rf ⨾ rmw ⨾ ⦗codom_rel (⦗I⦘ ⨾ rf ⨾ rmw)⦘) ⊆₁ I.","proofString":"rewrite <- seqA with (r2:=rmw).\nintros x [y HH].\ndestruct_seq_r HH as BB.\ndestruct BB as [z BB].\ndestruct_seq_l BB as IZ.\nassert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"dom_rel ((rf ⨾ rmw) ⨾ ⦗codom_rel (⦗I⦘ ⨾ rf ⨾ rmw)⦘) ⊆₁ I.","proofString":"intros x [y HH].\ndestruct_seq_r HH as BB.\ndestruct BB as [z BB].\ndestruct_seq_l BB as IZ.\nassert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"(x y : actid) (HH : ((rf ⨾ rmw) ⨾ ⦗codom_rel (⦗I⦘ ⨾ rf ⨾ rmw)⦘) x y) : I x.","proofString":"destruct_seq_r HH as BB.\ndestruct BB as [z BB].\ndestruct_seq_l BB as IZ.\nassert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"(x y : actid) (HH : (rf ⨾ rmw) x y) (BB : codom_rel (⦗I⦘ ⨾ rf ⨾ rmw) y) : I x.","proofString":"destruct BB as [z BB].\ndestruct_seq_l BB as IZ.\nassert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"(x y : actid) (HH : (rf ⨾ rmw) x y) (z : actid) (BB : (⦗I⦘ ⨾ rf ⨾ rmw) z y) : I x.","proofString":"destruct_seq_l BB as IZ.\nassert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"(x y : actid) (HH : (rf ⨾ rmw) x y) (z : actid) (IZ : I z) (BB : (rf ⨾ rmw) z y) : I x.","proofString":"assert (x = z); desf.\neapply wf_rfrmwf; eauto."},{"statement":"(x y : actid) (HH : (rf ⨾ rmw) x y) (z : actid) (IZ : I z) (BB : (rf ⨾ rmw) z y) : x = z.","proofString":"eapply wf_rfrmwf; eauto."},{"statement":"dom_rel (rf ⨾ rmw ⨾ ⦗S⦘) ⊆₁ I.","proofString":"apply dom_rf_rmw_S_in_I."},{"statement":"dom_rel (rf ⨾ rmw ⨾ ⦗S⦘) ⊆₁ S.","proofString":"apply dom_rf_rmw_S."},{"statement":"(rf ⨾ rmw)＊ ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂ -> dom_rel ((rf ⨾ rmw)＊ ⨾ ⦗S⦘) ⊆₁ S.","proofString":"unfolder; ins; desf; eauto 21; eapply H; splits; eauto 10."},{"statement":"(rf ⨾ rmw)＊ ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"apply rt_ind_left with (P:= fun r => r ⨾ ⦗S⦘).\nauto with hahn.\nbasic_solver.\nintros k H.\nsin_rewrite rmw_W_ex; rewrite !seqA.\nsin_rewrite H.\narewrite_id ⦗W_ex⦘.\nrewrite seq_id_l.\nseq_rewrite rf_rmw_S.\nbasic_solver."},{"statement":"good_ctx (fun r : relation actid => r ⨾ ⦗S⦘).","proofString":"auto with hahn."},{"statement":"⦗fun _ : actid => True⦘ ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"basic_solver."},{"statement":"forall k : relation actid,\nk ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂ -> ((rf ⨾ rmw) ⨾ k) ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"intros k H.\nsin_rewrite rmw_W_ex; rewrite !seqA.\nsin_rewrite H.\narewrite_id ⦗W_ex⦘.\nrewrite seq_id_l.\nseq_rewrite rf_rmw_S.\nbasic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂) : ((rf ⨾ rmw) ⨾ k) ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"sin_rewrite rmw_W_ex; rewrite !seqA.\nsin_rewrite H.\narewrite_id ⦗W_ex⦘.\nrewrite seq_id_l.\nseq_rewrite rf_rmw_S.\nbasic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂) : rf ⨾ rmw ⨾ ⦗W_ex⦘ ⨾ k ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"sin_rewrite H.\narewrite_id ⦗W_ex⦘.\nrewrite seq_id_l.\nseq_rewrite rf_rmw_S.\nbasic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂) : rf ⨾ rmw ⨾ ⦗W_ex⦘ ⨾ ⦗S⦘ ⨾ ⊤₂ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"arewrite_id ⦗W_ex⦘.\nrewrite seq_id_l.\nseq_rewrite rf_rmw_S.\nbasic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂) : rf ⨾ rmw ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗S⦘ ⨾ ⊤₂ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"rewrite seq_id_l.\nseq_rewrite rf_rmw_S.\nbasic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂) : rf ⨾ rmw ⨾ ⦗S⦘ ⨾ ⊤₂ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"seq_rewrite rf_rmw_S.\nbasic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⊤₂) : (⦗S⦘ ⨾ rf ⨾ rmw ⨾ ⦗S⦘) ⨾ ⊤₂ ⊆ ⦗S⦘ ⨾ ⊤₂.","proofString":"basic_solver."},{"statement":"dom_rel ((rf ⨾ rmw)＊ ⨾ ⦗S⦘) ⊆₁ S.","proofString":"apply dom_rf_rmw_rt_S."},{"statement":"dom_rel (rf ⨾ rmw ⨾ ⦗S⦘) ⊆₁ I.","proofString":"apply dom_rf_rmw_S_in_I."},{"statement":"good_ctx (fun r : relation actid => r ⨾ ⦗S⦘).","proofString":"by eauto with hahn."},{"statement":"⦗fun _ : actid => True⦘ ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"basic_solver 12."},{"statement":"forall k : relation actid,\nk ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘ ->\n((rf ⨾ rmw) ⨾ k) ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"intros k H.\nrewrite !seqA, H.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l; unionL.\nhahn_frame.\nrewrite rt_begin at 2.\nbasic_solver 21.\narewrite ((rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⊆ (rf ⨾ rmw)＊).\narewrite (rfi ⊆ rf); arewrite_id (⦗I⦘); relsf.\nrelsf.\nrewrite (dom_rel_helper dom_rf_rmw_rt_S).\nseq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : ((rf ⨾ rmw) ⨾ k) ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"rewrite !seqA, H.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l; unionL.\nhahn_frame.\nrewrite rt_begin at 2.\nbasic_solver 21.\narewrite ((rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⊆ (rf ⨾ rmw)＊).\narewrite (rfi ⊆ rf); arewrite_id (⦗I⦘); relsf.\nrelsf.\nrewrite (dom_rel_helper dom_rf_rmw_rt_S).\nseq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rf ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"rewrite rfi_union_rfe at 1.\nrewrite !seq_union_l; unionL.\nhahn_frame.\nrewrite rt_begin at 2.\nbasic_solver 21.\narewrite ((rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⊆ (rf ⨾ rmw)＊).\narewrite (rfi ⊆ rf); arewrite_id (⦗I⦘); relsf.\nrelsf.\nrewrite (dom_rel_helper dom_rf_rmw_rt_S).\nseq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : (rfi ∪ rfe) ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"rewrite !seq_union_l; unionL.\nhahn_frame.\nrewrite rt_begin at 2.\nbasic_solver 21.\narewrite ((rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⊆ (rf ⨾ rmw)＊).\narewrite (rfi ⊆ rf); arewrite_id (⦗I⦘); relsf.\nrelsf.\nrewrite (dom_rel_helper dom_rf_rmw_rt_S).\nseq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rfi ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"hahn_frame.\nrewrite rt_begin at 2.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rfi ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⊆ (rfi ⨾ rmw)＊.","proofString":"rewrite rt_begin at 2.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rfi ⨾ rmw ⨾ (rfi ⨾ rmw)＊\n⊆ ⦗fun _ : actid => True⦘ ∪ (rfi ⨾ rmw) ⨾ (rfi ⨾ rmw)＊.","proofString":"basic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rfe ⨾ rmw ⨾ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"arewrite ((rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⊆ (rf ⨾ rmw)＊).\narewrite (rfi ⊆ rf); arewrite_id (⦗I⦘); relsf.\nrelsf.\nrewrite (dom_rel_helper dom_rf_rmw_rt_S).\nseq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⊆ (rf ⨾ rmw)＊.","proofString":"arewrite (rfi ⊆ rf); arewrite_id (⦗I⦘); relsf."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rfe ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"relsf.\nrewrite (dom_rel_helper dom_rf_rmw_rt_S).\nseq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rfe ⨾ rmw ⨾ (rf ⨾ rmw)＊ ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"rewrite (dom_rel_helper dom_rf_rmw_rt_S).\nseq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : rfe ⨾ rmw ⨾ ⦗S⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"seq_rewrite (dom_rel_helper rfe_rmw_S).\narewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : (⦗I⦘ ⨾ rfe ⨾ rmw ⨾ ⦗S⦘) ⨾ (rf ⨾ rmw)＊ ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"arewrite (rfe ⊆ rf).\nrewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : ⦗I⦘ ⨾ rf ⨾ rmw ⨾ ⦗S⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘.","proofString":"rewrite ct_begin.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : k ⨾ ⦗S⦘ ⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw)⁺)^? ⨾ ⦗S⦘) : ⦗I⦘ ⨾ rf ⨾ rmw ⨾ ⦗S⦘ ⨾ (rf ⨾ rmw)＊ ⨾ ⦗S⦘\n⊆ (rfi ⨾ rmw)＊ ⨾ (⦗I⦘ ⨾ (rf ⨾ rmw) ⨾ (rf ⨾ rmw)＊)^? ⨾ ⦗S⦘.","proofString":"basic_solver 21."},{"statement":"dom_rel (rfe ⨾ rmw ⨾ (rfi ⨾ (rmw ⨾ rfi)＊) ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘) ⊆₁ I.","proofString":"rewrite !seqA.\narewrite (rmw ⨾ rfi ⨾ (rmw ⨾ rfi)＊ ⊆ (rmw ⨾ rfi)＊).\nrewrite rtE.\nrewrite ct_begin at 2.\nbasic_solver 21.\nrewrite (dom_r (wf_rfeD WF)), !seqA.\nrewrite (dom_r (wf_rfiD WF)).\narewrite (⦗R⦘ ⨾ (rmw ⨾ rfi ⨾ ⦗R⦘)＊ ⊆ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘).\nrewrite !rtE, <- !seqA, inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘).\nforward (eapply reservedW); eauto.\nbasic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘).\ntype_solver 21.\ngeneralize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"dom_rel (rfe ⨾ rmw ⨾ rfi ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘) ⊆₁ I.","proofString":"arewrite (rmw ⨾ rfi ⨾ (rmw ⨾ rfi)＊ ⊆ (rmw ⨾ rfi)＊).\nrewrite rtE.\nrewrite ct_begin at 2.\nbasic_solver 21.\nrewrite (dom_r (wf_rfeD WF)), !seqA.\nrewrite (dom_r (wf_rfiD WF)).\narewrite (⦗R⦘ ⨾ (rmw ⨾ rfi ⨾ ⦗R⦘)＊ ⊆ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘).\nrewrite !rtE, <- !seqA, inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘).\nforward (eapply reservedW); eauto.\nbasic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘).\ntype_solver 21.\ngeneralize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"rmw ⨾ rfi ⨾ (rmw ⨾ rfi)＊ ⊆ (rmw ⨾ rfi)＊.","proofString":"rewrite rtE.\nrewrite ct_begin at 2.\nbasic_solver 21."},{"statement":"rmw ⨾ rfi ⨾ (⦗fun _ : actid => True⦘ ∪ (rmw ⨾ rfi)⁺)\n⊆ ⦗fun _ : actid => True⦘ ∪ (rmw ⨾ rfi)⁺.","proofString":"rewrite ct_begin at 2.\nbasic_solver 21."},{"statement":"rmw ⨾ rfi ⨾ (⦗fun _ : actid => True⦘ ∪ (rmw ⨾ rfi)⁺)\n⊆ ⦗fun _ : actid => True⦘ ∪ (rmw ⨾ rfi) ⨾ (rmw ⨾ rfi)＊.","proofString":"basic_solver 21."},{"statement":"dom_rel (rfe ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘) ⊆₁ I.","proofString":"rewrite (dom_r (wf_rfeD WF)), !seqA.\nrewrite (dom_r (wf_rfiD WF)).\narewrite (⦗R⦘ ⨾ (rmw ⨾ rfi ⨾ ⦗R⦘)＊ ⊆ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘).\nrewrite !rtE, <- !seqA, inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘).\nforward (eapply reservedW); eauto.\nbasic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘).\ntype_solver 21.\ngeneralize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"dom_rel (rfe ⨾ ⦗R⦘ ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘) ⊆₁ I.","proofString":"rewrite (dom_r (wf_rfiD WF)).\narewrite (⦗R⦘ ⨾ (rmw ⨾ rfi ⨾ ⦗R⦘)＊ ⊆ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘).\nrewrite !rtE, <- !seqA, inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘).\nforward (eapply reservedW); eauto.\nbasic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘).\ntype_solver 21.\ngeneralize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"dom_rel (rfe ⨾ ⦗R⦘ ⨾ (rmw ⨾ rfi ⨾ ⦗R⦘)＊ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘) ⊆₁ I.","proofString":"arewrite (⦗R⦘ ⨾ (rmw ⨾ rfi ⨾ ⦗R⦘)＊ ⊆ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘).\nrewrite !rtE, <- !seqA, inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘).\nforward (eapply reservedW); eauto.\nbasic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘).\ntype_solver 21.\ngeneralize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"⦗R⦘ ⨾ (rmw ⨾ rfi ⨾ ⦗R⦘)＊ ⊆ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘.","proofString":"rewrite !rtE, <- !seqA, inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"⦗R⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (rmw ⨾ rfi)⁺ ⨾ ⦗R⦘)\n⊆ (⦗fun _ : actid => True⦘ ∪ (rmw ⨾ rfi)⁺) ⨾ ⦗R⦘.","proofString":"basic_solver."},{"statement":"dom_rel (rfe ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘) ⊆₁ I.","proofString":"arewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘).\nforward (eapply reservedW); eauto.\nbasic_solver.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘).\ntype_solver 21.\ngeneralize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘.","proofString":"forward (eapply reservedW); eauto.\nbasic_solver."},{"statement":"S ⊆₁ W -> ⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘.","proofString":"basic_solver."},{"statement":"dom_rel (rfe ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘) ⊆₁ I.","proofString":"arewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘).\ntype_solver 21.\ngeneralize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb^? ⨾ ⦗S⦘ ⨾ ⦗W⦘ ⊆ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘.","proofString":"type_solver 21."},{"statement":"dom_rel (rfe ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘) ⊆₁ I.","proofString":"generalize ((rcoh_dr_R_acq_I RCOH)).\nbasic_solver 21."},{"statement":"dom_rel ((detour ∪ rfe) ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗R ∩₁ Acq⦘ ⨾ sb ⨾ ⦗S⦘) ⊆₁ I ->\ndom_rel (rfe ⨾ (rmw ⨾ rfi)＊ ⨾ ⦗R⦘ ⨾ ⦗Acq⦘ ⨾ sb ⨾ ⦗S⦘) ⊆₁ I.","proofString":"basic_solver 21."},{"statement":"(rrf : relation actid) (P : actid -> Prop) : dom_rel (sb ⨾ ⦗S⦘) ∩₁ codom_rel (⦗P⦘ ⨾ rrf ⨾ rmw) ⊆₁ E.","proofString":"rewrite (wf_rmwE WF).\nbasic_solver."},{"statement":"(rrf : relation actid) (P : actid -> Prop) : dom_rel (sb ⨾ ⦗S⦘) ∩₁ codom_rel (⦗P⦘ ⨾ rrf ⨾ ⦗E⦘ ⨾ rmw ⨾ ⦗E⦘) ⊆₁ E.","proofString":"basic_solver."},{"statement":"(rrf : relation actid) (P : actid -> Prop) : dom_rel (sb ⨾ ⦗S⦘) ∩₁ codom_rel (⦗P⦘ ⨾ rrf ⨾ rmw) ⊆₁ W_ex.","proofString":"rewrite rmw_W_ex.\nbasic_solver."},{"statement":"(rrf : relation actid) (P : actid -> Prop) : dom_rel (sb ⨾ ⦗S⦘) ∩₁ codom_rel (⦗P⦘ ⨾ rrf ⨾ rmw ⨾ ⦗W_ex⦘) ⊆₁ W_ex.","proofString":"basic_solver."},{"statement":"(rrf : relation actid) (P : actid -> Prop) : W_ex ⊆₁ W.","proofString":"by apply W_ex_in_W."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) : sc_per_loc G.","proofString":"apply coherence_sc_per_loc.\napply IMMCON."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) : coherence G.","proofString":"apply IMMCON."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) : sb w wnext.","proofString":"destruct WNEXT as [_ AA].\nclear -AA WF.\ngeneralize (@sb_trans G), (@rfi_in_sb G), (rmw_in_sb WF), AA.\nbasic_solver."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (AA : codom_rel (⦗eq w⦘ ⨾ rfi ⨾ rmw) wnext) : sb w wnext.","proofString":"clear -AA WF.\ngeneralize (@sb_trans G), (@rfi_in_sb G), (rmw_in_sb WF), AA.\nbasic_solver."},{"statement":"(AA : codom_rel (⦗eq w⦘ ⨾ rfi ⨾ rmw) wnext) : sb w wnext.","proofString":"generalize (@sb_trans G), (@rfi_in_sb G), (rmw_in_sb WF), AA.\nbasic_solver."},{"statement":"(AA : codom_rel (⦗eq w⦘ ⨾ rfi ⨾ rmw) wnext) : transitive sb ->\nrfi ⊆ sb -> rmw ⊆ sb -> codom_rel (⦗eq w⦘ ⨾ rfi ⨾ rmw) wnext -> sb w wnext.","proofString":"basic_solver."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) : is_w lab wnext.","proofString":"eapply dom_sb_S_rfrmwD; eauto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) : E wnext.","proofString":"eapply dom_sb_S_rfrmwE; eauto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) : ~ C wnext.","proofString":"intros HH.\napply WNCOV.\neapply dom_sb_covered; eauto.\nbasic_solver 10."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (HH : C wnext) : False.","proofString":"apply WNCOV.\neapply dom_sb_covered; eauto.\nbasic_solver 10."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (HH : C wnext) : C w.","proofString":"eapply dom_sb_covered; eauto.\nbasic_solver 10."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (HH : C wnext) : dom_rel (sb ⨾ ⦗C⦘) w.","proofString":"basic_solver 10."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) : (rfi ⨾ rmw) w wnext.","proofString":"destruct WNEXT as [_ [y AA]].\ndestruct_seq_l AA as BB; subst.\ngeneralize AA.\nclear.\nbasic_solver."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (y : actid) (AA : (⦗eq w⦘ ⨾ rfi ⨾ rmw) y wnext) : (rfi ⨾ rmw) w wnext.","proofString":"destruct_seq_l AA as BB; subst.\ngeneralize AA.\nclear.\nbasic_solver."},{"statement":"(y : actid) (locw : location) (WLOC : loc y = Some locw) (WNCOV : ~ C y) (WNISS : ~ I y) (SPL : sc_per_loc G) (SBWWNEXT : sb y wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (AA : (rfi ⨾ rmw) y wnext) : (rfi ⨾ rmw) y wnext.","proofString":"generalize AA.\nclear.\nbasic_solver."},{"statement":"(y : actid) (locw : location) (WLOC : loc y = Some locw) (WNCOV : ~ C y) (WNISS : ~ I y) (SPL : sc_per_loc G) (SBWWNEXT : sb y wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (AA : (rfi ⨾ rmw) y wnext) : (rfi ⨾ rmw) y wnext -> (rfi ⨾ rmw) y wnext.","proofString":"clear.\nbasic_solver."},{"statement":"(y : actid) : (rfi ⨾ rmw) y wnext -> (rfi ⨾ rmw) y wnext.","proofString":"basic_solver."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) : (rf ⨾ rmw) w wnext.","proofString":"generalize RFIRMWNEXT.\nunfold Execution.rfi.\nclear.\nbasic_solver."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) : (rfi ⨾ rmw) w wnext -> (rf ⨾ rmw) w wnext.","proofString":"unfold Execution.rfi.\nclear.\nbasic_solver."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) : (rf ∩ sb ⨾ rmw) w wnext -> (rf ⨾ rmw) w wnext.","proofString":"clear.\nbasic_solver."},{"statement":"(rf ∩ sb ⨾ rmw) w wnext -> (rf ⨾ rmw) w wnext.","proofString":"basic_solver."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) : co w wnext.","proofString":"apply rf_rmw_in_co; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) : ~ S wnext.","proofString":"intros HH.\napply WNISS.\neapply dom_rf_rmw_S_in_I; eauto.\nexists wnext.\napply seqA.\napply seq_eqv_r.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (HH : S wnext) : False.","proofString":"apply WNISS.\neapply dom_rf_rmw_S_in_I; eauto.\nexists wnext.\napply seqA.\napply seq_eqv_r.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (HH : S wnext) : I w.","proofString":"eapply dom_rf_rmw_S_in_I; eauto.\nexists wnext.\napply seqA.\napply seq_eqv_r.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (HH : S wnext) : dom_rel (rf ⨾ rmw ⨾ ⦗S⦘) w.","proofString":"exists wnext.\napply seqA.\napply seq_eqv_r.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (HH : S wnext) : (rf ⨾ rmw ⨾ ⦗S⦘) w wnext.","proofString":"apply seqA.\napply seq_eqv_r.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (HH : S wnext) : ((rf ⨾ rmw) ⨾ ⦗S⦘) w wnext.","proofString":"apply seq_eqv_r.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (HH : S wnext) : (rf ⨾ rmw) w wnext /\\ S wnext.","proofString":"split; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) : ~ I wnext.","proofString":"intros HH.\napply NSWNEXT.\neapply rcoh_I_in_S; eauto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (HH : I wnext) : False.","proofString":"apply NSWNEXT.\neapply rcoh_I_in_S; eauto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (HH : I wnext) : S wnext.","proofString":"eapply rcoh_I_in_S; eauto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) : ~ is_init wnext.","proofString":"intros HH.\napply WNEXTCOV.\neapply init_covered; eauto.\nby split."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (HH : is_init wnext) : False.","proofString":"apply WNEXTCOV.\neapply init_covered; eauto.\nby split."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (HH : is_init wnext) : C wnext.","proofString":"eapply init_covered; eauto.\nby split."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (HH : is_init wnext) : (Init ∩₁ E) wnext.","proofString":"by split."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) : loc wnext = Some locw.","proofString":"rewrite <- WLOC.\nsymmetry.\nby apply (wf_col WF)."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) : loc wnext = loc w.","proofString":"symmetry.\nby apply (wf_col WF)."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) : loc w = loc wnext.","proofString":"by apply (wf_col WF)."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) : E w.","proofString":"apply (dom_l (wf_rfrmwE WF)) in RFRMWNEXT.\ndestruct_seq_l RFRMWNEXT as AA; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (⦗E⦘ ⨾ rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) : E w.","proofString":"destruct_seq_l RFRMWNEXT as AA; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) (EW : E w) : tid wnext = tid w.","proofString":"symmetry.\neapply ninit_sb_same_tid.\napply seq_eqv_l.\nsplit; eauto.\nintros HH.\napply WNCOV.\neapply init_covered; eauto.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) (EW : E w) : tid w = tid wnext.","proofString":"eapply ninit_sb_same_tid.\napply seq_eqv_l.\nsplit; eauto.\nintros HH.\napply WNCOV.\neapply init_covered; eauto.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) (EW : E w) : set_compl Init w.","proofString":"intros HH.\napply WNCOV.\neapply init_covered; eauto.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) (EW : E w) (HH : is_init w) : False.","proofString":"apply WNCOV.\neapply init_covered; eauto.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) (EW : E w) (HH : is_init w) : C w.","proofString":"eapply init_covered; eauto.\nsplit; auto."},{"statement":"(locw : location) (WNISS : ~ I w) (WNCOV : ~ C w) (WLOC : loc w = Some locw) (SPL : sc_per_loc G) (SBWWNEXT : sb w wnext) (WWNEXT : W wnext) (EWNEXT : E wnext) (WNEXTCOV : ~ C wnext) (RFIRMWNEXT : (rfi ⨾ rmw) w wnext) (RFRMWNEXT : (rf ⨾ rmw) w wnext) (COWWNEXT : co w wnext) (NSWNEXT : ~ S wnext) (NIWNEXT : ~ I wnext) (WNEXTINIT : ~ is_init wnext) (WNEXTLOC : loc wnext = Some locw) (EW : E w) (HH : is_init w) : (Init ∩₁ E) w.","proofString":"split; auto."}]}