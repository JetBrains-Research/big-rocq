{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/imm/src/imm/imm_hb.v","fileSamples":[{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n≡ ⦗W⦘\n  ∪ ⦗E⦘\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n≡ ⦗W⦘\n  ∪ ⦗E⦘\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"split; [|basic_solver].\nrewrite rtE; relsf; unionL.\nrewrite wf_sbE; basic_solver 21.\nbasic_solver 21.\nunionR right -> right -> right.\nrewrite (dom_r (wf_rmwE WF)) at 1.\nrewrite <- !seqA.\nsin_rewrite inclusion_ct_seq_eqv_r.\nrewrite !seqA.\narewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n⊆ ⦗W⦘\n  ∪ ⦗E⦘\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n⊆ ⦗W⦘\n  ∪ ⦗E⦘\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite rtE; relsf; unionL.\nrewrite wf_sbE; basic_solver 21.\nbasic_solver 21.\nunionR right -> right -> right.\nrewrite (dom_r (wf_rmwE WF)) at 1.\nrewrite <- !seqA.\nsin_rewrite inclusion_ct_seq_eqv_r.\nrewrite !seqA.\narewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘\n⊆ ⦗W⦘\n  ∪ (⦗E⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗E⦘\n     ∪ (⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘)).","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘\n⊆ ⦗W⦘\n  ∪ (⦗E⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗E⦘\n     ∪ (⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘))","hypotheses":"(WF : Wf G)","proofString":"rewrite wf_sbE; basic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘\n⊆ ⦗W⦘\n  ∪ (⦗E⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗E⦘\n     ∪ (⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘)).","conclusion":"⦗W⦘\n⊆ ⦗W⦘\n  ∪ (⦗E⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗E⦘\n     ∪ (⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘))","hypotheses":"(WF : Wf G)","proofString":"basic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗W⦘\n  ∪ (⦗E⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗E⦘\n     ∪ (⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘)).","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗W⦘\n  ∪ (⦗E⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗E⦘\n     ∪ (⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘))","hypotheses":"(WF : Wf G)","proofString":"unionR right -> right -> right.\nrewrite (dom_r (wf_rmwE WF)) at 1.\nrewrite <- !seqA.\nsin_rewrite inclusion_ct_seq_eqv_r.\nrewrite !seqA.\narewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_r (wf_rmwE WF)) at 1.\nrewrite <- !seqA.\nsin_rewrite inclusion_ct_seq_eqv_r.\nrewrite !seqA.\narewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ⦗E⦘)⁺\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ⦗E⦘)⁺\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite <- !seqA.\nsin_rewrite inclusion_ct_seq_eqv_r.\nrewrite !seqA.\narewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw) ⨾ ⦗E⦘)⁺\n⊆ ((⦗E⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ ((((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw) ⨾ ⦗E⦘)⁺\n⊆ ((⦗E⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite inclusion_ct_seq_eqv_r.\nrewrite !seqA.\narewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺ ⨾ ⦗E⦘\n⊆ ((⦗E⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺ ⨾ ⦗E⦘\n⊆ ((⦗E⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite !seqA.\narewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"arewrite (⦗E⦘ ⨾ ⦗W⦘ ≡ ⦗W⦘ ⨾ ⦗E⦘) by basic_solver.\nhahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘\n⊆ ⦗W⦘ ⨾ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘\n⊆ ⦗W⦘ ⨾ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"hahn_frame.\nrewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺.","conclusion":"((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺","hypotheses":"(WF : Wf G)","proofString":"rewrite ct_begin.\nrewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (@wf_sbE G)) at 1.\nrewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : (((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"(((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_rfE WF)) at 1.\nbasic_solver 21."},{"statement":"(WF : Wf G) : (((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ (⦗E⦘ ⨾ rf) ⨾ rmw)\n⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"(((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ (⦗E⦘ ⨾ rf) ⨾ rmw)\n⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗E⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"basic_solver 21."},{"statement":"(WF : Wf G) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs\n≡ ⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs) ⨾ ⦗E⦘.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs\n≡ ⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rsE WF).\nrewrite (@wf_sbE G) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)\n≡ ⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)) ⨾ ⦗E⦘.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)\n≡ ⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (@wf_sbE G) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ ⦗E⦘ ⨾ sb ⨾ ⦗E⦘)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)\n≡ ⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)) ⨾ ⦗E⦘.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ ⦗E⦘ ⨾ sb ⨾ ⦗E⦘)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)\n≡ ⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ (⦗W⦘ ∪ ⦗E⦘ ⨾ rs ⨾ ⦗E⦘)) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : sw ⊆ sw ⨾ ⦗E⦘.","conclusion":"sw ⊆ sw ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold sw.\nrewrite wf_sbE at 1 2.\nrewrite (wf_rfiE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘.","conclusion":"release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite wf_sbE at 1 2.\nrewrite (wf_rfiE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : release\n⨾ (rfi ∪ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ∩ same_loc)^? ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘.","conclusion":"release\n⨾ (rfi ∪ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ∩ same_loc)^? ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfiE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : release\n⨾ (⦗E⦘ ⨾ rfi ⨾ ⦗E⦘ ∪ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ∩ same_loc)^? ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘.","conclusion":"release\n⨾ (⦗E⦘ ⨾ rfi ⨾ ⦗E⦘ ∪ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ∩ same_loc)^? ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : release\n⨾ (⦗E⦘ ⨾ rfi ⨾ ⦗E⦘ ∪ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ∩ same_loc)^? ⨾ ⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)\n  ⨾ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘.","conclusion":"release\n⨾ (⦗E⦘ ⨾ rfi ⨾ ⦗E⦘ ∪ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ∩ same_loc)^? ⨾ ⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)\n  ⨾ ((⦗E⦘ ⨾ sb ⨾ ⦗E⦘) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : sw ⊆ ⦗E⦘ ⨾ sw ⨾ ⦗E⦘.","conclusion":"sw ⊆ ⦗E⦘ ⨾ sw ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_swE_right WF) at 1.\nhahn_frame.\nunfold sw.\nrewrite (wf_releaseE WF).\nrewrite (dom_l (wf_rfiE WF)).\nrewrite (dom_l (@wf_sbE G)).\nrewrite (dom_l (wf_rfeE WF)).\nbasic_solver 40."},{"statement":"(WF : Wf G) : sw ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ sw ⨾ ⦗E⦘.","conclusion":"sw ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ sw ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"hahn_frame.\nunfold sw.\nrewrite (wf_releaseE WF).\nrewrite (dom_l (wf_rfiE WF)).\nrewrite (dom_l (@wf_sbE G)).\nrewrite (dom_l (wf_rfeE WF)).\nbasic_solver 40."},{"statement":"(WF : Wf G) : sw ⊆ ⦗E⦘ ⨾ sw.","conclusion":"sw ⊆ ⦗E⦘ ⨾ sw","hypotheses":"(WF : Wf G)","proofString":"unfold sw.\nrewrite (wf_releaseE WF).\nrewrite (dom_l (wf_rfiE WF)).\nrewrite (dom_l (@wf_sbE G)).\nrewrite (dom_l (wf_rfeE WF)).\nbasic_solver 40."},{"statement":"(WF : Wf G) : release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘ ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘ ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_releaseE WF).\nrewrite (dom_l (wf_rfiE WF)).\nrewrite (dom_l (@wf_sbE G)).\nrewrite (dom_l (wf_rfeE WF)).\nbasic_solver 40."},{"statement":"(WF : Wf G) : (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"(⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_rfiE WF)).\nrewrite (dom_l (@wf_sbE G)).\nrewrite (dom_l (wf_rfeE WF)).\nbasic_solver 40."},{"statement":"(WF : Wf G) : (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (⦗E⦘ ⨾ rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (⦗E⦘ ⨾ rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"(⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (⦗E⦘ ⨾ rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (⦗E⦘ ⨾ rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (@wf_sbE G)).\nrewrite (dom_l (wf_rfeE WF)).\nbasic_solver 40."},{"statement":"(WF : Wf G) : (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ rfe)\n      ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"(⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ rfe)\n      ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_rfeE WF)).\nbasic_solver 40."},{"statement":"(WF : Wf G) : (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ ⦗E⦘ ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ ⦗E⦘ ⨾ rfe)\n      ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"(⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ ⦗E⦘ ⨾ rfe)\n  ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗E⦘\n  ⨾ (⦗W ∩₁ Rel⦘ ∪ ⦗E⦘ ⨾ release ⨾ ⦗E⦘)\n    ⨾ (⦗E⦘ ⨾ rfi ∪ ((⦗E⦘ ⨾ sb) ∩ same_loc)^? ⨾ ⦗E⦘ ⨾ rfe)\n      ⨾ ((⦗E⦘ ⨾ sb) ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 40."},{"statement":"(WF : Wf G) : hb ⊆ ⦗E⦘ ⨾ hb ⨾ ⦗E⦘.","conclusion":"hb ⊆ ⦗E⦘ ⨾ hb ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold hb.\nrewrite <- inclusion_ct_seq_eqv_r, <- inclusion_ct_seq_eqv_l.\napply inclusion_t_t.\nrewrite wf_sbE at 1.\nrewrite (wf_swE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ sw)⁺ ⊆ ⦗E⦘ ⨾ (sb ∪ sw)⁺ ⨾ ⦗E⦘.","conclusion":"(sb ∪ sw)⁺ ⊆ ⦗E⦘ ⨾ (sb ∪ sw)⁺ ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite <- inclusion_ct_seq_eqv_r, <- inclusion_ct_seq_eqv_l.\napply inclusion_t_t.\nrewrite wf_sbE at 1.\nrewrite (wf_swE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ sw)⁺ ⊆ (⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘)⁺.","conclusion":"(sb ∪ sw)⁺ ⊆ (⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘)⁺","hypotheses":"(WF : Wf G)","proofString":"apply inclusion_t_t.\nrewrite wf_sbE at 1.\nrewrite (wf_swE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : sb ∪ sw ⊆ ⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘.","conclusion":"sb ∪ sw ⊆ ⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite wf_sbE at 1.\nrewrite (wf_swE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ sb ⨾ ⦗E⦘ ∪ sw ⊆ ⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ sb ⨾ ⦗E⦘ ∪ sw ⊆ ⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_swE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ sb ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ sw ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ sb ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ sw ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ (sb ∪ sw) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : rs ⊆ ⦗W⦘ ⨾ rs ⨾ ⦗W⦘.","conclusion":"rs ⊆ ⦗W⦘ ⨾ rs ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"unfold rs.\nrelsf; unionL; [basic_solver 12|].\nrewrite rtE; relsf; unionL; [basic_solver|].\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"relsf; unionL; [basic_solver 12|].\nrewrite rtE; relsf; unionL; [basic_solver|].\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ ⦗W⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ ⦗W⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite rtE; relsf; unionL; [basic_solver|].\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ⦗W⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗W⦘).","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ⦗W⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗W⦘)","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ⦗W⦘)⁺\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ⦗W⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗W⦘).","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ⦗W⦘)⁺\n⊆ ⦗W⦘ ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ⦗W⦘ ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ ⦗W⦘)","hypotheses":"(WF : Wf G)","proofString":"rewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw) ⨾ ⦗W⦘)⁺\n⊆ (((⦗W⦘ ⨾ ⦗W⦘) ⨾ sb ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ((⦗W⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗W⦘).","conclusion":"⦗W⦘ ⨾ ((((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw) ⨾ ⦗W⦘)⁺\n⊆ (((⦗W⦘ ⨾ ⦗W⦘) ⨾ sb ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ((⦗W⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗W⦘)","hypotheses":"(WF : Wf G)","proofString":"rewrite inclusion_ct_seq_eqv_r.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺ ⨾ ⦗W⦘\n⊆ (((⦗W⦘ ⨾ ⦗W⦘) ⨾ sb ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ((⦗W⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗W⦘).","conclusion":"⦗W⦘ ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺ ⨾ ⦗W⦘\n⊆ (((⦗W⦘ ⨾ ⦗W⦘) ⨾ sb ∩ same_loc) ⨾ ⦗W⦘) ⨾ ⦗W⦘\n  ∪ (⦗W⦘ ∪ ((⦗W⦘ ⨾ ⦗W⦘) ⨾ (((sb ∩ same_loc)^? ⨾ rf) ⨾ rmw)⁺) ⨾ ⦗W⦘)","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : release ⊆ ⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘.","conclusion":"release ⊆ ⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"unfold release.\nrewrite (wf_rsD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs ⊆ ⦗FW ∩₁ Rel⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs) ⨾ ⦗W⦘.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs ⊆ ⦗FW ∩₁ Rel⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs) ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rsD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ rs ⨾ ⦗W⦘\n⊆ ⦗FW ∩₁ Rel⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs) ⨾ ⦗W⦘.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ rs ⨾ ⦗W⦘\n⊆ ⦗FW ∩₁ Rel⦘ ⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs) ⨾ ⦗W⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : sw ⊆ ⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘.","conclusion":"sw ⊆ ⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"unfold sw.\nrewrite (wf_releaseD WF) at 1.\nrewrite (wf_rfiD WF) at 1.\nrewrite (wf_rfeD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘.","conclusion":"release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_releaseD WF) at 1.\nrewrite (wf_rfiD WF) at 1.\nrewrite (wf_rfeD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘)\n⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘.","conclusion":"(⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘)\n⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfiD WF) at 1.\nrewrite (wf_rfeD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘.","conclusion":"(⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfeD WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)\n  ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘.","conclusion":"(⦗FW ∩₁ Rel⦘ ⨾ release ⨾ ⦗W⦘)\n⨾ (⦗W⦘ ⨾ rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘)\n  ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗FW ∩₁ Rel⦘\n  ⨾ (release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n    ⨾ ⦗FR ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : sw ⊆ sw ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"sw ⊆ sw ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_swD WF) at 1.\ngeneralize (read_or_fence_is_not_init WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘ ⊆ sw ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘ ⊆ sw ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"generalize (read_or_fence_is_not_init WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : (forall a : actid, is_r lab a \\/ is_f lab a -> ~ is_init a) ->\n⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘ ⊆ sw ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"(forall a : actid, is_r lab a \\/ is_f lab a -> ~ is_init a) ->\n⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘ ⊆ sw ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : hb ⊆ hb ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"hb ⊆ hb ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"unfold hb.\nrewrite ct_end.\nrewrite (no_sw_to_init WF) at 2.\nrewrite no_sb_to_init at 2.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ sw)⁺ ⊆ (sb ∪ sw)⁺ ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"(sb ∪ sw)⁺ ⊆ (sb ∪ sw)⁺ ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite ct_end.\nrewrite (no_sw_to_init WF) at 2.\nrewrite no_sb_to_init at 2.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ sw)＊ ⨾ (sb ∪ sw)\n⊆ ((sb ∪ sw)＊ ⨾ (sb ∪ sw)) ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"(sb ∪ sw)＊ ⨾ (sb ∪ sw)\n⊆ ((sb ∪ sw)＊ ⨾ (sb ∪ sw)) ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (no_sw_to_init WF) at 2.\nrewrite no_sb_to_init at 2.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ sw)＊ ⨾ (sb ∪ sw ⨾ ⦗fun x : actid => ~ is_init x⦘)\n⊆ ((sb ∪ sw)＊ ⨾ (sb ∪ sw)) ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"(sb ∪ sw)＊ ⨾ (sb ∪ sw ⨾ ⦗fun x : actid => ~ is_init x⦘)\n⊆ ((sb ∪ sw)＊ ⨾ (sb ∪ sw)) ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite no_sb_to_init at 2.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ sw)＊\n⨾ (sb ⨾ ⦗fun x : actid => ~ is_init x⦘ ∪ sw ⨾ ⦗fun x : actid => ~ is_init x⦘)\n⊆ ((sb ∪ sw)＊ ⨾ (sb ∪ sw)) ⨾ ⦗fun x : actid => ~ is_init x⦘.","conclusion":"(sb ∪ sw)＊\n⨾ (sb ⨾ ⦗fun x : actid => ~ is_init x⦘ ∪ sw ⨾ ⦗fun x : actid => ~ is_init x⦘)\n⊆ ((sb ∪ sw)＊ ⨾ (sb ∪ sw)) ⨾ ⦗fun x : actid => ~ is_init x⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n≡ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ ⦗R ∩₁ Acq⦘\n  ∪ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘.","conclusion":"release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n≡ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ ⦗R ∩₁ Acq⦘\n  ∪ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_r (wf_rfiD WF)).\nrewrite (dom_r (wf_rfeD WF)).\nbasic_solver 42."},{"statement":"(WF : Wf G) : release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n≡ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ ⦗R ∩₁ Acq⦘\n  ∪ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘.","conclusion":"release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n≡ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ ⦗R ∩₁ Acq⦘\n  ∪ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_r (wf_rfeD WF)).\nbasic_solver 42."},{"statement":"(WF : Wf G) : release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ ⦗R⦘) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n≡ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ ⦗R⦘) ⨾ ⦗R ∩₁ Acq⦘\n  ∪ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ ⦗R⦘) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘.","conclusion":"release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ ⦗R⦘) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n≡ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ ⦗R⦘) ⨾ ⦗R ∩₁ Acq⦘\n  ∪ release ⨾ (rfi ⨾ ⦗R⦘ ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ ⦗R⦘) ⨾ sb ⨾ ⦗F ∩₁ Acq⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : release ⨾ (⦗W⦘ ⨾ (rfi ∪ rfe) ⨾ ⦗R⦘) ⨾ ⦗Acq⦘ ⊆ sw.","conclusion":"release ⨾ (⦗W⦘ ⨾ (rfi ∪ rfe) ⨾ ⦗R⦘) ⨾ ⦗Acq⦘ ⊆ sw","hypotheses":"(WF : Wf G)","proofString":"unfold sw; basic_solver 42."},{"statement":"(WF : Wf G) : release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘\n⊆ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ ⦗Acq⦘.","conclusion":"release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘\n⊆ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ ⦗Acq⦘","hypotheses":"(WF : Wf G)","proofString":"arewrite ((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ ⦗Acq⦘) by type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"assert (A: ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?).\narewrite (⦗W⦘ ⊆ ⦗W⦘ ⨾ ⦗W⦘) at 1 by basic_solver.\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nsin_rewrite (dom_l (wf_coiD WF)).\nie_unfolder; basic_solver.\nrelsf; unionL.\narewrite (sb ∩ same_loc ⊆ (sb ∩ same_loc)^?).\nby rewrite A.\nrewrite rtE; relsf; unionL; [basic_solver|].\nsin_rewrite !(rf_rmw_in_co WF SC_PER_LOC).\nsin_rewrite (dom_r (wf_coD WF)).\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺).\nrewrite <- seqA.\nrewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels.\nsin_rewrite (dom_l (wf_coD WF)).\nsin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"arewrite (⦗W⦘ ⊆ ⦗W⦘ ⨾ ⦗W⦘) at 1 by basic_solver.\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nsin_rewrite (dom_l (wf_coiD WF)).\nie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nsin_rewrite (dom_l (wf_coiD WF)).\nie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"sin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nsin_rewrite (dom_l (wf_coiD WF)).\nie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : coi ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"coi ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"sin_rewrite (dom_l (wf_coiD WF)).\nie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ coi ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ coi ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"ie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"relsf; unionL.\narewrite (sb ∩ same_loc ⊆ (sb ∩ same_loc)^?).\nby rewrite A.\nrewrite rtE; relsf; unionL; [basic_solver|].\nsin_rewrite !(rf_rmw_in_co WF SC_PER_LOC).\nsin_rewrite (dom_r (wf_coD WF)).\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺).\nrewrite <- seqA.\nrewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels.\nsin_rewrite (dom_l (wf_coD WF)).\nsin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"arewrite (sb ∩ same_loc ⊆ (sb ∩ same_loc)^?).\nby rewrite A."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"by rewrite A."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"rewrite rtE; relsf; unionL; [basic_solver|].\nsin_rewrite !(rf_rmw_in_co WF SC_PER_LOC).\nsin_rewrite (dom_r (wf_coD WF)).\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺).\nrewrite <- seqA.\nrewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels.\nsin_rewrite (dom_l (wf_coD WF)).\nsin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"sin_rewrite !(rf_rmw_in_co WF SC_PER_LOC).\nsin_rewrite (dom_r (wf_coD WF)).\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺).\nrewrite <- seqA.\nrewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels.\nsin_rewrite (dom_l (wf_coD WF)).\nsin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"sin_rewrite (dom_r (wf_coD WF)).\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺).\nrewrite <- seqA.\nrewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels.\nsin_rewrite (dom_l (wf_coD WF)).\nsin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"arewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺).\nrewrite <- seqA.\nrewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels.\nsin_rewrite (dom_l (wf_coD WF)).\nsin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ co ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"rewrite <- seqA.\nrewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ (((sb ∩ same_loc)^? ⨾ co) ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺.","conclusion":"⦗W⦘ ⨾ (((sb ∩ same_loc)^? ⨾ co) ⨾ ⦗W⦘)⁺ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"rewrite <- ct_seq_swap.\narewrite_id ⦗W⦘ at 2.\nby rels."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺ ⨾ ⦗W⦘ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺.","conclusion":"(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺ ⨾ ⦗W⦘ ⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"arewrite_id ⦗W⦘ at 2.\nby rels."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺ ⨾ ⦗fun _ : actid => True⦘\n⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺.","conclusion":"(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺ ⨾ ⦗fun _ : actid => True⦘\n⊆ (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"by rels."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"sin_rewrite (dom_l (wf_coD WF)).\nsin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : (⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"sin_rewrite A.\nrewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ((⦗W⦘ ⨾ co^?) ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"((⦗W⦘ ⨾ co^?) ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"rewrite !seqA.\nrewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : (⦗W⦘ ⨾ co^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"(⦗W⦘ ⨾ co^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"rewrite inclusion_ct_seq_eqv_l.\ngeneralize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?) : ⦗W⦘ ⨾ (co^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?.","conclusion":"⦗W⦘ ⨾ (co^? ⨾ co)⁺ ⊆ ⦗W⦘ ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (A : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ ⦗W⦘ ⨾ co^?)","proofString":"generalize (co_trans WF); ins; relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : (⦗W⦘ ⨾ co^?) ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?.","conclusion":"(⦗W⦘ ⨾ co^?) ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite !seqA.\napply co_sb_loc; auto."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ co^? ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?.","conclusion":"⦗W⦘ ⨾ co^? ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"apply co_sb_loc; auto."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) : rs ⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"rs ⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc))","proofString":"assert (SB: (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc).\nrewrite (rfi_in_sbloc' WF).\narewrite (rmw ⊆ rmw ∩ rmw).\nrewrite (rmw_in_sb WF) at 1; rewrite (wf_rmwl WF).\nrelsf.\nunfold rs.\nrewrite rtE; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)), (rfi_in_sbloc' WF).\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 12.\nrewrite (dom_r (wf_rfiD WF)); rewrite (rfi_in_sbloc' WF).\nbasic_solver 12.\nrewrite rfi_union_rfe; relsf.\nrewrite path_ut_last; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)) at 2; rewrite (rfi_in_sbloc' WF) at 2.\nsin_rewrite SB.\nrewrite !seqA.\nrelsf.\nbasic_solver.\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs).\nunfold rs.\nrewrite rfi_union_rfe.\nrelsf.\nrewrite (dom_l (wf_rfeD WF)) at 1.\nrewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc.","conclusion":"(sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc))","proofString":"rewrite (rfi_in_sbloc' WF).\narewrite (rmw ⊆ rmw ∩ rmw).\nrewrite (rmw_in_sb WF) at 1; rewrite (wf_rmwl WF).\nrelsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) : (sb ∩ same_loc)^? ⨾ sb ∩ same_loc ⨾ rmw ⊆ sb ∩ same_loc.","conclusion":"(sb ∩ same_loc)^? ⨾ sb ∩ same_loc ⨾ rmw ⊆ sb ∩ same_loc","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc))","proofString":"arewrite (rmw ⊆ rmw ∩ rmw).\nrewrite (rmw_in_sb WF) at 1; rewrite (wf_rmwl WF).\nrelsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) : (sb ∩ same_loc)^? ⨾ sb ∩ same_loc ⨾ rmw ∩ rmw ⊆ sb ∩ same_loc.","conclusion":"(sb ∩ same_loc)^? ⨾ sb ∩ same_loc ⨾ rmw ∩ rmw ⊆ sb ∩ same_loc","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc))","proofString":"rewrite (rmw_in_sb WF) at 1; rewrite (wf_rmwl WF).\nrelsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) : (sb ∩ same_loc)^? ⨾ sb ∩ same_loc ⨾ sb ∩ same_loc ⊆ sb ∩ same_loc.","conclusion":"(sb ∩ same_loc)^? ⨾ sb ∩ same_loc ⨾ sb ∩ same_loc ⊆ sb ∩ same_loc","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc))","proofString":"relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : rs ⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"rs ⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"unfold rs.\nrewrite rtE; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)), (rfi_in_sbloc' WF).\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 12.\nrewrite (dom_r (wf_rfiD WF)); rewrite (rfi_in_sbloc' WF).\nbasic_solver 12.\nrewrite rfi_union_rfe; relsf.\nrewrite path_ut_last; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)) at 2; rewrite (rfi_in_sbloc' WF) at 2.\nsin_rewrite SB.\nrewrite !seqA.\nrelsf.\nbasic_solver.\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs).\nunfold rs.\nrewrite rfi_union_rfe.\nrelsf.\nrewrite (dom_l (wf_rfeD WF)) at 1.\nrewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite rtE; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)), (rfi_in_sbloc' WF).\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 12.\nrewrite (dom_r (wf_rfiD WF)); rewrite (rfi_in_sbloc' WF).\nbasic_solver 12.\nrewrite rfi_union_rfe; relsf.\nrewrite path_ut_last; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)) at 2; rewrite (rfi_in_sbloc' WF) at 2.\nsin_rewrite SB.\nrewrite !seqA.\nrelsf.\nbasic_solver.\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs).\nunfold rs.\nrewrite rfi_union_rfe.\nrelsf.\nrewrite (dom_l (wf_rfeD WF)) at 1.\nrewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite (dom_r (wf_rfiD WF)), (rfi_in_sbloc' WF).\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 12."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"generalize (@sb_same_loc_trans G).\nbasic_solver 12."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : transitive (sb ∩ same_loc) ->\n(⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"transitive (sb ∩ same_loc) ->\n(⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : ⦗W⦘ ⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"⦗W⦘ ⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite (dom_r (wf_rfiD WF)); rewrite (rfi_in_sbloc' WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗R⦘ ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗R⦘ ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite rfi_union_rfe; relsf.\nrewrite path_ut_last; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)) at 2; rewrite (rfi_in_sbloc' WF) at 2.\nsin_rewrite SB.\nrewrite !seqA.\nrelsf.\nbasic_solver.\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs).\nunfold rs.\nrewrite rfi_union_rfe.\nrelsf.\nrewrite (dom_l (wf_rfeD WF)) at 1.\nrewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)⁺)\n⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)⁺)\n⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite path_ut_last; relsf; unionL.\nrewrite (dom_r (wf_rfiD WF)) at 2; rewrite (rfi_in_sbloc' WF) at 2.\nsin_rewrite SB.\nrewrite !seqA.\nrelsf.\nbasic_solver.\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs).\nunfold rs.\nrewrite rfi_union_rfe.\nrelsf.\nrewrite (dom_l (wf_rfeD WF)) at 1.\nrewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)⁺) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)⁺) ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite (dom_r (wf_rfiD WF)) at 2; rewrite (rfi_in_sbloc' WF) at 2.\nsin_rewrite SB.\nrewrite !seqA.\nrelsf.\nbasic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)⁺) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)⁺) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"sin_rewrite SB.\nrewrite !seqA.\nrelsf.\nbasic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘ ⨾ (sb ∩ same_loc)⁺) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘ ⨾ (sb ∩ same_loc)⁺) ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite !seqA.\nrelsf.\nbasic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : ⦗W⦘ ⨾ (sb ∩ same_loc)⁺ ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc)⁺ ⨾ sb ∩ same_loc ⨾ ⦗R⦘\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"relsf.\nbasic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗R⦘ ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗R⦘ ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : (⦗W⦘\n ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊\n   ⨾ ((sb ∩ same_loc)^? ⨾ rfe ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊)\n⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"(⦗W⦘\n ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊\n   ⨾ ((sb ∩ same_loc)^? ⨾ rfe ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊)\n⨾ rfi ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"arewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs).\nunfold rs.\nrewrite rfi_union_rfe.\nrelsf.\nrewrite (dom_l (wf_rfeD WF)) at 1.\nrewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊ ⊆ rs","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"unfold rs.\nrewrite rfi_union_rfe.\nrelsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊).","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite rfi_union_rfe.\nrelsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ (rfi ∪ rfe) ⨾ rmw)＊).","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ∪ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ (rfi ∪ rfe) ⨾ rmw)＊)","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : rs ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"rs ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite (dom_l (wf_rfeD WF)) at 1.\nrewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : rs\n⨾ (sb ∩ same_loc)^?\n  ⨾ (⦗W⦘ ⨾ rfe) ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"rs\n⨾ (sb ∩ same_loc)^?\n  ⨾ (⦗W⦘ ⨾ rfe) ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : rs\n⨾ (sb ∩ same_loc)^?\n  ⨾ ⦗W⦘ ⨾ rfe ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"rs\n⨾ (sb ∩ same_loc)^?\n  ⨾ ⦗W⦘ ⨾ rfe ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"sin_rewrite (rs_sb_loc WF SC_PER_LOC).\nrewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : co^? ⨾ rfe ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"co^? ⨾ rfe ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite (dom_l (wf_rmwD WF)).\narewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : co^? ⨾ rfe ⨾ (⦗R⦘ ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ ⦗R⦘ ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"co^? ⨾ rfe ⨾ (⦗R⦘ ⨾ rmw) ⨾ ((sb ∩ same_loc)^? ⨾ rfi ⨾ ⦗R⦘ ⨾ rmw)＊ ⨾ rfi\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"arewrite (rfi ⊆ sb); rewrite (rmw_in_sb WF).\narewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ ((sb ∩ same_loc)^? ⨾ sb ⨾ ⦗R⦘ ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ ((sb ∩ same_loc)^? ⨾ sb ⨾ ⦗R⦘ ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"arewrite ((sb ∩ same_loc)^? ⊆ sb^?).\narewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ (sb^? ⨾ sb ⨾ ⦗R⦘ ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ (sb^? ⨾ sb ⨾ ⦗R⦘ ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"arewrite_id ⦗R⦘ at 2.\nrewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ (sb^? ⨾ sb ⨾ ⦗fun _ : actid => True⦘ ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ (sb^? ⨾ sb ⨾ ⦗fun _ : actid => True⦘ ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"rewrite seq_id_l.\narewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb\n⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"arewrite (sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb).\ngeneralize (@sb_trans G).\nins.\nrelsf.\neauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb.","conclusion":"sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"generalize (@sb_trans G).\nins.\nrelsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : transitive sb -> sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb.","conclusion":"transitive sb -> sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"ins.\nrelsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) (H0 : transitive sb) : sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb.","conclusion":"sb ⨾ (sb^? ⨾ sb ⨾ sb)＊ ⨾ sb ⊆ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) (H0 : transitive sb)","proofString":"relsf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc) : co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb.","conclusion":"co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb ⊆ sb ∩ same_loc ⨾ ⦗R⦘ ∪ co^? ⨾ rfe ⨾ ⦗R⦘ ⨾ sb","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (H : transitive (sb ∩ same_loc)) (SB : (sb ∩ same_loc)^? ⨾ rfi ⨾ rmw ⊆ sb ∩ same_loc)","proofString":"eauto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ co^? ⊆ co^?.","conclusion":"⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ co^? ⊆ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : (⦗W⦘ ⨾ rs) ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⊆ eco.","conclusion":"(⦗W⦘ ⨾ rs) ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite rs_in_co; try done.\narewrite (rfi ⊆ rf).\narewrite (rfe ⊆ rf).\nrelsf; unionL.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42.\nrewrite (dom_r (wf_coD WF)), (dom_l (wf_rfD WF)).\narewrite (⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘).\nbasic_solver.\narewrite !(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?).\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : (⦗W⦘ ⨾ ⦗W⦘ ⨾ co^?) ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⊆ eco.","conclusion":"(⦗W⦘ ⨾ ⦗W⦘ ⨾ co^?) ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"arewrite (rfi ⊆ rf).\narewrite (rfe ⊆ rf).\nrelsf; unionL.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42.\nrewrite (dom_r (wf_coD WF)), (dom_l (wf_rfD WF)).\narewrite (⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘).\nbasic_solver.\narewrite !(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?).\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ ⦗W⦘ ⨾ co^? ⨾ (rf ∪ (sb ∩ same_loc)^? ⨾ rfe) ⊆ eco.","conclusion":"⦗W⦘ ⨾ ⦗W⦘ ⨾ co^? ⨾ (rf ∪ (sb ∩ same_loc)^? ⨾ rfe) ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"arewrite (rfe ⊆ rf).\nrelsf; unionL.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42.\nrewrite (dom_r (wf_coD WF)), (dom_l (wf_rfD WF)).\narewrite (⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘).\nbasic_solver.\narewrite !(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?).\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ ⦗W⦘ ⨾ co^? ⨾ (rf ∪ (sb ∩ same_loc)^? ⨾ rf) ⊆ eco.","conclusion":"⦗W⦘ ⨾ ⦗W⦘ ⨾ co^? ⨾ (rf ∪ (sb ∩ same_loc)^? ⨾ rf) ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"relsf; unionL.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42.\nrewrite (dom_r (wf_coD WF)), (dom_l (wf_rfD WF)).\narewrite (⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘).\nbasic_solver.\narewrite !(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?).\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ co^? ⨾ rf ⊆ eco.","conclusion":"⦗W⦘ ⨾ co^? ⨾ rf ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ eco^? ⨾ eco ⊆ eco.","conclusion":"⦗W⦘ ⨾ eco^? ⨾ eco ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"generalize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ co^? ⨾ (sb ∩ same_loc)^? ⨾ rf ⊆ eco.","conclusion":"⦗W⦘ ⨾ co^? ⨾ (sb ∩ same_loc)^? ⨾ rf ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite (dom_r (wf_coD WF)), (dom_l (wf_rfD WF)).\narewrite (⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘).\nbasic_solver.\narewrite !(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?).\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rf ⊆ eco.","conclusion":"⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rf ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"arewrite (⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘).\nbasic_solver.\narewrite !(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?).\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘.","conclusion":"⦗W⦘ ⨾ (co ⨾ ⦗W⦘)^? ⊆ co^? ⨾ ⦗W⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : co^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rf ⊆ eco.","conclusion":"co^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ rf ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"arewrite !(⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?).\nrewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver.\nrewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⊆ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite crE; relsf; unionL; [basic_solver|].\nsin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ co^?.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"sin_rewrite (w_sb_loc_w_in_coi WF SC_PER_LOC).\nie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : coi ⊆ co^?.","conclusion":"coi ⊆ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"ie_unfolder; basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : co^? ⨾ co^? ⨾ rf ⊆ eco.","conclusion":"co^? ⨾ co^? ⨾ rf ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite co_in_eco, rf_in_eco; try done.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : eco^? ⨾ eco^? ⨾ eco ⊆ eco.","conclusion":"eco^? ⨾ eco^? ⨾ eco ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"generalize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘\n⊆ eco.","conclusion":"⦗W⦘ ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘\n⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"unfold release; rewrite !seqA.\narewrite_id (⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?).\nby type_solver.\nrels.\nsin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco.","conclusion":"⦗W⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"arewrite_id (⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?).\nby type_solver.\nrels.\nsin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ ⦗fun _ : actid => True⦘.","conclusion":"⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ ⦗fun _ : actid => True⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"by type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗fun _ : actid => True⦘\n⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco.","conclusion":"⦗fun _ : actid => True⦘\n⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rels.\nsin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco.","conclusion":"rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"sin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : eco ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco.","conclusion":"eco ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗R⦘ ⊆ eco","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"generalize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘.","conclusion":"⦗W⦘ ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"unfold release; rewrite !seqA.\narewrite_id (⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?).\nby type_solver.\nrels.\nsin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\nrewrite (wf_ecoD WF) at 1.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘.","conclusion":"⦗W⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"arewrite_id (⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^?).\nby type_solver.\nrels.\nsin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\nrewrite (wf_ecoD WF) at 1.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ ⦗fun _ : actid => True⦘.","conclusion":"⦗W⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ ⦗fun _ : actid => True⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"by type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗fun _ : actid => True⦘\n⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘.","conclusion":"⦗fun _ : actid => True⦘\n⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rels.\nsin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\nrewrite (wf_ecoD WF) at 1.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘.","conclusion":"rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘\n⊆ eco ⨾ sb ⨾ ⦗F⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"sin_rewrite (sw_in_eco_helper WF SC_PER_LOC).\nrewrite (wf_ecoD WF) at 1.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : eco ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘ ⊆ eco ⨾ sb ⨾ ⦗F⦘.","conclusion":"eco ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘ ⊆ eco ⨾ sb ⨾ ⦗F⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite (wf_ecoD WF) at 1.\ngeneralize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : (⦗RW⦘ ⨾ eco ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘ ⊆ eco ⨾ sb ⨾ ⦗F⦘.","conclusion":"(⦗RW⦘ ⨾ eco ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ ⦗F⦘ ⊆ eco ⨾ sb ⨾ ⦗F⦘","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"generalize (eco_trans WF); type_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?.","conclusion":"release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"unfold release; rewrite !seqA.\nsin_rewrite sw_in_eco_helper; try done.\nbasic_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"sin_rewrite sw_in_eco_helper; try done.\nbasic_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) : is_w lab y.","conclusion":"is_w lab y","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z)","proofString":"apply (wf_ecoD WF) in ECO; try edone.\napply (wf_swD WF) in SW; try edone.\nby unfolder in *; type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : (⦗RW⦘ ⨾ eco ⨾ ⦗RW⦘) x y) (SW : sw y z) (NECO : ~ eco y z) : is_w lab y.","conclusion":"is_w lab y","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : (⦗RW⦘ ⨾ eco ⨾ ⦗RW⦘) x y) (SW : sw y z) (NECO : ~ eco y z)","proofString":"apply (wf_swD WF) in SW; try edone.\nby unfolder in *; type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : (⦗RW⦘ ⨾ eco ⨾ ⦗RW⦘) x y) (SW : (⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘) y z) (NECO : ~ eco y z) : is_w lab y.","conclusion":"is_w lab y","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : (⦗RW⦘ ⨾ eco ⨾ ⦗RW⦘) x y) (SW : (⦗FW ∩₁ Rel⦘ ⨾ sw ⨾ ⦗FR ∩₁ Acq⦘) y z) (NECO : ~ eco y z)","proofString":"by unfolder in *; type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_r lab z) (SW3 : is_acq lab z) : eco y z.","conclusion":"eco y z","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_r lab z) (SW3 : is_acq lab z)","proofString":"apply sw_in_eco; try done.\nunfolder; ins; desf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_r lab z) (SW3 : is_acq lab z) : (⦗W⦘ ⨾ sw ⨾ ⦗R⦘) y z.","conclusion":"(⦗W⦘ ⨾ sw ⨾ ⦗R⦘) y z","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_r lab z) (SW3 : is_acq lab z)","proofString":"unfolder; ins; desf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z) : is_w lab y.","conclusion":"is_w lab y","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z)","proofString":"desf."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z) (x' : actid) (AA : eco y x') (BB : sb x' z /\\ is_f lab z) : exists k : actid, eco x k /\\ sb k z /\\ ~ rmw k z.","conclusion":"exists k : actid, eco x k /\\ sb k z /\\ ~ rmw k z","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z) (x' : actid) (AA : eco y x') (BB : sb x' z /\\ is_f lab z)","proofString":"destruct BB as [SB FF].\nexists x'; splits; eauto using (eco_trans WF); subst.\nintro A; eapply (wf_rmwD WF) in A; unfolder in *; type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z) (x' : actid) (AA : eco y x') (SB : sb x' z) (FF : is_f lab z) : exists k : actid, eco x k /\\ sb k z /\\ ~ rmw k z.","conclusion":"exists k : actid, eco x k /\\ sb k z /\\ ~ rmw k z","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z) (x' : actid) (AA : eco y x') (SB : sb x' z) (FF : is_f lab z)","proofString":"exists x'; splits; eauto using (eco_trans WF); subst.\nintro A; eapply (wf_rmwD WF) in A; unfolder in *; type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z) (x' : actid) (AA : eco y x') (SB : sb x' z) (FF : is_f lab z) : ~ rmw x' z.","conclusion":"~ rmw x' z","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (ECO : eco x y) (SW : sw y z) (NECO : ~ eco y z) (Wy : W y) (SW1 : is_f lab y \\/ is_w lab y) (SW4 : is_rel lab y) (SW0 : sw y z) (H : is_f lab z) (SW3 : is_acq lab z) (x' : actid) (AA : eco y x') (SB : sb x' z) (FF : is_f lab z)","proofString":"intro A; eapply (wf_rmwD WF) in A; unfolder in *; type_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y) (H1 : ~ eco z y) : exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y.","conclusion":"exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y) (H1 : ~ eco z y)","proofString":"eapply eco_sw_helper; eauto."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y) : eco x y \\/ (exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y).","conclusion":"eco x y \\/ (exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y)","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y)","proofString":"destruct (classic (eco z y)).\nby generalize (eco_trans WF); basic_solver.\nright; eapply eco_sw_helper; eauto."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y) (H1 : eco z y) : eco x y \\/ (exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y).","conclusion":"eco x y \\/ (exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y)","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y) (H1 : eco z y)","proofString":"by generalize (eco_trans WF); basic_solver."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y) (H1 : ~ eco z y) : eco x y \\/ (exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y).","conclusion":"eco x y \\/ (exists z0 : actid, eco x z0 /\\ sb z0 y /\\ ~ rmw z0 y)","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (x y z : actid) (H : eco x z) (H0 : sw z y) (H1 : ~ eco z y)","proofString":"right; eapply eco_sw_helper; eauto."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G) : eco ∪ eco ⨾ ((sb ∪ sw) \\ eco) ⨾ (sb ∪ sw)＊\n⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊.","conclusion":"eco ∪ eco ⨾ ((sb ∪ sw) \\ eco) ⨾ (sb ∪ sw)＊\n⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G)","proofString":"rewrite minus_union_l.\nrelsf; unionL; eauto with hahn.\nrewrite rmw_in_fr, fr_in_eco; auto with hahn.\nsin_rewrite eco_sw; auto.\nrewrite !seqA; auto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G) : eco ∪ eco ⨾ (sb \\ eco ∪ sw \\ eco) ⨾ (sb ∪ sw)＊\n⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊.","conclusion":"eco ∪ eco ⨾ (sb \\ eco ∪ sw \\ eco) ⨾ (sb ∪ sw)＊\n⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G)","proofString":"relsf; unionL; eauto with hahn.\nrewrite rmw_in_fr, fr_in_eco; auto with hahn.\nsin_rewrite eco_sw; auto.\nrewrite !seqA; auto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G) : eco ⨾ (sb \\ eco) ⨾ (sb ∪ sw)＊ ⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊.","conclusion":"eco ⨾ (sb \\ eco) ⨾ (sb ∪ sw)＊ ⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G)","proofString":"rewrite rmw_in_fr, fr_in_eco; auto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G) : eco ⨾ (sw \\ eco) ⨾ (sb ∪ sw)＊ ⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊.","conclusion":"eco ⨾ (sw \\ eco) ⨾ (sb ∪ sw)＊ ⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G)","proofString":"sin_rewrite eco_sw; auto.\nrewrite !seqA; auto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G) : (eco ⨾ (sb \\ rmw)) ⨾ (sb ∪ sw)＊ ⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊.","conclusion":"(eco ⨾ (sb \\ rmw)) ⨾ (sb ∪ sw)＊ ⊆ eco ∪ eco ⨾ (sb \\ rmw) ⨾ (sb ∪ sw)＊","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) (COMP : complete G)","proofString":"rewrite !seqA; auto with hahn."},{"statement":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G) : ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ co^? ⊆ hb^? ⨾ co^?.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ co^? ⊆ hb^? ⨾ co^?","hypotheses":"(WF : Wf G) (SC_PER_LOC : sc_per_loc G)","proofString":"rewrite sb_in_hb; basic_solver 10."},{"statement":"(WF : Wf G) : (sb ∪ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(sb ∪ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_swD WF)) at 1.\narewrite (⦗FW ∩₁ Rel⦘ ⊆ ⦗F⦘ ∪ ⦗W⦘) by type_solver 12.\nrelsf; rewrite <- !unionA.\narewrite (sb ⊆ (sb \\ rmw) ∪ rmw) at 1 by unfolder; ins; tauto.\nrewrite path_union1.\nassert (TRANS: transitive (⦗W⦘ ⨾ sw)).\nby apply transitiveI; rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nrelsf.\nunionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ ⦗FW ∩₁ Rel⦘ ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(sb ∪ ⦗FW ∩₁ Rel⦘ ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G)","proofString":"arewrite (⦗FW ∩₁ Rel⦘ ⊆ ⦗F⦘ ∪ ⦗W⦘) by type_solver 12.\nrelsf; rewrite <- !unionA.\narewrite (sb ⊆ (sb \\ rmw) ∪ rmw) at 1 by unfolder; ins; tauto.\nrewrite path_union1.\nassert (TRANS: transitive (⦗W⦘ ⨾ sw)).\nby apply transitiveI; rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nrelsf.\nunionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ (⦗F⦘ ∪ ⦗W⦘) ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(sb ∪ (⦗F⦘ ∪ ⦗W⦘) ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G)","proofString":"relsf; rewrite <- !unionA.\narewrite (sb ⊆ (sb \\ rmw) ∪ rmw) at 1 by unfolder; ins; tauto.\nrewrite path_union1.\nassert (TRANS: transitive (⦗W⦘ ⨾ sw)).\nby apply transitiveI; rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nrelsf.\nunionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb ∪ ⦗F⦘ ⨾ sw ∪ ⦗W⦘ ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(sb ∪ ⦗F⦘ ⨾ sw ∪ ⦗W⦘ ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G)","proofString":"arewrite (sb ⊆ (sb \\ rmw) ∪ rmw) at 1 by unfolder; ins; tauto.\nrewrite path_union1.\nassert (TRANS: transitive (⦗W⦘ ⨾ sw)).\nby apply transitiveI; rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nrelsf.\nunionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ ⦗W⦘ ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ ⦗W⦘ ⨾ sw)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G)","proofString":"rewrite path_union1.\nassert (TRANS: transitive (⦗W⦘ ⨾ sw)).\nby apply transitiveI; rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nrelsf.\nunionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗W⦘ ⨾ sw)⁺\n∪ (⦗W⦘ ⨾ sw)＊\n  ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw) ⨾ (⦗W⦘ ⨾ sw)⁺)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(⦗W⦘ ⨾ sw)⁺\n∪ (⦗W⦘ ⨾ sw)＊\n  ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw) ⨾ (⦗W⦘ ⨾ sw)⁺)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G)","proofString":"assert (TRANS: transitive (⦗W⦘ ⨾ sw)).\nby apply transitiveI; rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nrelsf.\nunionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) : transitive (⦗W⦘ ⨾ sw).","conclusion":"transitive (⦗W⦘ ⨾ sw)","hypotheses":"(WF : Wf G)","proofString":"by apply transitiveI; rewrite (dom_r (wf_swD WF)) at 1; type_solver."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : (⦗W⦘ ⨾ sw)⁺\n∪ (⦗W⦘ ⨾ sw)＊\n  ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw) ⨾ (⦗W⦘ ⨾ sw)⁺)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(⦗W⦘ ⨾ sw)⁺\n∪ (⦗W⦘ ⨾ sw)＊\n  ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw) ⨾ (⦗W⦘ ⨾ sw)⁺)⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"relsf.\nunionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : ⦗W⦘ ⨾ sw\n∪ (⦗W⦘ ⨾ sw)^?\n  ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n     ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ (⦗F⦘ ⨾ sw) ⨾ ⦗W⦘ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"⦗W⦘ ⨾ sw\n∪ (⦗W⦘ ⨾ sw)^?\n  ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n     ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ (⦗F⦘ ⨾ sw) ⨾ ⦗W⦘ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"unionL; [by vauto|].\nrewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : (⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ (⦗F⦘ ⨾ sw) ⨾ ⦗W⦘ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ (⦗F⦘ ⨾ sw) ⨾ ⦗W⦘ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"rewrite !seqA.\narewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : (⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ sw ⨾ ⦗W⦘ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ sw ⨾ ⦗W⦘ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"arewrite_false (sw ⨾ ⦗W⦘).\nby rewrite (dom_r (wf_swD WF)) at 1; type_solver.\nunionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : sw ⨾ ⦗W⦘ ⊆ ∅₂.","conclusion":"sw ⨾ ⦗W⦘ ⊆ ∅₂","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"by rewrite (dom_r (wf_swD WF)) at 1; type_solver."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : (⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw))⁺\n⊆ ⦗W⦘ ⨾ sw\n  ∪ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"unionR right.\nhahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : (⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw))⁺\n⊆ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(⦗W⦘ ⨾ sw)^?\n⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n   ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw))⁺\n⊆ (⦗W⦘ ⨾ sw)^? ⨾ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"hahn_frame.\napply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw))⁺\n⊆ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺.","conclusion":"(sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n ∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw))⁺\n⊆ (sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw)⁺","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"apply inclusion_t_t.\nbasic_solver 42."},{"statement":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw)) : sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw)\n⊆ sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw.","conclusion":"sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw\n∪ ((sb \\ rmw) ⨾ ⦗W⦘ ⨾ sw ∪ rmw ⨾ ⦗W⦘ ⨾ sw ∪ ⦗F⦘ ⨾ ∅₂ ⨾ sw)\n⊆ sb \\ rmw ∪ rmw ∪ ⦗F⦘ ⨾ sw ∪ (sb \\ rmw) ⨾ sw ∪ rmw ⨾ sw","hypotheses":"(WF : Wf G) (TRANS : transitive (⦗W⦘ ⨾ sw))","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘\n⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n  ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ rmw\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊).","conclusion":"⦗W⦘\n⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n  ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ rmw\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)","hypotheses":"(WF : Wf G)","proofString":"arewrite ((rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ rmw ⊆ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw).\nrewrite rfi_union_rfe; basic_solver 12.\nrelsf; unionL.\nrewrite !seqA.\narewrite ( sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ sb ∩ same_loc).\nby arewrite_id ⦗W⦘; generalize (@sb_same_loc_trans G); ins; relsf.\nrewrite (dom_l (wf_rfD WF)).\nrewrite rtE.\nrewrite <- ct_step.\nbasic_solver 21.\nunionR right.\nhahn_frame.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(WF : Wf G) : (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ rmw ⊆ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw.","conclusion":"(rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ rmw ⊆ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw","hypotheses":"(WF : Wf G)","proofString":"rewrite rfi_union_rfe; basic_solver 12."},{"statement":"(WF : Wf G) : ⦗W⦘\n⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n  ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊).","conclusion":"⦗W⦘\n⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n  ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)","hypotheses":"(WF : Wf G)","proofString":"relsf; unionL.\nrewrite !seqA.\narewrite ( sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ sb ∩ same_loc).\nby arewrite_id ⦗W⦘; generalize (@sb_same_loc_trans G); ins; relsf.\nrewrite (dom_l (wf_rfD WF)).\nrewrite rtE.\nrewrite <- ct_step.\nbasic_solver 21.\nunionR right.\nhahn_frame.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘) ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘) ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite !seqA.\narewrite ( sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ sb ∩ same_loc).\nby arewrite_id ⦗W⦘; generalize (@sb_same_loc_trans G); ins; relsf.\nrewrite (dom_l (wf_rfD WF)).\nrewrite rtE.\nrewrite <- ct_step.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"arewrite ( sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ sb ∩ same_loc).\nby arewrite_id ⦗W⦘; generalize (@sb_same_loc_trans G); ins; relsf.\nrewrite (dom_l (wf_rfD WF)).\nrewrite rtE.\nrewrite <- ct_step.\nbasic_solver 21."},{"statement":"(WF : Wf G) : sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ sb ∩ same_loc.","conclusion":"sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ sb ∩ same_loc","hypotheses":"(WF : Wf G)","proofString":"by arewrite_id ⦗W⦘; generalize (@sb_same_loc_trans G); ins; relsf."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_rfD WF)).\nrewrite rtE.\nrewrite <- ct_step.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw)＊.","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite rtE.\nrewrite <- ct_step.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘\n  ∪ ⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ ((sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw)⁺).","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘\n  ∪ ⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ ((sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw)⁺)","hypotheses":"(WF : Wf G)","proofString":"rewrite <- ct_step.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ sb ∩ same_loc ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘\n  ∪ ⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw).","conclusion":"⦗W⦘ ⨾ sb ∩ same_loc ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘\n  ∪ ⦗W⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (sb ∩ same_loc)^? ⨾ (⦗W⦘ ⨾ rf) ⨾ rmw)","hypotheses":"(WF : Wf G)","proofString":"basic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"unionR right.\nhahn_frame.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"hahn_frame.\nrewrite <- ct_end.\nbasic_solver."},{"statement":"(WF : Wf G) : ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw\n⊆ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite <- ct_end.\nbasic_solver."},{"statement":"(WF : Wf G) : ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⊆ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺ ⊆ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"basic_solver."},{"statement":"(WF : Wf G) : sw ⨾ rmw ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?.","conclusion":"sw ⨾ rmw ⨾ release ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"unfold release; rewrite !seqA.\narewrite (rmw ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ rmw).\nby rewrite (dom_r (wf_rmwD WF)); type_solver.\nunfold rs.\nrelsf.\nrewrite !unionA.\napply inclusion_union_l.\narewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21.\nunfold sw, release.\nrewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : sw\n⨾ rmw\n  ⨾ ⦗Rel⦘\n    ⨾ (⦗F⦘ ⨾ sb)^?\n      ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?.","conclusion":"sw\n⨾ rmw\n  ⨾ ⦗Rel⦘\n    ⨾ (⦗F⦘ ⨾ sb)^?\n      ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"arewrite (rmw ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ rmw).\nby rewrite (dom_r (wf_rmwD WF)); type_solver.\nunfold rs.\nrelsf.\nrewrite !unionA.\napply inclusion_union_l.\narewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21.\nunfold sw, release.\nrewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : rmw ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ rmw.","conclusion":"rmw ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⊆ rmw","hypotheses":"(WF : Wf G)","proofString":"by rewrite (dom_r (wf_rmwD WF)); type_solver."},{"statement":"(WF : Wf G) : sw ⨾ rmw ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?.","conclusion":"sw ⨾ rmw ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"unfold rs.\nrelsf.\nrewrite !unionA.\napply inclusion_union_l.\narewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21.\nunfold sw, release.\nrewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : sw\n⨾ rmw\n  ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ \nsw ⨾ sb^?.","conclusion":"sw\n⨾ rmw\n  ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ \nsw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"relsf.\nrewrite !unionA.\napply inclusion_union_l.\narewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21.\nunfold sw, release.\nrewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : sw ⨾ rmw ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ sw\n  ⨾ rmw\n    ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n      ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (sw\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ sw\n     ⨾ rmw\n       ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⊆ \nsw ⨾ sb^?.","conclusion":"sw ⨾ rmw ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ sw\n  ⨾ rmw\n    ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n      ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (sw\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ sw\n     ⨾ rmw\n       ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⊆ \nsw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"rewrite !unionA.\napply inclusion_union_l.\narewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21.\nunfold sw, release.\nrewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : sw ⨾ rmw ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (sw\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n       ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ (sw\n      ⨾ rmw\n        ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n          ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n      ∪ sw\n        ⨾ rmw\n          ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n            ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)) ⊆ \nsw ⨾ sb^?.","conclusion":"sw ⨾ rmw ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (sw\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n       ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ (sw\n      ⨾ rmw\n        ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n          ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n      ∪ sw\n        ⨾ rmw\n          ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n            ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)) ⊆ \nsw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"apply inclusion_union_l.\narewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21.\nunfold sw, release.\nrewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : sw ⨾ rmw ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?.","conclusion":"sw ⨾ rmw ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ sw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"arewrite (rfi ⊆ sb).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"(WF : Wf G) : sw ⨾ rmw ⨾ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ sb ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sw ⨾ sb^?.","conclusion":"sw ⨾ rmw ⨾ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ sb ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"rewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"(WF : Wf G) : sw ⨾ sb ⨾ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ sb ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sw ⨾ sb^?.","conclusion":"sw ⨾ sb ⨾ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ sb ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ sw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_trans G); basic_solver 21."},{"statement":"(WF : Wf G) : sw\n⨾ rmw\n  ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n    ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (sw\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ sw\n     ⨾ rmw\n       ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⊆ \nsw ⨾ sb^?.","conclusion":"sw\n⨾ rmw\n  ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n    ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (sw\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ sw\n     ⨾ rmw\n       ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⊆ \nsw ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"unfold sw, release.\nrewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⨾ rmw\n  ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n    ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n      ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n     ⨾ rmw\n       ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n   ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ sb^?.","conclusion":"((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⨾ rmw\n  ⨾ (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘)\n    ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n   ⨾ rmw\n     ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊) ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n      ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n     ⨾ rmw\n       ⨾ (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ ((sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ rs)\n   ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘) ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"rewrite !seqA.\narewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n      ⨾ (sb ⨾ ⦗F⦘)^?\n        ⨾ ⦗Acq⦘\n          ⨾ rmw\n            ⨾ ⦗W⦘\n              ⨾ sb ∩ same_loc\n                ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ rs\n       ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n         ⨾ (sb ⨾ ⦗F⦘)^?\n           ⨾ ⦗Acq⦘\n             ⨾ rmw\n               ⨾ ⦗W⦘\n                 ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n                   ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ rs\n         ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n           ⨾ (sb ⨾ ⦗F⦘)^?\n             ⨾ ⦗Acq⦘\n               ⨾ rmw\n                 ⨾ ⦗W⦘\n                   ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n                     ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n      ⨾ (sb ⨾ ⦗F⦘)^?\n        ⨾ ⦗Acq⦘\n          ⨾ rmw\n            ⨾ ⦗W⦘\n              ⨾ sb ∩ same_loc\n                ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ rs\n       ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n         ⨾ (sb ⨾ ⦗F⦘)^?\n           ⨾ ⦗Acq⦘\n             ⨾ rmw\n               ⨾ ⦗W⦘\n                 ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n                   ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ rs\n         ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n           ⨾ (sb ⨾ ⦗F⦘)^?\n             ⨾ ⦗Acq⦘\n               ⨾ rmw\n                 ⨾ ⦗W⦘\n                   ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n                     ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"arewrite !((sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw).\nby rewrite (dom_l (wf_rmwD WF)); type_solver.\nsin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw.","conclusion":"(sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ rmw ⊆ rmw","hypotheses":"(WF : Wf G)","proofString":"by rewrite (dom_l (wf_rmwD WF)); type_solver."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n      ⨾ rmw\n        ⨾ ⦗W⦘\n          ⨾ sb ∩ same_loc\n            ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ rs\n       ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n         ⨾ rmw\n           ⨾ ⦗W⦘\n             ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ rs\n         ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n           ⨾ rmw\n             ⨾ ⦗W⦘\n               ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n                 ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n      ⨾ rmw\n        ⨾ ⦗W⦘\n          ⨾ sb ∩ same_loc\n            ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ rs\n       ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n         ⨾ rmw\n           ⨾ ⦗W⦘\n             ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ rs\n         ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe)\n           ⨾ rmw\n             ⨾ ⦗W⦘\n               ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n                 ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite !(rs_rf_rmw WF).\narewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ rs\n       ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ rs\n         ⨾ ⦗W⦘\n           ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n             ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ rs\n       ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ rs\n         ⨾ ⦗W⦘\n           ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n             ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"arewrite !((⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))    ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)).\nrelsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels.\nunionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊).","conclusion":"(⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)","hypotheses":"(WF : Wf G)","proofString":"relsf; unionL; [|by arewrite_id ⦗W⦘ at 2; relsf].\nrewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels."},{"statement":"(WF : Wf G) : (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"(⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ∪ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite rtE at 1; relsf; unionL; [basic_solver 12|unionR right].\nrewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels."},{"statement":"(WF : Wf G) : (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"(⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘) ⨾ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)⁺\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite ct_begin, !seqA; rels.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels."},{"statement":"(WF : Wf G) : ⦗W⦘\n⨾ sb ∩ same_loc\n  ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"⦗W⦘\n⨾ sb ∩ same_loc\n  ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"arewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?).\ngeneralize (@sb_same_loc_trans G); basic_solver 21.\nhahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels."},{"statement":"(WF : Wf G) : sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?.","conclusion":"sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⊆ (sb ∩ same_loc)^?","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_same_loc_trans G); basic_solver 21."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊.","conclusion":"⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rf ⨾ rmw ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊\n⊆ ⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊","hypotheses":"(WF : Wf G)","proofString":"hahn_frame_l; rewrite <- !seqA; rewrite <- ct_begin; rels."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ ⦗W⦘\n       ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ ⦗W⦘\n         ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n           ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n∪ (⦗Rel⦘\n   ⨾ (⦗F⦘ ⨾ sb)^?\n     ⨾ ⦗W⦘\n       ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n         ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n   ∪ ⦗Rel⦘\n     ⨾ (⦗F⦘ ⨾ sb)^?\n       ⨾ ⦗W⦘\n         ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n           ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘)\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"unionL.\ngeneralize (@sb_same_loc_trans G).\nbasic_solver 42.\nunfold rs.\nhahn_frame.\nbasic_solver 21.\nunfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_same_loc_trans G).\nbasic_solver 42."},{"statement":"(WF : Wf G) : transitive (sb ∩ same_loc) ->\n⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"transitive (sb ∩ same_loc) ->\n⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ rs\n    ⨾ ⦗W⦘\n      ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"unfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n      ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n      ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"hahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"rfi ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"basic_solver 21."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ rs ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"unfold rs.\nhahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : ⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n      ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ sb)^?\n  ⨾ ⦗W⦘\n    ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊)\n      ⨾ (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ (⦗W⦘ ⨾ (sb ∩ same_loc ⨾ ⦗W⦘ ∪ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊))\n      ⨾ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"hahn_frame.\nbasic_solver 21."},{"statement":"(WF : Wf G) : (sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?.","conclusion":"(sb ∩ same_loc)^? ⨾ rfe ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘\n⊆ (rfi ∪ (sb ∩ same_loc)^? ⨾ rfe) ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⨾ sb^?","hypotheses":"(WF : Wf G)","proofString":"basic_solver 21."},{"statement":"(COH : coherence) : irreflexive (hb ⨾ eco).","conclusion":"irreflexive (hb ⨾ eco)","hypotheses":"(COH : coherence)","proofString":"red in COH; unfolder in *; basic_solver 12."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (sb ∪ sw)⁺.","conclusion":"irreflexive (sb ∪ sw)⁺","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rewrite path_ut_first.\nrelsf; repeat (splits; try apply irreflexive_union).\nby rewrite (ct_of_trans (@sb_trans G)); apply sb_irr.\nrewrite (sw_in_sb_eco_sb WF (coherence_sc_per_loc COH)) at 1.\nrotate 2.\narewrite ((sb ⨾ ⦗F ∩₁ Acq⦘)^? ⊆ (sb ∪ sw)＊).\narewrite (sb＊ ⊆ (sb ∪ sw)＊).\narewrite ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⊆ (sb ∪ sw)＊).\nrelsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (sb⁺ ∪ sb＊ ⨾ sw ⨾ (sb ∪ sw)＊).","conclusion":"irreflexive (sb⁺ ∪ sb＊ ⨾ sw ⨾ (sb ∪ sw)＊)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"relsf; repeat (splits; try apply irreflexive_union).\nby rewrite (ct_of_trans (@sb_trans G)); apply sb_irr.\nrewrite (sw_in_sb_eco_sb WF (coherence_sc_per_loc COH)) at 1.\nrotate 2.\narewrite ((sb ⨾ ⦗F ∩₁ Acq⦘)^? ⊆ (sb ∪ sw)＊).\narewrite (sb＊ ⊆ (sb ∪ sw)＊).\narewrite ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⊆ (sb ∪ sw)＊).\nrelsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive sb⁺.","conclusion":"irreflexive sb⁺","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"by rewrite (ct_of_trans (@sb_trans G)); apply sb_irr."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (sb＊ ⨾ sw ⨾ (sb ∪ sw)＊).","conclusion":"irreflexive (sb＊ ⨾ sw ⨾ (sb ∪ sw)＊)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rewrite (sw_in_sb_eco_sb WF (coherence_sc_per_loc COH)) at 1.\nrotate 2.\narewrite ((sb ⨾ ⦗F ∩₁ Acq⦘)^? ⊆ (sb ∪ sw)＊).\narewrite (sb＊ ⊆ (sb ∪ sw)＊).\narewrite ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⊆ (sb ∪ sw)＊).\nrelsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive\n  (sb＊ ⨾ ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?) ⨾ (sb ∪ sw)＊).","conclusion":"irreflexive\n  (sb＊ ⨾ ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?) ⨾ (sb ∪ sw)＊)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rotate 2.\narewrite ((sb ⨾ ⦗F ∩₁ Acq⦘)^? ⊆ (sb ∪ sw)＊).\narewrite (sb＊ ⊆ (sb ∪ sw)＊).\narewrite ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⊆ (sb ∪ sw)＊).\nrelsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive\n  ((sb ⨾ ⦗F ∩₁ Acq⦘)^? ⨾ (sb ∪ sw)＊ ⨾ sb＊ ⨾ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco).","conclusion":"irreflexive\n  ((sb ⨾ ⦗F ∩₁ Acq⦘)^? ⨾ (sb ∪ sw)＊ ⨾ sb＊ ⨾ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"arewrite ((sb ⨾ ⦗F ∩₁ Acq⦘)^? ⊆ (sb ∪ sw)＊).\narewrite (sb＊ ⊆ (sb ∪ sw)＊).\narewrite ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⊆ (sb ∪ sw)＊).\nrelsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive ((sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ sb＊ ⨾ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco).","conclusion":"irreflexive ((sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ sb＊ ⨾ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"arewrite (sb＊ ⊆ (sb ∪ sw)＊).\narewrite ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⊆ (sb ∪ sw)＊).\nrelsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive\n  ((sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco).","conclusion":"irreflexive\n  ((sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"arewrite ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⊆ (sb ∪ sw)＊).\nrelsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive ((sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ eco).","conclusion":"irreflexive ((sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ (sb ∪ sw)＊ ⨾ eco)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"relsf.\ngeneralize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive ((sb ∪ sw)＊ ⨾ eco).","conclusion":"irreflexive ((sb ∪ sw)＊ ⨾ eco)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"generalize (eco_irr WF).\nred in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive eco -> irreflexive ((sb ∪ sw)＊ ⨾ eco).","conclusion":"irreflexive eco -> irreflexive ((sb ∪ sw)＊ ⨾ eco)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"red in COH; revert COH.\nbasic_solver."},{"statement":"(WF : Wf G) : irreflexive (hb ⨾ eco) -> irreflexive eco -> irreflexive ((sb ∪ sw)＊ ⨾ eco).","conclusion":"irreflexive (hb ⨾ eco) -> irreflexive eco -> irreflexive ((sb ∪ sw)＊ ⨾ eco)","hypotheses":"(WF : Wf G)","proofString":"basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) : ⦗RW⦘ ⨾ hb ∩ (fun x y : actid => loc x = loc y) ⨾ ⦗RW⦘\n⊆ eco ∪ sb \\ rmw ∪ (sb \\ rmw) ⨾ hb ⨾ (sb \\ rmw).","conclusion":"⦗RW⦘ ⨾ hb ∩ (fun x y : actid => loc x = loc y) ⨾ ⦗RW⦘\n⊆ eco ∪ sb \\ rmw ∪ (sb \\ rmw) ⨾ hb ⨾ (sb \\ rmw)","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G)","proofString":"unfolder; ins; desc.\nrename H0 into HB, H2 into SAME_LOC, H into RWx, H1 into RWy.\nhahn_rewrite (wf_hbE WF) in HB; unfolder in *; desc.\nforward (apply eco_almost_total with (x:=x) (y:=y)); eauto.\nby intro; subst; eapply hb_irr; edone.\ndesf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\napply ct_begin in HB0.\nunfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H0; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (H : is_r lab x \\/ is_w lab x) (H0 : hb x y) (H2 : loc x = loc y) (H1 : is_r lab y \\/ is_w lab y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (H : is_r lab x \\/ is_w lab x) (H0 : hb x y) (H2 : loc x = loc y) (H1 : is_r lab y \\/ is_w lab y)","proofString":"rename H0 into HB, H2 into SAME_LOC, H into RWx, H1 into RWy.\nhahn_rewrite (wf_hbE WF) in HB; unfolder in *; desc.\nforward (apply eco_almost_total with (x:=x) (y:=y)); eauto.\nby intro; subst; eapply hb_irr; edone.\ndesf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\napply ct_begin in HB0.\nunfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H0; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (HB : hb x y) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (HB : hb x y) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y)","proofString":"hahn_rewrite (wf_hbE WF) in HB; unfolder in *; desc.\nforward (apply eco_almost_total with (x:=x) (y:=y)); eauto.\nby intro; subst; eapply hb_irr; edone.\ndesf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\napply ct_begin in HB0.\nunfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H0; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y)","proofString":"forward (apply eco_almost_total with (x:=x) (y:=y)); eauto.\nby intro; subst; eapply hb_irr; edone.\ndesf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\napply ct_begin in HB0.\nunfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H0; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) : x <> y.","conclusion":"x <> y","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y)","proofString":"by intro; subst; eapply hb_irr; edone."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) : eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x \\/ is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y \\/ is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y)","proofString":"desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\napply ct_begin in HB0.\nunfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H0; exfalso; type_unfolder; unfolder in *; desf.\nins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) : eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y)","proofString":"ins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\napply ct_begin in HB0.\nunfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x)","proofString":"by exfalso; eapply COH; basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply ct_begin in HB0.\nunfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : ((sb ∪ sw) ⨾ (sb ∪ sw)＊) x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : ((sb ∪ sw) ⨾ (sb ∪ sw)＊) x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"unfold seq in HB0; desc.\ndestruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : (sb ∪ sw) x z0) (HB2 : (sb ∪ sw)＊ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : (sb ∪ sw) x z0) (HB2 : (sb ∪ sw)＊ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"destruct HB0 as [HB0|X]; cycle 1.\nby hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf.\napply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (X : sw x z0) (HB2 : (sb ∪ sw)＊ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (X : sw x z0) (HB2 : (sb ∪ sw)＊ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"by hahn_rewrite (wf_swD WF) in X; hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : (sb ∪ sw)＊ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : (sb ∪ sw)＊ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply rtE in HB2.\nunfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : (⦗fun _ : actid => True⦘ ∪ (sb ∪ sw)⁺) z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : (⦗fun _ : actid => True⦘ ∪ (sb ∪ sw)⁺) z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"unfold eqv_rel, union in HB2; desf.\ndestruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto.\napply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : sb x y) (HB3 : True) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : sb x y) (HB3 : True) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"destruct (classic (rmw x y)).\nby left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc.\nby left; right; splits; eauto."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : sb x y) (HB3 : True) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : rmw x y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : sb x y) (HB3 : True) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : rmw x y)","proofString":"by left; left; apply fr_in_eco, rmw_in_fr; auto using coherence_sc_per_loc."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : sb x y) (HB3 : True) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : sb x y) (HB3 : True) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x y)","proofString":"by left; right; splits; eauto."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)⁺ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)⁺ z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply ct_end in HB2.\nunfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : ((fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊\n ⨾ (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)) z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z1 : actid,\n   (sb x z1 /\\ ~ rmw x z1) /\\\n   (exists z2 : actid, hb z1 z2 /\\ sb z2 y /\\ ~ rmw z2 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (HB2 : ((fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊\n ⨾ (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)) z0 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"unfold seq in HB2; desc.\ndestruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y \\/ sw z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y \\/ sw z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"destruct HB3 as [HB3|X]; cycle 1.\nexfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver.\nassert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (X : sw z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (X : sw z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"exfalso.\napply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (X : sw z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (X : sw z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply sw_in_sb_eco_sb in X; auto using coherence_sc_per_loc.\nunfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (X : ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?) z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (X : ((⦗F ∩₁ Rel⦘ ⨾ sb)^? ⨾ eco ⨾ (sb ⨾ ⦗F ∩₁ Acq⦘)^?) z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"unfold seq, eqv_rel, clos_refl in X; desf.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\ntype_solver.\ntype_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply COH with (x:=x).\nexists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (hb ⨾ eco) x x.","conclusion":"(hb ⨾ eco) x x","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"exists z2; splits.\napply ct_begin; basic_solver.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : hb x z2.","conclusion":"hb x z2","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply ct_begin; basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : eco z2 x.","conclusion":"eco z2 x","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply COH with (x:=x).\nexists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (hb ⨾ eco) x x.","conclusion":"(hb ⨾ eco) x x","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"exists z2; splits.\napply ct_begin; eexists; splits; try apply rt_end; basic_solver 6.\nby apply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : hb x z2.","conclusion":"hb x z2","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"apply ct_begin; eexists; splits; try apply rt_end; basic_solver 6."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : eco z2 x.","conclusion":"eco z2 x","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z4 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z4) (z2 : actid) (X3 : (F ∩₁ Rel) z4) (X2 : sb z4 z2) (X0 : eco z2 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"by apply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (z3 : actid) (X0 : eco z2 z3) (X1 : sb z3 y) (X3 : (F ∩₁ Acq) y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z2 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z2) (z3 : actid) (X0 : eco z2 z3) (X1 : sb z3 y) (X3 : (F ∩₁ Acq) y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"type_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z5 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z5) (z2 : actid) (X5 : (F ∩₁ Rel) z5) (X4 : sb z5 z2) (z3 : actid) (X0 : eco z2 z3) (X1 : sb z3 y) (X3 : (F ∩₁ Acq) y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z5 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z5) (z2 : actid) (X5 : (F ∩₁ Rel) z5) (X4 : sb z5 z2) (z3 : actid) (X0 : eco z2 z3) (X1 : sb z3 y) (X3 : (F ∩₁ Acq) y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"type_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"assert (~rmw x z0).\nintro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8.\nassert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : ~ rmw x z0.","conclusion":"~ rmw x z0","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"intro RMW_x_z0.\napply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0)","proofString":"apply COH with (x:=z0).\nexists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0) : (hb ⨾ eco) z0 z0.","conclusion":"(hb ⨾ eco) z0 z0","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0)","proofString":"exists y; splits.\napply ct_end; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0) : hb z0 y.","conclusion":"hb z0 y","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0)","proofString":"apply ct_end; basic_solver 6."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0) : eco y z0.","conclusion":"eco y z0","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : rmw x z0)","proofString":"apply rmw_in_fr, fr_in_eco in RMW_x_z0; auto using coherence_sc_per_loc.\napply transp_rf_rf_eco_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : eco x z0) : eco y z0.","conclusion":"eco y z0","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (RMW_x_z0 : eco x z0)","proofString":"apply transp_rf_rf_eco_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0)","proofString":"assert (~rmw z1 y).\nintro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8.\napply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) : ~ rmw z1 y.","conclusion":"~ rmw z1 y","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0)","proofString":"intro RMW_z1_y.\napply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y)","proofString":"apply COH with (x:=x).\nexists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y) : (hb ⨾ eco) x x.","conclusion":"(hb ⨾ eco) x x","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y)","proofString":"exists z1; splits.\napply ct_begin; basic_solver 6.\napply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y) : hb x z1.","conclusion":"hb x z1","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y)","proofString":"apply ct_begin; basic_solver 6."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y) : eco z1 x.","conclusion":"eco z1 x","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : rmw z1 y)","proofString":"apply rmw_in_fr, fr_in_eco in RMW_z1_y; auto using coherence_sc_per_loc.\napply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : eco z1 y) : eco z1 x.","conclusion":"eco z1 x","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (RMW_z1_y : eco z1 y)","proofString":"apply eco_transp_rf_rf_in_eco; auto; basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (H2 : ~ rmw z1 y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)＊ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (H2 : ~ rmw z1 y)","proofString":"apply rtE in HB2; unfold union, eqv_rel in HB2; desf.\nleft; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver.\nbasic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z2 : actid, hb z0 z2 /\\ sb z2 y /\\ ~ rmw z2 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z2 : actid, hb z0 z2 /\\ sb z2 y /\\ ~ rmw z2 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y)","proofString":"left; right; splits.\neby eapply sb_trans.\nintro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y) : sb x y.","conclusion":"sb x y","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y)","proofString":"eby eapply sb_trans."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y) : ~ rmw x y.","conclusion":"~ rmw x y","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y)","proofString":"intro RMW_x_y.\nby hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y) (RMW_x_y : rmw x y) : False.","conclusion":"False","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z1 : actid) (HB0 : sb x z1) (HB4 : True) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z1) (H2 : ~ rmw z1 y) (RMW_x_y : rmw x y)","proofString":"by hahn_rewrite (wf_rmwD WF) in RMW_x_y; hahn_rewrite (wf_rfD WF) in H0; unfolder in *; type_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)⁺ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (H2 : ~ rmw z1 y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z2 : actid,\n   (sb x z2 /\\ ~ rmw x z2) /\\\n   (exists z3 : actid, hb z2 z3 /\\ sb z3 y /\\ ~ rmw z3 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (z0 : actid) (HB0 : sb x z0) (z1 : actid) (HB2 : (fun x0 y0 : actid => sb x0 y0 \\/ sw x0 y0)⁺ z0 z1) (HB3 : sb z1 y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) (H1 : ~ rmw x z0) (H2 : ~ rmw z1 y)","proofString":"basic_solver 8."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) : eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y)","proofString":"ins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x)","proofString":"by exfalso; eapply COH; basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_r lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) : eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y)","proofString":"ins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H0; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x)","proofString":"by exfalso; eapply COH; basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_r lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"hahn_rewrite (wf_rfD WF) in H0; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) : eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"eco x y \\/ eco y x \\/ (exists z : actid, rf z x /\\ rf z y) ->\n(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y)","proofString":"ins; desf; [basic_solver | |].\nby exfalso; eapply COH; basic_solver.\nhahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z : actid,\n   (sb x z /\\ ~ rmw x z) /\\\n   (exists z0 : actid, hb z z0 /\\ sb z0 y /\\ ~ rmw z0 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (H : eco y x)","proofString":"by exfalso; eapply COH; basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y) : (eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y)).","conclusion":"(eco x y \\/ sb x y /\\ ~ rmw x y) \\/\n(exists z0 : actid,\n   (sb x z0 /\\ ~ rmw x z0) /\\\n   (exists z1 : actid, hb z0 z1 /\\ sb z1 y /\\ ~ rmw z1 y))","hypotheses":"(WF : Wf G) (COH : coherence) (COMP : complete G) (x y : actid) (RWx : is_w lab x) (SAME_LOC : loc x = loc y) (RWy : is_w lab y) (HB : E x) (HB0 : hb x y) (HB1 : E y) (z : actid) (H : rf z x) (H0 : rf z y)","proofString":"hahn_rewrite (wf_rfD WF) in H; exfalso; type_unfolder; unfolder in *; desf."},{"statement":"(sb ∪ sw)⁺ ⊆ (sb ∪ sw \\ sb)⁺.","conclusion":"(sb ∪ sw)⁺ ⊆ (sb ∪ sw \\ sb)⁺","hypotheses":"","proofString":"rewrite (ri_union_re G sw) at 1.\napply inclusion_t_t.\nbasic_solver."},{"statement":"(sb ∪ (sw ∩ sb ∪ sw \\ sb))⁺ ⊆ (sb ∪ sw \\ sb)⁺.","conclusion":"(sb ∪ (sw ∩ sb ∪ sw \\ sb))⁺ ⊆ (sb ∪ sw \\ sb)⁺","hypotheses":"","proofString":"apply inclusion_t_t.\nbasic_solver."},{"statement":"sb ∪ (sw ∩ sb ∪ sw \\ sb) ⊆ sb ∪ sw \\ sb.","conclusion":"sb ∪ (sw ∩ sb ∪ sw \\ sb) ⊆ sb ∪ sw \\ sb","hypotheses":"","proofString":"basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (⦗W⦘ ⨾ rfe^? ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘).","conclusion":"irreflexive (⦗W⦘ ⨾ rfe^? ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rewrite sb_in_hb.\narewrite ((hb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘ ⊆ hb^? ⨾ hb).\nbasic_solver.\nrewrite cr_hb_hb.\narewrite_id ⦗W⦘.\nrewrite seq_id_l.\napply irreflexive_seqC.\nrewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (⦗W⦘ ⨾ rfe^? ⨾ (hb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘).","conclusion":"irreflexive (⦗W⦘ ⨾ rfe^? ⨾ (hb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"arewrite ((hb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘ ⊆ hb^? ⨾ hb).\nbasic_solver.\nrewrite cr_hb_hb.\narewrite_id ⦗W⦘.\nrewrite seq_id_l.\napply irreflexive_seqC.\nrewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : (hb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘ ⊆ hb^? ⨾ hb.","conclusion":"(hb ⨾ ⦗F⦘)^? ⨾ ⦗Acq ∪₁ W⦘ ⨾ hb ⨾ ⦗Rel⦘ ⊆ hb^? ⨾ hb","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"basic_solver."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (⦗W⦘ ⨾ rfe^? ⨾ hb^? ⨾ hb).","conclusion":"irreflexive (⦗W⦘ ⨾ rfe^? ⨾ hb^? ⨾ hb)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rewrite cr_hb_hb.\narewrite_id ⦗W⦘.\nrewrite seq_id_l.\napply irreflexive_seqC.\nrewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (⦗W⦘ ⨾ rfe^? ⨾ hb).","conclusion":"irreflexive (⦗W⦘ ⨾ rfe^? ⨾ hb)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"arewrite_id ⦗W⦘.\nrewrite seq_id_l.\napply irreflexive_seqC.\nrewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (⦗fun _ : actid => True⦘ ⨾ rfe^? ⨾ hb).","conclusion":"irreflexive (⦗fun _ : actid => True⦘ ⨾ rfe^? ⨾ hb)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rewrite seq_id_l.\napply irreflexive_seqC.\nrewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (rfe^? ⨾ hb).","conclusion":"irreflexive (rfe^? ⨾ hb)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"apply irreflexive_seqC.\nrewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (hb ⨾ rfe^?).","conclusion":"irreflexive (hb ⨾ rfe^?)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (hb ∪ hb ⨾ rfe).","conclusion":"irreflexive (hb ∪ hb ⨾ rfe)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"apply irreflexive_union.\nsplit.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive hb /\\ irreflexive (hb ⨾ rfe).","conclusion":"irreflexive hb /\\ irreflexive (hb ⨾ rfe)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"split.\nby apply hb_irr.\narewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive hb.","conclusion":"irreflexive hb","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"by apply hb_irr."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (hb ⨾ rfe).","conclusion":"irreflexive (hb ⨾ rfe)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"arewrite (rfe ⊆ rf).\nrewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (hb ⨾ rf).","conclusion":"irreflexive (hb ⨾ rf)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"rewrite rf_in_eco.\napply COH."},{"statement":"(WF : Wf G) (COH : coherence) : irreflexive (hb ⨾ eco).","conclusion":"irreflexive (hb ⨾ eco)","hypotheses":"(WF : Wf G) (COH : coherence)","proofString":"apply COH."}]}