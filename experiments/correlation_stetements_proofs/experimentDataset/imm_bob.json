[{"statement":"Lemma sb_to_w_rel_in_fwbob : sb ⨾ ⦗W∩₁Rel⦘ ⊆ fwbob.","proof":"unfold fwbob.\nbasic_solver 10.\n"},{"statement":"Lemma sb_from_w_rel_in_fwbob : ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ⊆ fwbob.","proof":"unfold fwbob.\nbasic_solver 10.\n"},{"statement":"Lemma sb_to_f_in_fwbob : sb ⨾ ⦗F∩₁Acq/Rel⦘ ⊆ fwbob.","proof":"unfold fwbob.\nbasic_solver 10.\n"},{"statement":"Lemma sb_from_f_in_fwbob : ⦗F∩₁Acq/Rel⦘ ⨾ sb  ⊆ fwbob.","proof":"unfold fwbob.\nbasic_solver 10.\n"},{"statement":"Lemma fwbob_in_bob : fwbob ⊆ bob.","proof":"unfold bob.\nbasic_solver 12.\n"},{"statement":"Lemma sb_to_w_rel_in_bob : sb ⨾ ⦗W∩₁Rel⦘ ⊆ bob.","proof":"etransitivity; [|by apply fwbob_in_bob].\napply sb_to_w_rel_in_fwbob.\n"},{"statement":"Lemma sb_from_w_rel_in_bob : ⦗W∩₁Rel⦘ ⨾ (sb ∩ same_loc) ⨾ ⦗W⦘ ⊆ bob.","proof":"etransitivity; [|by apply fwbob_in_bob].\napply sb_from_w_rel_in_fwbob.\n"},{"statement":"Lemma sb_to_f_in_bob : sb ⨾ ⦗F∩₁Acq/Rel⦘ ⊆ bob.","proof":"etransitivity; [|by apply fwbob_in_bob].\napply sb_to_f_in_fwbob.\n"},{"statement":"Lemma sb_from_f_in_bob : ⦗F∩₁Acq/Rel⦘ ⨾ sb  ⊆ bob.","proof":"etransitivity; [|by apply fwbob_in_bob].\napply sb_from_f_in_fwbob.\n"},{"statement":"Lemma sb_from_r_acq_in_bob : ⦗R∩₁Acq⦘ ⨾ sb  ⊆ bob.","proof":"unfold bob.\nbasic_solver 10.\n"},{"statement":"Lemma fwbob_in_sb : fwbob ⊆ sb.","proof":"unfold fwbob.\nbasic_solver 12.\n"},{"statement":"Lemma sb_fwbob_in_fwbob : sb ⨾ fwbob ⊆ fwbob⁺.","proof":"unfold fwbob.\ngeneralize (@sb_trans G); ins.\nrelsf; unionL.\n1,3: rewrite <- ct_step; basic_solver 42.\n1,2: rewrite ct_begin; rewrite <- inclusion_t_rt, <- ct_step; basic_solver 16.\n"},{"statement":"Lemma bob_in_sb : bob ⊆ sb.","proof":"unfold bob; rewrite fwbob_in_sb; basic_solver.\n"},{"statement":"Lemma wf_fwbobE WF : fwbob ≡ ⦗E⦘ ⨾ fwbob ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold fwbob.\nrewrite wf_sbE.\nbasic_solver 42.\n"},{"statement":"Lemma wf_bobE WF : bob ≡ ⦗E⦘ ⨾ bob ⨾ ⦗E⦘.","proof":"split; [|basic_solver].\nunfold bob.\nrewrite (wf_fwbobE WF), wf_sbE.\nbasic_solver 42.\n"},{"statement":"Lemma fwbob_r_sb: fwbob ⨾ ⦗ R ⦘ ⨾ sb ⊆ fwbob.","proof":"unfold fwbob; relsf; unionL.\nall: try by type_solver.\nall: generalize (@sb_trans G); basic_solver 21.\n"},{"statement":"Lemma bob_r_sb: bob ⨾ ⦗ R ⦘ ⨾ sb ⊆ bob.","proof":"unfold bob; relsf; rewrite fwbob_r_sb.\ngeneralize (@sb_trans G); basic_solver 21.\n"},{"statement":"Lemma bob_sb :\n  (bob ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)⁺ ⨾ ⦗W⦘ ⊆ \n  bob⁺ ⨾ (⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘)^? ⨾ ⦗W⦘ ∪ ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘.","proof":"apply ct_ind_left with (P:= fun r =>  r ⨾ ⦗W⦘).\nby auto with hahn.\nby arewrite (bob ⊆ bob⁺); basic_solver 12.\nintros k H.\nrewrite !seqA; rewrite H; clear k H.\nrelsf; unionL.\n- arewrite(bob ⊆ bob＊) at 1; relsf.\n- sin_rewrite bob_in_sb.\ngeneralize (@sb_trans G); ins; relsf.\nbasic_solver 12.\n- arewrite (bob ⊆ bob⁺); basic_solver 12.\n- generalize (@sb_trans G); basic_solver 12.\n"},{"statement":"Lemma tc_bob :\n  bob⁺ ⊆ fwbob⁺ ∪ ⦗R ∩₁ Acq⦘ ⨾ sb.","proof":"unfold bob.\napply ct_ind_left with (P:= fun r =>  r).\nby auto with hahn.\nby arewrite (fwbob ⊆ fwbob⁺); basic_solver 12.\nintros k H.\nrewrite H; clear k H.\nrelsf; unionL.\n- by arewrite (fwbob ⊆ fwbob＊); relsf; basic_solver 12.\n- sin_rewrite (fwbob_in_sb).\ngeneralize (@sb_trans G); ins; relsf; basic_solver 12.\n- arewrite (⦗R ∩₁ Acq⦘ ⊆ ⦗R⦘).\nbasic_solver.\nsin_rewrite fwbob_r_sb.\nby arewrite (fwbob ⊆ fwbob⁺); basic_solver 21.\n- generalize (@sb_trans G); basic_solver 12.\n"},{"statement":"Lemma fwbob_rfi_rmw_in_fwbob WF : fwbob ⨾ rfi ⨾ rmw ⊆ fwbob⁺.","proof":"arewrite (rfi ⨾ rmw ⊆ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘).\n{\nrewrite (dom_l (wf_rfiD WF)).\nrewrite (dom_r (wf_rmwD WF)), !seqA.\nby sin_rewrite rfi_rmw_in_sb_loc.\n}\nunfold fwbob at 1.\nrewrite !seq_union_l.\nunionL.\n3: type_solver.\n2-3: rewrite <- ct_step.\n3: {\nunfold fwbob.\nunionR right.\nrewrite !seqA.\narewrite (sb ⨾ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ sb); [|done].\ngeneralize (@sb_trans G).\nbasic_solver.\n}\n2: {\nrewrite !seqA.\narewrite_id ⦗W⦘ at 1.\narewrite_id ⦗W⦘ at 1.\nrewrite !seq_id_l.\narewrite (sb ∩ same_loc ⨾ sb ∩ same_loc ⊆ sb ∩ same_loc).\n{\napply transitiveI.\napply sb_same_loc_trans.\n}\nunfold fwbob.\neauto with hahn.\n}\narewrite ((sb ⨾ ⦗W ∩₁ Rel⦘) ⨾ ⦗W⦘ ⊆ (sb ⨾ ⦗W ∩₁ Rel⦘) ⨾ ⦗W ∩₁ Rel⦘) by basic_solver.\nrewrite <- seqA.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori.\nall: unfold fwbob; eauto with hahn.\n"},{"statement":"Lemma fwbob_sb_same_loc_W_in_fwbob : fwbob ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ fwbob⁺.","proof":"unfold fwbob at 1.\nrewrite !seq_union_l, !seqA.\nunionL.\n{\narewrite (⦗W ∩₁ Rel⦘ ⊆ ⦗W ∩₁ Rel⦘ ⨾ ⦗W ∩₁ Rel⦘) by basic_solver.\nrewrite <- ct_ct, <- !ct_step.\nrewrite <- seqA.\napply seq_mori.\nall: unfold fwbob; eauto with hahn.\n}\n{\nrewrite <- ct_step.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ sb ∩ same_loc ⨾ ⦗W⦘).\n{\nhahn_frame_r.\narewrite_id ⦗W⦘.\nrewrite seq_id_l.\napply transitiveI.\napply sb_same_loc_trans.\n}\nunfold fwbob; eauto with hahn.\n}\n{\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⊆ sb) by basic_solver.\narewrite (⦗F ∩₁ Acq/Rel⦘ ⊆ ⦗F ∩₁ Acq/Rel⦘ ⨾ ⦗F ∩₁ Acq/Rel⦘) by basic_solver.\nrewrite <- ct_ct, <- !ct_step.\nrewrite <- seqA.\napply seq_mori.\nall: unfold fwbob; eauto with hahn.\n}\nrewrite <- ct_step.\narewrite (sb ∩ same_loc ⨾ ⦗W⦘ ⊆ sb) by basic_solver.\narewrite (sb ⨾ sb ⊆ sb).\n{\napply transitiveI.\napply sb_trans.\n}\nunfold fwbob; eauto with hahn.\n"},{"statement":"Lemma bob_sb_same_loc_W_in_bob : bob ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ bob⁺.","proof":"unfold bob at 1.\nrewrite !seq_union_l, !seqA.\nunionL.\n2: {\narewrite (sb ⨾ sb ∩ same_loc ⨾ ⦗W⦘ ⊆ sb).\n{\ngeneralize (@sb_trans G).\nbasic_solver.\n}\narewrite (⦗R ∩₁ Acq⦘ ⨾ sb ⊆ bob).\napply ct_step.\n}\nrewrite fwbob_sb_same_loc_W_in_fwbob.\nunfold bob.\napply clos_trans_mori.\neauto with hahn.\n"}]