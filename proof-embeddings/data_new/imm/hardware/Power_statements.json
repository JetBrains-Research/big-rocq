{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/imm/src/hardware/Power.v","fileSamples":[{"statement":"(WF : Wf G) : hb ⊆ ⦗E⦘ ⨾ hb ⨾ ⦗E⦘.","conclusion":"hb ⊆ ⦗E⦘ ⨾ hb ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold hb.\nrewrite (wf_ppoE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ppo ∪ fence ∪ rfe ⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘.","conclusion":"ppo ∪ fence ∪ rfe ⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_ppoE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘ ∪ fence ∪ rfe ⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ ppo ⨾ ⦗E⦘ ∪ fence ∪ rfe ⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_fenceE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ∪ rfe ⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ ppo ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ∪ rfe ⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfeE WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ ppo ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rfe ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ ppo ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ rfe ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : prop1 ⊆ ⦗E⦘ ⨾ prop1 ⨾ ⦗E⦘.","conclusion":"prop1 ⊆ ⦗E⦘ ⨾ prop1 ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold prop1.\nrewrite (wf_rfeE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 1; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfeE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 1; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_fenceE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 1; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ hb＊ ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ hb＊ ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ hb＊ ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite <- cr_of_ct.\nrewrite inclusion_t_t at 1; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ (hb⁺)^? ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ (hb⁺)^? ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ (hb⁺)^? ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ (hb⁺)^? ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite inclusion_t_t at 1; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺)^? ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ (hb⁺)^? ⨾ ⦗W⦘) ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺)^? ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ (⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ (hb⁺)^? ⨾ ⦗W⦘) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"arewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"by rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l."},{"statement":"(WF : Wf G) : ⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ ⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘)^? ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ ⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ (hb⁺)^? ⨾ ⦗W⦘ ⨾ ⦗E⦘.","conclusion":"⦗W⦘ ⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ ⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘)^? ⨾ ⦗W⦘\n⊆ ⦗E⦘ ⨾ ⦗W⦘ ⨾ rfe^? ⨾ fence ⨾ (hb⁺)^? ⨾ ⦗W⦘ ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : prop2 ⊆ ⦗E⦘ ⨾ prop2 ⨾ ⦗E⦘.","conclusion":"prop2 ⊆ ⦗E⦘ ⨾ prop2 ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold prop2.\nrewrite (wf_coeE WF) at 1.\nrewrite (wf_freE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite (wf_syncE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘.","conclusion":"(coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_coeE WF) at 1.\nrewrite (wf_freE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite (wf_syncE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_freE WF) at 1.\nrewrite (wf_rfeE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite (wf_syncE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfeE WF) at 1.\nrewrite (wf_fenceE WF) at 1.\nrewrite (wf_syncE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_fenceE WF) at 1.\nrewrite (wf_syncE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^? ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_syncE WF) at 1.\nrewrite <- cr_of_ct.\nrewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ hb＊)^? ⨾ (⦗E⦘ ⨾ sync ⨾ ⦗E⦘) ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ hb＊)^? ⨾ (⦗E⦘ ⨾ sync ⨾ ⦗E⦘) ⨾ hb＊\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite <- cr_of_ct.\nrewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ (hb⁺)^?)^? ⨾ (⦗E⦘ ⨾ sync ⨾ ⦗E⦘) ⨾ (hb⁺)^?\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ (hb⁺)^?)^? ⨾ sync ⨾ (hb⁺)^?) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ (hb⁺)^?)^? ⨾ (⦗E⦘ ⨾ sync ⨾ ⦗E⦘) ⨾ (hb⁺)^?\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ (hb⁺)^?)^? ⨾ sync ⨾ (hb⁺)^?) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite inclusion_t_t at 2; [|eapply (wf_hbE WF)].\narewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ (hb⁺)^?)^?\n    ⨾ (⦗E⦘ ⨾ sync ⨾ ⦗E⦘) ⨾ ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺)^?\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ (hb⁺)^?)^? ⨾ sync ⨾ (hb⁺)^?) ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ ((⦗E⦘ ⨾ fence ⨾ ⦗E⦘) ⨾ (hb⁺)^?)^?\n    ⨾ (⦗E⦘ ⨾ sync ⨾ ⦗E⦘) ⨾ ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺)^?\n⊆ ⦗E⦘ ⨾ ((coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ (hb⁺)^?)^? ⨾ sync ⨾ (hb⁺)^?) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"arewrite ((⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘).\nby rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l.\nbasic_solver 42."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ hb ⨾ ⦗E⦘)⁺ ⊆ ⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"by rewrite <- inclusion_ct_seq_eqv_r; rewrite <- inclusion_ct_seq_eqv_l."},{"statement":"(WF : Wf G) : (⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ⨾ (hb⁺)^?)^? ⨾ ⦗E⦘ ⨾ sync ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘)^?\n⊆ ⦗E⦘ ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ (hb⁺)^?)^? ⨾ sync ⨾ (hb⁺)^? ⨾ ⦗E⦘.","conclusion":"(⦗E⦘ ⨾ coe ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ fre ⨾ ⦗E⦘)^?\n⨾ (⦗E⦘ ⨾ rfe ⨾ ⦗E⦘)^?\n  ⨾ (⦗E⦘ ⨾ fence ⨾ ⦗E⦘ ⨾ (hb⁺)^?)^? ⨾ ⦗E⦘ ⨾ sync ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ hb⁺ ⨾ ⦗E⦘)^?\n⊆ ⦗E⦘ ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ (hb⁺)^?)^? ⨾ sync ⨾ (hb⁺)^? ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : prop ⊆ ⦗E⦘ ⨾ prop ⨾ ⦗E⦘.","conclusion":"prop ⊆ ⦗E⦘ ⨾ prop ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"unfold prop.\nrewrite (wf_prop1E WF) at 1.\nrewrite (wf_prop2E WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : prop1 ∪ prop2 ⊆ ⦗E⦘ ⨾ (prop1 ∪ prop2) ⨾ ⦗E⦘.","conclusion":"prop1 ∪ prop2 ⊆ ⦗E⦘ ⨾ (prop1 ∪ prop2) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_prop1E WF) at 1.\nrewrite (wf_prop2E WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ prop1 ⨾ ⦗E⦘ ∪ prop2 ⊆ ⦗E⦘ ⨾ (prop1 ∪ prop2) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ prop1 ⨾ ⦗E⦘ ∪ prop2 ⊆ ⦗E⦘ ⨾ (prop1 ∪ prop2) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_prop2E WF) at 1.\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗E⦘ ⨾ prop1 ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ prop2 ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ (prop1 ∪ prop2) ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⨾ prop1 ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ prop2 ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ (prop1 ∪ prop2) ⨾ ⦗E⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : hb ⊆ ⦗RW⦘ ⨾ hb ⨾ ⦗RW⦘.","conclusion":"hb ⊆ ⦗RW⦘ ⨾ hb ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"unfold hb.\nrewrite (wf_ppoD WF) at 1.\nrewrite (wf_fenceD WF) at 1.\nrewrite (wf_rfeD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ppo ∪ fence ∪ rfe ⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘.","conclusion":"ppo ∪ fence ∪ rfe ⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_ppoD WF) at 1.\nrewrite (wf_fenceD WF) at 1.\nrewrite (wf_rfeD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘ ∪ fence ∪ rfe ⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘ ∪ fence ∪ rfe ⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_fenceD WF) at 1.\nrewrite (wf_rfeD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘ ∪ ⦗RW⦘ ⨾ fence ⨾ ⦗RW⦘ ∪ rfe\n⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘ ∪ ⦗RW⦘ ⨾ fence ⨾ ⦗RW⦘ ∪ rfe\n⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (wf_rfeD WF) at 1.\ntype_solver 42."},{"statement":"(WF : Wf G) : ⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘ ∪ ⦗RW⦘ ⨾ fence ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘\n⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘.","conclusion":"⦗R⦘ ⨾ ppo ⨾ ⦗RW⦘ ∪ ⦗RW⦘ ⨾ fence ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ rfe ⨾ ⦗R⦘\n⊆ ⦗RW⦘ ⨾ (ppo ∪ fence ∪ rfe) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"type_solver 42."},{"statement":"(WF : Wf G) : hb⁺ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘.","conclusion":"hb⁺ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_r (wf_hbD WF)) at 1.\nrewrite inclusion_ct_seq_eqv_r at 1.\nrewrite (dom_l (wf_hbD WF)) at 1.\nrewrite inclusion_ct_seq_eqv_l at 1.\nbasic_solver."},{"statement":"(WF : Wf G) : (hb ⨾ ⦗RW⦘)⁺ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘.","conclusion":"(hb ⨾ ⦗RW⦘)⁺ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite inclusion_ct_seq_eqv_r at 1.\nrewrite (dom_l (wf_hbD WF)) at 1.\nrewrite inclusion_ct_seq_eqv_l at 1.\nbasic_solver."},{"statement":"(WF : Wf G) : hb⁺ ⨾ ⦗RW⦘ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘.","conclusion":"hb⁺ ⨾ ⦗RW⦘ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_hbD WF)) at 1.\nrewrite inclusion_ct_seq_eqv_l at 1.\nbasic_solver."},{"statement":"(WF : Wf G) : (⦗RW⦘ ⨾ hb)⁺ ⨾ ⦗RW⦘ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘.","conclusion":"(⦗RW⦘ ⨾ hb)⁺ ⨾ ⦗RW⦘ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite inclusion_ct_seq_eqv_l at 1.\nbasic_solver."},{"statement":"(WF : Wf G) : (⦗RW⦘ ⨾ hb⁺) ⨾ ⦗RW⦘ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘.","conclusion":"(⦗RW⦘ ⨾ hb⁺) ⨾ ⦗RW⦘ ⊆ ⦗RW⦘ ⨾ hb⁺ ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver."},{"statement":"(WF : Wf G) : hb⁺ ⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ hb⁺).","conclusion":"hb⁺ ⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ hb⁺)","hypotheses":"(WF : Wf G)","proofString":"unfold hb.\nrewrite path_ut_first at 1.\nrewrite (ppo_in_sb WF) at 1 2.\nrewrite (fence_in_sb) at 1 2.\ngeneralize (@sb_trans G); ins; relsf.\nbasic_solver 12."},{"statement":"(WF : Wf G) : (ppo ∪ fence ∪ rfe)⁺\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺).","conclusion":"(ppo ∪ fence ∪ rfe)⁺\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺)","hypotheses":"(WF : Wf G)","proofString":"rewrite path_ut_first at 1.\nrewrite (ppo_in_sb WF) at 1 2.\nrewrite (fence_in_sb) at 1 2.\ngeneralize (@sb_trans G); ins; relsf.\nbasic_solver 12."},{"statement":"(WF : Wf G) : (ppo ∪ fence)⁺ ∪ (ppo ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺).","conclusion":"(ppo ∪ fence)⁺ ∪ (ppo ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺)","hypotheses":"(WF : Wf G)","proofString":"rewrite (ppo_in_sb WF) at 1 2.\nrewrite (fence_in_sb) at 1 2.\ngeneralize (@sb_trans G); ins; relsf.\nbasic_solver 12."},{"statement":"(WF : Wf G) : (sb ∪ fence)⁺ ∪ (sb ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺).","conclusion":"(sb ∪ fence)⁺ ∪ (sb ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺)","hypotheses":"(WF : Wf G)","proofString":"rewrite (fence_in_sb) at 1 2.\ngeneralize (@sb_trans G); ins; relsf.\nbasic_solver 12."},{"statement":"(WF : Wf G) : (sb ∪ sb)⁺ ∪ (sb ∪ sb)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺).","conclusion":"(sb ∪ sb)⁺ ∪ (sb ∪ sb)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺)","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_trans G); ins; relsf.\nbasic_solver 12."},{"statement":"(WF : Wf G) (H : transitive sb) : sb ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺).","conclusion":"sb ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb^? ∪ (sb^? ⨾ rfe ∪ sb^? ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)⁺)","hypotheses":"(WF : Wf G) (H : transitive sb)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) : (sync ∪ lwsync) ⨾ hb＊ ⨾ fri ⊆ (sync ∪ lwsync) ⨾ hb＊ ⨾ co^?.","conclusion":"(sync ∪ lwsync) ⨾ hb＊ ⨾ fri ⊆ (sync ∪ lwsync) ⨾ hb＊ ⨾ co^?","hypotheses":"(WF : Wf G)","proofString":"generalize (sync_hb_rbi WF) (lwsync_hb_rbi WF).\nrelsf.\nbasic_solver 12."},{"statement":"(WF : Wf G) : sync ⨾ hb＊ ⨾ fri ⊆ sync ⨾ hb＊ ⨾ co^? ->\nlwsync ⨾ hb＊ ⨾ fri ⊆ lwsync ⨾ hb＊ ⨾ co^? ->\n(sync ∪ lwsync) ⨾ hb＊ ⨾ fri ⊆ (sync ∪ lwsync) ⨾ hb＊ ⨾ co^?.","conclusion":"sync ⨾ hb＊ ⨾ fri ⊆ sync ⨾ hb＊ ⨾ co^? ->\nlwsync ⨾ hb＊ ⨾ fri ⊆ lwsync ⨾ hb＊ ⨾ co^? ->\n(sync ∪ lwsync) ⨾ hb＊ ⨾ fri ⊆ (sync ∪ lwsync) ⨾ hb＊ ⨾ co^?","hypotheses":"(WF : Wf G)","proofString":"relsf.\nbasic_solver 12."},{"statement":"(WF : Wf G) : sync ⨾ hb＊ ⨾ fri ⊆ sync ⨾ hb＊ ⨾ co^? ->\nlwsync ⨾ hb＊ ⨾ fri ⊆ lwsync ⨾ hb＊ ⨾ co^? ->\nsync ⨾ hb＊ ⨾ fri ∪ lwsync ⨾ hb＊ ⨾ fri\n⊆ sync ⨾ hb＊ ⨾ co^? ∪ lwsync ⨾ hb＊ ⨾ co^?.","conclusion":"sync ⨾ hb＊ ⨾ fri ⊆ sync ⨾ hb＊ ⨾ co^? ->\nlwsync ⨾ hb＊ ⨾ fri ⊆ lwsync ⨾ hb＊ ⨾ co^? ->\nsync ⨾ hb＊ ⨾ fri ∪ lwsync ⨾ hb＊ ⨾ fri\n⊆ sync ⨾ hb＊ ⨾ co^? ∪ lwsync ⨾ hb＊ ⨾ co^?","hypotheses":"(WF : Wf G)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊.","conclusion":"fence ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊","hypotheses":"(WF : Wf G)","proofString":"relsf.\napply inclusion_union_l.\nrewrite fence_in_sb at 1; basic_solver.\nunfold hb.\nrewrite path_ut_first with (r:=ppo ∪ fence) (r':=rfe).\nrewrite (ppo_in_sb WF) at 1 2.\nrelsf; apply inclusion_union_l.\nrewrite fence_in_sb at 1 2.\nrels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42.\nrewrite (dom_l (wf_rfeD WF)) at 1.\narewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ∪ fence ⨾ hb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊.","conclusion":"fence ∪ fence ⨾ hb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊","hypotheses":"(WF : Wf G)","proofString":"apply inclusion_union_l.\nrewrite fence_in_sb at 1; basic_solver.\nunfold hb.\nrewrite path_ut_first with (r:=ppo ∪ fence) (r':=rfe).\nrewrite (ppo_in_sb WF) at 1 2.\nrelsf; apply inclusion_union_l.\nrewrite fence_in_sb at 1 2.\nrels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42.\nrewrite (dom_l (wf_rfeD WF)) at 1.\narewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊.","conclusion":"fence ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊","hypotheses":"(WF : Wf G)","proofString":"rewrite fence_in_sb at 1; basic_solver."},{"statement":"(WF : Wf G) : fence ⨾ hb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊.","conclusion":"fence ⨾ hb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊","hypotheses":"(WF : Wf G)","proofString":"unfold hb.\nrewrite path_ut_first with (r:=ppo ∪ fence) (r':=rfe).\nrewrite (ppo_in_sb WF) at 1 2.\nrelsf; apply inclusion_union_l.\nrewrite fence_in_sb at 1 2.\nrels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42.\nrewrite (dom_l (wf_rfeD WF)) at 1.\narewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (ppo ∪ fence ∪ rfe)⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (ppo ∪ fence ∪ rfe)⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite path_ut_first with (r:=ppo ∪ fence) (r':=rfe).\nrewrite (ppo_in_sb WF) at 1 2.\nrelsf; apply inclusion_union_l.\nrewrite fence_in_sb at 1 2.\nrels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42.\nrewrite (dom_l (wf_rfeD WF)) at 1.\narewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ ((ppo ∪ fence)⁺ ∪ (ppo ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊)\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ ((ppo ∪ fence)⁺ ∪ (ppo ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊)\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite (ppo_in_sb WF) at 1 2.\nrelsf; apply inclusion_union_l.\nrewrite fence_in_sb at 1 2.\nrels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42.\nrewrite (dom_l (wf_rfeD WF)) at 1.\narewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ ((sb ∪ fence)⁺ ∪ (sb ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊)\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ ((sb ∪ fence)⁺ ∪ (sb ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊)\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"relsf; apply inclusion_union_l.\nrewrite fence_in_sb at 1 2.\nrels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42.\nrewrite (dom_l (wf_rfeD WF)) at 1.\narewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (sb ∪ fence)⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (sb ∪ fence)⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite fence_in_sb at 1 2.\nrels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42."},{"statement":"(WF : Wf G) : sb ⨾ (sb ∪ sb)⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"sb ⨾ (sb ∪ sb)⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rels.\ngeneralize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42."},{"statement":"(WF : Wf G) : sb ⨾ sb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"sb ⨾ sb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"generalize (@sb_trans G) (ct_of_trans (@sb_trans G)).\nbasic_solver 42."},{"statement":"(WF : Wf G) : transitive sb ->\nsb⁺ ≡ sb -> sb ⨾ sb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"transitive sb ->\nsb⁺ ≡ sb -> sb ⨾ sb⁺ ⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(WF : Wf G) : fence ⨾ (sb ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (sb ∪ fence)＊ ⨾ rfe ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_rfeD WF)) at 1.\narewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (sb ∪ fence)＊ ⨾ (⦗W⦘ ⨾ rfe) ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (sb ∪ fence)＊ ⨾ (⦗W⦘ ⨾ rfe) ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"arewrite (rfe ⊆ (ppo ∪ fence ∪ rfe)＊) at 1.\nrewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (sb ∪ fence)＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (sb ∪ fence)＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite rt_rt.\nrewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (sb ∪ fence)＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (sb ∪ fence)＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite fence_in_sb at 2.\nrels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (sb ∪ sb)＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (sb ∪ sb)＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rels.\nrewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ sb＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ sb＊ ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite rtE at 1.\nrewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (⦗fun _ : actid => True⦘ ∪ sb⁺) ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (⦗fun _ : actid => True⦘ ∪ sb⁺) ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"rewrite (ct_of_trans (@sb_trans G)).\nrelsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ (⦗fun _ : actid => True⦘ ∪ sb) ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ (⦗fun _ : actid => True⦘ ∪ sb) ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"relsf.\nsin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊ ∪ fence ⨾ sb ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊ ∪ fence ⨾ sb ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (fence_sb_w_in_fence WF).\nbasic_solver 12."},{"statement":"(WF : Wf G) : fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊ ∪ (fence ⨾ ⦗W⦘) ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊.","conclusion":"fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊ ∪ (fence ⨾ ⦗W⦘) ⨾ (ppo ∪ fence ∪ rfe)＊\n⊆ sb ∪ fence ⨾ ⦗W⦘ ⨾ (ppo ∪ fence ∪ rfe)＊","hypotheses":"(WF : Wf G)","proofString":"basic_solver 12."},{"statement":"(WF : Wf G) : ⦗RW⦘ ⨾ sb ⨾ (sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync ⊆ (fence ⨾ hb＊)^? ⨾ sync.","conclusion":"⦗RW⦘ ⨾ sb ⨾ (sb ∪ fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync ⊆ (fence ⨾ hb＊)^? ⨾ sync","hypotheses":"(WF : Wf G)","proofString":"rewrite cr_union_r.\nrelsf.\nsin_rewrite !(rewrite_trans (@sb_trans G)).\ngeneralize (@RW_sb_sync_in_sync G) (RW_sb_fence_in_fence WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗RW⦘ ⨾ sb ⨾ (sb ∪ (fence ⨾ ⦗W⦘ ⨾ hb＊)^?) ⨾ sync ⊆ (fence ⨾ hb＊)^? ⨾ sync.","conclusion":"⦗RW⦘ ⨾ sb ⨾ (sb ∪ (fence ⨾ ⦗W⦘ ⨾ hb＊)^?) ⨾ sync ⊆ (fence ⨾ hb＊)^? ⨾ sync","hypotheses":"(WF : Wf G)","proofString":"relsf.\nsin_rewrite !(rewrite_trans (@sb_trans G)).\ngeneralize (@RW_sb_sync_in_sync G) (RW_sb_fence_in_fence WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗RW⦘ ⨾ sb ⨾ sb ⨾ sync ∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync\n⊆ (fence ⨾ hb＊)^? ⨾ sync.","conclusion":"⦗RW⦘ ⨾ sb ⨾ sb ⨾ sync ∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync\n⊆ (fence ⨾ hb＊)^? ⨾ sync","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite !(rewrite_trans (@sb_trans G)).\ngeneralize (@RW_sb_sync_in_sync G) (RW_sb_fence_in_fence WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗RW⦘ ⨾ sb ⨾ sync ∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync\n⊆ (fence ⨾ hb＊)^? ⨾ sync.","conclusion":"⦗RW⦘ ⨾ sb ⨾ sync ∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync\n⊆ (fence ⨾ hb＊)^? ⨾ sync","hypotheses":"(WF : Wf G)","proofString":"generalize (@RW_sb_sync_in_sync G) (RW_sb_fence_in_fence WF).\nbasic_solver 42."},{"statement":"(WF : Wf G) : ⦗RW⦘ ⨾ sb ⨾ sync ⊆ sync ->\n⦗RW⦘ ⨾ sb ⨾ fence ⨾ ⦗W⦘ ⊆ fence ->\n⦗RW⦘ ⨾ sb ⨾ sync ∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync\n⊆ (fence ⨾ hb＊)^? ⨾ sync.","conclusion":"⦗RW⦘ ⨾ sb ⨾ sync ⊆ sync ->\n⦗RW⦘ ⨾ sb ⨾ fence ⨾ ⦗W⦘ ⊆ fence ->\n⦗RW⦘ ⨾ sb ⨾ sync ∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ ⦗W⦘ ⨾ hb＊)^? ⨾ sync\n⊆ (fence ⨾ hb＊)^? ⨾ sync","hypotheses":"(WF : Wf G)","proofString":"basic_solver 42."},{"statement":"(CON : PowerConsistent) : acyclic\n  (((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n   ∪ (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊).","conclusion":"acyclic\n  (((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n   ∪ (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)","hypotheses":"(CON : PowerConsistent)","proofString":"remember (((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ (rfi)^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) as A.\nremember ((fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) as B.\nassert (H: A ⨾ B ⊆ A ⨾ A /\\ B ⨾ B ⊆ B ⨾ A).\nsplit; subst; rewrite !seqA;    sin_rewrite (sync_hb_rbi (CON_WF CON)); auto;    rewrite !seqA;    (arewrite (co^? ⨾ rfe ⊆ (co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ (rfi)^?)       by (unionR left; arewrite (co^? ⊆ (co ∪ fre)^?);           arewrite (rfe ⊆ rf^?); done));    done.\ndestruct H.\napply acyclic_specific_absorb; try done.\narewrite (A ⊆ co^? ⨾ prop2).\nclear H H0; subst.\nunfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42.\narewrite (prop2 ⊆ prop).\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf.\nclear H H0; subst.\nrotate 9.\nsin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) : acyclic (A ∪ (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊).","conclusion":"acyclic (A ∪ (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)","proofString":"remember ((fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) as B.\nassert (H: A ⨾ B ⊆ A ⨾ A /\\ B ⨾ B ⊆ B ⨾ A).\nsplit; subst; rewrite !seqA;    sin_rewrite (sync_hb_rbi (CON_WF CON)); auto;    rewrite !seqA;    (arewrite (co^? ⨾ rfe ⊆ (co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ (rfi)^?)       by (unionR left; arewrite (co^? ⊆ (co ∪ fre)^?);           arewrite (rfe ⊆ rf^?); done));    done.\ndestruct H.\napply acyclic_specific_absorb; try done.\narewrite (A ⊆ co^? ⨾ prop2).\nclear H H0; subst.\nunfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42.\narewrite (prop2 ⊆ prop).\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf.\nclear H H0; subst.\nrotate 9.\nsin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) : acyclic (A ∪ B).","conclusion":"acyclic (A ∪ B)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)","proofString":"assert (H: A ⨾ B ⊆ A ⨾ A /\\ B ⨾ B ⊆ B ⨾ A).\nsplit; subst; rewrite !seqA;    sin_rewrite (sync_hb_rbi (CON_WF CON)); auto;    rewrite !seqA;    (arewrite (co^? ⨾ rfe ⊆ (co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ (rfi)^?)       by (unionR left; arewrite (co^? ⊆ (co ∪ fre)^?);           arewrite (rfe ⊆ rf^?); done));    done.\ndestruct H.\napply acyclic_specific_absorb; try done.\narewrite (A ⊆ co^? ⨾ prop2).\nclear H H0; subst.\nunfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42.\narewrite (prop2 ⊆ prop).\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf.\nclear H H0; subst.\nrotate 9.\nsin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) : A ⨾ B ⊆ A ⨾ A /\\ B ⨾ B ⊆ B ⨾ A.","conclusion":"A ⨾ B ⊆ A ⨾ A /\\ B ⨾ B ⊆ B ⨾ A","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)","proofString":"split; subst; rewrite !seqA;    sin_rewrite (sync_hb_rbi (CON_WF CON)); auto;    rewrite !seqA;    (arewrite (co^? ⨾ rfe ⊆ (co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ (rfi)^?)       by (unionR left; arewrite (co^? ⊆ (co ∪ fre)^?);           arewrite (rfe ⊆ rf^?); done));    done."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A /\\ B ⨾ B ⊆ B ⨾ A) : acyclic (A ∪ B).","conclusion":"acyclic (A ∪ B)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A /\\ B ⨾ B ⊆ B ⨾ A)","proofString":"destruct H.\napply acyclic_specific_absorb; try done.\narewrite (A ⊆ co^? ⨾ prop2).\nclear H H0; subst.\nunfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42.\narewrite (prop2 ⊆ prop).\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf.\nclear H H0; subst.\nrotate 9.\nsin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : acyclic (A ∪ B).","conclusion":"acyclic (A ∪ B)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"apply acyclic_specific_absorb; try done.\narewrite (A ⊆ co^? ⨾ prop2).\nclear H H0; subst.\nunfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42.\narewrite (prop2 ⊆ prop).\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf.\nclear H H0; subst.\nrotate 9.\nsin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : acyclic A.","conclusion":"acyclic A","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"arewrite (A ⊆ co^? ⨾ prop2).\nclear H H0; subst.\nunfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42.\narewrite (prop2 ⊆ prop).\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : A ⊆ co^? ⨾ prop2.","conclusion":"A ⊆ co^? ⨾ prop2","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"clear H H0; subst.\nunfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ prop2.","conclusion":"((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ prop2","hypotheses":"(CON : PowerConsistent)","proofString":"unfold prop2.\nrewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite cr_union_l.\nrewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : ((co^? ∪ fre) ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"((co^? ∪ fre) ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite (@rfi_union_rfe G) at 1.\nrewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : ((co^? ∪ fre) ⨾ (rfi ∪ rfe)^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"((co^? ∪ fre) ⨾ (rfi ∪ rfe)^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite cr_union_r.\narewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : ((co^? ∪ fre) ⨾ (rfi ∪ rfe^?) ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"((co^? ∪ fre) ⨾ (rfi ∪ rfe^?) ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb) at 1.\nie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver.\narewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb.","conclusion":"rf ∩ sb ⊆ ⦗RW⦘ ⨾ sb","hypotheses":"(CON : PowerConsistent)","proofString":"ie_unfolder; rewrite (wf_rfD (CON_WF CON)); basic_solver."},{"statement":"(CON : PowerConsistent) : ((co^? ∪ fre) ⨾ (⦗RW⦘ ⨾ sb ∪ rfe^?) ∪ fri ⨾ rfi^?)\n⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"((co^? ∪ fre) ⨾ (⦗RW⦘ ⨾ sb ∪ rfe^?) ∪ fri ⨾ rfi^?)\n⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb).\nie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver.\nrelsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb.","conclusion":"fri ⨾ rfi^? ⊆ ⦗RW⦘ ⨾ sb","hypotheses":"(CON : PowerConsistent)","proofString":"ie_unfolder; rewrite (wf_frD (CON_WF CON)).\ngeneralize (@sb_trans G).\nbasic_solver."},{"statement":"(CON : PowerConsistent) : (⦗R⦘ ⨾ fr ⨾ ⦗W⦘) ∩ sb ⨾ (rf ∩ sb)^? ⊆ ⦗RW⦘ ⨾ sb.","conclusion":"(⦗R⦘ ⨾ fr ⨾ ⦗W⦘) ∩ sb ⨾ (rf ∩ sb)^? ⊆ ⦗RW⦘ ⨾ sb","hypotheses":"(CON : PowerConsistent)","proofString":"generalize (@sb_trans G).\nbasic_solver."},{"statement":"(CON : PowerConsistent) : transitive sb -> (⦗R⦘ ⨾ fr ⨾ ⦗W⦘) ∩ sb ⨾ (rf ∩ sb)^? ⊆ ⦗RW⦘ ⨾ sb.","conclusion":"transitive sb -> (⦗R⦘ ⨾ fr ⨾ ⦗W⦘) ∩ sb ⨾ (rf ∩ sb)^? ⊆ ⦗RW⦘ ⨾ sb","hypotheses":"(CON : PowerConsistent)","proofString":"basic_solver."},{"statement":"(CON : PowerConsistent) : ((co^? ∪ fre) ⨾ (⦗RW⦘ ⨾ sb ∪ rfe^?) ∪ ⦗RW⦘ ⨾ sb)\n⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"((co^? ∪ fre) ⨾ (⦗RW⦘ ⨾ sb ∪ rfe^?) ∪ ⦗RW⦘ ⨾ sb)\n⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"relsf; rewrite !seqA.\nsin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : co^? ⨾ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n∪ fre ⨾ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n∪ (co^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n   ∪ fre ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)\n∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"co^? ⨾ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n∪ fre ⨾ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n∪ (co^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n   ∪ fre ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)\n∪ ⦗RW⦘ ⨾ sb ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"sin_rewrite !(RW_sb_fence_hb_sync (CON_WF CON)).\nbasic_solver 42."},{"statement":"(CON : PowerConsistent) : co^? ⨾ ((fence ⨾ hb＊)^? ⨾ sync) ⨾ hb＊ ∪ fre ⨾ ((fence ⨾ hb＊)^? ⨾ sync) ⨾ hb＊\n∪ (co^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n   ∪ fre ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)\n∪ ((fence ⨾ hb＊)^? ⨾ sync) ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊.","conclusion":"co^? ⨾ ((fence ⨾ hb＊)^? ⨾ sync) ⨾ hb＊ ∪ fre ⨾ ((fence ⨾ hb＊)^? ⨾ sync) ⨾ hb＊\n∪ (co^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊\n   ∪ fre ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)\n∪ ((fence ⨾ hb＊)^? ⨾ sync) ⨾ hb＊\n⊆ co^? ⨾ (coe ∪ fre)^? ⨾ rfe^? ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊","hypotheses":"(CON : PowerConsistent)","proofString":"basic_solver 42."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : acyclic (co^? ⨾ prop2).","conclusion":"acyclic (co^? ⨾ prop2)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"arewrite (prop2 ⊆ prop).\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : acyclic (co^? ⨾ prop).","conclusion":"acyclic (co^? ⨾ prop)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"arewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : acyclic (co^? ⨾ (co ∪ prop)⁺).","conclusion":"acyclic (co^? ⨾ (co ∪ prop)⁺)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"arewrite (co ⊆ (co ∪ prop)⁺) at 1.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : acyclic (((co ∪ prop)⁺)^? ⨾ (co ∪ prop)⁺).","conclusion":"acyclic (((co ∪ prop)⁺)^? ⨾ (co ∪ prop)⁺)","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"relsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A) : irreflexive B.","conclusion":"irreflexive B","hypotheses":"(CON : PowerConsistent) (A : relation actid) (HeqA : A = ((co ∪ fre)^? ⨾ rf^? ∪ fri ⨾ rfi^?) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (B : relation actid) (HeqB : B = (fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊) (H : A ⨾ B ⊆ A ⨾ A) (H0 : B ⨾ B ⊆ B ⨾ A)","proofString":"clear H H0; subst.\nrotate 9.\nsin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) : irreflexive ((fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊).","conclusion":"irreflexive ((fri ⨾ rfe) ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊)","hypotheses":"(CON : PowerConsistent)","proofString":"rotate 9.\nsin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) : irreflexive (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⨾ fri).","conclusion":"irreflexive (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⨾ fri)","hypotheses":"(CON : PowerConsistent)","proofString":"sin_rewrite (sync_hb_rbi (CON_WF CON)).\narewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) : irreflexive (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⨾ co^?).","conclusion":"irreflexive (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⨾ co^?)","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop).\nby unfold prop, prop2; basic_solver 25.\narewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) : rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop.","conclusion":"rfe ⨾ (fence ⨾ hb＊)^? ⨾ sync ⨾ hb＊ ⊆ prop","hypotheses":"(CON : PowerConsistent)","proofString":"by unfold prop, prop2; basic_solver 25."},{"statement":"(CON : PowerConsistent) : irreflexive (prop ⨾ co^?).","conclusion":"irreflexive (prop ⨾ co^?)","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (prop ⊆ (co ∪ prop)⁺).\narewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) : irreflexive ((co ∪ prop)⁺ ⨾ co^?).","conclusion":"irreflexive ((co ∪ prop)⁺ ⨾ co^?)","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (co ⊆ (co ∪ prop)⁺) at 2.\nrelsf; cdes CON; red; relsf."},{"statement":"(CON : PowerConsistent) : irreflexive ((co ∪ prop)⁺ ⨾ ((co ∪ prop)⁺)^?).","conclusion":"irreflexive ((co ∪ prop)⁺ ⨾ ((co ∪ prop)⁺)^?)","hypotheses":"(CON : PowerConsistent)","proofString":"relsf; cdes CON; red; relsf."},{"statement":"(WF : Wf G) : (rfe ⨾ ⦗R⦘) ⨾ hb＊ ⊆ rfe ⨾ hb＊ ⨾ ⦗RW⦘.","conclusion":"(rfe ⨾ ⦗R⦘) ⨾ hb＊ ⊆ rfe ⨾ hb＊ ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite rtE.\nrewrite (dom_r (wf_cthbD WF)) at 1.\nbasic_solver 12."},{"statement":"(WF : Wf G) : (rfe ⨾ ⦗R⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺)\n⊆ rfe ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⨾ ⦗RW⦘.","conclusion":"(rfe ⨾ ⦗R⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺)\n⊆ rfe ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_r (wf_cthbD WF)) at 1.\nbasic_solver 12."},{"statement":"(WF : Wf G) : (rfe ⨾ ⦗R⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺ ⨾ ⦗RW⦘)\n⊆ rfe ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⨾ ⦗RW⦘.","conclusion":"(rfe ⨾ ⦗R⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺ ⨾ ⦗RW⦘)\n⊆ rfe ⨾ (⦗fun _ : actid => True⦘ ∪ hb⁺) ⨾ ⦗RW⦘","hypotheses":"(WF : Wf G)","proofString":"basic_solver 12."},{"statement":"⦗RW⦘ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ sync\n  ∪ (⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘).","conclusion":"⦗RW⦘ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ sync\n  ∪ (⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘)","hypotheses":"","proofString":"arewrite ((sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⊆ sb^?).\ngeneralize (@sb_trans G); basic_solver.\narewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘) by type_solver.\nbasic_solver 20."},{"statement":"(sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⊆ sb^?.","conclusion":"(sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⊆ sb^?","hypotheses":"","proofString":"generalize (@sb_trans G); basic_solver."},{"statement":"⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ sync\n  ∪ (⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘).","conclusion":"⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ sync\n  ∪ (⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘)","hypotheses":"","proofString":"arewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘) by type_solver.\nbasic_solver 20."},{"statement":"⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ sync\n  ∪ (⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘).","conclusion":"⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘\n⊆ sync\n  ∪ (⦗R⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗RW⦘ ∪ ⦗W⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘)","hypotheses":"","proofString":"basic_solver 20."},{"statement":"(WF : Wf G) : S ⨾ S ⊆ S.","conclusion":"S ⨾ S ⊆ S","hypotheses":"(WF : Wf G)","proofString":"unfold S.\nsin_rewrite (S_helper_1 WF).\nrewrite (dom_l (wf_rfeD WF)) at 2.\nrewrite !seqA.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb＊) at 2.\nrels."},{"statement":"(WF : Wf G) : (sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"(sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite (S_helper_1 WF).\nrewrite (dom_l (wf_rfeD WF)) at 2.\nrewrite !seqA.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb＊) at 2.\nrels."},{"statement":"(WF : Wf G) : (sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (rfe ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"(sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (rfe ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(WF : Wf G)","proofString":"rewrite (dom_l (wf_rfeD WF)) at 2.\nrewrite !seqA.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb＊) at 2.\nrels."},{"statement":"(WF : Wf G) : (sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (rfe ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (⦗W⦘ ⨾ rfe) ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"(sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (rfe ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (⦗W⦘ ⨾ rfe) ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(WF : Wf G)","proofString":"rewrite !seqA.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb＊) at 2.\nrels."},{"statement":"(WF : Wf G) : sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb\n    ⨾ rfe\n      ⨾ hb＊\n        ⨾ ⦗RW⦘\n          ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n            ⨾ sb^?\n              ⨾ ⦗F^lwsync⦘\n                ⨾ sb ⨾ ⦗W⦘ ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb\n    ⨾ rfe\n      ⨾ hb＊\n        ⨾ ⦗RW⦘\n          ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n            ⨾ sb^?\n              ⨾ ⦗F^lwsync⦘\n                ⨾ sb ⨾ ⦗W⦘ ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(WF : Wf G)","proofString":"sin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb＊) at 2.\nrels."},{"statement":"(WF : Wf G) : sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(WF : Wf G)","proofString":"arewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb＊) at 2.\nrels."},{"statement":"(WF : Wf G) : sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ hb＊ ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ hb＊ ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(WF : Wf G)","proofString":"arewrite (rfe ⊆ hb＊) at 2.\nrels."},{"statement":"(WF : Wf G) : sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ hb＊ ⨾ hb＊ ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"sb^?\n⨾ ⦗F^lwsync⦘\n  ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ hb＊ ⨾ hb＊ ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(WF : Wf G)","proofString":"rels."},{"statement":"(CON : PowerConsistent) : irreflexive\n  ((sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n   ⨾ sb^?).","conclusion":"irreflexive\n  ((sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n   ⨾ sb^?)","hypotheses":"(CON : PowerConsistent)","proofString":"sin_rewrite (S_helper_1 (CON_WF CON)).\nrewrite (dom_l (wf_rfeD (CON_WF CON))) at 1.\nrotate 4.\narewrite (sb^? ⨾ sb^? ⊆ sb^?).\nby generalize (@sb_trans G); basic_solver.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb⁺).\nrels.\napply CON."},{"statement":"(CON : PowerConsistent) : irreflexive\n  ((sb^?\n    ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (rfe ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n   ⨾ sb^?).","conclusion":"irreflexive\n  ((sb^?\n    ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ (rfe ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n   ⨾ sb^?)","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite (dom_l (wf_rfeD (CON_WF CON))) at 1.\nrotate 4.\narewrite (sb^? ⨾ sb^? ⊆ sb^?).\nby generalize (@sb_trans G); basic_solver.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb⁺).\nrels.\napply CON."},{"statement":"(CON : PowerConsistent) : irreflexive\n  ((sb^?\n    ⨾ ⦗F^lwsync⦘\n      ⨾ sb ⨾ ((⦗W⦘ ⨾ rfe) ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n   ⨾ sb^?).","conclusion":"irreflexive\n  ((sb^?\n    ⨾ ⦗F^lwsync⦘\n      ⨾ sb ⨾ ((⦗W⦘ ⨾ rfe) ⨾ hb＊ ⨾ ⦗RW⦘) ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?)\n   ⨾ sb^?)","hypotheses":"(CON : PowerConsistent)","proofString":"rotate 4.\narewrite (sb^? ⨾ sb^? ⊆ sb^?).\nby generalize (@sb_trans G); basic_solver.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb⁺).\nrels.\napply CON."},{"statement":"(CON : PowerConsistent) : irreflexive\n  (hb＊\n   ⨾ ⦗RW⦘\n     ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n       ⨾ sb^? ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ rfe).","conclusion":"irreflexive\n  (hb＊\n   ⨾ ⦗RW⦘\n     ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n       ⨾ sb^? ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ rfe)","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (sb^? ⨾ sb^? ⊆ sb^?).\nby generalize (@sb_trans G); basic_solver.\nsin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb⁺).\nrels.\napply CON."},{"statement":"(CON : PowerConsistent) : sb^? ⨾ sb^? ⊆ sb^?.","conclusion":"sb^? ⨾ sb^? ⊆ sb^?","hypotheses":"(CON : PowerConsistent)","proofString":"by generalize (@sb_trans G); basic_solver."},{"statement":"(CON : PowerConsistent) : irreflexive\n  (hb＊\n   ⨾ ⦗RW⦘\n     ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ rfe).","conclusion":"irreflexive\n  (hb＊\n   ⨾ ⦗RW⦘\n     ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ rfe)","hypotheses":"(CON : PowerConsistent)","proofString":"sin_rewrite S_helper_2.\narewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb⁺).\nrels.\napply CON."},{"statement":"(CON : PowerConsistent) : irreflexive (hb＊ ⨾ fence ⨾ rfe).","conclusion":"irreflexive (hb＊ ⨾ fence ⨾ rfe)","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (fence ⊆ hb＊).\narewrite (rfe ⊆ hb⁺).\nrels.\napply CON."},{"statement":"(CON : PowerConsistent) : irreflexive (hb＊ ⨾ hb＊ ⨾ rfe).","conclusion":"irreflexive (hb＊ ⨾ hb＊ ⨾ rfe)","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (rfe ⊆ hb⁺).\nrels.\napply CON."},{"statement":"(CON : PowerConsistent) : irreflexive (hb＊ ⨾ hb＊ ⨾ hb⁺).","conclusion":"irreflexive (hb＊ ⨾ hb＊ ⨾ hb⁺)","hypotheses":"(CON : PowerConsistent)","proofString":"rels.\napply CON."},{"statement":"(CON : PowerConsistent) : irreflexive hb⁺.","conclusion":"irreflexive hb⁺","hypotheses":"(CON : PowerConsistent)","proofString":"apply CON."},{"statement":"(CON : PowerConsistent) : ⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite (⦗RW⦘ ⨾ sb^? ⨾ ⦗F^lwsync⦘ ⊆ ⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘) by type_solver.\nrewrite (dom_l (wf_rfeD (CON_WF CON))) at 1; rewrite !seqA.\nby sin_rewrite (@RW_sb_F_sb_W_in_fence G)."},{"statement":"(CON : PowerConsistent) : ⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"⦗RW⦘ ⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite (dom_l (wf_rfeD (CON_WF CON))) at 1; rewrite !seqA.\nby sin_rewrite (@RW_sb_F_sb_W_in_fence G)."},{"statement":"(CON : PowerConsistent) : ⦗RW⦘\n⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?.","conclusion":"⦗RW⦘\n⨾ sb ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ ⦗W⦘ ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?\n⊆ fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?","hypotheses":"(CON : PowerConsistent)","proofString":"by sin_rewrite (@RW_sb_F_sb_W_in_fence G)."},{"statement":"(CON : PowerConsistent) : sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ ⦗RW⦘\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (eco ∩ sb)^?.","conclusion":"sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ ⦗RW⦘\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (eco ∩ sb)^?","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite ((sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ ⦗RW⦘ ⊆ (eco ∩ sb)^?).\ntype_solver 12.\ndone."},{"statement":"(CON : PowerConsistent) : (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ ⦗RW⦘ ⊆ (eco ∩ sb)^?.","conclusion":"(sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ ⦗RW⦘ ⊆ (eco ∩ sb)^?","hypotheses":"(CON : PowerConsistent)","proofString":"type_solver 12."},{"statement":"(CON : PowerConsistent) : sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (eco ∩ sb)^?.","conclusion":"sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (eco ∩ sb)^?\n⊆ sb^? ⨾ ⦗F^lwsync⦘ ⨾ sb ⨾ rfe ⨾ hb＊ ⨾ (eco ∩ sb)^?","hypotheses":"(CON : PowerConsistent)","proofString":"done."},{"statement":"(CON : PowerConsistent) : irreflexive (S ⨾ eco ⨾ ⦗RW⦘).","conclusion":"irreflexive (S ⨾ eco ⨾ ⦗RW⦘)","hypotheses":"(CON : PowerConsistent)","proofString":"rotate 1.\nsin_rewrite (rw_S CON).\nrewrite !seqA.\narewrite ((sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco ⊆ eco).\nby rewrite (dom_l (wf_ecoD (CON_WF CON))); generalize (eco_trans (CON_WF CON)); type_solver.\nsin_rewrite rfe_in_hb.\nrotate 1.\nrewrite <- ct_begin.\nrewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive (⦗RW⦘ ⨾ S ⨾ eco).","conclusion":"irreflexive (⦗RW⦘ ⨾ S ⨾ eco)","hypotheses":"(CON : PowerConsistent)","proofString":"sin_rewrite (rw_S CON).\nrewrite !seqA.\narewrite ((sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco ⊆ eco).\nby rewrite (dom_l (wf_ecoD (CON_WF CON))); generalize (eco_trans (CON_WF CON)); type_solver.\nsin_rewrite rfe_in_hb.\nrotate 1.\nrewrite <- ct_begin.\nrewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive ((fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?) ⨾ eco).","conclusion":"irreflexive ((fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^?) ⨾ eco)","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite !seqA.\narewrite ((sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco ⊆ eco).\nby rewrite (dom_l (wf_ecoD (CON_WF CON))); generalize (eco_trans (CON_WF CON)); type_solver.\nsin_rewrite rfe_in_hb.\nrotate 1.\nrewrite <- ct_begin.\nrewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive (fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco).","conclusion":"irreflexive (fence ⨾ rfe ⨾ hb＊ ⨾ (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco)","hypotheses":"(CON : PowerConsistent)","proofString":"arewrite ((sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco ⊆ eco).\nby rewrite (dom_l (wf_ecoD (CON_WF CON))); generalize (eco_trans (CON_WF CON)); type_solver.\nsin_rewrite rfe_in_hb.\nrotate 1.\nrewrite <- ct_begin.\nrewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : (sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco ⊆ eco.","conclusion":"(sb ⨾ ⦗F^lwsync⦘ ∪ eco ∩ sb)^? ⨾ eco ⊆ eco","hypotheses":"(CON : PowerConsistent)","proofString":"by rewrite (dom_l (wf_ecoD (CON_WF CON))); generalize (eco_trans (CON_WF CON)); type_solver."},{"statement":"(CON : PowerConsistent) : irreflexive (fence ⨾ rfe ⨾ hb＊ ⨾ eco).","conclusion":"irreflexive (fence ⨾ rfe ⨾ hb＊ ⨾ eco)","hypotheses":"(CON : PowerConsistent)","proofString":"sin_rewrite rfe_in_hb.\nrotate 1.\nrewrite <- ct_begin.\nrewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive (fence ⨾ hb ⨾ hb＊ ⨾ eco).","conclusion":"irreflexive (fence ⨾ hb ⨾ hb＊ ⨾ eco)","hypotheses":"(CON : PowerConsistent)","proofString":"rotate 1.\nrewrite <- ct_begin.\nrewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ fence ⨾ hb ⨾ hb＊).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb ⨾ hb＊)","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite <- ct_begin.\nrewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ fence ⨾ hb⁺).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb⁺)","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite inclusion_t_rt.\nby apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ fence ⨾ hb＊).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb＊)","hypotheses":"(CON : PowerConsistent)","proofString":"by apply eco_fence_hb_irr."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ sb ∪ eco ⨾ fence ⨾ hb＊).","conclusion":"irreflexive (eco ⨾ sb ∪ eco ⨾ fence ⨾ hb＊)","hypotheses":"(CON : PowerConsistent)","proofString":"cdes CON; red in SC_PER_LOC; unfolder in SC_PER_LOC.\ngeneralize (eco_fence_hb_irr CON).\nbasic_solver 15."},{"statement":"(CON : PowerConsistent) (WF : Wf G) (COMP : complete G) (SC_PER_LOC : forall x : actid, (exists z : actid, sb x z /\\ eco z x) -> False) (POWER_ATOMICITY : rmw_atomicity G) (OBSERVATION : irreflexive (fre ⨾ prop ⨾ hb＊)) (PROPAGATION : acyclic (co ∪ prop)) (NO_THIN_AIR : acyclic hb) : irreflexive (eco ⨾ sb ∪ eco ⨾ fence ⨾ hb＊).","conclusion":"irreflexive (eco ⨾ sb ∪ eco ⨾ fence ⨾ hb＊)","hypotheses":"(CON : PowerConsistent) (WF : Wf G) (COMP : complete G) (SC_PER_LOC : forall x : actid, (exists z : actid, sb x z /\\ eco z x) -> False) (POWER_ATOMICITY : rmw_atomicity G) (OBSERVATION : irreflexive (fre ⨾ prop ⨾ hb＊)) (PROPAGATION : acyclic (co ∪ prop)) (NO_THIN_AIR : acyclic hb)","proofString":"generalize (eco_fence_hb_irr CON).\nbasic_solver 15."},{"statement":"(CON : PowerConsistent) (WF : Wf G) (COMP : complete G) (SC_PER_LOC : forall x : actid, (exists z : actid, sb x z /\\ eco z x) -> False) (POWER_ATOMICITY : rmw_atomicity G) (OBSERVATION : irreflexive (fre ⨾ prop ⨾ hb＊)) (PROPAGATION : acyclic (co ∪ prop)) (NO_THIN_AIR : acyclic hb) : irreflexive (eco ⨾ fence ⨾ hb＊) -> irreflexive (eco ⨾ sb ∪ eco ⨾ fence ⨾ hb＊).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb＊) -> irreflexive (eco ⨾ sb ∪ eco ⨾ fence ⨾ hb＊)","hypotheses":"(CON : PowerConsistent) (WF : Wf G) (COMP : complete G) (SC_PER_LOC : forall x : actid, (exists z : actid, sb x z /\\ eco z x) -> False) (POWER_ATOMICITY : rmw_atomicity G) (OBSERVATION : irreflexive (fre ⨾ prop ⨾ hb＊)) (PROPAGATION : acyclic (co ∪ prop)) (NO_THIN_AIR : acyclic hb)","proofString":"basic_solver 15."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ sb).","conclusion":"irreflexive (eco ⨾ sb)","hypotheses":"(CON : PowerConsistent)","proofString":"by rotate 1; apply CON."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ fence ⨾ hb＊ ⨾ (sb ⨾ ⦗F⦘ ∪ eco)^?).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb＊ ⨾ (sb ⨾ ⦗F⦘ ∪ eco)^?)","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite crE.\nrelsf; unionL.\napply (eco_fence_hb_irr CON).\nrewrite (dom_l (wf_ecoD (CON_WF CON))); type_solver.\ngeneralize (eco_fence_hb_irr CON), (eco_trans (CON_WF CON)); basic_solver 12."},{"statement":"(CON : PowerConsistent) : irreflexive\n  (eco ⨾ fence ⨾ hb＊ ⨾ (⦗fun _ : actid => True⦘ ∪ (sb ⨾ ⦗F⦘ ∪ eco))).","conclusion":"irreflexive\n  (eco ⨾ fence ⨾ hb＊ ⨾ (⦗fun _ : actid => True⦘ ∪ (sb ⨾ ⦗F⦘ ∪ eco)))","hypotheses":"(CON : PowerConsistent)","proofString":"relsf; unionL.\napply (eco_fence_hb_irr CON).\nrewrite (dom_l (wf_ecoD (CON_WF CON))); type_solver.\ngeneralize (eco_fence_hb_irr CON), (eco_trans (CON_WF CON)); basic_solver 12."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ fence ⨾ hb＊).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb＊)","hypotheses":"(CON : PowerConsistent)","proofString":"apply (eco_fence_hb_irr CON)."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ fence ⨾ hb＊ ⨾ sb ⨾ ⦗F⦘).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb＊ ⨾ sb ⨾ ⦗F⦘)","hypotheses":"(CON : PowerConsistent)","proofString":"rewrite (dom_l (wf_ecoD (CON_WF CON))); type_solver."},{"statement":"(CON : PowerConsistent) : irreflexive (eco ⨾ fence ⨾ hb＊ ⨾ eco).","conclusion":"irreflexive (eco ⨾ fence ⨾ hb＊ ⨾ eco)","hypotheses":"(CON : PowerConsistent)","proofString":"generalize (eco_fence_hb_irr CON), (eco_trans (CON_WF CON)); basic_solver 12."}]}