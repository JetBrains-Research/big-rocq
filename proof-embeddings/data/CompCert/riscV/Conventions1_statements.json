{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/riscV/Conventions1.v","fileSamples":[{"statement":"(sig : signature) : subtype (proj_sig_res sig) (typ_rpair mreg_type (loc_result sig)) = true.","proofString":"unfold loc_result, mreg_type;  destruct (proj_sig_res sig); auto; destruct Archi.ptr64; auto."},{"statement":"(sg : signature) : match loc_result sg with\n| One _ => True\n| Twolong r1 r2 =>\n    r1 <> r2 /\\\n    proj_sig_res sg = Tlong /\\\n    subtype Tint (mreg_type r1) = true /\\\n    subtype Tint (mreg_type r2) = true /\\ Archi.ptr64 = false\nend.","proofString":"unfold loc_result; destruct (proj_sig_res sg); auto.\nunfold mreg_type; destruct Archi.ptr64; auto.\nsplit; auto.\ncongruence."},{"statement":"(sg : signature) : match (if Archi.ptr64 then One R10 else Twolong R11 R10) with\n| One _ => True\n| Twolong r1 r2 =>\n    r1 <> r2 /\\\n    Tlong = Tlong /\\\n    subtype Tint (mreg_type r1) = true /\\\n    subtype Tint (mreg_type r2) = true /\\ Archi.ptr64 = false\nend.","proofString":"unfold mreg_type; destruct Archi.ptr64; auto.\nsplit; auto.\ncongruence."},{"statement":"(sg : signature) : R11 <> R10 /\\\nTlong = Tlong /\\\nsubtype Tint Tany64 = true /\\ subtype Tint Tany64 = true /\\ false = false.","proofString":"split; auto.\ncongruence."},{"statement":"(sg : signature) : R11 <> R10.","proofString":"congruence."},{"statement":"(s1 s2 : signature) (H : sig_res s1 = sig_res s2) : loc_result s1 = loc_result s2.","proofString":"unfold loc_result, proj_sig_res.\nrewrite H; auto."},{"statement":"(s1 s2 : signature) (H : sig_res s1 = sig_res s2) : match proj_xtype (sig_res s1) with\n| Tlong => if Archi.ptr64 then One R10 else Twolong R11 R10\n| Tint | Tany32 => One R10\n| _ => One F10\nend =\nmatch proj_xtype (sig_res s2) with\n| Tlong => if Archi.ptr64 then One R10 else Twolong R11 R10\n| Tint | Tany32 => One R10\n| _ => One F10\nend.","proofString":"rewrite H; auto."}]}