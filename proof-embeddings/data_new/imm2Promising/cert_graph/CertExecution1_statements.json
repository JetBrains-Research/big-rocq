{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/promising2ToImm/src/cert_graph/CertExecution1.v","fileSamples":[{"statement":"dom_rel (hb G ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel (hb G ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"eapply dom_hb_covered; eauto."},{"statement":"dom_rel (sc ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel (sc ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"eapply dom_sc_covered; eauto."},{"statement":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘) ⨾ ⦗\n   covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘) ⨾ ⦗\n   covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"rewrite <- dom_hb_covered at 2; eauto.\nbasic_solver."},{"statement":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘) ⨾ ⦗\n   covered T⦘) ⊆₁ dom_rel (hb G ⨾ ⦗covered T⦘).","conclusion":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘) ⨾ ⦗\n   covered T⦘) ⊆₁ dom_rel (hb G ⨾ ⦗covered T⦘)","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel\n  (((((hb G\n       ⨾ ⦗(fun a : actid => is_f (lab G) a)\n          ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n     (hb G)^?) ⨾ release G) ⨾ ⦗issued T⦘) ⊆₁ covered T.","conclusion":"dom_rel\n  (((((hb G\n       ⨾ ⦗(fun a : actid => is_f (lab G) a)\n          ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n     (hb G)^?) ⨾ release G) ⨾ ⦗issued T⦘) ⊆₁ covered T","hypotheses":"","proofString":"rewrite seqA.\nforward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nrewrite <- seqA, dom_seq.\nrewrite !seqA.\napply urr_helper_impl."},{"statement":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ release G ⨾ ⦗issued T⦘) ⊆₁ covered T.","conclusion":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ release G ⨾ ⦗issued T⦘) ⊆₁ covered T","hypotheses":"","proofString":"forward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nrewrite <- seqA, dom_seq.\nrewrite !seqA.\napply urr_helper_impl."},{"statement":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ ⦗covered T⦘ ⨾ release G ⨾ ⦗issued T⦘) ⊆₁ \ncovered T.","conclusion":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ ⦗covered T⦘ ⨾ release G ⨾ ⦗issued T⦘) ⊆₁ \ncovered T","hypotheses":"","proofString":"rewrite <- seqA, dom_seq.\nrewrite !seqA.\napply urr_helper_impl."},{"statement":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"rewrite !seqA.\napply urr_helper_impl."},{"statement":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^?\n   ⨾ sc^? ⨾ (hb G)^? ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^?\n   ⨾ sc^? ⨾ (hb G)^? ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"apply urr_helper_impl."},{"statement":"dom_rel ((release G ⨾ rf G) ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel ((release G ⨾ rf G) ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"rewrite seqA.\neapply dom_release_rf_covered; eauto."},{"statement":"dom_rel (release G ⨾ rf G ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel (release G ⨾ rf G ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"eapply dom_release_rf_covered; eauto."},{"statement":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel\n  ((((hb G\n      ⨾ ⦗(fun a : actid => is_f (lab G) a)\n         ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^? ⨾ sc^?) ⨾ \n    (hb G)^?) ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"rewrite !seqA.\napply urr_helper_impl."},{"statement":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^?\n   ⨾ sc^? ⨾ (hb G)^? ⨾ ⦗covered T⦘) ⊆₁ covered T.","conclusion":"dom_rel\n  ((hb G\n    ⨾ ⦗(fun a : actid => is_f (lab G) a)\n       ∩₁ (fun a : actid => is_sc (lab G) a)⦘)^?\n   ⨾ sc^? ⨾ (hb G)^? ⨾ ⦗covered T⦘) ⊆₁ covered T","hypotheses":"","proofString":"apply urr_helper_impl."},{"statement":"dom_rel (rf G ⨾ rmw G ⨾ ⦗issued T⦘) ⊆₁ issued T.","conclusion":"dom_rel (rf G ⨾ rmw G ⨾ ⦗issued T⦘) ⊆₁ issued T","hypotheses":"","proofString":"eapply rfrmw_I_in_I; eauto."},{"statement":"(⦗fun a : actid => is_rel (lab G) a⦘\n ⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n   ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n     ⨾ (sb G ∩ same_loc (lab G))^?\n       ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (rf G ⨾ rmw G)＊) ⨾ ⦗\nreserved T⦘ ⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"(⦗fun a : actid => is_rel (lab G) a⦘\n ⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n   ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n     ⨾ (sb G ∩ same_loc (lab G))^?\n       ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (rf G ⨾ rmw G)＊) ⨾ ⦗\nreserved T⦘ ⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"rewrite !seqA.\nrewrite (rt_rf_rmw_S' WF ); eauto.\nrewrite (crE (⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺)); relsf; unionL.\narewrite (rfi G ⊆ sb G).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nintros AA.\nrelsf.\nclear -AA.\nbasic_solver 12.\narewrite (rfi G ⊆ rf G).\narewrite (⦗is_rel (lab G)⦘ ⨾ (⦗is_f (lab G)⦘ ⨾ sb G)^? ⨾ ⦗is_w (lab G)⦘ ⨾ (sb G ∩ same_loc (lab G))^? ⨾ ⦗is_w (lab G)⦘ ⨾ (rf G ⨾ rmw G)＊ ⊆ release G).\nrewrite <- seqA.\nforward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nbasic_solver."},{"statement":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (rf G ⨾ rmw G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (rf G ⨾ rmw G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"rewrite (rt_rf_rmw_S' WF ); eauto.\nrewrite (crE (⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺)); relsf; unionL.\narewrite (rfi G ⊆ sb G).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nintros AA.\nrelsf.\nclear -AA.\nbasic_solver 12.\narewrite (rfi G ⊆ rf G).\narewrite (⦗is_rel (lab G)⦘ ⨾ (⦗is_f (lab G)⦘ ⨾ sb G)^? ⨾ ⦗is_w (lab G)⦘ ⨾ (sb G ∩ same_loc (lab G))^? ⨾ ⦗is_w (lab G)⦘ ⨾ (rf G ⨾ rmw G)＊ ⊆ release G).\nrewrite <- seqA.\nforward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nbasic_solver."},{"statement":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n        ⨾ (rfi G ⨾ rmw G)＊ ⨾ (⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺)^? ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n        ⨾ (rfi G ⨾ rmw G)＊ ⨾ (⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺)^? ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"rewrite (crE (⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺)); relsf; unionL.\narewrite (rfi G ⊆ sb G).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nintros AA.\nrelsf.\nclear -AA.\nbasic_solver 12.\narewrite (rfi G ⊆ rf G).\narewrite (⦗is_rel (lab G)⦘ ⨾ (⦗is_f (lab G)⦘ ⨾ sb G)^? ⨾ ⦗is_w (lab G)⦘ ⨾ (sb G ∩ same_loc (lab G))^? ⨾ ⦗is_w (lab G)⦘ ⨾ (rf G ⨾ rmw G)＊ ⊆ release G).\nrewrite <- seqA.\nforward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nbasic_solver."},{"statement":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (rfi G ⨾ rmw G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (rfi G ⨾ rmw G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"arewrite (rfi G ⊆ sb G).\nrewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nintros AA.\nrelsf.\nclear -AA.\nbasic_solver 12."},{"statement":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ rmw G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ rmw G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"rewrite (rmw_in_sb WF).\ngeneralize (@sb_trans G).\nintros AA.\nrelsf.\nclear -AA.\nbasic_solver 12."},{"statement":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ sb G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ sb G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"generalize (@sb_trans G).\nintros AA.\nrelsf.\nclear -AA.\nbasic_solver 12."},{"statement":"transitive (sb G) ->\n⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ sb G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"transitive (sb G) ->\n⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ sb G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"intros AA.\nrelsf.\nclear -AA.\nbasic_solver 12."},{"statement":"(AA : transitive (sb G)) : ⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ sb G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G ⨾ sb G)＊ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"(AA : transitive (sb G))","proofString":"relsf.\nclear -AA.\nbasic_solver 12."},{"statement":"(AA : transitive (sb G)) : ⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G)^? ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G)^? ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"(AA : transitive (sb G))","proofString":"clear -AA.\nbasic_solver 12."},{"statement":"(AA : transitive (sb G)) : ⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G)^? ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘ ⨾ (sb G)^? ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"(AA : transitive (sb G))","proofString":"basic_solver 12."},{"statement":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n        ⨾ (rfi G ⨾ rmw G)＊ ⨾ (⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺) ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n        ⨾ (rfi G ⨾ rmw G)＊ ⨾ (⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺) ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"arewrite (rfi G ⊆ rf G).\narewrite (⦗is_rel (lab G)⦘ ⨾ (⦗is_f (lab G)⦘ ⨾ sb G)^? ⨾ ⦗is_w (lab G)⦘ ⨾ (sb G ∩ same_loc (lab G))^? ⨾ ⦗is_w (lab G)⦘ ⨾ (rf G ⨾ rmw G)＊ ⊆ release G).\nrewrite <- seqA.\nforward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nbasic_solver."},{"statement":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n        ⨾ (rf G ⨾ rmw G)＊ ⨾ ⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"⦗fun a : actid => is_rel (lab G) a⦘\n⨾ (⦗fun a : actid => is_f (lab G) a⦘ ⨾ sb G)^?\n  ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n    ⨾ (sb G ∩ same_loc (lab G))^?\n      ⨾ ⦗fun a : actid => is_w (lab G) a⦘\n        ⨾ (rf G ⨾ rmw G)＊ ⨾ ⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"arewrite (⦗is_rel (lab G)⦘ ⨾ (⦗is_f (lab G)⦘ ⨾ sb G)^? ⨾ ⦗is_w (lab G)⦘ ⨾ (sb G ∩ same_loc (lab G))^? ⨾ ⦗is_w (lab G)⦘ ⨾ (rf G ⨾ rmw G)＊ ⊆ release G).\nrewrite <- seqA.\nforward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nbasic_solver."},{"statement":"release G ⨾ ⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"release G ⨾ ⦗issued T⦘ ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"rewrite <- seqA.\nforward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nbasic_solver."},{"statement":"(release G ⨾ ⦗issued T⦘) ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"(release G ⨾ ⦗issued T⦘) ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"forward eapply dom_release_issued as ->%dom_rel_helper_in; eauto.\nbasic_solver."},{"statement":"(⦗covered T⦘ ⨾ release G ⨾ ⦗issued T⦘) ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?.","conclusion":"(⦗covered T⦘ ⨾ release G ⨾ ⦗issued T⦘) ⨾ (rf G ⨾ rmw G)⁺ ⨾ ⦗reserved T⦘\n⊆ ⦗covered T⦘ ⨾ ⊤₂ ∪ (sb G)^?","hypotheses":"","proofString":"basic_solver."},{"statement":"C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ⊆₁ FE.","conclusion":"C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ⊆₁ FE","hypotheses":"","proofString":"rewrite coveredE, issuedE; eauto; try apply TCCOH.\nerewrite rcoh_S_in_E; eauto.\nrewrite (dom_l (@wf_sbE Gf)).\nrewrite (dom_l (wf_rmwE WF)).\nbasic_solver."},{"statement":"FE ∪₁ FE ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE.","conclusion":"FE ∪₁ FE ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE","hypotheses":"","proofString":"erewrite rcoh_S_in_E; eauto.\nrewrite (dom_l (@wf_sbE Gf)).\nrewrite (dom_l (wf_rmwE WF)).\nbasic_solver."},{"statement":"FE ∪₁ FE ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ FE⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE.","conclusion":"FE ∪₁ FE ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ FE⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE","hypotheses":"","proofString":"rewrite (dom_l (@wf_sbE Gf)).\nrewrite (dom_l (wf_rmwE WF)).\nbasic_solver."},{"statement":"FE ∪₁ FE ∪₁ dom_rel ((⦗FE⦘ ⨾ Fsb)^? ⨾ ⦗Tid_ thread ∩₁ FE⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE.","conclusion":"FE ∪₁ FE ∪₁ dom_rel ((⦗FE⦘ ⨾ Fsb)^? ⨾ ⦗Tid_ thread ∩₁ FE⦘)\n∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE","hypotheses":"","proofString":"rewrite (dom_l (wf_rmwE WF)).\nbasic_solver."},{"statement":"FE ∪₁ FE ∪₁ dom_rel ((⦗FE⦘ ⨾ Fsb)^? ⨾ ⦗Tid_ thread ∩₁ FE⦘)\n∪₁ dom_rel ((⦗FE⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE.","conclusion":"FE ∪₁ FE ∪₁ dom_rel ((⦗FE⦘ ⨾ Fsb)^? ⨾ ⦗Tid_ thread ∩₁ FE⦘)\n∪₁ dom_rel ((⦗FE⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ FE⦘) ⊆₁ FE","hypotheses":"","proofString":"basic_solver."},{"statement":"Tid_ thread ∩₁ S\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"Tid_ thread ∩₁ S\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"S ∩₁ Tid_ thread\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"S ∩₁ Tid_ thread\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"rst_sc ≡ ⦗E0⦘ ⨾ sc ⨾ ⦗E0⦘.","conclusion":"rst_sc ≡ ⦗E0⦘ ⨾ sc ⨾ ⦗E0⦘","hypotheses":"","proofString":"done."},{"statement":"E0 ⊆₁ FE.","conclusion":"E0 ⊆₁ FE","hypotheses":"","proofString":"eapply E0_in_Gf."},{"statement":"dom_rel\n  (Frmw\n   ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ \ncodom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel\n  (Frmw\n   ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ \ncodom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite !id_union; relsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\ngeneralize TCOH, dom_sb_covered, dom_rf_covered.\nie_unfolder; basic_solver 21.\narewrite (⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20.\nunionR right.\nunfolder; ins; desf; splits; eauto.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (rmw_in_sb WF) at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\nbasic_solver 12.\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite (dom_l (wf_rmwD WF)) at 2.\nclear.\ntype_solver."},{"statement":"dom_rel (Frmw ⨾ ⦗C⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗C⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rmw_in_sb WF) at 1.\ngeneralize TCOH, dom_sb_covered, dom_rf_covered.\nie_unfolder; basic_solver 21."},{"statement":"dom_rel (Fsb ⨾ ⦗C⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗C⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"generalize TCOH, dom_sb_covered, dom_rf_covered.\nie_unfolder; basic_solver 21."},{"statement":"tls_coherent Gf T ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (rf G ⨾ ⦗covered T0⦘) ⊆₁ issued T0) ->\ndom_rel (Fsb ⨾ ⦗C⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"tls_coherent Gf T ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (rf G ⨾ ⦗covered T0⦘) ⊆₁ issued T0) ->\ndom_rel (Fsb ⨾ ⦗C⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"ie_unfolder; basic_solver 21."},{"statement":"dom_rel (Frmw ⨾ ⦗I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"arewrite (⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20.\nunionR right.\nunfolder; ins; desf; splits; eauto."},{"statement":"⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘.","conclusion":"⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘","hypotheses":"","proofString":"by unfolder; ins; desf; tauto."},{"statement":"dom_rel (Frmw ⨾ (⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ (⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"relsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20.\nunionR right.\nunfolder; ins; desf; splits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20."},{"statement":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20."},{"statement":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 20."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unionR right.\nunfolder; ins; desf; splits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfe\n⊆₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unfolder; ins; desf; splits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite (rmw_in_sb WF) at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\nbasic_solver 12."},{"statement":"dom_rel (Frmw ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rmw_in_sb WF) at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\nbasic_solver 12."},{"statement":"dom_rel (Fsb ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"generalize (@sb_trans Gf); ins; relsf.\nbasic_solver 12."},{"statement":"(H : transitive Fsb) : dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"(H : transitive Fsb)","proofString":"basic_solver 12."},{"statement":"dom_rel (Frmw ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite (dom_l (wf_rmwD WF)) at 2.\nclear.\ntype_solver."},{"statement":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (dom_l (wf_rmwD WF)) at 2.\nclear.\ntype_solver."},{"statement":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"clear.\ntype_solver."},{"statement":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfe\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel\n  (Frmw\n   ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ \ncodom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel\n  (Frmw\n   ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ \ncodom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite !id_union; relsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\ngeneralize TCOH, dom_sb_covered, dom_rf_covered; ie_unfolder; basic_solver 21.\narewrite (⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20.\nunionR right.\nunfolder; ins; desf; splits; eauto.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (rmw_in_sb WF) at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\nbasic_solver 12.\nrewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite (dom_l (wf_rmwD WF)) at 2.\nclear.\ntype_solver."},{"statement":"dom_rel (Frmw ⨾ ⦗C⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗C⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rmw_in_sb WF) at 1.\ngeneralize TCOH, dom_sb_covered, dom_rf_covered; ie_unfolder; basic_solver 21."},{"statement":"dom_rel (Fsb ⨾ ⦗C⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗C⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"generalize TCOH, dom_sb_covered, dom_rf_covered; ie_unfolder; basic_solver 21."},{"statement":"dom_rel (Frmw ⨾ ⦗I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"arewrite (⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20.\nunionR right.\nunfolder; ins; desf; splits; eauto."},{"statement":"⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘.","conclusion":"⦗I⦘ ⊆ ⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘","hypotheses":"","proofString":"by unfolder; ins; desf; tauto."},{"statement":"dom_rel (Frmw ⨾ (⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ (⦗Tid_ thread ∩₁ I⦘ ∪ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"relsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20.\nunionR right.\nunfolder; ins; desf; splits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rmw_in_sb WF) at 1.\nrewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20."},{"statement":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rcoh_I_in_S ) at 1; eauto.\nbasic_solver 20."},{"statement":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 20."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unionR right.\nunfolder; ins; desf; splits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ codom_rel Frfi\n⊆₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unfolder; ins; desf; splits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite (rmw_in_sb WF) at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\nbasic_solver 12."},{"statement":"dom_rel (Frmw ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (rmw_in_sb WF) at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\nbasic_solver 12."},{"statement":"dom_rel (Fsb ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"generalize (@sb_trans Gf); ins; relsf.\nbasic_solver 12."},{"statement":"(H : transitive Fsb) : dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"(H : transitive Fsb)","proofString":"basic_solver 12."},{"statement":"dom_rel (Frmw ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (dom_r (wf_rmwD WF)) at 1.\nrewrite (dom_l (wf_rmwD WF)) at 2.\nclear.\ntype_solver."},{"statement":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (dom_l (wf_rmwD WF)) at 2.\nclear.\ntype_solver."},{"statement":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"clear.\ntype_solver."},{"statement":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((Frmw ⨾ ⦗FW⦘) ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n∩₁ codom_rel Frfi\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel (Frmw ⨾ ⦗I⦘) ⊆₁ E0.","conclusion":"dom_rel (Frmw ⨾ ⦗I⦘) ⊆₁ E0","hypotheses":"","proofString":"unfold E0.\narewrite (I ⊆₁ I ∩₁ (Tid_ thread ∪₁ NTid_ thread)) at 1.\nunfolder.\nins.\ntauto.\nrewrite set_inter_union_r, id_union.\nrewrite !seq_union_r, dom_union.\nunionL.\nunionR left -> right.\nrewrite <- rcoh_I_in_S; eauto.\nunfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10.\nunionR right.\nunfolder.\nins.\ndesf.\nsplits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗I⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"arewrite (I ⊆₁ I ∩₁ (Tid_ thread ∪₁ NTid_ thread)) at 1.\nunfolder.\nins.\ntauto.\nrewrite set_inter_union_r, id_union.\nrewrite !seq_union_r, dom_union.\nunionL.\nunionR left -> right.\nrewrite <- rcoh_I_in_S; eauto.\nunfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10.\nunionR right.\nunfolder.\nins.\ndesf.\nsplits; eauto."},{"statement":"I ⊆₁ I ∩₁ (Tid_ thread ∪₁ NTid_ thread).","conclusion":"I ⊆₁ I ∩₁ (Tid_ thread ∪₁ NTid_ thread)","hypotheses":"","proofString":"unfolder.\nins.\ntauto."},{"statement":"forall x : actid, I x -> I x /\\ (tid x = thread \\/ tid x <> thread).","conclusion":"forall x : actid, I x -> I x /\\ (tid x = thread \\/ tid x <> thread)","hypotheses":"","proofString":"ins.\ntauto."},{"statement":"(x : actid) (H : I x) : I x /\\ (tid x = thread \\/ tid x <> thread).","conclusion":"I x /\\ (tid x = thread \\/ tid x <> thread)","hypotheses":"(x : actid) (H : I x)","proofString":"tauto."},{"statement":"dom_rel (Frmw ⨾ ⦗I ∩₁ (Tid_ thread ∪₁ NTid_ thread)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I ∩₁ (Tid_ thread ∪₁ NTid_ thread)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite set_inter_union_r, id_union.\nrewrite !seq_union_r, dom_union.\nunionL.\nunionR left -> right.\nrewrite <- rcoh_I_in_S; eauto.\nunfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10.\nunionR right.\nunfolder.\nins.\ndesf.\nsplits; eauto."},{"statement":"dom_rel (Frmw ⨾ (⦗I ∩₁ Tid_ thread⦘ ∪ ⦗I ∩₁ NTid_ thread⦘))\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ (⦗I ∩₁ Tid_ thread⦘ ∪ ⦗I ∩₁ NTid_ thread⦘))\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite !seq_union_r, dom_union.\nunionL.\nunionR left -> right.\nrewrite <- rcoh_I_in_S; eauto.\nunfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10.\nunionR right.\nunfolder.\nins.\ndesf.\nsplits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘) ∪₁ dom_rel (Frmw ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘) ∪₁ dom_rel (Frmw ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unionL.\nunionR left -> right.\nrewrite <- rcoh_I_in_S; eauto.\nunfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10.\nunionR right.\nunfolder.\nins.\ndesf.\nsplits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unionR left -> right.\nrewrite <- rcoh_I_in_S; eauto.\nunfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10."},{"statement":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘) ⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘) ⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)","hypotheses":"","proofString":"rewrite <- rcoh_I_in_S; eauto.\nunfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10."},{"statement":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘) ⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I ∩₁ Tid_ thread⦘) ⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unfold issued; simpls.\nrewrite (rmw_in_sb WF).\nbasic_solver 10."},{"statement":"dom_rel (Frmw ⨾ ⦗event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ∩₁ Tid_ thread⦘)\n⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ∩₁ Tid_ thread⦘)\n⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)⦘)","hypotheses":"","proofString":"rewrite (rmw_in_sb WF).\nbasic_solver 10."},{"statement":"dom_rel (Fsb ⨾ ⦗event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ∩₁ Tid_ thread⦘)\n⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)⦘).","conclusion":"dom_rel (Fsb ⨾ ⦗event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ∩₁ Tid_ thread⦘)\n⊆₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (Frmw ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unionR right.\nunfolder.\nins.\ndesf.\nsplits; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unfolder.\nins.\ndesf.\nsplits; eauto."},{"statement":"forall x : actid,\n(exists y : actid, Frmw x y /\\ I y /\\ tid y <> thread) ->\nexists y : actid, Frmw x y /\\ tid y <> thread /\\ I y.","conclusion":"forall x : actid,\n(exists y : actid, Frmw x y /\\ I y /\\ tid y <> thread) ->\nexists y : actid, Frmw x y /\\ tid y <> thread /\\ I y","hypotheses":"","proofString":"ins.\ndesf.\nsplits; eauto."},{"statement":"(x : actid) (H : exists y : actid, Frmw x y /\\ I y /\\ tid y <> thread) : exists y : actid, Frmw x y /\\ tid y <> thread /\\ I y.","conclusion":"exists y : actid, Frmw x y /\\ tid y <> thread /\\ I y","hypotheses":"(x : actid) (H : exists y : actid, Frmw x y /\\ I y /\\ tid y <> thread)","proofString":"desf.\nsplits; eauto."},{"statement":"(x y : actid) (H : Frmw x y) (H0 : I y) (H1 : tid y <> thread) : exists y0 : actid, Frmw x y0 /\\ tid y0 <> thread /\\ I y0.","conclusion":"exists y0 : actid, Frmw x y0 /\\ tid y0 <> thread /\\ I y0","hypotheses":"(x y : actid) (H : Frmw x y) (H0 : I y) (H1 : tid y <> thread)","proofString":"splits; eauto."},{"statement":"⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"generalize I_in_E.\nbasic_solver 12."},{"statement":"I ⊆₁ E ->\n⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"I ⊆₁ E ->\n⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"basic_solver 12."},{"statement":"good_ctx (fun r : relation actid => Frf ⨾ Frmw ⨾ r ⨾ ⦗I⦘).","conclusion":"good_ctx (fun r : relation actid => Frf ⨾ Frmw ⨾ r ⨾ ⦗I⦘)","hypotheses":"","proofString":"eauto with hahn."},{"statement":"Frf ⨾ Frmw ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frf ⨾ Frmw ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite seq_id_l.\nrewrite rfi_union_rfe at 1.\nrewrite !seq_union_l.\nunionL.\nrewrite <- inclusion_id_rt, seq_id_l.\narewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘) at 1.\ngeneralize I_in_E.\nbasic_solver.\ndo 3 hahn_frame_r.\nbasic_solver.\nrewrite <- inclusion_t_rt, <- ct_step.\nrewrite <- inclusion_id_cr.\nrewrite seq_id_l, !seqA.\nforward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"Frf ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frf ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite rfi_union_rfe at 1.\nrewrite !seq_union_l.\nunionL.\nrewrite <- inclusion_id_rt, seq_id_l.\narewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘) at 1.\ngeneralize I_in_E.\nbasic_solver.\ndo 3 hahn_frame_r.\nbasic_solver.\nrewrite <- inclusion_t_rt, <- ct_step.\nrewrite <- inclusion_id_cr.\nrewrite seq_id_l, !seqA.\nforward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"(Frfi ∪ Frfe) ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"(Frfi ∪ Frfe) ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite !seq_union_l.\nunionL.\nrewrite <- inclusion_id_rt, seq_id_l.\narewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘) at 1.\ngeneralize I_in_E.\nbasic_solver.\ndo 3 hahn_frame_r.\nbasic_solver.\nrewrite <- inclusion_t_rt, <- ct_step.\nrewrite <- inclusion_id_cr.\nrewrite seq_id_l, !seqA.\nforward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"Frfi ⨾ Frmw ⨾ ⦗I⦘ ∪ Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfi ⨾ Frmw ⨾ ⦗I⦘ ∪ Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"unionL.\nrewrite <- inclusion_id_rt, seq_id_l.\narewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘) at 1.\ngeneralize I_in_E.\nbasic_solver.\ndo 3 hahn_frame_r.\nbasic_solver.\nrewrite <- inclusion_t_rt, <- ct_step.\nrewrite <- inclusion_id_cr.\nrewrite seq_id_l, !seqA.\nforward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"Frfi ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfi ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite <- inclusion_id_rt, seq_id_l.\narewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘) at 1.\ngeneralize I_in_E.\nbasic_solver.\ndo 3 hahn_frame_r.\nbasic_solver."},{"statement":"Frfi ⨾ Frmw ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfi ⨾ Frmw ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"arewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘) at 1.\ngeneralize I_in_E.\nbasic_solver.\ndo 3 hahn_frame_r.\nbasic_solver."},{"statement":"⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"generalize I_in_E.\nbasic_solver."},{"statement":"I ⊆₁ E -> ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"I ⊆₁ E -> ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"Frfi ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfi ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"do 3 hahn_frame_r.\nbasic_solver."},{"statement":"Frfi ⨾ Frmw ⊆ (Frfi ⨾ Frmw)^?.","conclusion":"Frfi ⨾ Frmw ⊆ (Frfi ⨾ Frmw)^?","hypotheses":"","proofString":"basic_solver."},{"statement":"Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite <- inclusion_t_rt, <- ct_step.\nrewrite <- inclusion_id_cr.\nrewrite seq_id_l, !seqA.\nforward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite <- inclusion_id_cr.\nrewrite seq_id_l, !seqA.\nforward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘\n⊆ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"rewrite seq_id_l, !seqA.\nforward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"forward eapply rfe_rmw_I as ->%dom_rel_helper_in; eauto.\ngeneralize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"⦗I⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"generalize I_in_E rfe_rmw_I rmw_E_rfe; ie_unfolder; basic_solver 80."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘.","conclusion":"⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"eapply dom_rel_helper_in.\nrewrite crE; relsf; unionL; splits; [basic_solver 12|].\narewrite (Frfi ⊆ Frf).\nrewrite rfrmw_I_in_I; eauto.\nbasic_solver."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : dom_rel (⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"rewrite crE; relsf; unionL; splits; [basic_solver 12|].\narewrite (Frfi ⊆ Frf).\nrewrite rfrmw_I_in_I; eauto.\nbasic_solver."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : FW_ex ∩₁ dom_rel ((Frfi ⨾ Frmw) ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"FW_ex ∩₁ dom_rel ((Frfi ⨾ Frmw) ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"arewrite (Frfi ⊆ Frf).\nrewrite rfrmw_I_in_I; eauto.\nbasic_solver."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : FW_ex ∩₁ dom_rel (Frf ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"FW_ex ∩₁ dom_rel (Frf ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"rewrite rfrmw_I_in_I; eauto.\nbasic_solver."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : FW_ex ∩₁ I ⊆₁ I.","conclusion":"FW_ex ∩₁ I ⊆₁ I","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"basic_solver."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"basic_solver."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗I⦘ ⨾ ⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗E⦘\n⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)^?.","conclusion":"⦗I⦘ ⨾ ⦗FW_ex⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗E⦘\n⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)^?","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"generalize I_in_E rmw_E_rfi; ie_unfolder; basic_solver 80."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"generalize rfe_rmw_I; basic_solver 12."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗I⦘\n⨾ ⦗E⦘\n  ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)^?\n    ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘\n⨾ ⦗E⦘\n  ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)^?\n    ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"relsf.\nremember (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) as X.\nbasic_solver 21."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗I⦘ ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⨾ ⦗E⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"remember (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) as X.\nbasic_solver 21."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗I⦘ ⨾ ⦗E⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⨾ ⦗E⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"basic_solver 21."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : Frfe ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘).","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"rewrite seq_union_r.\nunionR right.\nhahn_frame_r.\nforward eapply rfe_rmw_I as ->%dom_rel_helper; eauto.\nrewrite I_in_E at 1.\nunfold rfe.\nunfolder.\nins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : Frfe ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ ⦗fun _ : actid => True⦘ ∪ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ ⦗fun _ : actid => True⦘ ∪ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"unionR right.\nhahn_frame_r.\nforward eapply rfe_rmw_I as ->%dom_rel_helper; eauto.\nrewrite I_in_E at 1.\nunfold rfe.\nunfolder.\nins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : Frfe ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘ ⨾ ⦗E⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"hahn_frame_r.\nforward eapply rfe_rmw_I as ->%dom_rel_helper; eauto.\nrewrite I_in_E at 1.\nunfold rfe.\nunfolder.\nins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw.","conclusion":"Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"forward eapply rfe_rmw_I as ->%dom_rel_helper; eauto.\nrewrite I_in_E at 1.\nunfold rfe.\nunfolder.\nins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗I⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw.","conclusion":"⦗I⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"rewrite I_in_E at 1.\nunfold rfe.\nunfolder.\nins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗E⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw.","conclusion":"⦗E⦘ ⨾ Frfe ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"unfold rfe.\nunfolder.\nins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : ⦗E⦘ ⨾ (Frf \\ Fsb) ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw.","conclusion":"⦗E⦘ ⨾ (Frf \\ Fsb) ⨾ Frmw ⨾ ⦗I⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"unfolder.\nins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘) : forall x y : actid,\nE x /\\ (exists z : actid, (Frf x z /\\ ~ Fsb x z) /\\ Frmw z y /\\ I y) ->\n(E x /\\ E x) /\\\n(exists z : actid,\n   Frf x z /\\ (exists z0 : actid, (z = z0 /\\ E z) /\\ Frmw z0 y)).","conclusion":"forall x y : actid,\nE x /\\ (exists z : actid, (Frf x z /\\ ~ Fsb x z) /\\ Frmw z y /\\ I y) ->\n(E x /\\ E x) /\\\n(exists z : actid,\n   Frf x z /\\ (exists z0 : actid, (z = z0 /\\ E z) /\\ Frmw z0 y))","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘)","proofString":"ins.\ndesf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k X : relation actid) (HeqX : X = ⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x /\\ (exists z : actid, (Frf x z /\\ ~ Fsb x z) /\\ Frmw z y /\\ I y)) : ((E0 ∩₁ FE) x /\\ (E0 ∩₁ FE) x) /\\\n(exists z : actid,\n   Frf x z /\\ (exists z0 : actid, (z = z0 /\\ (E0 ∩₁ FE) z) /\\ Frmw z0 y)).","conclusion":"((E0 ∩₁ FE) x /\\ (E0 ∩₁ FE) x) /\\\n(exists z : actid,\n   Frf x z /\\ (exists z0 : actid, (z = z0 /\\ (E0 ∩₁ FE) z) /\\ Frmw z0 y))","hypotheses":"(k X : relation actid) (HeqX : X = ⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘ ⊆ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ X＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x /\\ (exists z : actid, (Frf x z /\\ ~ Fsb x z) /\\ Frmw z y /\\ I y))","proofString":"desf.\nsplits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : ((E0 ∩₁ FE) x /\\ (E0 ∩₁ FE) x) /\\\n(exists z0 : actid,\n   Frf x z0 /\\ (exists z1 : actid, (z0 = z1 /\\ (E0 ∩₁ FE) z0) /\\ Frmw z1 y)).","conclusion":"((E0 ∩₁ FE) x /\\ (E0 ∩₁ FE) x) /\\\n(exists z0 : actid,\n   Frf x z0 /\\ (exists z1 : actid, (z0 = z1 /\\ (E0 ∩₁ FE) z0) /\\ Frmw z1 y))","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"splits; auto.\neexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : exists z0 : actid,\n  Frf x z0 /\\ (exists z1 : actid, (z0 = z1 /\\ (E0 ∩₁ FE) z0) /\\ Frmw z1 y).","conclusion":"exists z0 : actid,\n  Frf x z0 /\\ (exists z1 : actid, (z0 = z1 /\\ (E0 ∩₁ FE) z0) /\\ Frmw z1 y)","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"eexists.\nsplits; eauto.\neexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : exists z0 : actid, (z = z0 /\\ (E0 ∩₁ FE) z) /\\ Frmw z0 y.","conclusion":"exists z0 : actid, (z = z0 /\\ (E0 ∩₁ FE) z) /\\ Frmw z0 y","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"eexists.\nsplits; eauto.\napply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : (E0 ∩₁ FE) z.","conclusion":"(E0 ∩₁ FE) z","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"apply rmw_E_rfe.\nunfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : (dom_rel (Frmw ⨾ ⦗E⦘) ∩₁ codom_rel Frfe) z.","conclusion":"(dom_rel (Frmw ⨾ ⦗E⦘) ∩₁ codom_rel Frfe) z","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"unfold rfe.\nunfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : (dom_rel (Frmw ⨾ ⦗E⦘) ∩₁ codom_rel (Frf \\ Fsb)) z.","conclusion":"(dom_rel (Frmw ⨾ ⦗E⦘) ∩₁ codom_rel (Frf \\ Fsb)) z","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"unfolder.\nsplits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : (exists y0 z0 : actid, Frmw z z0 /\\ z0 = y0 /\\ E z0) /\\\n(exists x0 : actid, Frf x0 z /\\ ~ Fsb x0 z).","conclusion":"(exists y0 z0 : actid, Frmw z z0 /\\ z0 = y0 /\\ E z0) /\\\n(exists x0 : actid, Frf x0 z /\\ ~ Fsb x0 z)","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"splits; eauto.\ndo 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : exists y0 z0 : actid, Frmw z z0 /\\ z0 = y0 /\\ E z0.","conclusion":"exists y0 z0 : actid, Frmw z z0 /\\ z0 = y0 /\\ E z0","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"do 2 eexists.\nsplits; eauto.\nby apply I_in_E."},{"statement":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y) : E y.","conclusion":"E y","hypotheses":"(k : relation actid) (H : Frf ⨾ Frmw ⨾ k ⨾ ⦗I⦘\n⊆ (Frfi ⨾ Frmw)^?\n  ⨾ ⦗I⦘\n    ⨾ (⦗E0 ∩₁ FE⦘ ⨾ Frf ⨾ ⦗E0 ∩₁ FE⦘ ⨾ Frmw ⨾ ⦗E0 ∩₁ FE⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘) (x y : actid) (H0 : (E0 ∩₁ FE) x) (z : actid) (H1 : Frf x z) (H4 : ~ Fsb x z) (H2 : Frmw z y) (H3 : I y)","proofString":"by apply I_in_E."},{"statement":"(⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ Frs) ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ Grs.","conclusion":"(⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ Frs) ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ Grs","hypotheses":"","proofString":"rewrite (sub_F SUB), (sub_Rel SUB).\nrewrite !seqA; unfold imm_s_hb.rs.\nrewrite (sub_W SUB), (sub_same_loc SUB).\nrewrite !seqA.\nrewrite rt_rf_rmw_I.\narewrite (⦗E⦘ ⊆  ⦗E⦘ ⨾ ⦗E⦘) at 2.\nbasic_solver.\nseq_rewrite <- (sub_rf SUB).\nseq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"(⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ Frs) ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ Grs.","conclusion":"(⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ Frs) ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ Grs","hypotheses":"","proofString":"rewrite !seqA; unfold imm_s_hb.rs.\nrewrite (sub_W SUB), (sub_same_loc SUB).\nrewrite !seqA.\nrewrite rt_rf_rmw_I.\narewrite (⦗E⦘ ⊆  ⦗E⦘ ⨾ ⦗E⦘) at 2.\nbasic_solver.\nseq_rewrite <- (sub_rf SUB).\nseq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ (⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Frf ⨾ Frmw)＊) ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ (⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Frf ⨾ Frmw)＊) ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"rewrite (sub_W SUB), (sub_same_loc SUB).\nrewrite !seqA.\nrewrite rt_rf_rmw_I.\narewrite (⦗E⦘ ⊆  ⦗E⦘ ⨾ ⦗E⦘) at 2.\nbasic_solver.\nseq_rewrite <- (sub_rf SUB).\nseq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ (⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Frf ⨾ Frmw)＊) ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ (⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Frf ⨾ Frmw)＊) ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"rewrite !seqA.\nrewrite rt_rf_rmw_I.\narewrite (⦗E⦘ ⊆  ⦗E⦘ ⨾ ⦗E⦘) at 2.\nbasic_solver.\nseq_rewrite <- (sub_rf SUB).\nseq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Frf ⨾ Frmw)＊ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^? ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Frf ⨾ Frmw)＊ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"rewrite rt_rf_rmw_I.\narewrite (⦗E⦘ ⊆  ⦗E⦘ ⨾ ⦗E⦘) at 2.\nbasic_solver.\nseq_rewrite <- (sub_rf SUB).\nseq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"arewrite (⦗E⦘ ⊆  ⦗E⦘ ⨾ ⦗E⦘) at 2.\nbasic_solver.\nseq_rewrite <- (sub_rf SUB).\nseq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗E⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘.","conclusion":"⦗E⦘ ⊆ ⦗E⦘ ⨾ ⦗E⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Frfi ⨾ Frmw)^?\n          ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Frfi ⨾ Frmw)^?\n          ⨾ ⦗I⦘ ⨾ (⦗E⦘ ⨾ Frf ⨾ ⦗E⦘ ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"seq_rewrite <- (sub_rf SUB).\nseq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (Grf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (Grf ⨾ ⦗E⦘ ⨾ Frmw ⨾ ⦗E⦘)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"seq_rewrite <- (sub_rmw SUB).\narewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘\n    ⨾ (Fsb ∩ Fsame_loc)^?\n      ⨾ ⦗FW⦘ ⨾ (Frfi ⨾ Frmw)^? ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"arewrite ((Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘).\ncase_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf.\ncase_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘.","conclusion":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ (Frfi ⨾ Frmw)^? ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘","hypotheses":"","proofString":"case_refl (Frfi ⨾ Frmw); [done|].\narewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf."},{"statement":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ Frfi ⨾ Frmw ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘.","conclusion":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ Frfi ⨾ Frmw ⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘","hypotheses":"","proofString":"arewrite_id  ⦗W⦘.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf."},{"statement":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗fun _ : actid => True⦘ ⨾ Frfi ⨾ Frmw\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘.","conclusion":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗fun _ : actid => True⦘ ⨾ Frfi ⨾ Frmw\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite (dom_r (wf_rmwD WF)).\nrewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf."},{"statement":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗fun _ : actid => True⦘ ⨾ Frfi ⨾ Frmw ⨾ ⦗FW⦘\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘.","conclusion":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗fun _ : actid => True⦘ ⨾ Frfi ⨾ Frmw ⨾ ⦗FW⦘\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite (rfi_in_sbloc' WF).\nrewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf."},{"statement":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗fun _ : actid => True⦘ ⨾ Fsb ∩ Fsame_loc ⨾ Frmw ⨾ ⦗FW⦘\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘.","conclusion":"(Fsb ∩ Fsame_loc)^? ⨾ ⦗fun _ : actid => True⦘ ⨾ Fsb ∩ Fsame_loc ⨾ Frmw ⨾ ⦗FW⦘\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘","hypotheses":"","proofString":"rewrite (rmw_in_sb_loc WF) at 1.\ngeneralize (@sb_same_loc_trans Gf); ins; relsf."},{"statement":"(Fsb ∩ Fsame_loc)^?\n⨾ ⦗fun _ : actid => True⦘ ⨾ Fsb ∩ Fsame_loc ⨾ Fsb ∩ Fsame_loc ⨾ ⦗FW⦘\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘.","conclusion":"(Fsb ∩ Fsame_loc)^?\n⨾ ⦗fun _ : actid => True⦘ ⨾ Fsb ∩ Fsame_loc ⨾ Fsb ∩ Fsame_loc ⨾ ⦗FW⦘\n⊆ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘","hypotheses":"","proofString":"generalize (@sb_same_loc_trans Gf); ins; relsf."},{"statement":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗FF⦘ ⨾ Fsb)^?\n  ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"case_refl (⦗F⦘ ⨾ Fsb).\narewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40.\narewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘ ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘ ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"arewrite (⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘).\ngeneralize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21.\nseq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40."},{"statement":"⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘.","conclusion":"⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"generalize (W_Rel_sb_loc_I WF TCOH ICOH) I_in_E.\nbasic_solver 21."},{"statement":"dom_rel (⦗FW ∩₁ FRel⦘ ⨾ Fsb ∩ Fsame_loc ⨾ ⦗FW ∩₁ I⦘) ⊆₁ I ->\nI ⊆₁ E ->\n⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘.","conclusion":"dom_rel (⦗FW ∩₁ FRel⦘ ⨾ Fsb ∩ Fsame_loc ⨾ ⦗FW ∩₁ I⦘) ⊆₁ I ->\nI ⊆₁ E ->\n⦗Rel⦘ ⨾ ⦗W⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗I⦘ ⨾ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘","hypotheses":"","proofString":"basic_solver 21."},{"statement":"⦗I⦘\n⨾ ⦗Rel⦘\n  ⨾ ⦗W⦘\n    ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗I⦘\n⨾ ⦗Rel⦘\n  ⨾ ⦗W⦘\n    ⨾ ((⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘) ∩ Fsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"seq_rewrite <- ?(sub_sb SUB); revert RELCOV; basic_solver 40."},{"statement":"⦗FRel⦘\n⨾ (⦗F⦘ ⨾ Fsb)\n  ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ (⦗F⦘ ⨾ Fsb)\n  ⨾ ⦗FW⦘ ⨾ (Fsb ∩ Fsame_loc)^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"arewrite ((Fsb ∩ Fsame_loc)^? ⊆ Fsb^?) at 1.\narewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗FW⦘ ⨾ Fsb^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗FW⦘ ⨾ Fsb^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"arewrite_id ⦗FW⦘ at 1.\ngeneralize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"⦗FRel⦘\n⨾ ⦗F⦘\n  ⨾ Fsb\n    ⨾ ⦗fun _ : actid => True⦘ ⨾ Fsb^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗FRel⦘\n⨾ ⦗F⦘\n  ⨾ Fsb\n    ⨾ ⦗fun _ : actid => True⦘ ⨾ Fsb^? ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ ⦗E⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"generalize (@sb_trans Gf); ins; relsf.\narewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"(H : transitive Fsb) : ⦗FRel⦘\n⨾ ⦗FF⦘\n  ⨾ Fsb\n    ⨾ ⦗FW⦘\n      ⨾ ⦗I⦘ ⨾ ((⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Gsb ∩ Fsame_loc)^?\n          ⨾ ⦗FW⦘ ⨾ ((⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊.","conclusion":"⦗FRel⦘\n⨾ ⦗FF⦘\n  ⨾ Fsb\n    ⨾ ⦗FW⦘\n      ⨾ ⦗I⦘ ⨾ ((⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Gsb ∩ Fsame_loc)^?\n          ⨾ ⦗FW⦘ ⨾ ((⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊","hypotheses":"(H : transitive Fsb)","proofString":"arewrite (⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘ ⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘).\ngeneralize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21.\nremember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"(H : transitive Fsb) : ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘.","conclusion":"⦗Rel⦘ ⨾ ⦗F⦘ ⨾ Fsb ⨾ ⦗W⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘","hypotheses":"(H : transitive Fsb)","proofString":"generalize dom_F_Rel_sb_I_in_C, C_in_E, I_in_E; basic_solver 21."},{"statement":"(H : transitive Fsb) : ⦗C⦘\n⨾ ⦗Rel⦘\n  ⨾ ⦗F⦘\n    ⨾ ⦗E⦘\n      ⨾ Fsb\n        ⨾ ⦗E⦘\n          ⨾ ⦗W⦘\n            ⨾ ⦗E⦘\n              ⨾ (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Gsb ∩ Fsame_loc)^?\n          ⨾ ⦗FW⦘ ⨾ (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊.","conclusion":"⦗C⦘\n⨾ ⦗Rel⦘\n  ⨾ ⦗F⦘\n    ⨾ ⦗E⦘\n      ⨾ Fsb\n        ⨾ ⦗E⦘\n          ⨾ ⦗W⦘\n            ⨾ ⦗E⦘\n              ⨾ (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘\n  ⨾ ⦗FRel⦘\n    ⨾ (⦗FF⦘ ⨾ Gsb)^?\n      ⨾ ⦗FW⦘\n        ⨾ (Gsb ∩ Fsame_loc)^?\n          ⨾ ⦗FW⦘ ⨾ (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)＊","hypotheses":"(H : transitive Fsb)","proofString":"remember (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) as X.\nins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"(H : transitive Fsb) (X : relation actid) (HeqX : X = ⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) : ⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ X＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ X＊.","conclusion":"⦗C⦘ ⨾ ⦗Rel⦘ ⨾ ⦗F⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗W⦘ ⨾ ⦗E⦘ ⨾ X＊ ⨾ ⦗E0 ∩₁ FE⦘ ⨾ ⦗I⦘\n⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ (⦗FF⦘ ⨾ Gsb)^? ⨾ ⦗FW⦘ ⨾ (Gsb ∩ Fsame_loc)^? ⨾ ⦗FW⦘ ⨾ X＊","hypotheses":"(H : transitive Fsb) (X : relation actid) (HeqX : X = ⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘ ⨾ ⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘)","proofString":"ins; seq_rewrite <- (sub_sb SUB); basic_solver 21."},{"statement":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ C⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ C⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"generalize (dom_sb_covered WF TCOH ICOH ); ie_unfolder; basic_solver 21."},{"statement":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ I⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ I⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"erewrite issuedW at 1; eauto; type_solver."},{"statement":"dom_rel\n  (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I.","conclusion":"dom_rel\n  (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel\n  (Fsb\n   ⨾ ⦗FF ∩₁ FAcq/Rel\n      ∩₁ dom_rel ((⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I.","conclusion":"dom_rel\n  (Fsb\n   ⨾ ⦗FF ∩₁ FAcq/Rel\n      ∩₁ dom_rel ((⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I","hypotheses":"","proofString":"rewrite !seq_union_l, !seq_id_l, dom_union, set_inter_union_r.\nrewrite id_union, seq_union_r, dom_union.\nunionL.\nerewrite (reservedW WF ); type_solver.\ngeneralize (rcoh_F_sb_S RCOH), (dom_sb_covered WF TCOH ICOH).\nunfold covered; simpls.\nbasic_solver 21."},{"statement":"dom_rel\n  (Fsb\n   ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ⦗Tid_ thread ∩₁ S⦘\n      ∪₁ FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ \nC ∪₁ I.","conclusion":"dom_rel\n  (Fsb\n   ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ⦗Tid_ thread ∩₁ S⦘\n      ∪₁ FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ \nC ∪₁ I","hypotheses":"","proofString":"rewrite id_union, seq_union_r, dom_union.\nunionL.\nerewrite (reservedW WF ); type_solver.\ngeneralize (rcoh_F_sb_S RCOH), (dom_sb_covered WF TCOH ICOH).\nunfold covered; simpls.\nbasic_solver 21."},{"statement":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ⦗Tid_ thread ∩₁ S⦘⦘)\n∪₁ dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I.","conclusion":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ⦗Tid_ thread ∩₁ S⦘⦘)\n∪₁ dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I","hypotheses":"","proofString":"unionL.\nerewrite (reservedW WF ); type_solver.\ngeneralize (rcoh_F_sb_S RCOH), (dom_sb_covered WF TCOH ICOH).\nunfold covered; simpls.\nbasic_solver 21."},{"statement":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ⦗Tid_ thread ∩₁ S⦘⦘) ⊆₁ C ∪₁ I.","conclusion":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel ⦗Tid_ thread ∩₁ S⦘⦘) ⊆₁ C ∪₁ I","hypotheses":"","proofString":"erewrite (reservedW WF ); type_solver."},{"statement":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I.","conclusion":"dom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I","hypotheses":"","proofString":"generalize (rcoh_F_sb_S RCOH), (dom_sb_covered WF TCOH ICOH).\nunfold covered; simpls.\nbasic_solver 21."},{"statement":"dom_rel (⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ C ->\ndom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C ->\ndom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I.","conclusion":"dom_rel (⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ C ->\ndom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C ->\ndom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I","hypotheses":"","proofString":"unfold covered; simpls.\nbasic_solver 21."},{"statement":"dom_rel (⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover) ->\ndom_rel (Fsb ⨾ ⦗event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover) ->\ndom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover) ∪₁ I.","conclusion":"dom_rel (⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover) ->\ndom_rel (Fsb ⨾ ⦗event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover) ->\ndom_rel (Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_cover) ∪₁ I","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (Frfe ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite E_E0; unfold E0.\nrewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\ngeneralize (dom_rf_covered WF TCOH ICOH).\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_rfeD WF)) at 1; rewrite issuedW at 1; eauto.\ntype_solver.\narewrite (Frfe ⊆ Frfe  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_rfeD WF)).\nerewrite init_w; eauto.\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf.\narewrite (Frfe ⊆ Frf).\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"dom_rel\n  (Frfe\n   ⨾ ⦗(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n       ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ ⦗(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n       ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\ngeneralize (dom_rf_covered WF TCOH ICOH).\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_rfeD WF)) at 1; rewrite issuedW at 1; eauto.\ntype_solver.\narewrite (Frfe ⊆ Frfe  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_rfeD WF)).\nerewrite init_w; eauto.\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf.\narewrite (Frfe ⊆ Frf).\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"dom_rel\n  (Frfe\n   ⨾ ⦗C ∩₁ NTid_ thread ∪₁ I ∩₁ NTid_ thread\n      ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ ⦗C ∩₁ NTid_ thread ∪₁ I ∩₁ NTid_ thread\n      ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !id_union; relsf; unionL; splits.\ngeneralize (dom_rf_covered WF TCOH ICOH).\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_rfeD WF)) at 1; rewrite issuedW at 1; eauto.\ntype_solver.\narewrite (Frfe ⊆ Frfe  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_rfeD WF)).\nerewrite init_w; eauto.\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf.\narewrite (Frfe ⊆ Frf).\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Frfe ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"generalize (dom_rf_covered WF TCOH ICOH).\nie_unfolder.\nbasic_solver 21."},{"statement":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I -> dom_rel (Frfe ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I -> dom_rel (Frfe ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"ie_unfolder.\nbasic_solver 21."},{"statement":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I -> dom_rel ((Frf \\ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I -> dom_rel ((Frf \\ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (Frfe ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_r (wf_rfeD WF)) at 1; rewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ ⦗FW ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ ⦗FW ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel (Frfe ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Frfe ⊆ Frfe  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_rfeD WF)).\nerewrite init_w; eauto.\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf."},{"statement":"Frfe ⊆ Frfe ⨾ ⦗set_compl Init⦘.","conclusion":"Frfe ⊆ Frfe ⨾ ⦗set_compl Init⦘","hypotheses":"","proofString":"rewrite (dom_r (wf_rfeD WF)).\nerewrite init_w; eauto.\nunfolder; ins; desf; splits; eauto.\nintro; type_solver."},{"statement":"Frfe ⨾ ⦗FR⦘ ⊆ (Frfe ⨾ ⦗FR⦘) ⨾ ⦗set_compl Init⦘.","conclusion":"Frfe ⨾ ⦗FR⦘ ⊆ (Frfe ⨾ ⦗FR⦘) ⨾ ⦗set_compl Init⦘","hypotheses":"","proofString":"erewrite init_w; eauto.\nunfolder; ins; desf; splits; eauto.\nintro; type_solver."},{"statement":"Frfe ⨾ ⦗FR⦘ ⊆ (Frfe ⨾ ⦗FR⦘) ⨾ ⦗set_compl FW⦘.","conclusion":"Frfe ⨾ ⦗FR⦘ ⊆ (Frfe ⨾ ⦗FR⦘) ⨾ ⦗set_compl FW⦘","hypotheses":"","proofString":"unfolder; ins; desf; splits; eauto.\nintro; type_solver."},{"statement":"(x y : actid) (H : Frfe x y) (H0 : is_r Flab y) : ~ is_w Flab y.","conclusion":"~ is_w Flab y","hypotheses":"(x y : actid) (H : Frfe x y) (H0 : is_r Flab y)","proofString":"intro; type_solver."},{"statement":"dom_rel\n  (Frfe\n   ⨾ ⦗set_compl Init⦘\n     ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ ⦗set_compl Init⦘\n     ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"unfolder; ins; desf.\napply sb_tid_init in H1; desf."},{"statement":"(x y : actid) (H : Frfe x y) (H0 : ~ is_init y) (y0 : actid) (H1 : Fsb y y0) (H5 : S y0) (H2 : tid y <> tid y0) : I x.","conclusion":"I x","hypotheses":"(x y : actid) (H : Frfe x y) (H0 : ~ is_init y) (y0 : actid) (H1 : Fsb y y0) (H5 : S y0) (H2 : tid y <> tid y0)","proofString":"apply sb_tid_init in H1; desf."},{"statement":"dom_rel (Frfe ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Frfe ⊆ Frf).\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Frf ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Frf ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"unfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"forall x : actid,\n(exists y : actid,\n   Frf x y /\\\n   (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z) /\\\n   tid y <> thread) -> I x.","conclusion":"forall x : actid,\n(exists y : actid,\n   Frf x y /\\\n   (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z) /\\\n   tid y <> thread) -> I x","hypotheses":"","proofString":"ins.\ndesf.\neapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"(x : actid) (H : exists y : actid,\n  Frf x y /\\\n  (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z) /\\\n  tid y <> thread) : I x.","conclusion":"I x","hypotheses":"(x : actid) (H : exists y : actid,\n  Frf x y /\\\n  (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z) /\\\n  tid y <> thread)","proofString":"desf.\neapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"(x y : actid) (H : Frf x y) (y0 : actid) (H0 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) (H1 : tid y <> thread) : I x.","conclusion":"I x","hypotheses":"(x y : actid) (H : Frf x y) (y0 : actid) (H0 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) (H1 : tid y <> thread)","proofString":"eapply rfrmw_I_in_I; eauto.\nbasic_solver 10."},{"statement":"(x y : actid) (H : Frf x y) (y0 : actid) (H0 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) (H1 : tid y <> thread) : dom_rel (Frf ⨾ Frmw ⨾ ⦗I⦘) x.","conclusion":"dom_rel (Frf ⨾ Frmw ⨾ ⦗I⦘) x","hypotheses":"(x y : actid) (H : Frf x y) (y0 : actid) (H0 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) (H1 : tid y <> thread)","proofString":"basic_solver 10."},{"statement":"dom_rel (⦗E⦘ ⨾ Grfe) ⊆₁ I.","conclusion":"dom_rel (⦗E⦘ ⨾ Grfe) ⊆₁ I","hypotheses":"","proofString":"rewrite E_E0; unfold E0.\nrewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_rfeD rstWF)).\ngeneralize w_covered_issued.\nbasic_solver.\nbasic_solver.\nrewrite (dom_r (wf_rfeE rstWF)).\narewrite (⦗E⦘ ⊆ ⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘).\nunfolder; ins; desf; tauto.\nrelsf; splits.\nrewrite (sub_rfe_in SUB), rfe_E.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nunfolder; ins; desf; exfalso.\neapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence.\ncdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence.\nrewrite (dom_l (wf_rmwD WF)).\nrewrite (dom_l (wf_rfeD rstWF)).\nclear.\ntype_solver."},{"statement":"dom_rel\n  (⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n    ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘ ⨾ Grfe) ⊆₁ I.","conclusion":"dom_rel\n  (⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n    ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘ ⨾ Grfe) ⊆₁ I","hypotheses":"","proofString":"rewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_rfeD rstWF)).\ngeneralize w_covered_issued.\nbasic_solver.\nbasic_solver.\nrewrite (dom_r (wf_rfeE rstWF)).\narewrite (⦗E⦘ ⊆ ⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘).\nunfolder; ins; desf; tauto.\nrelsf; splits.\nrewrite (sub_rfe_in SUB), rfe_E.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nunfolder; ins; desf; exfalso.\neapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence.\ncdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence.\nrewrite (dom_l (wf_rmwD WF)).\nrewrite (dom_l (wf_rfeD rstWF)).\nclear.\ntype_solver."},{"statement":"C ∩₁ dom_rel Grfe ⊆₁ I.","conclusion":"C ∩₁ dom_rel Grfe ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_rfeD rstWF)).\ngeneralize w_covered_issued.\nbasic_solver."},{"statement":"C ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I.","conclusion":"C ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I","hypotheses":"","proofString":"generalize w_covered_issued.\nbasic_solver."},{"statement":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\nC ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I.","conclusion":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\nC ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"I ∩₁ dom_rel Grfe ⊆₁ I.","conclusion":"I ∩₁ dom_rel Grfe ⊆₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel Grfe ⊆₁ I.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel Grfe ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_r (wf_rfeE rstWF)).\narewrite (⦗E⦘ ⊆ ⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘).\nunfolder; ins; desf; tauto.\nrelsf; splits.\nrewrite (sub_rfe_in SUB), rfe_E.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nunfolder; ins; desf; exfalso.\neapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence.\ncdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Grfe ⨾ ⦗E⦘) ⊆₁ I.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Grfe ⨾ ⦗E⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (⦗E⦘ ⊆ ⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘).\nunfolder; ins; desf; tauto.\nrelsf; splits.\nrewrite (sub_rfe_in SUB), rfe_E.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nunfolder; ins; desf; exfalso.\neapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence.\ncdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence."},{"statement":"⦗E⦘ ⊆ ⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘.","conclusion":"⦗E⦘ ⊆ ⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘","hypotheses":"","proofString":"unfolder; ins; desf; tauto."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∩₁ dom_rel (Grfe ⨾ (⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘)) ⊆₁ I.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∩₁ dom_rel (Grfe ⨾ (⦗E ∩₁ NTid_ thread⦘ ∪ ⦗E ∩₁ Tid_ thread⦘)) ⊆₁ I","hypotheses":"","proofString":"relsf; splits.\nrewrite (sub_rfe_in SUB), rfe_E.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nunfolder; ins; desf; exfalso.\neapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence.\ncdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Grfe ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ I.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Grfe ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rfe_in SUB), rfe_E.\nbasic_solver."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ I ⊆₁ I.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ I ⊆₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Grfe ⨾ ⦗E ∩₁ Tid_ thread⦘)\n⊆₁ I.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Grfe ⨾ ⦗E ∩₁ Tid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rfe_in SUB).\nunfolder; ins; desf; exfalso.\neapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence.\ncdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Frfe ⨾ ⦗E ∩₁ Tid_ thread⦘)\n⊆₁ I.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ dom_rel (Frfe ⨾ ⦗E ∩₁ Tid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"unfolder; ins; desf; exfalso.\neapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence.\ncdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence."},{"statement":"(y0 : actid) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe y0 y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) : False.","conclusion":"False","hypotheses":"(y0 : actid) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe y0 y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread)","proofString":"eapply rfe_n_same_tid; eauto.\napply IMMCON.\nsplit; eauto.\ncongruence."},{"statement":"(y0 : actid) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe y0 y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) : coherence Gf.","conclusion":"coherence Gf","hypotheses":"(y0 : actid) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe y0 y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread)","proofString":"apply IMMCON."},{"statement":"(y0 : actid) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe y0 y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) : same_tid y0 y.","conclusion":"same_tid y0 y","hypotheses":"(y0 : actid) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe y0 y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread)","proofString":"congruence."},{"statement":"(x y0 : actid) (H : Fsb x y0) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe x y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) : False.","conclusion":"False","hypotheses":"(x y0 : actid) (H : Fsb x y0) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe x y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread)","proofString":"cdes IMMCON.\neapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence."},{"statement":"(x y0 : actid) (H : Fsb x y0) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe x y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : False.","conclusion":"False","hypotheses":"(x y0 : actid) (H : Fsb x y0) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe x y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"eapply (thread_rfe_sb WF (coherence_sc_per_loc Cint)).\nunfold same_tid.\nunfolder.\nsplit; eauto.\ncongruence."},{"statement":"(x y0 : actid) (H : Fsb x y0) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe x y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : tid y = tid y0.","conclusion":"tid y = tid y0","hypotheses":"(x y0 : actid) (H : Fsb x y0) (H3 : tid y0 = thread) (H4 : S y0) (y : actid) (H0 : Frfe x y) (H1 : (E0 ∩₁ FE) y) (H2 : tid y = thread) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"congruence."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel Grfe ⊆₁ I.","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel Grfe ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_rmwD WF)).\nrewrite (dom_l (wf_rfeD rstWF)).\nclear.\ntype_solver."},{"statement":"dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel Grfe ⊆₁ I.","conclusion":"dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel Grfe ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_rfeD rstWF)).\nclear.\ntype_solver."},{"statement":"dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I.","conclusion":"dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I","hypotheses":"","proofString":"clear.\ntype_solver."},{"statement":"dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I.","conclusion":"dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ dom_rel (⦗W⦘ ⨾ Grfe) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel (Frfi ⨾ ⦗E⦘) ⊆₁ E.","conclusion":"dom_rel (Frfi ⨾ ⦗E⦘) ⊆₁ E","hypotheses":"","proofString":"rewrite E_E0; unfold E0.\nrewrite !id_union; relsf; unionL; splits.\ngeneralize dom_sb_covered; ie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_rfiD WF)) at 1; erewrite issuedW at 1; eauto.\ntype_solver.\ngeneralize (@sb_trans Gf); ie_unfolder.\nbasic_solver 21.\nrewrite (dom_l (wf_rfiD WF)) at 1.\nunionR left -> left -> right.\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"dom_rel\n  (Frfi\n   ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel\n  (Frfi\n   ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite !id_union; relsf; unionL; splits.\ngeneralize dom_sb_covered; ie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_rfiD WF)) at 1; erewrite issuedW at 1; eauto.\ntype_solver.\ngeneralize (@sb_trans Gf); ie_unfolder.\nbasic_solver 21.\nrewrite (dom_l (wf_rfiD WF)) at 1.\nunionR left -> left -> right.\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"dom_rel (Frfi ⨾ ⦗C⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frfi ⨾ ⦗C⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"generalize dom_sb_covered; ie_unfolder.\nbasic_solver 21."},{"statement":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel (Frf ∩ Fsb ⨾ ⦗C⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel (Frf ∩ Fsb ⨾ ⦗C⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (Frfi ⨾ ⦗I⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frfi ⨾ ⦗I⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (dom_r (wf_rfiD WF)) at 1; erewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel ((Frfi ⨾ ⦗FR⦘) ⨾ ⦗FW⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((Frfi ⨾ ⦗FR⦘) ⨾ ⦗FW⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel (Frfi ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frfi ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"generalize (@sb_trans Gf); ie_unfolder.\nbasic_solver 21."},{"statement":"transitive Fsb ->\ndom_rel (Frf ∩ Fsb ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"transitive Fsb ->\ndom_rel (Frf ∩ Fsb ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (Frfi ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frfi ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"rewrite (dom_l (wf_rfiD WF)) at 1.\nunionR left -> left -> right.\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"dom_rel ((⦗FW⦘ ⨾ Frfi) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel ((⦗FW⦘ ⨾ Frfi) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"unionR left -> left -> right.\nunfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"dom_rel ((⦗FW⦘ ⨾ Frfi) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗FW⦘ ⨾ Frfi) ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"unfolder.\nins.\ndesf.\neapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"forall x : actid,\n(exists y : actid,\n   is_w Flab x /\\\n   Frfi x y /\\\n   (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z)) ->\nI x.","conclusion":"forall x : actid,\n(exists y : actid,\n   is_w Flab x /\\\n   Frfi x y /\\\n   (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z)) ->\nI x","hypotheses":"","proofString":"ins.\ndesf.\neapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"(x : actid) (H : exists y : actid,\n  is_w Flab x /\\\n  Frfi x y /\\\n  (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z)) : I x.","conclusion":"I x","hypotheses":"(x : actid) (H : exists y : actid,\n  is_w Flab x /\\\n  Frfi x y /\\\n  (exists y0 z : actid, Frmw y z /\\ z = y0 /\\ tid z <> thread /\\ I z))","proofString":"desf.\neapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) : I x.","conclusion":"I x","hypotheses":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread)","proofString":"eapply rfrmw_I_in_I; eauto.\neexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) : dom_rel (Frf ⨾ Frmw ⨾ ⦗I⦘) x.","conclusion":"dom_rel (Frf ⨾ Frmw ⨾ ⦗I⦘) x","hypotheses":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread)","proofString":"eexists.\napply seqA.\napply seq_eqv_r.\nsplit; eauto.\neexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) : (Frf ⨾ Frmw) x y0.","conclusion":"(Frf ⨾ Frmw) x y0","hypotheses":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread)","proofString":"eexists.\nsplits; eauto.\nmatch goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread) : Frf x y.","conclusion":"Frf x y","hypotheses":"(x y : actid) (H : is_w Flab x) (H0 : Frfi x y) (y0 : actid) (H1 : Frmw y y0) (H4 : I y0) (H3 : tid y0 <> thread)","proofString":"match goal with  | H: Frfi _ _ |- _ => apply H  end."},{"statement":"Frfe ⨾ (Frmw ⨾ Frfi)＊ ⊆ (Frfe ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘.","conclusion":"Frfe ⨾ (Frmw ⨾ Frfi)＊ ⊆ (Frfe ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘","hypotheses":"","proofString":"apply codom_rel_helper.\nrewrite (dom_r (wf_rfiD WF)), (dom_r (wf_rfeD WF)).\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊) ⊆₁ R.","conclusion":"codom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊) ⊆₁ R","hypotheses":"","proofString":"rewrite (dom_r (wf_rfiD WF)), (dom_r (wf_rfeD WF)).\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi ⨾ ⦗FR⦘)＊) ⊆₁ R.","conclusion":"codom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi ⨾ ⦗FR⦘)＊) ⊆₁ R","hypotheses":"","proofString":"rewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi ⨾ ⦗FR⦘)⁺))\n⊆₁ R.","conclusion":"codom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi ⨾ ⦗FR⦘)⁺))\n⊆₁ R","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel\n  ((Frfe ⨾ ⦗FR⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ ((Frmw ⨾ Frfi) ⨾ ⦗FR⦘)⁺)) ⊆₁ R.","conclusion":"codom_rel\n  ((Frfe ⨾ ⦗FR⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ ((Frmw ⨾ Frfi) ⨾ ⦗FR⦘)⁺)) ⊆₁ R","hypotheses":"","proofString":"rewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi)⁺ ⨾ ⦗FR⦘))\n⊆₁ R.","conclusion":"codom_rel ((Frfe ⨾ ⦗FR⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi)⁺ ⨾ ⦗FR⦘))\n⊆₁ R","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite ((Frmw ⨾ Frfi)＊ ⊆ Fsb^?).\nrewrite rmw_in_sb, rfi_in_sb; auto.\ngeneralize (@sb_trans Gf).\nintros HH.\nby rewrite rewrite_trans, rt_of_trans.\narewrite (Fsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘ ⊆ ⦗C⦘ ⨾ Fsb^?).\ngeneralize dom_sb_covered.\nbasic_solver 20.\ngeneralize dom_rf_covered.\nie_unfolder.\nbasic_solver 21."},{"statement":"(Frmw ⨾ Frfi)＊ ⊆ Fsb^?.","conclusion":"(Frmw ⨾ Frfi)＊ ⊆ Fsb^?","hypotheses":"","proofString":"rewrite rmw_in_sb, rfi_in_sb; auto.\ngeneralize (@sb_trans Gf).\nintros HH.\nby rewrite rewrite_trans, rt_of_trans."},{"statement":"(Fsb ⨾ Fsb)＊ ⊆ Fsb^?.","conclusion":"(Fsb ⨾ Fsb)＊ ⊆ Fsb^?","hypotheses":"","proofString":"generalize (@sb_trans Gf).\nintros HH.\nby rewrite rewrite_trans, rt_of_trans."},{"statement":"transitive Fsb -> (Fsb ⨾ Fsb)＊ ⊆ Fsb^?.","conclusion":"transitive Fsb -> (Fsb ⨾ Fsb)＊ ⊆ Fsb^?","hypotheses":"","proofString":"intros HH.\nby rewrite rewrite_trans, rt_of_trans."},{"statement":"(HH : transitive Fsb) : (Fsb ⨾ Fsb)＊ ⊆ Fsb^?.","conclusion":"(Fsb ⨾ Fsb)＊ ⊆ Fsb^?","hypotheses":"(HH : transitive Fsb)","proofString":"by rewrite rewrite_trans, rt_of_trans."},{"statement":"dom_rel (Frfe ⨾ Fsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Fsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘ ⊆ ⦗C⦘ ⨾ Fsb^?).\ngeneralize dom_sb_covered.\nbasic_solver 20.\ngeneralize dom_rf_covered.\nie_unfolder.\nbasic_solver 21."},{"statement":"Fsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘ ⊆ ⦗C⦘ ⨾ Fsb^?.","conclusion":"Fsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘ ⊆ ⦗C⦘ ⨾ Fsb^?","hypotheses":"","proofString":"generalize dom_sb_covered.\nbasic_solver 20."},{"statement":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\nFsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘ ⊆ ⦗C⦘ ⨾ Fsb^?.","conclusion":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\nFsb^? ⨾ ⦗R⦘ ⨾ ⦗C ∩₁ FAcq⦘ ⊆ ⦗C⦘ ⨾ Fsb^?","hypotheses":"","proofString":"basic_solver 20."},{"statement":"dom_rel (Frfe ⨾ ⦗C⦘ ⨾ Fsb^?) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ⦗C⦘ ⨾ Fsb^?) ⊆₁ I","hypotheses":"","proofString":"generalize dom_rf_covered.\nie_unfolder.\nbasic_solver 21."},{"statement":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (rf G ⨾ ⦗covered T0⦘) ⊆₁ issued T0) ->\ndom_rel (Frfe ⨾ ⦗C⦘ ⨾ Fsb^?) ⊆₁ I.","conclusion":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (rf G ⨾ ⦗covered T0⦘) ⊆₁ issued T0) ->\ndom_rel (Frfe ⨾ ⦗C⦘ ⨾ Fsb^?) ⊆₁ I","hypotheses":"","proofString":"ie_unfolder.\nbasic_solver 21."},{"statement":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (rf G ⨾ ⦗covered T0⦘) ⊆₁ issued T0) ->\ndom_rel ((Frf \\ Fsb) ⨾ ⦗C⦘ ⨾ Fsb^?) ⊆₁ I.","conclusion":"(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (rf G ⨾ ⦗covered T0⦘) ⊆₁ issued T0) ->\ndom_rel ((Frf \\ Fsb) ⨾ ⦗C⦘ ⨾ Fsb^?) ⊆₁ I","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗I ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗I ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗FW ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗FW ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗fun _ : actid => True⦘\n       ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗fun _ : actid => True⦘\n       ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_id_l.\narewrite (dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq ⊆₁                 dom_rel (Frmw ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite rfe_in_rf, rfi_in_rf.\nrewrite !seqA.\nrewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel\n  (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite (dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq ⊆₁                 dom_rel (Frmw ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite rfe_in_rf, rfi_in_rf.\nrewrite !seqA.\nrewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq ⊆₁ dom_rel (Frmw ⨾ ⦗I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FAcq ⊆₁ dom_rel (Frmw ⨾ ⦗I⦘)","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗dom_rel (Frmw ⨾ ⦗I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗dom_rel (Frmw ⨾ ⦗I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite rfe_in_rf, rfi_in_rf.\nrewrite !seqA.\nrewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel ((Frfe ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗dom_rel (Frmw ⨾ ⦗I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel ((Frfe ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗dom_rel (Frmw ⨾ ⦗I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite rfe_in_rf, rfi_in_rf.\nrewrite !seqA.\nrewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel ((Frfe ⨾ (Frmw ⨾ Frfi)＊) ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((Frfe ⨾ (Frmw ⨾ Frfi)＊) ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite rfe_in_rf, rfi_in_rf.\nrewrite !seqA.\nrewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel ((Frf ⨾ (Frmw ⨾ Frf)＊) ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((Frf ⨾ (Frmw ⨾ Frf)＊) ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !seqA.\nrewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel (Frf ⨾ (Frmw ⨾ Frf)＊ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Frf ⨾ (Frmw ⨾ Frf)＊ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_rfD WF)) at 1.\nrewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel ((⦗FW⦘ ⨾ Frf) ⨾ (Frmw ⨾ Frf)＊ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗FW⦘ ⨾ Frf) ⨾ (Frmw ⨾ Frf)＊ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !seqA.\nseq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel (⦗FW⦘ ⨾ Frf ⨾ (Frmw ⨾ Frf)＊ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗FW⦘ ⨾ Frf ⨾ (Frmw ⨾ Frf)＊ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"seq_rewrite <- clos_trans_rotl.\narewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel (⦗FW⦘ ⨾ (Frf ⨾ Frmw)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗FW⦘ ⨾ (Frf ⨾ Frmw)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Frf ⨾ Frmw ⊆ Far ∪ Frf ⨾ Frmw).\neapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel (⦗FW⦘ ⨾ (Far ∪ Frf ⨾ Frmw)⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗FW⦘ ⨾ (Far ∪ Frf ⨾ Frmw)⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"eapply ar_rfrmw_ct_I_in_I; eauto."},{"statement":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ ⦗dom_rel ((⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘)\n          ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ ⦗dom_rel ((⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘)\n          ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_union_l, seq_id_l, dom_union.\nrewrite set_inter_union_l.\nrewrite id_union.\nrewrite !seq_union_r, dom_union.\nrewrite (dom_r (wf_rfeD WF)).\nunionL.\nrewrite (reservedW WF ); eauto.\ntype_solver.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ ⦗(dom_rel ⦗Tid_ thread ∩₁ S⦘ ∪₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘))\n          ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ ⦗(dom_rel ⦗Tid_ thread ∩₁ S⦘ ∪₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘))\n          ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite set_inter_union_l.\nrewrite id_union.\nrewrite !seq_union_r, dom_union.\nrewrite (dom_r (wf_rfeD WF)).\nunionL.\nrewrite (reservedW WF ); eauto.\ntype_solver.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq\n          ∪₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq\n          ∪₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite id_union.\nrewrite !seq_union_r, dom_union.\nrewrite (dom_r (wf_rfeD WF)).\nunionL.\nrewrite (reservedW WF ); eauto.\ntype_solver.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ (⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘\n          ∪ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)) ⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ (Frmw ⨾ Frfi)＊\n     ⨾ ⦗R⦘\n       ⨾ (⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘\n          ∪ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)) ⊆₁ I","hypotheses":"","proofString":"rewrite !seq_union_r, dom_union.\nrewrite (dom_r (wf_rfeD WF)).\nunionL.\nrewrite (reservedW WF ); eauto.\ntype_solver.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘)\n∪₁ dom_rel\n     (Frfe\n      ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)\n⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘)\n∪₁ dom_rel\n     (Frfe\n      ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (dom_r (wf_rfeD WF)).\nunionL.\nrewrite (reservedW WF ); eauto.\ntype_solver.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘)\n∪₁ dom_rel\n     ((Frfe ⨾ ⦗FR⦘)\n      ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘)\n∪₁ dom_rel\n     ((Frfe ⨾ ⦗FR⦘)\n      ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)\n⊆₁ I","hypotheses":"","proofString":"unionL.\nrewrite (reservedW WF ); eauto.\ntype_solver.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ S⦘ ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (reservedW WF ); eauto.\ntype_solver."},{"statement":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ FW⦘ ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel ⦗Tid_ thread ∩₁ FW⦘ ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ FAcq⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗FAcq ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗FAcq ∩₁ dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗FAcq⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  ((Frfe ⨾ ⦗FR⦘)\n   ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗R⦘ ⨾ ⦗FAcq⦘ ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ ⦗dom_rel (Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\ngeneralize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"generalize (rcoh_dr_R_acq_I RCOH).\nunfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I ->\ndom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I ->\ndom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"unfold issued.\nsimpls.\nbasic_solver 40."},{"statement":"dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ->\ndom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ->\ndom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗R⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"simpls.\nbasic_solver 40."},{"statement":"dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ->\ndom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗FR⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘)\n⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue) ->\ndom_rel\n  (((((Frfe ⨾ ⦗FR⦘) ⨾ (Frmw ⨾ Frfi)＊) ⨾ ⦗FR⦘) ⨾ ⦗FAcq⦘)\n   ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"basic_solver 40."},{"statement":"dom_rel (Frfe ⨾ (Grmw ⨾ Frfi)＊ ⨾ ⦗E ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ (Grmw ⨾ Frfi)＊ ⨾ ⦗E ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rmw_in SUB).\napply rfe_rmwrfi_rt_Acq_E."},{"statement":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗E ∩₁ FAcq⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗E ∩₁ FAcq⦘) ⊆₁ I","hypotheses":"","proofString":"apply rfe_rmwrfi_rt_Acq_E."},{"statement":"dom_rel (Frfe ⨾ ⦗E ∩₁ FAcq⦘) ⊆₁ dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗E ∩₁ FAcq⦘).","conclusion":"dom_rel (Frfe ⨾ ⦗E ∩₁ FAcq⦘) ⊆₁ dom_rel (Frfe ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗E ∩₁ FAcq⦘)","hypotheses":"","proofString":"rewrite rtE.\nbasic_solver 10."},{"statement":"dom_rel (Frfe ⨾ ⦗E ∩₁ FAcq⦘)\n⊆₁ dom_rel (Frfe ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi)⁺) ⨾ ⦗E ∩₁ FAcq⦘).","conclusion":"dom_rel (Frfe ⨾ ⦗E ∩₁ FAcq⦘)\n⊆₁ dom_rel (Frfe ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi)⁺) ⨾ ⦗E ∩₁ FAcq⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I","hypotheses":"","proofString":"generalize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 21."},{"statement":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I ->\ndom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C -> dom_rel (Frfe ⨾ Fsb ⨾ ⦗C ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I.","conclusion":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I ->\ndom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C -> dom_rel (Frfe ⨾ Fsb ⨾ ⦗C ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I","hypotheses":"","proofString":"ie_unfolder; basic_solver 21."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗I ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗I ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗FW ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗FW ∩₁ FF ∩₁ FAcq/Rel⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel\n  (Frfe\n   ⨾ Fsb ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FF ∩₁ FAcq/Rel⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe\n   ⨾ Fsb ⨾ ⦗dom_rel ((⦗FR⦘ ⨾ Frmw) ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ FF ∩₁ FAcq/Rel⦘)\n⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel\n  (Frfe ⨾ Fsb ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ (FF ∩₁ FAcq/Rel)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Fsb ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ (FF ∩₁ FAcq/Rel)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel\n  (Frfe ⨾ Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Fsb ⨾ ⦗FF ∩₁ FAcq/Rel ∩₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel\n  (Frfe ⨾ Fsb ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Fsb ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel\n  (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel\n  (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘)\n   ⨾ (⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘)\n   ⨾ (⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel\n  (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘)\n   ⨾ (⦗Tid_ thread ∩₁ S⦘ ∪ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)) ⊆₁ I.","conclusion":"dom_rel\n  (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘)\n   ⨾ (⦗Tid_ thread ∩₁ S⦘ ∪ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)) ⊆₁ I","hypotheses":"","proofString":"rewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I.","conclusion":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I","hypotheses":"","proofString":"unionL.\nerewrite reservedW; eauto.\ntype_solver.\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite reservedW; eauto.\ntype_solver."},{"statement":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗Tid_ thread ∩₁ FW⦘) ⊆₁ I.","conclusion":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ ⦗Tid_ thread ∩₁ FW⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel (((Frfe ⨾ Fsb) ⨾ ⦗FF ∩₁ FAcq/Rel⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nsin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"","proofString":"sin_rewrite (dom_rel_helper (rcoh_F_sb_S RCOH)).\nsimpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"","proofString":"simpls.\ngeneralize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"","proofString":"generalize (dom_rf_covered WF TCOH ICOH) (dom_sb_covered WF TCOH ICOH).\nie_unfolder; basic_solver 40."},{"statement":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I ->\ndom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C ->\ndom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I ->\ndom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C ->\ndom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"","proofString":"ie_unfolder; basic_solver 40."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FAcq⦘)\n⊆₁ dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FAcq/Rel⦘).","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FAcq⦘)\n⊆₁ dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FAcq/Rel⦘)","hypotheses":"","proofString":"unfolder; ins; desf; eexists; eexists; splits; eauto; mode_solver 21."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FRel⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FRel⦘) ⊆₁ I","hypotheses":"","proofString":"etransitivity; [|apply rfe_sb_F_E].\nunfolder; ins; desf; eexists; eexists; splits; eauto; mode_solver 21."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FRel⦘)\n⊆₁ dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FAcq/Rel⦘).","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FRel⦘)\n⊆₁ dom_rel (Frfe ⨾ Fsb ⨾ ⦗E ∩₁ FF ∩₁ FAcq/Rel⦘)","hypotheses":"","proofString":"unfolder; ins; desf; eexists; eexists; splits; eauto; mode_solver 21."},{"statement":"Frf ⨾ ⦗C⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘.","conclusion":"Frf ⨾ ⦗C⦘ ⊆ ⦗I⦘ ⨾ ⦗E⦘ ⨾ Frf ⨾ ⦗E⦘","hypotheses":"","proofString":"rewrite <- I_in_E at 1.\nrewrite <- C_in_E at 1.\ngeneralize (dom_rf_covered WF TCOH ICOH); basic_solver 21."},{"statement":"Frf ⨾ ⦗C⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘ ⨾ Frf ⨾ ⦗E⦘.","conclusion":"Frf ⨾ ⦗C⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘ ⨾ Frf ⨾ ⦗E⦘","hypotheses":"","proofString":"rewrite <- C_in_E at 1.\ngeneralize (dom_rf_covered WF TCOH ICOH); basic_solver 21."},{"statement":"Frf ⨾ ⦗C⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘ ⨾ Frf ⨾ ⦗C⦘.","conclusion":"Frf ⨾ ⦗C⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘ ⨾ Frf ⨾ ⦗C⦘","hypotheses":"","proofString":"generalize (dom_rf_covered WF TCOH ICOH); basic_solver 21."},{"statement":"Frelease ⨾ Frf ⨾ (Fsb ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘ ⨾ ⦗C⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"Frelease ⨾ Frf ⨾ (Fsb ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘ ⨾ ⦗C⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite ((Fsb ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘).\nby generalize (dom_sb_covered WF TCOH ICOH) C_in_E; basic_solver 21.\nsin_rewrite rf_C.\nrewrite !seqA.\nsin_rewrite release_I.\nseq_rewrite <- (sub_sb SUB).\nby rewrite !seqA."},{"statement":"(Fsb ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘.","conclusion":"(Fsb ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘","hypotheses":"","proofString":"by generalize (dom_sb_covered WF TCOH ICOH) C_in_E; basic_solver 21."},{"statement":"Frelease ⨾ Frf ⨾ ⦗C⦘ ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"Frelease ⨾ Frf ⨾ ⦗C⦘ ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"sin_rewrite rf_C.\nrewrite !seqA.\nsin_rewrite release_I.\nseq_rewrite <- (sub_sb SUB).\nby rewrite !seqA."},{"statement":"Frelease ⨾ (⦗I⦘ ⨾ Grf) ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"Frelease ⨾ (⦗I⦘ ⨾ Grf) ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite !seqA.\nsin_rewrite release_I.\nseq_rewrite <- (sub_sb SUB).\nby rewrite !seqA."},{"statement":"Frelease ⨾ ⦗I⦘ ⨾ Grf ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"Frelease ⨾ ⦗I⦘ ⨾ Grf ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"sin_rewrite release_I.\nseq_rewrite <- (sub_sb SUB).\nby rewrite !seqA."},{"statement":"(⦗C⦘ ⨾ Grelease) ⨾ Grf ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"(⦗C⦘ ⨾ Grelease) ⨾ Grf ⨾ (⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"seq_rewrite <- (sub_sb SUB).\nby rewrite !seqA."},{"statement":"(⦗C⦘ ⨾ Grelease) ⨾ Grf ⨾ (Gsb ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"(⦗C⦘ ⨾ Grelease) ⨾ Grf ⨾ (Gsb ⨾ ⦗FF⦘)^? ⨾ ⦗FAcq⦘\n⊆ ⦗C⦘ ⨾ Grelease ⨾ Grf ⨾ (Gsb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"by rewrite !seqA."},{"statement":"Fsb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘.","conclusion":"Fsb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗E⦘ ⨾ Fsb ⨾ ⦗E⦘","hypotheses":"","proofString":"rewrite <- C_in_E.\ngeneralize (dom_sb_covered WF TCOH ICOH); basic_solver 21."},{"statement":"Fsb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗C⦘ ⨾ Fsb ⨾ ⦗C⦘.","conclusion":"Fsb ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗C⦘ ⨾ Fsb ⨾ ⦗C⦘","hypotheses":"","proofString":"generalize (dom_sb_covered WF TCOH ICOH); basic_solver 21."},{"statement":"(Fsb ∪ Fsw)⁺ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"(Fsb ∪ Fsw)⁺ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"","proofString":"apply ct_ind_left with (P:= fun r => r ⨾ ⦗C⦘).\neauto with hahn.\nrewrite <- ct_step.\nby relsf; rewrite sb_C, sw_C.\nintros k H; rewrite !seqA; sin_rewrite H.\nrelsf; sin_rewrite sb_C; sin_rewrite sw_C.\nrewrite !seqA.\narewrite (Gsb ⊆ (Gsb ∪ Gsw)＊) at 1.\narewrite (Gsw ⊆ (Gsb ∪ Gsw)＊) at 3.\nrelsf."},{"statement":"good_ctx (fun r : relation actid => r ⨾ ⦗C⦘).","conclusion":"good_ctx (fun r : relation actid => r ⨾ ⦗C⦘)","hypotheses":"","proofString":"eauto with hahn."},{"statement":"(Fsb ∪ Fsw) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"(Fsb ∪ Fsw) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"","proofString":"rewrite <- ct_step.\nby relsf; rewrite sb_C, sw_C."},{"statement":"(Fsb ∪ Fsw) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw).","conclusion":"(Fsb ∪ Fsw) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)","hypotheses":"","proofString":"by relsf; rewrite sb_C, sw_C."},{"statement":"forall k : relation actid,\nk ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺ -> ((Fsb ∪ Fsw) ⨾ k) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"forall k : relation actid,\nk ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺ -> ((Fsb ∪ Fsw) ⨾ k) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"","proofString":"intros k H; rewrite !seqA; sin_rewrite H.\nrelsf; sin_rewrite sb_C; sin_rewrite sw_C.\nrewrite !seqA.\narewrite (Gsb ⊆ (Gsb ∪ Gsw)＊) at 1.\narewrite (Gsw ⊆ (Gsb ∪ Gsw)＊) at 3.\nrelsf."},{"statement":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺) : (Fsb ∪ Fsw) ⨾ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"(Fsb ∪ Fsw) ⨾ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺)","proofString":"relsf; sin_rewrite sb_C; sin_rewrite sw_C.\nrewrite !seqA.\narewrite (Gsb ⊆ (Gsb ∪ Gsw)＊) at 1.\narewrite (Gsw ⊆ (Gsb ∪ Gsw)＊) at 3.\nrelsf."},{"statement":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺) : (⦗C⦘ ⨾ Gsb) ⨾ (Gsb ∪ Gsw)⁺ ∪ (⦗C⦘ ⨾ Gsw) ⨾ (Gsb ∪ Gsw)⁺ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"(⦗C⦘ ⨾ Gsb) ⨾ (Gsb ∪ Gsw)⁺ ∪ (⦗C⦘ ⨾ Gsw) ⨾ (Gsb ∪ Gsw)⁺ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺)","proofString":"rewrite !seqA.\narewrite (Gsb ⊆ (Gsb ∪ Gsw)＊) at 1.\narewrite (Gsw ⊆ (Gsb ∪ Gsw)＊) at 3.\nrelsf."},{"statement":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺) : ⦗C⦘ ⨾ Gsb ⨾ (Gsb ∪ Gsw)⁺ ∪ ⦗C⦘ ⨾ Gsw ⨾ (Gsb ∪ Gsw)⁺ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"⦗C⦘ ⨾ Gsb ⨾ (Gsb ∪ Gsw)⁺ ∪ ⦗C⦘ ⨾ Gsw ⨾ (Gsb ∪ Gsw)⁺ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺)","proofString":"arewrite (Gsb ⊆ (Gsb ∪ Gsw)＊) at 1.\narewrite (Gsw ⊆ (Gsb ∪ Gsw)＊) at 3.\nrelsf."},{"statement":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺) : ⦗C⦘ ⨾ (Gsb ∪ Gsw)＊ ⨾ (Gsb ∪ Gsw)⁺ ∪ ⦗C⦘ ⨾ Gsw ⨾ (Gsb ∪ Gsw)⁺\n⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"⦗C⦘ ⨾ (Gsb ∪ Gsw)＊ ⨾ (Gsb ∪ Gsw)⁺ ∪ ⦗C⦘ ⨾ Gsw ⨾ (Gsb ∪ Gsw)⁺\n⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺)","proofString":"arewrite (Gsw ⊆ (Gsb ∪ Gsw)＊) at 3.\nrelsf."},{"statement":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺) : ⦗C⦘ ⨾ (Gsb ∪ Gsw)＊ ⨾ (Gsb ∪ Gsw)⁺ ∪ ⦗C⦘ ⨾ (Gsb ∪ Gsw)＊ ⨾ (Gsb ∪ Gsw)⁺\n⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺.","conclusion":"⦗C⦘ ⨾ (Gsb ∪ Gsw)＊ ⨾ (Gsb ∪ Gsw)⁺ ∪ ⦗C⦘ ⨾ (Gsb ∪ Gsw)＊ ⨾ (Gsb ∪ Gsw)⁺\n⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺","hypotheses":"(k : relation actid) (H : k ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Gsb ∪ Gsw)⁺)","proofString":"relsf."},{"statement":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ rst_sc.","conclusion":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ rst_sc","hypotheses":"","proofString":"unfold rst_sc.\nrewrite <- E_E0.\nrewrite <- C_in_E.\ncut (dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C).\nbasic_solver 21.\neapply dom_sc_covered; eauto."},{"statement":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗E0⦘ ⨾ sc ⨾ ⦗E0⦘.","conclusion":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗E0⦘ ⨾ sc ⨾ ⦗E0⦘","hypotheses":"","proofString":"rewrite <- E_E0.\nrewrite <- C_in_E.\ncut (dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C).\nbasic_solver 21.\neapply dom_sc_covered; eauto."},{"statement":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗E⦘ ⨾ sc ⨾ ⦗E⦘.","conclusion":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗E⦘ ⨾ sc ⨾ ⦗E⦘","hypotheses":"","proofString":"rewrite <- C_in_E.\ncut (dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C).\nbasic_solver 21.\neapply dom_sc_covered; eauto."},{"statement":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗C⦘ ⨾ sc ⨾ ⦗C⦘.","conclusion":"sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗C⦘ ⨾ sc ⨾ ⦗C⦘","hypotheses":"","proofString":"cut (dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C).\nbasic_solver 21.\neapply dom_sc_covered; eauto."},{"statement":"dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C -> sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗C⦘ ⨾ sc ⨾ ⦗C⦘.","conclusion":"dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C -> sc ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗C⦘ ⨾ sc ⨾ ⦗C⦘","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C.","conclusion":"dom_rel (sc ⨾ ⦗C⦘) ⊆₁ C","hypotheses":"","proofString":"eapply dom_sc_covered; eauto."},{"statement":"(l : location) : (Gurr l ⨾ Grelease) ⨾ ⦗I⦘ ≡ (Furr l ⨾ Frelease) ⨾ ⦗I⦘.","conclusion":"(Gurr l ⨾ Grelease) ⨾ ⦗I⦘ ≡ (Furr l ⨾ Frelease) ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"split.\nby rewrite (sub_urr_in SUB), (sub_release_in SUB).\narewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘) at 1.\nby basic_solver.\nsin_rewrite release_I.\nrewrite !seqA.\nsin_rewrite urr_C.\nbasic_solver."},{"statement":"(l : location) : (Gurr l ⨾ Grelease) ⨾ ⦗I⦘ ⊆ (Furr l ⨾ Frelease) ⨾ ⦗I⦘.","conclusion":"(Gurr l ⨾ Grelease) ⨾ ⦗I⦘ ⊆ (Furr l ⨾ Frelease) ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"by rewrite (sub_urr_in SUB), (sub_release_in SUB)."},{"statement":"(l : location) : (Furr l ⨾ Frelease) ⨾ ⦗I⦘ ⊆ (Gurr l ⨾ Grelease) ⨾ ⦗I⦘.","conclusion":"(Furr l ⨾ Frelease) ⨾ ⦗I⦘ ⊆ (Gurr l ⨾ Grelease) ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"arewrite (⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘) at 1.\nby basic_solver.\nsin_rewrite release_I.\nrewrite !seqA.\nsin_rewrite urr_C.\nbasic_solver."},{"statement":"(l : location) : ⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘.","conclusion":"⦗I⦘ ⊆ ⦗I⦘ ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"by basic_solver."},{"statement":"(l : location) : Furr l ⨾ Frelease ⨾ ⦗I⦘ ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘.","conclusion":"Furr l ⨾ Frelease ⨾ ⦗I⦘ ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"sin_rewrite release_I.\nrewrite !seqA.\nsin_rewrite urr_C.\nbasic_solver."},{"statement":"(l : location) : Furr l ⨾ (⦗C⦘ ⨾ Grelease) ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘.","conclusion":"Furr l ⨾ (⦗C⦘ ⨾ Grelease) ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"rewrite !seqA.\nsin_rewrite urr_C.\nbasic_solver."},{"statement":"(l : location) : Furr l ⨾ ⦗C⦘ ⨾ Grelease ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘.","conclusion":"Furr l ⨾ ⦗C⦘ ⨾ Grelease ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"sin_rewrite urr_C.\nbasic_solver."},{"statement":"(l : location) : (⦗I⦘ ⨾ Gurr l) ⨾ Grelease ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘.","conclusion":"(⦗I⦘ ⨾ Gurr l) ⨾ Grelease ⨾ ⦗I⦘ ⊆ Gurr l ⨾ Grelease ⨾ ⦗I⦘","hypotheses":"(l : location)","proofString":"basic_solver."},{"statement":"(l : location) : dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n≡₁ dom_rel (Furr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n≡₁ dom_rel (Furr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"split.\nrewrite (sub_urr_in SUB); basic_solver 12.\narewrite (⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).\nbasic_solver.\nsin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Furr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Furr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"rewrite (sub_urr_in SUB); basic_solver 12."},{"statement":"(l : location) : dom_rel (Furr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Furr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"arewrite (⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).\nbasic_solver.\nsin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l : location) : ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘.","conclusion":"⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘","hypotheses":"(l : location)","proofString":"basic_solver."},{"statement":"(l : location) : dom_rel (Furr l ⨾ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Furr l ⨾ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"sin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l : location) : dom_rel ((⦗I⦘ ⨾ Gurr l) ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel ((⦗I⦘ ⨾ Gurr l) ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"basic_solver 21."},{"statement":"(l l' : location) : dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n≡₁ dom_rel (Furr l ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n≡₁ dom_rel (Furr l ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l l' : location)","proofString":"split.\nrewrite (sub_urr_in SUB); basic_solver 12.\narewrite (⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).\nbasic_solver.\nsin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l l' : location) : dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Furr l ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Furr l ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l l' : location)","proofString":"rewrite (sub_urr_in SUB); basic_solver 12."},{"statement":"(l l' : location) : dom_rel (Furr l ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Furr l ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l l' : location)","proofString":"arewrite (⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).\nbasic_solver.\nsin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l l' : location) : ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘\n⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘.","conclusion":"⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘\n⊆ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘","hypotheses":"(l l' : location)","proofString":"basic_solver."},{"statement":"(l l' : location) : dom_rel\n  (Furr l ⨾ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel\n  (Furr l ⨾ ⦗C⦘ ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l l' : location)","proofString":"sin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l l' : location) : dom_rel\n  ((⦗I⦘ ⨾ Gurr l) ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel\n  ((⦗I⦘ ⨾ Gurr l) ⨾ ⦗FRel⦘ ⨾ ⦗FW_ l' ∪₁ FF⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ ⦗Rel⦘ ⨾ ⦗W_ l' ∪₁ F⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l l' : location)","proofString":"basic_solver 21."},{"statement":"(l : location) : dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n≡₁ dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n≡₁ dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"split.\nrewrite (sub_urr_in SUB), (sub_release_in SUB), (sub_rf_in SUB) ; basic_solver 12.\narewrite (⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).\nbasic_solver.\narewrite ((Frelease ⨾ Frf)^? ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^? ).\ncase_refl _; [basic_solver|].\nrewrite !seqA.\nsin_rewrite rf_C.\nsin_rewrite release_I.\nbasic_solver 12.\nsin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l : location) : dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"rewrite (sub_urr_in SUB), (sub_release_in SUB), (sub_rf_in SUB) ; basic_solver 12."},{"statement":"(l : location) : dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"arewrite (⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).\nbasic_solver.\narewrite ((Frelease ⨾ Frf)^? ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^? ).\ncase_refl _; [basic_solver|].\nrewrite !seqA.\nsin_rewrite rf_C.\nsin_rewrite release_I.\nbasic_solver 12.\nsin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l : location) : ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘.","conclusion":"⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘","hypotheses":"(l : location)","proofString":"basic_solver."},{"statement":"(l : location) : dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Furr l ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗C⦘ ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"arewrite ((Frelease ⨾ Frf)^? ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^? ).\ncase_refl _; [basic_solver|].\nrewrite !seqA.\nsin_rewrite rf_C.\nsin_rewrite release_I.\nbasic_solver 12.\nsin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l : location) : (Frelease ⨾ Frf)^? ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?.","conclusion":"(Frelease ⨾ Frf)^? ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?","hypotheses":"(l : location)","proofString":"case_refl _; [basic_solver|].\nrewrite !seqA.\nsin_rewrite rf_C.\nsin_rewrite release_I.\nbasic_solver 12."},{"statement":"(l : location) : (Frelease ⨾ Frf) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?.","conclusion":"(Frelease ⨾ Frf) ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?","hypotheses":"(l : location)","proofString":"rewrite !seqA.\nsin_rewrite rf_C.\nsin_rewrite release_I.\nbasic_solver 12."},{"statement":"(l : location) : Frelease ⨾ Frf ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?.","conclusion":"Frelease ⨾ Frf ⨾ ⦗C⦘ ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?","hypotheses":"(l : location)","proofString":"sin_rewrite rf_C.\nsin_rewrite release_I.\nbasic_solver 12."},{"statement":"(l : location) : Frelease ⨾ ⦗I⦘ ⨾ Grf ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?.","conclusion":"Frelease ⨾ ⦗I⦘ ⨾ Grf ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?","hypotheses":"(l : location)","proofString":"sin_rewrite release_I.\nbasic_solver 12."},{"statement":"(l : location) : (⦗C⦘ ⨾ Grelease) ⨾ Grf ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?.","conclusion":"(⦗C⦘ ⨾ Grelease) ⨾ Grf ⊆ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^?","hypotheses":"(l : location)","proofString":"basic_solver 12."},{"statement":"(l : location) : dom_rel (Furr l ⨾ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel (Furr l ⨾ ⦗C⦘ ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"sin_rewrite (@urr_C l).\nbasic_solver 21."},{"statement":"(l : location) : dom_rel ((⦗I⦘ ⨾ Gurr l) ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘).","conclusion":"dom_rel ((⦗I⦘ ⨾ Gurr l) ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)\n⊆₁ dom_rel (Gurr l ⨾ (Grelease ⨾ Grf)^? ⨾ ⦗Tid_ thread ∪₁ Init⦘ ⨾ ⦗C⦘)","hypotheses":"(l : location)","proofString":"basic_solver 21."},{"statement":"Init ∩₁ FE ⊆₁ E.","conclusion":"Init ∩₁ FE ⊆₁ E","hypotheses":"","proofString":"apply INIT."},{"statement":"I ∪₁ E ∩₁ W ∩₁ Tid_ thread ≡₁ E ∩₁ W.","conclusion":"I ∪₁ E ∩₁ W ∩₁ Tid_ thread ≡₁ E ∩₁ W","hypotheses":"","proofString":"split.\narewrite (I  ⊆₁ W ∩₁ E); [| basic_solver].\ngeneralize I_in_E issuedW; basic_solver.\nunfolder; ins; desf.\ndestruct (classic (tid x = thread)); eauto.\napply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\ngeneralize w_covered_issued; basic_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"I ∪₁ E ∩₁ W ∩₁ Tid_ thread ⊆₁ E ∩₁ W.","conclusion":"I ∪₁ E ∩₁ W ∩₁ Tid_ thread ⊆₁ E ∩₁ W","hypotheses":"","proofString":"arewrite (I  ⊆₁ W ∩₁ E); [| basic_solver].\ngeneralize I_in_E issuedW; basic_solver."},{"statement":"I ⊆₁ W ∩₁ E.","conclusion":"I ⊆₁ W ∩₁ E","hypotheses":"","proofString":"generalize I_in_E issuedW; basic_solver."},{"statement":"E ∩₁ W ⊆₁ I ∪₁ E ∩₁ W ∩₁ Tid_ thread.","conclusion":"E ∩₁ W ⊆₁ I ∪₁ E ∩₁ W ∩₁ Tid_ thread","hypotheses":"","proofString":"unfolder; ins; desf.\ndestruct (classic (tid x = thread)); eauto.\napply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\ngeneralize w_covered_issued; basic_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_w Flab x) : I x \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread.","conclusion":"I x \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_w Flab x)","proofString":"destruct (classic (tid x = thread)); eauto.\napply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\ngeneralize w_covered_issued; basic_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_w Flab x) (H1 : tid x <> thread) : I x \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread.","conclusion":"I x \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_w Flab x) (H1 : tid x <> thread)","proofString":"apply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\ngeneralize w_covered_issued; basic_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : E0 x) (H0 : is_w Flab x) (H1 : tid x <> thread) : I x \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread.","conclusion":"I x \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread","hypotheses":"(x : actid) (H : E0 x) (H0 : is_w Flab x) (H1 : tid x <> thread)","proofString":"unfold E0 in *.\nunfolder in *; desf; eauto.\ngeneralize w_covered_issued; basic_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) x) (H0 : is_w Flab x) (H1 : tid x <> thread) : I x \\/\n(((C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ FE) x /\\ true) /\\\ntid x = thread.","conclusion":"I x \\/\n(((C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ FE) x /\\ true) /\\\ntid x = thread","hypotheses":"(x : actid) (H : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) x) (H0 : is_w Flab x) (H1 : tid x <> thread)","proofString":"unfolder in *; desf; eauto.\ngeneralize w_covered_issued; basic_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : C x) (H0 : is_w Flab x) (H1 : tid x <> thread) : I x \\/\n(((((C x \\/ I x) \\/\n    (exists y z : actid, (x = z \\/ Fsb x z) /\\ z = y /\\ tid z = thread /\\ S z)) \\/\n   (exists y z : actid, Frmw x z /\\ z = y /\\ tid z <> thread /\\ I z)) /\\ \n  FE x) /\\ true) /\\ tid x = thread.","conclusion":"I x \\/\n(((((C x \\/ I x) \\/\n    (exists y z : actid, (x = z \\/ Fsb x z) /\\ z = y /\\ tid z = thread /\\ S z)) \\/\n   (exists y z : actid, Frmw x z /\\ z = y /\\ tid z <> thread /\\ I z)) /\\ \n  FE x) /\\ true) /\\ tid x = thread","hypotheses":"(x : actid) (H : C x) (H0 : is_w Flab x) (H1 : tid x <> thread)","proofString":"generalize w_covered_issued; basic_solver."},{"statement":"(x y : actid) (H : Fsb x y) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) : I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = tid y /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> tid y /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = tid y.","conclusion":"I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = tid y /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> tid y /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = tid y","hypotheses":"(x y : actid) (H : Fsb x y) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y)","proofString":"apply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : Fsb x y) : I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = tid y /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> tid y /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = tid y.","conclusion":"I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = tid y /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> tid y /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = tid y","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : Fsb x y)","proofString":"apply sb_tid_init in H2; desf.\nleft.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x) : I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = tid y /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> tid y /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = tid y.","conclusion":"I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = tid y /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> tid y /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = tid y","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x)","proofString":"left.\neapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x) : I x.","conclusion":"I x","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x)","proofString":"eapply w_covered_issued; eauto.\nunfolder.\nsplits; eauto.\neapply init_covered; vauto."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x) : (FW ∩₁ C) x.","conclusion":"(FW ∩₁ C) x","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x)","proofString":"unfolder.\nsplits; eauto.\neapply init_covered; vauto."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x) : is_w Flab x /\\ C x.","conclusion":"is_w Flab x /\\ C x","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x)","proofString":"splits; eauto.\neapply init_covered; vauto."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x) : C x.","conclusion":"C x","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_w Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x)","proofString":"eapply init_covered; vauto."},{"statement":"(x y : actid) (H : Frmw x y) (H4 : I y) (H3 : tid y <> thread) (H0 : is_w Flab x) (H1 : tid x <> thread) : I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = thread /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> thread /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = thread.","conclusion":"I x \\/\n(((((C x \\/ I x) \\/\n    (exists y0 z : actid,\n       (x = z \\/ Fsb x z) /\\ z = y0 /\\ tid z = thread /\\ S z)) \\/\n   (exists y0 z : actid, Frmw x z /\\ z = y0 /\\ tid z <> thread /\\ I z)) /\\\n  FE x) /\\ true) /\\ tid x = thread","hypotheses":"(x y : actid) (H : Frmw x y) (H4 : I y) (H3 : tid y <> thread) (H0 : is_w Flab x) (H1 : tid x <> thread)","proofString":"apply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"C ∩₁ F ∪₁ E ∩₁ F ∩₁ Tid_ thread ≡₁ E ∩₁ F.","conclusion":"C ∩₁ F ∪₁ E ∩₁ F ∩₁ Tid_ thread ≡₁ E ∩₁ F","hypotheses":"","proofString":"split.\nrewrite C_in_E; basic_solver.\nunfolder; ins; desf.\ndestruct (classic (tid x = thread)); eauto.\nleft.\napply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\neapply issuedW in H; eauto; type_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"C ∩₁ F ∪₁ E ∩₁ F ∩₁ Tid_ thread ⊆₁ E ∩₁ F.","conclusion":"C ∩₁ F ∪₁ E ∩₁ F ∩₁ Tid_ thread ⊆₁ E ∩₁ F","hypotheses":"","proofString":"rewrite C_in_E; basic_solver."},{"statement":"E ∩₁ F ⊆₁ C ∩₁ F ∪₁ E ∩₁ F ∩₁ Tid_ thread.","conclusion":"E ∩₁ F ⊆₁ C ∩₁ F ∪₁ E ∩₁ F ∩₁ Tid_ thread","hypotheses":"","proofString":"unfolder; ins; desf.\ndestruct (classic (tid x = thread)); eauto.\nleft.\napply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\neapply issuedW in H; eauto; type_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_f Flab x) : C x /\\ true \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread.","conclusion":"C x /\\ true \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_f Flab x)","proofString":"destruct (classic (tid x = thread)); eauto.\nleft.\napply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\neapply issuedW in H; eauto; type_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_f Flab x) (H1 : tid x <> thread) : C x /\\ true \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread.","conclusion":"C x /\\ true \\/ ((E0 ∩₁ FE) x /\\ true) /\\ tid x = thread","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_f Flab x) (H1 : tid x <> thread)","proofString":"left.\napply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\neapply issuedW in H; eauto; type_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_f Flab x) (H1 : tid x <> thread) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H0 : is_f Flab x) (H1 : tid x <> thread)","proofString":"apply E_E0 in H.\nunfold E0 in *.\nunfolder in *; desf; eauto.\neapply issuedW in H; eauto; type_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : E0 x) (H0 : is_f Flab x) (H1 : tid x <> thread) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x : actid) (H : E0 x) (H0 : is_f Flab x) (H1 : tid x <> thread)","proofString":"unfold E0 in *.\nunfolder in *; desf; eauto.\neapply issuedW in H; eauto; type_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) x) (H0 : is_f Flab x) (H1 : tid x <> thread) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x : actid) (H : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) x) (H0 : is_f Flab x) (H1 : tid x <> thread)","proofString":"unfolder in *; desf; eauto.\neapply issuedW in H; eauto; type_solver.\napply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver.\napply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"(x : actid) (H : I x) (H0 : is_f Flab x) (H1 : tid x <> thread) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x : actid) (H : I x) (H0 : is_f Flab x) (H1 : tid x <> thread)","proofString":"eapply issuedW in H; eauto; type_solver."},{"statement":"(x y : actid) (H : Fsb x y) (H4 : S y) (H0 : is_f Flab x) (H1 : tid x <> tid y) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x y : actid) (H : Fsb x y) (H4 : S y) (H0 : is_f Flab x) (H1 : tid x <> tid y)","proofString":"apply (dom_l (@wf_sbE Gf)) in H; unfolder in H; desf.\napply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_f Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : Fsb x y) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_f Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : Fsb x y)","proofString":"apply sb_tid_init in H2; desf.\napply (init_w WF) in H2; type_solver."},{"statement":"(x y : actid) (H4 : S y) (H0 : is_f Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x y : actid) (H4 : S y) (H0 : is_f Flab x) (H1 : tid x <> tid y) (H : FE x) (H2 : is_init x)","proofString":"apply (init_w WF) in H2; type_solver."},{"statement":"(x y : actid) (H : Frmw x y) (H4 : I y) (H3 : tid y <> thread) (H0 : is_f Flab x) (H1 : tid x <> thread) : C x /\\ true.","conclusion":"C x /\\ true","hypotheses":"(x y : actid) (H : Frmw x y) (H4 : I y) (H3 : tid y <> thread) (H0 : is_f Flab x) (H1 : tid x <> thread)","proofString":"apply (dom_l (wf_rmwD WF)) in H; unfolder in H; type_solver."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ E0.","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ E0","hypotheses":"","proofString":"unfold E0.\nby unionR left -> right."},{"statement":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"by unionR left -> right."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ⊆₁ E0.","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ⊆₁ E0","hypotheses":"","proofString":"unfold E0.\nbasic_solver 10."},{"statement":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘).","conclusion":"dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n   ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"E ∩₁ F ∩₁ Acq/Rel ⊆₁ C.","conclusion":"E ∩₁ F ∩₁ Acq/Rel ⊆₁ C","hypotheses":"","proofString":"rewrite E_to_S.\nrewrite (sub_sb_in SUB).\nunfolder; ins; desf.\neapply reservedW in H2; eauto.\ntype_solver.\ngeneralize (rcoh_F_sb_S ).\nunfold covered.\nsimpls.\nbasic_solver 21."},{"statement":"(C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)) ∩₁ F ∩₁ Acq/Rel ⊆₁ C.","conclusion":"(C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)) ∩₁ F ∩₁ Acq/Rel ⊆₁ C","hypotheses":"","proofString":"rewrite (sub_sb_in SUB).\nunfolder; ins; desf.\neapply reservedW in H2; eauto.\ntype_solver.\ngeneralize (rcoh_F_sb_S ).\nunfold covered.\nsimpls.\nbasic_solver 21."},{"statement":"(C ∪₁ dom_rel (Fsb^? ⨾ ⦗S⦘)) ∩₁ F ∩₁ Acq/Rel ⊆₁ C.","conclusion":"(C ∪₁ dom_rel (Fsb^? ⨾ ⦗S⦘)) ∩₁ F ∩₁ Acq/Rel ⊆₁ C","hypotheses":"","proofString":"unfolder; ins; desf.\neapply reservedW in H2; eauto.\ntype_solver.\ngeneralize (rcoh_F_sb_S ).\nunfold covered.\nsimpls.\nbasic_solver 21."},{"statement":"(y : actid) (H2 : S y) (H0 : is_ra Flab y) (H1 : is_f Flab y) : C y.","conclusion":"C y","hypotheses":"(y : actid) (H2 : S y) (H0 : is_ra Flab y) (H1 : is_f Flab y)","proofString":"eapply reservedW in H2; eauto.\ntype_solver."},{"statement":"(y : actid) (H0 : is_ra Flab y) (H1 : is_f Flab y) (H2 : is_w Flab y) : C y.","conclusion":"C y","hypotheses":"(y : actid) (H0 : is_ra Flab y) (H1 : is_f Flab y) (H2 : is_w Flab y)","proofString":"type_solver."},{"statement":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x) : C x.","conclusion":"C x","hypotheses":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x)","proofString":"generalize (rcoh_F_sb_S ).\nunfold covered.\nsimpls.\nbasic_solver 21."},{"statement":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x) : (forall (G : execution) (T0 : trav_label -> Prop),\n reserve_coherent G T0 ->\n dom_rel\n   (⦗(fun x0 : actid => is_f (lab G) x0)\n     ∩₁ (fun a : actid => is_ra (lab G) a)⦘ ⨾ sb G ⨾ ⦗reserved T0⦘)\n ⊆₁ covered T0) -> C x.","conclusion":"(forall (G : execution) (T0 : trav_label -> Prop),\n reserve_coherent G T0 ->\n dom_rel\n   (⦗(fun x0 : actid => is_f (lab G) x0)\n     ∩₁ (fun a : actid => is_ra (lab G) a)⦘ ⨾ sb G ⨾ ⦗reserved T0⦘)\n ⊆₁ covered T0) -> C x","hypotheses":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x)","proofString":"unfold covered.\nsimpls.\nbasic_solver 21."},{"statement":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x) : (forall (G : execution) (T0 : trav_label -> Prop),\n reserve_coherent G T0 ->\n dom_rel\n   (⦗(fun x0 : actid => is_f (lab G) x0)\n     ∩₁ (fun a : actid => is_ra (lab G) a)⦘ ⨾ sb G ⨾ ⦗reserved T0⦘)\n ⊆₁ event ↑₁ (T0 ∩₁ action ↓₁ eq ta_cover)) ->\n(event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) x.","conclusion":"(forall (G : execution) (T0 : trav_label -> Prop),\n reserve_coherent G T0 ->\n dom_rel\n   (⦗(fun x0 : actid => is_f (lab G) x0)\n     ∩₁ (fun a : actid => is_ra (lab G) a)⦘ ⨾ sb G ⨾ ⦗reserved T0⦘)\n ⊆₁ event ↑₁ (T0 ∩₁ action ↓₁ eq ta_cover)) ->\n(event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) x","hypotheses":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x)","proofString":"simpls.\nbasic_solver 21."},{"statement":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x) : (forall (G : execution) (T0 : trav_label -> Prop),\n reserve_coherent G T0 ->\n dom_rel\n   (⦗(fun x0 : actid => is_f (lab G) x0)\n     ∩₁ (fun a : actid => is_ra (lab G) a)⦘ ⨾ sb G ⨾ ⦗reserved T0⦘)\n ⊆₁ event ↑₁ (T0 ∩₁ action ↓₁ eq ta_cover)) ->\n(event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) x.","conclusion":"(forall (G : execution) (T0 : trav_label -> Prop),\n reserve_coherent G T0 ->\n dom_rel\n   (⦗(fun x0 : actid => is_f (lab G) x0)\n     ∩₁ (fun a : actid => is_ra (lab G) a)⦘ ⨾ sb G ⨾ ⦗reserved T0⦘)\n ⊆₁ event ↑₁ (T0 ∩₁ action ↓₁ eq ta_cover)) ->\n(event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) x","hypotheses":"(x y : actid) (H : Fsb x y) (H2 : S y) (H1 : is_f Flab x) (H0 : is_ra Flab x)","proofString":"basic_solver 21."},{"statement":"E ∩₁ F ∩₁ Sc ⊆₁ C.","conclusion":"E ∩₁ F ∩₁ Sc ⊆₁ C","hypotheses":"","proofString":"arewrite (Sc ⊆₁ Acq/Rel) by mode_solver.\napply E_F_AcqRel_in_C."},{"statement":"E ∩₁ F ∩₁ Acq/Rel ⊆₁ C.","conclusion":"E ∩₁ F ∩₁ Acq/Rel ⊆₁ C","hypotheses":"","proofString":"apply E_F_AcqRel_in_C."},{"statement":"dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ E ∩₁ R.","conclusion":"dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ E ∩₁ R","hypotheses":"","proofString":"rewrite rtE.\nrewrite (dom_l (wf_rmwE rstWF)), (dom_l (wf_rmwD rstWF)).\nrewrite !seqA.\nclear.\nrewrite !inclusion_ct_seq_eqv_l.\nbasic_solver 10."},{"statement":"dom_rel ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R.","conclusion":"dom_rel ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R","hypotheses":"","proofString":"rewrite (dom_l (wf_rmwE rstWF)), (dom_l (wf_rmwD rstWF)).\nrewrite !seqA.\nclear.\nrewrite !inclusion_ct_seq_eqv_l.\nbasic_solver 10."},{"statement":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ ((⦗E⦘ ⨾ ⦗R⦘ ⨾ Grmw) ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R.","conclusion":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ ((⦗E⦘ ⨾ ⦗R⦘ ⨾ Grmw) ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R","hypotheses":"","proofString":"rewrite !seqA.\nclear.\nrewrite !inclusion_ct_seq_eqv_l.\nbasic_solver 10."},{"statement":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ (⦗E⦘ ⨾ ⦗R⦘ ⨾ Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R.","conclusion":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ (⦗E⦘ ⨾ ⦗R⦘ ⨾ Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R","hypotheses":"","proofString":"clear.\nrewrite !inclusion_ct_seq_eqv_l.\nbasic_solver 10."},{"statement":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ (⦗E⦘ ⨾ ⦗R⦘ ⨾ Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R.","conclusion":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ (⦗E⦘ ⨾ ⦗R⦘ ⨾ Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R","hypotheses":"","proofString":"rewrite !inclusion_ct_seq_eqv_l.\nbasic_solver 10."},{"statement":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ ⦗E⦘ ⨾ ⦗R⦘ ⨾ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R.","conclusion":"dom_rel\n  ((⦗fun _ : actid => True⦘ ∪ ⦗E⦘ ⨾ ⦗R⦘ ⨾ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)\n⊆₁ E ∩₁ R","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(AA : dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ E ∩₁ R) (y z : actid) (IN6 : is_r Glab z) (IN5 : E z) (IN0 : (fun x y0 : actid => exists z0 : actid, Grmw x z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Glab y) (IN4 : is_r Glab y) (IN2 : E y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : (FE ∩₁ FR) z.","conclusion":"(FE ∩₁ FR) z","hypotheses":"(AA : dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ E ∩₁ R) (y z : actid) (IN6 : is_r Glab z) (IN5 : E z) (IN0 : (fun x y0 : actid => exists z0 : actid, Grmw x z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Glab y) (IN4 : is_r Glab y) (IN2 : E y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"split; auto.\napply (sub_E SUB); basic_solver."},{"statement":"(AA : dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ E ∩₁ R) (y z : actid) (IN6 : is_r Glab z) (IN5 : E z) (IN0 : (fun x y0 : actid => exists z0 : actid, Grmw x z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Glab y) (IN4 : is_r Glab y) (IN2 : E y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : FE z.","conclusion":"FE z","hypotheses":"(AA : dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ E ∩₁ R) (y z : actid) (IN6 : is_r Glab z) (IN5 : E z) (IN0 : (fun x y0 : actid => exists z0 : actid, Grmw x z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Glab y) (IN4 : is_r Glab y) (IN2 : E y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"apply (sub_E SUB); basic_solver."},{"statement":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frf x z) : E0 x /\\ E0 z -> exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 z.","conclusion":"E0 x /\\ E0 z -> exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 z","hypotheses":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frf x z)","proofString":"basic_solver 12."},{"statement":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfi x z) : E0 x.","conclusion":"E0 x","hypotheses":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfi x z)","proofString":"eapply rfi_E.\nbasic_solver 21."},{"statement":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfi x z) : dom_rel (Frfi ⨾ ⦗E⦘) x.","conclusion":"dom_rel (Frfi ⨾ ⦗E⦘) x","hypotheses":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfi x z)","proofString":"basic_solver 21."},{"statement":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfe x z) : E0 x.","conclusion":"E0 x","hypotheses":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfe x z)","proofString":"eapply I_in_E.\neapply rfe_Grmwrfi_rt_Acq_E.\nbasic_solver 21."},{"statement":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfe x z) : I x.","conclusion":"I x","hypotheses":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfe x z)","proofString":"eapply rfe_Grmwrfi_rt_Acq_E.\nbasic_solver 21."},{"statement":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfe x z) : dom_rel (Frfe ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ FAcq⦘) x.","conclusion":"dom_rel (Frfe ⨾ (Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ FAcq⦘) x","hypotheses":"(AA : dom_rel (((⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) ⨾ Grfi)＊ ⨾ ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘)\n⊆₁ E0 ∩₁ FE ∩₁ FR) (y z : actid) (IN6 : is_r Flab z) (IN5 : (E0 ∩₁ FE) z) (IN0 : (fun x0 y0 : actid =>\n exists z0 : actid, (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x0 z0 /\\ Grfi z0 y0)＊ z y) (IN3 : is_acq Flab y) (IN4 : is_r Flab y) (IN2 : (E0 ∩₁ FE) y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x : actid) (FR : Frfe x z)","proofString":"basic_solver 21."},{"statement":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘ ⊆₁ codom_rel Grf.","conclusion":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘ ⊆₁ codom_rel Grf","hypotheses":"","proofString":"rewrite <- COMP_RMWRFI_ACQ.\nrewrite rtE.\nclear.\nbasic_solver 10."},{"statement":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘ ⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘).","conclusion":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘ ⊆₁ dom_rel ((Grmw ⨾ Grfi)＊ ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)","hypotheses":"","proofString":"rewrite rtE.\nclear.\nbasic_solver 10."},{"statement":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘\n⊆₁ dom_rel ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘).","conclusion":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘\n⊆₁ dom_rel ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)","hypotheses":"","proofString":"clear.\nbasic_solver 10."},{"statement":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘\n⊆₁ dom_rel ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘).","conclusion":"dom_rel ⦗E ∩₁ R ∩₁ Acq⦘\n⊆₁ dom_rel ((⦗fun _ : actid => True⦘ ∪ (Grmw ⨾ Grfi)⁺) ⨾ ⦗E ∩₁ R ∩₁ Acq⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(AA : dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ ⊆₁ codom_rel (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘)) (r : actid) (IN : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r) : exists w : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) w r.","conclusion":"exists w : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) w r","hypotheses":"(AA : dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ ⊆₁ codom_rel (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘)) (r : actid) (IN : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r)","proofString":"eapply AA.\ngeneralize IN.\nclear.\nbasic_solver 10."},{"statement":"(AA : dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ ⊆₁ codom_rel (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘)) (r : actid) (IN : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r) : dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ r.","conclusion":"dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ r","hypotheses":"(AA : dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ ⊆₁ codom_rel (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘)) (r : actid) (IN : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r)","proofString":"generalize IN.\nclear.\nbasic_solver 10."},{"statement":"(AA : dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ ⊆₁ codom_rel (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘)) (r : actid) (IN : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r) : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r -> dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ r.","conclusion":"(E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r -> dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ r","hypotheses":"(AA : dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ ⊆₁ codom_rel (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘)) (r : actid) (IN : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r)","proofString":"clear.\nbasic_solver 10."},{"statement":"(r : actid) : (E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r -> dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ r.","conclusion":"(E0 ∩₁ FE ∩₁ FR ∩₁ FAcq) r -> dom_rel ⦗E0 ∩₁ FE ∩₁ FR ∩₁ FAcq⦘ r","hypotheses":"(r : actid)","proofString":"basic_solver 10."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) : exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 x.","conclusion":"exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 x","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x)","proofString":"cdes IMMCON.\nedestruct (Comp x) as [y FR].\nsplit; [eapply coveredE; eauto| done].\nunfolder; ins ;desf.\ncut (E0 y /\\ E0 x).\nbasic_solver 12.\nunfold E0; split; [|basic_solver].\ngeneralize (dom_rf_covered WF TCOH ICOH).\nbasic_solver 12."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 x.","conclusion":"exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 x","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"edestruct (Comp x) as [y FR].\nsplit; [eapply coveredE; eauto| done].\nunfolder; ins ;desf.\ncut (E0 y /\\ E0 x).\nbasic_solver 12.\nunfold E0; split; [|basic_solver].\ngeneralize (dom_rf_covered WF TCOH ICOH).\nbasic_solver 12."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : (FE ∩₁ FR) x.","conclusion":"(FE ∩₁ FR) x","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"split; [eapply coveredE; eauto| done]."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x) : exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 x.","conclusion":"exists x0 : actid, (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) x0 x","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x)","proofString":"unfolder; ins ;desf.\ncut (E0 y /\\ E0 x).\nbasic_solver 12.\nunfold E0; split; [|basic_solver].\ngeneralize (dom_rf_covered WF TCOH ICOH).\nbasic_solver 12."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x) : exists x0 z : actid,\n  (x0 = z /\\ E0 x0) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0).","conclusion":"exists x0 z : actid,\n  (x0 = z /\\ E0 x0) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0)","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x)","proofString":"cut (E0 y /\\ E0 x).\nbasic_solver 12.\nunfold E0; split; [|basic_solver].\ngeneralize (dom_rf_covered WF TCOH ICOH).\nbasic_solver 12."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x) : E0 y /\\ E0 x ->\nexists x0 z : actid,\n  (x0 = z /\\ E0 x0) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0).","conclusion":"E0 y /\\ E0 x ->\nexists x0 z : actid,\n  (x0 = z /\\ E0 x0) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0)","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x)","proofString":"basic_solver 12."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x) : E0 y /\\ E0 x.","conclusion":"E0 y /\\ E0 x","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x)","proofString":"unfold E0; split; [|basic_solver].\ngeneralize (dom_rf_covered WF TCOH ICOH).\nbasic_solver 12."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x) : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) y.","conclusion":"(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) y","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x)","proofString":"generalize (dom_rf_covered WF TCOH ICOH).\nbasic_solver 12."},{"statement":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x) : dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I ->\n(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) y.","conclusion":"dom_rel (Frf ⨾ ⦗C⦘) ⊆₁ I ->\n(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) y","hypotheses":"(x : actid) (H : C x) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (y : actid) (FR : Frf y x)","proofString":"basic_solver 12."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : (FE ∩₁ FR) x.","conclusion":"(FE ∩₁ FR) x","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"split.\napply (sub_E SUB); basic_solver.\napply (sub_R SUB); basic_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : FE x.","conclusion":"FE x","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"apply (sub_E SUB); basic_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : is_r Flab x.","conclusion":"is_r Flab x","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"apply (sub_R SUB); basic_solver."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frf x0 x) : E0 x0 /\\ E0 x ->\nexists x2 z : actid,\n  (x2 = z /\\ E0 x2) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0).","conclusion":"E0 x0 /\\ E0 x ->\nexists x2 z : actid,\n  (x2 = z /\\ E0 x2) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0)","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frf x0 x)","proofString":"basic_solver 12."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x) : E0 x0.","conclusion":"E0 x0","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x)","proofString":"eapply rfi_E.\nbasic_solver 21."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x) : dom_rel (Frfi ⨾ ⦗E⦘) x0.","conclusion":"dom_rel (Frfi ⨾ ⦗E⦘) x0","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x)","proofString":"basic_solver 21."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : E0 x0.","conclusion":"E0 x0","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"eapply I_in_E.\neapply rfe_E.\nbasic_solver 21."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : I x0.","conclusion":"I x0","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"eapply rfe_E.\nbasic_solver 21."},{"statement":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : dom_rel (Frfe ⨾ ⦗E ∩₁ NTid_ thread⦘) x0.","conclusion":"dom_rel (Frfe ⨾ ⦗E ∩₁ NTid_ thread⦘) x0","hypotheses":"(x : actid) (H : (E0 ∩₁ FE) x) (H1 : tid x <> thread) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"basic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : (FE ∩₁ FR) x.","conclusion":"(FE ∩₁ FR) x","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"split.\napply (sub_E SUB); basic_solver.\napply (sub_R SUB); basic_solver."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : FE x.","conclusion":"FE x","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"apply (sub_E SUB); basic_solver."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : is_r Flab x.","conclusion":"is_r Flab x","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"apply (sub_R SUB); basic_solver."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frf x0 x) : E0 x0 /\\ E0 x ->\nexists x2 z : actid,\n  (x2 = z /\\ E0 x2) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0).","conclusion":"E0 x0 /\\ E0 x ->\nexists x2 z : actid,\n  (x2 = z /\\ E0 x2) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0)","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frf x0 x)","proofString":"basic_solver 12."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x) : E0 x0.","conclusion":"E0 x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x)","proofString":"eapply rfi_E.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x) : dom_rel (Frfi ⨾ ⦗E⦘) x0.","conclusion":"dom_rel (Frfi ⨾ ⦗E⦘) x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x)","proofString":"basic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : E0 x0.","conclusion":"E0 x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"eapply I_in_E.\ngeneralize (dom_rfe_ppo_issued WF TCOH ICOH).\napply (sub_ppo_in SUB) in H1.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : I x0.","conclusion":"I x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"generalize (dom_rfe_ppo_issued WF TCOH ICOH).\napply (sub_ppo_in SUB) in H1.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : dom_rel (Frfe ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I -> I x0.","conclusion":"dom_rel (Frfe ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I -> I x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Gppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"apply (sub_ppo_in SUB) in H1.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Fppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : dom_rel (Frfe ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I -> I x0.","conclusion":"dom_rel (Frfe ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I -> I x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H1 : Fppo x y) (H2 : I y) (H0 : is_r Flab x) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"basic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : (FE ∩₁ FR) x.","conclusion":"(FE ∩₁ FR) x","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"split.\napply (sub_E SUB); basic_solver.\napply (sub_R SUB); basic_solver."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : FE x.","conclusion":"FE x","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"apply (sub_E SUB); basic_solver."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) : is_r Flab x.","conclusion":"is_r Flab x","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf)","proofString":"apply (sub_R SUB); basic_solver."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frf x0 x) : E0 x0 /\\ E0 x ->\nexists x2 z : actid,\n  (x2 = z /\\ E0 x2) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0).","conclusion":"E0 x0 /\\ E0 x ->\nexists x2 z : actid,\n  (x2 = z /\\ E0 x2) /\\ (exists z0 : actid, Frf z z0 /\\ z0 = x /\\ E0 z0)","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frf x0 x)","proofString":"basic_solver 12."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x) : E0 x0.","conclusion":"E0 x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x)","proofString":"eapply rfi_E.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x) : dom_rel (Frfi ⨾ ⦗E⦘) x0.","conclusion":"dom_rel (Frfi ⨾ ⦗E⦘) x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfi x0 x)","proofString":"basic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : E0 x0.","conclusion":"E0 x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"eapply I_in_E.\neapply rfe_rmw_S; eauto.\ndo 2 eexists.\nsplit; eauto.\napply seq_eqv_r.\nsplit; eauto.\ngeneralize H0.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : I x0.","conclusion":"I x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"eapply rfe_rmw_S; eauto.\ndo 2 eexists.\nsplit; eauto.\napply seq_eqv_r.\nsplit; eauto.\ngeneralize H0.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : dom_rel (Frfe ⨾ Frmw ⨾ ⦗S⦘) x0.","conclusion":"dom_rel (Frfe ⨾ Frmw ⨾ ⦗S⦘) x0","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"do 2 eexists.\nsplit; eauto.\napply seq_eqv_r.\nsplit; eauto.\ngeneralize H0.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : Frmw x y.","conclusion":"Frmw x y","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"generalize H0.\nbasic_solver 21."},{"statement":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x) : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y -> Frmw x y.","conclusion":"(⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y -> Frmw x y","hypotheses":"(x y : actid) (H : (E0 ∩₁ FE) x) (H2 : is_r Flab x) (H0 : (⦗E0⦘ ⨾ Frmw ⨾ ⦗E0⦘) x y) (H1 : S y) (Wf_sc : wf_sc Gf sc) (Csc : coh_sc Gf sc) (Comp : complete Gf) (Cint : coherence Gf) (Cext : acyc_ext Gf sc) (Cat : rmw_atomicity Gf) (x0 : actid) (x1 : Frfe x0 x)","proofString":"basic_solver 21."},{"statement":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ rst_sc^? ⨾ Fhb^? ⨾ Frelease ⨾ ⦗I⦘) ⊆₁ C.","conclusion":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ rst_sc^? ⨾ Fhb^? ⨾ Frelease ⨾ ⦗I⦘) ⊆₁ C","hypotheses":"","proofString":"arewrite (rst_sc ⊆ sc) by unfold rst_sc; basic_solver.\napply urr_helper; eauto."},{"statement":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ sc^? ⨾ Fhb^? ⨾ Frelease ⨾ ⦗I⦘) ⊆₁ C.","conclusion":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ sc^? ⨾ Fhb^? ⨾ Frelease ⨾ ⦗I⦘) ⊆₁ C","hypotheses":"","proofString":"apply urr_helper; eauto."},{"statement":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ rst_sc^? ⨾ Fhb^? ⨾ (Frelease ⨾ Grf)^? ⨾ ⦗C⦘)\n⊆₁ C.","conclusion":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ rst_sc^? ⨾ Fhb^? ⨾ (Frelease ⨾ Grf)^? ⨾ ⦗C⦘)\n⊆₁ C","hypotheses":"","proofString":"rewrite (sub_rf_in SUB).\narewrite (rst_sc ⊆ sc) by unfold rst_sc; basic_solver.\napply urr_helper_C; eauto."},{"statement":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ rst_sc^? ⨾ Fhb^? ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗C⦘)\n⊆₁ C.","conclusion":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ rst_sc^? ⨾ Fhb^? ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗C⦘)\n⊆₁ C","hypotheses":"","proofString":"arewrite (rst_sc ⊆ sc) by unfold rst_sc; basic_solver.\napply urr_helper_C; eauto."},{"statement":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ sc^? ⨾ Fhb^? ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗C⦘)\n⊆₁ C.","conclusion":"dom_rel ((Fhb ⨾ ⦗FF ∩₁ FSc⦘)^? ⨾ sc^? ⨾ Fhb^? ⨾ (Frelease ⨾ Frf)^? ⨾ ⦗C⦘)\n⊆₁ C","hypotheses":"","proofString":"apply urr_helper_C; eauto."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗C⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗C⦘ ⊆ ∅₂","hypotheses":"","proofString":"rewrite (dom_r (wf_releaseD rstWF)), !seqA.\narewrite (⦗W⦘ ⨾ ⦗C⦘ ⊆ ⦗W ∩₁ C⦘).\nbasic_solver 12.\nerewrite (@w_covered_issued Gf); eauto.\nrewrite (sub_release_in SUB).\nrels; sin_rewrite (release_I); basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗W⦘ ⨾ ⦗C⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗W⦘ ⨾ ⦗C⦘ ⊆ ∅₂","hypotheses":"","proofString":"arewrite (⦗W⦘ ⨾ ⦗C⦘ ⊆ ⦗W ∩₁ C⦘).\nbasic_solver 12.\nerewrite (@w_covered_issued Gf); eauto.\nrewrite (sub_release_in SUB).\nrels; sin_rewrite (release_I); basic_solver."},{"statement":"⦗W⦘ ⨾ ⦗C⦘ ⊆ ⦗W ∩₁ C⦘.","conclusion":"⦗W⦘ ⨾ ⦗C⦘ ⊆ ⦗W ∩₁ C⦘","hypotheses":"","proofString":"basic_solver 12."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗W ∩₁ C⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗W ∩₁ C⦘ ⊆ ∅₂","hypotheses":"","proofString":"erewrite (@w_covered_issued Gf); eauto.\nrewrite (sub_release_in SUB).\nrels; sin_rewrite (release_I); basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⊆ ∅₂","hypotheses":"","proofString":"rewrite (sub_release_in SUB).\nrels; sin_rewrite (release_I); basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Frelease ⨾ ⦗I⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Frelease ⨾ ⦗I⦘ ⊆ ∅₂","hypotheses":"","proofString":"rels; sin_rewrite (release_I); basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⊆ ∅₂","hypotheses":"","proofString":"rewrite (sub_release_in SUB).\nrels; sin_rewrite (release_I); basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Frelease ⨾ ⦗I⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Frelease ⨾ ⦗I⦘ ⊆ ∅₂","hypotheses":"","proofString":"rels; sin_rewrite (release_I); basic_solver."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfi ⨾ ⦗E⦘) ⨾ ⦗Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfi ⨾ ⦗E⦘) ⨾ ⦗Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !seqA.\nrewrite seq_eqvC.\nrewrite E_E0.\nunfold E0.\nrewrite !id_union, !seq_union_r, !dom_union.\nunionL.\nrewrite (rmw_in_sb rstWF).\narewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver.\nerewrite issuedW at 1; eauto.\nrewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E⦘ ⨾ ⦗Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗E⦘ ⨾ ⦗Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_eqvC.\nrewrite E_E0.\nunfold E0.\nrewrite !id_union, !seq_union_r, !dom_union.\nunionL.\nrewrite (rmw_in_sb rstWF).\narewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver.\nerewrite issuedW at 1; eauto.\nrewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗E⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗E⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite E_E0.\nunfold E0.\nrewrite !id_union, !seq_union_r, !dom_union.\nunionL.\nrewrite (rmw_in_sb rstWF).\narewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver.\nerewrite issuedW at 1; eauto.\nrewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗E0⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗E0⦘) ⊆₁ I","hypotheses":"","proofString":"unfold E0.\nrewrite !id_union, !seq_union_r, !dom_union.\nunionL.\nrewrite (rmw_in_sb rstWF).\narewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver.\nerewrite issuedW at 1; eauto.\nrewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (Grfe\n   ⨾ Grmw\n     ⨾ (Grfi ⨾ Grmw)＊\n       ⨾ Grfi\n         ⨾ ⦗Acq⦘\n           ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n              ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Grfe\n   ⨾ Grmw\n     ⨾ (Grfi ⨾ Grmw)＊\n       ⨾ Grfi\n         ⨾ ⦗Acq⦘\n           ⨾ ⦗C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n              ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !id_union, !seq_union_r, !dom_union.\nunionL.\nrewrite (rmw_in_sb rstWF).\narewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver.\nerewrite issuedW at 1; eauto.\nrewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗C⦘)\n∪₁ dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗I⦘)\n∪₁ dom_rel\n     (Grfe\n      ⨾ Grmw\n        ⨾ (Grfi ⨾ Grmw)＊\n          ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n∪₁ dom_rel\n     (Grfe\n      ⨾ Grmw\n        ⨾ (Grfi ⨾ Grmw)＊\n          ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗C⦘)\n∪₁ dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗I⦘)\n∪₁ dom_rel\n     (Grfe\n      ⨾ Grmw\n        ⨾ (Grfi ⨾ Grmw)＊\n          ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n∪₁ dom_rel\n     (Grfe\n      ⨾ Grmw\n        ⨾ (Grfi ⨾ Grmw)＊\n          ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"unionL.\nrewrite (rmw_in_sb rstWF).\narewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver.\nerewrite issuedW at 1; eauto.\nrewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (rmw_in_sb rstWF).\narewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (Grfe ⨾ Gsb ⨾ (Grfi ⨾ Gsb)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Gsb ⨾ (Grfi ⨾ Gsb)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Grfi ⊆ Gsb).\narewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (Grfe ⨾ Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb).\ngeneralize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"generalize (@sb_trans rstG).\nins.\nrelsf.\nbasic_solver."},{"statement":"transitive Gsb -> Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"transitive Gsb -> Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"ins.\nrelsf.\nbasic_solver."},{"statement":"(H : transitive Gsb) : Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗FAcq⦘ ⊆ Gsb.","conclusion":"Gsb ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗FAcq⦘ ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"relsf.\nbasic_solver."},{"statement":"(H : transitive Gsb) : Gsb ⨾ ⦗FAcq⦘ ⊆ Gsb.","conclusion":"Gsb ⨾ ⦗FAcq⦘ ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"basic_solver."},{"statement":"dom_rel (Grfe ⨾ Gsb ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Gsb ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rfe_in SUB).\nrewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (Frfe ⨾ Gsb ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Gsb ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (sub_sb_in SUB).\nrewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fsb ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_rel_helper (dom_sb_covered WF TCOH ICOH)).\narewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (Frfe ⨾ ⦗C⦘ ⨾ Fsb ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ⦗C⦘ ⨾ Fsb ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Frfe ⊆ Frf).\nrewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (Frf ⨾ ⦗C⦘ ⨾ Fsb ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (Frf ⨾ ⦗C⦘ ⨾ Fsb ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite <- !seqA.\nsin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (((Frf ⨾ ⦗C⦘) ⨾ Fsb) ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (((Frf ⨾ ⦗C⦘) ⨾ Fsb) ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"sin_rewrite (dom_rel_helper (dom_rf_covered WF TCOH ICOH)).\nbasic_solver."},{"statement":"dom_rel (((⦗I⦘ ⨾ Frf ⨾ ⦗C⦘) ⨾ Fsb) ⨾ ⦗C⦘) ⊆₁ I.","conclusion":"dom_rel (((⦗I⦘ ⨾ Frf ⨾ ⦗C⦘) ⨾ Fsb) ⨾ ⦗C⦘) ⊆₁ I","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite issuedW at 1; eauto.\nrewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗FW⦘) ⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗FW⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (wf_rfiD rstWF) at 2.\nrewrite (sub_R SUB).\ntype_solver."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ (⦗W⦘ ⨾ Grfi ⨾ ⦗R⦘) ⨾ ⦗Acq⦘ ⨾ ⦗FW⦘)\n⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ (⦗W⦘ ⨾ Grfi ⨾ ⦗R⦘) ⨾ ⦗Acq⦘ ⨾ ⦗FW⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_R SUB).\ntype_solver."},{"statement":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ (⦗W⦘ ⨾ Grfi ⨾ ⦗FR⦘) ⨾ ⦗Acq⦘ ⨾ ⦗FW⦘)\n⊆₁ I.","conclusion":"dom_rel (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ (⦗W⦘ ⨾ Grfi ⨾ ⦗FR⦘) ⨾ ⦗Acq⦘ ⨾ ⦗FW⦘)\n⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel\n  (Grfe\n   ⨾ Grmw\n     ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Grfe\n   ⨾ Grmw\n     ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Frfi ⨾ Grmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Frfi ⨾ Grmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_Acq SUB).\narewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite (Tid_ thread ∩₁ S ⊆₁ S) by basic_solver.\nforward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Fsb^? ⨾ ⦗S⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Fsb^? ⨾ ⦗S⦘) ⊆₁ I","hypotheses":"","proofString":"forward (eapply dom_rfe_rmw_ct_rfi_Acq_sb_S_in_I); eauto."},{"statement":"dom_rel\n  (Grfe\n   ⨾ Grmw\n     ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Grfe\n   ⨾ Grmw\n     ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ⊆₁ I.","conclusion":"dom_rel\n  (((((Grfe ⨾ Grmw) ⨾ (Grfi ⨾ Grmw)＊) ⨾ Grfi) ⨾ ⦗Acq⦘)\n   ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !seqA.\nrewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rfe_in SUB).\nrewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rfi_in SUB).\nrewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Frfi ⨾ Grmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Grmw ⨾ (Frfi ⨾ Grmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_rmw_in SUB).\nrewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗Acq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (sub_Acq SUB).\narewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite (NTid_ thread ∩₁ I ⊆₁ I) by basic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘).\nrewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver.\narewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘.","conclusion":"Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘","hypotheses":"","proofString":"rewrite <- !seqA.\napply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ (Frmw ⨾ (Frfi ⨾ Frmw)＊) ⨾ ⦗FW_ex⦘.","conclusion":"Frmw ⨾ (Frfi ⨾ Frmw)＊ ⊆ (Frmw ⨾ (Frfi ⨾ Frmw)＊) ⨾ ⦗FW_ex⦘","hypotheses":"","proofString":"apply codom_rel_helper.\nrewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel (Frmw ⨾ (Frfi ⨾ Frmw)＊) ⊆₁ FW_ex.","conclusion":"codom_rel (Frmw ⨾ (Frfi ⨾ Frmw)＊) ⊆₁ FW_ex","hypotheses":"","proofString":"rewrite rmw_W_ex.\nrewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (Frfi ⨾ Frmw ⨾ ⦗FW_ex⦘)＊) ⊆₁ FW_ex.","conclusion":"codom_rel ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (Frfi ⨾ Frmw ⨾ ⦗FW_ex⦘)＊) ⊆₁ FW_ex","hypotheses":"","proofString":"rewrite rtE.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel\n  ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frfi ⨾ Frmw ⨾ ⦗FW_ex⦘)⁺))\n⊆₁ FW_ex.","conclusion":"codom_rel\n  ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frfi ⨾ Frmw ⨾ ⦗FW_ex⦘)⁺))\n⊆₁ FW_ex","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel\n  ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ ((Frfi ⨾ Frmw) ⨾ ⦗FW_ex⦘)⁺))\n⊆₁ FW_ex.","conclusion":"codom_rel\n  ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ ((Frfi ⨾ Frmw) ⨾ ⦗FW_ex⦘)⁺))\n⊆₁ FW_ex","hypotheses":"","proofString":"rewrite inclusion_ct_seq_eqv_r.\nbasic_solver."},{"statement":"codom_rel\n  ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frfi ⨾ Frmw)⁺ ⨾ ⦗FW_ex⦘))\n⊆₁ FW_ex.","conclusion":"codom_rel\n  ((Frmw ⨾ ⦗FW_ex⦘) ⨾ (⦗fun _ : actid => True⦘ ∪ (Frfi ⨾ Frmw)⁺ ⨾ ⦗FW_ex⦘))\n⊆₁ FW_ex","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘)\n⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite (⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘).\ngeneralize (W_ex_in_W WF).\nbasic_solver.\narewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘.","conclusion":"⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘","hypotheses":"","proofString":"generalize (W_ex_in_W WF).\nbasic_solver."},{"statement":"FW_ex ⊆₁ FW -> ⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘.","conclusion":"FW_ex ⊆₁ FW -> ⦗FW_ex⦘ ⊆ ⦗FW⦘ ⨾ ⦗FW_ex⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW⦘ ⨾ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘)\n⊆₁ I.","conclusion":"dom_rel\n  (Frfe ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗FW⦘ ⨾ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite (Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo).\nrewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn.\narewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo.","conclusion":"Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo","hypotheses":"","proofString":"rewrite (dom_l (wf_rmwD WF)) at 1.\nrewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"(⦗FR⦘ ⨾ Frmw) ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo.","conclusion":"(⦗FR⦘ ⨾ Frmw) ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo","hypotheses":"","proofString":"rewrite seqA.\nunfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"⦗FR⦘ ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo.","conclusion":"⦗FR⦘ ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘ ⊆ Fppo","hypotheses":"","proofString":"unfold ppo.\nhahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"⦗FR⦘ ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘\n⊆ ⦗FR⦘\n  ⨾ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n     ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺ ⨾ ⦗FW⦘.","conclusion":"⦗FR⦘ ⨾ Frmw ⨾ (Frfi ⨾ Frmw)＊ ⨾ ⦗W⦘\n⊆ ⦗FR⦘\n  ⨾ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n     ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺ ⨾ ⦗FW⦘","hypotheses":"","proofString":"hahn_frame.\nrewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"Frmw ⨾ (Frfi ⨾ Frmw)＊\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺.","conclusion":"Frmw ⨾ (Frfi ⨾ Frmw)＊\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺","hypotheses":"","proofString":"rewrite ct_begin.\napply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"Frmw ⨾ (Frfi ⨾ Frmw)＊\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)\n  ⨾ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n     ∪ ⦗FR_ex⦘ ⨾ Fsb)＊.","conclusion":"Frmw ⨾ (Frfi ⨾ Frmw)＊\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)\n  ⨾ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n     ∪ ⦗FR_ex⦘ ⨾ Fsb)＊","hypotheses":"","proofString":"apply seq_mori; [eauto with hahn|].\nrewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"(Frfi ⨾ Frmw)＊\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)＊.","conclusion":"(Frfi ⨾ Frmw)＊\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)＊","hypotheses":"","proofString":"rewrite <- rt_of_ct with        (r:= Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?                   ∪ ⦗FR_ex⦘ ⨾ Fsb).\napply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"(Frfi ⨾ Frmw)＊\n⊆ ((Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n    ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺)＊.","conclusion":"(Frfi ⨾ Frmw)＊\n⊆ ((Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n    ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺)＊","hypotheses":"","proofString":"apply clos_refl_trans_mori.\nrewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"Frfi ⨾ Frmw\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺.","conclusion":"Frfi ⨾ Frmw\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)⁺","hypotheses":"","proofString":"rewrite <- ct_ct, <- ct_step.\napply seq_mori; eauto with hahn."},{"statement":"Frfi ⨾ Frmw\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)\n  ⨾ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n     ∪ ⦗FR_ex⦘ ⨾ Fsb).","conclusion":"Frfi ⨾ Frmw\n⊆ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n   ∪ ⦗FR_ex⦘ ⨾ Fsb)\n  ⨾ (Fdata ∪ Fctrl ∪ Faddr ⨾ Fsb^? ∪ Frfi ∪ Frmw ∪ Frmw_dep ⨾ Fsb^?\n     ∪ ⦗FR_ex⦘ ⨾ Fsb)","hypotheses":"","proofString":"apply seq_mori; eauto with hahn."},{"statement":"dom_rel (Frfe ⨾ Fppo ⨾ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fppo ⨾ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf).\nunfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10.\nrewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf.","conclusion":"⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ar_int Gf","hypotheses":"","proofString":"unfold ar_int.\nunionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10."},{"statement":"⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘\n⊆ Fbob ∪ Fppo ∪ Fdetour ∪ ⦗FW_ex_acq⦘ ⨾ Fsb ⨾ ⦗FW⦘\n  ∪ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FR ∩₁ FAcq⦘.","conclusion":"⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘\n⊆ Fbob ∪ Fppo ∪ Fdetour ∪ ⦗FW_ex_acq⦘ ⨾ Fsb ⨾ ⦗FW⦘\n  ∪ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FR ∩₁ FAcq⦘","hypotheses":"","proofString":"unionR right.\nrewrite (wf_rfiD WF) at 1.\nbasic_solver 10."},{"statement":"⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FR ∩₁ FAcq⦘.","conclusion":"⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FAcq⦘ ⊆ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FR ∩₁ FAcq⦘","hypotheses":"","proofString":"rewrite (wf_rfiD WF) at 1.\nbasic_solver 10."},{"statement":"⦗FW_ex⦘ ⨾ (⦗FW⦘ ⨾ Frfi ⨾ ⦗FR⦘) ⨾ ⦗FAcq⦘ ⊆ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FR ∩₁ FAcq⦘.","conclusion":"⦗FW_ex⦘ ⨾ (⦗FW⦘ ⨾ Frfi ⨾ ⦗FR⦘) ⨾ ⦗FAcq⦘ ⊆ ⦗FW_ex⦘ ⨾ Frfi ⨾ ⦗FR ∩₁ FAcq⦘","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (Frfe ⨾ Fppo ⨾ ar_int Gf ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fppo ⨾ ar_int Gf ⨾ Frmw ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (rmw_in_ppo WF).\nrewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Frfe ⨾ Fppo ⨾ ar_int Gf ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ Fppo ⨾ ar_int Gf ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite ppo_in_ar_int.\nrewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (Frfe ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Frfe ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_rfeD WF)).\nrewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel ((⦗FW⦘ ⨾ Frfe) ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗FW⦘ ⨾ Frfe) ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite rfe_in_ar with (sc:=sc).\narewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel ((⦗FW⦘ ⨾ Far) ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗FW⦘ ⨾ Far) ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ar_int Gf ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (ar_int Gf ⊆ Far).\narewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"dom_rel (⦗FW⦘ ⨾ Far ⨾ Far ⨾ Far ⨾ Far ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗FW⦘ ⨾ Far ⨾ Far ⨾ Far ⨾ Far ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺).\nrewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct.\napply ar_ct_I_in_I; auto."},{"statement":"Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺.","conclusion":"Far ⨾ Far ⨾ Far ⨾ Far ⊆ Far⁺","hypotheses":"","proofString":"rewrite ct_step with (r:=Far) at 1 2 3 4.\nby rewrite !ct_ct."},{"statement":"Far⁺ ⨾ Far⁺ ⨾ Far⁺ ⨾ Far⁺ ⊆ Far⁺.","conclusion":"Far⁺ ⨾ Far⁺ ⨾ Far⁺ ⨾ Far⁺ ⊆ Far⁺","hypotheses":"","proofString":"by rewrite !ct_ct."},{"statement":"dom_rel (⦗FW⦘ ⨾ Far⁺ ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (⦗FW⦘ ⨾ Far⁺ ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"apply ar_ct_I_in_I; auto."},{"statement":"Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗C⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘.","conclusion":"Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗C⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘","hypotheses":"","proofString":"apply dom_rel_helper.\nrewrite (dom_r (@wf_sbE rstG)), !seqA.\nrewrite <- !id_inter.\narewrite (E ∩₁ (F ∩₁ Acq) ⊆₁ E ∩₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite E_F_AcqRel_in_C.\nrewrite (sub_sb_in SUB).\neapply dom_sb_covered; eauto."},{"statement":"dom_rel (Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘) ⊆₁ C.","conclusion":"dom_rel (Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite (dom_r (@wf_sbE rstG)), !seqA.\nrewrite <- !id_inter.\narewrite (E ∩₁ (F ∩₁ Acq) ⊆₁ E ∩₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite E_F_AcqRel_in_C.\nrewrite (sub_sb_in SUB).\neapply dom_sb_covered; eauto."},{"statement":"dom_rel (Gsb ⨾ ⦗E⦘ ⨾ ⦗F⦘ ⨾ ⦗Acq⦘) ⊆₁ C.","conclusion":"dom_rel (Gsb ⨾ ⦗E⦘ ⨾ ⦗F⦘ ⨾ ⦗Acq⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite <- !id_inter.\narewrite (E ∩₁ (F ∩₁ Acq) ⊆₁ E ∩₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite E_F_AcqRel_in_C.\nrewrite (sub_sb_in SUB).\neapply dom_sb_covered; eauto."},{"statement":"dom_rel (Gsb ⨾ ⦗E ∩₁ (F ∩₁ Acq)⦘) ⊆₁ C.","conclusion":"dom_rel (Gsb ⨾ ⦗E ∩₁ (F ∩₁ Acq)⦘) ⊆₁ C","hypotheses":"","proofString":"arewrite (E ∩₁ (F ∩₁ Acq) ⊆₁ E ∩₁ F ∩₁ Acq/Rel) by mode_solver.\nrewrite E_F_AcqRel_in_C.\nrewrite (sub_sb_in SUB).\neapply dom_sb_covered; eauto."},{"statement":"dom_rel (Gsb ⨾ ⦗E ∩₁ F ∩₁ Acq/Rel⦘) ⊆₁ C.","conclusion":"dom_rel (Gsb ⨾ ⦗E ∩₁ F ∩₁ Acq/Rel⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite E_F_AcqRel_in_C.\nrewrite (sub_sb_in SUB).\neapply dom_sb_covered; eauto."},{"statement":"dom_rel (Gsb ⨾ ⦗C⦘) ⊆₁ C.","conclusion":"dom_rel (Gsb ⨾ ⦗C⦘) ⊆₁ C","hypotheses":"","proofString":"rewrite (sub_sb_in SUB).\neapply dom_sb_covered; eauto."},{"statement":"dom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C.","conclusion":"dom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C","hypotheses":"","proofString":"eapply dom_sb_covered; eauto."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ Grf ⨾ ⦗C⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ Grf ⨾ ⦗C⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite (sub_rf_in SUB).\nsin_rewrite rf_C.\nrewrite !seqA.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ Frf ⨾ ⦗C⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ Frf ⨾ ⦗C⦘ ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"sin_rewrite rf_C.\nrewrite !seqA.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ (⦗I⦘ ⨾ Grf) ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ (⦗I⦘ ⨾ Grf) ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite !seqA.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗C ∪₁ I⦘ ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗C ∪₁ I⦘ ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"sin_rewrite release_CI_de.\nbasic_solver."},{"statement":"∅₂ ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"∅₂ ⨾ Grf ⨾ Gsb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ Frfe ⨾ ⦗E⦘ ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ Frfe ⨾ ⦗E⦘ ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite (sub_Acq SUB).\nrewrite <- id_inter.\nrewrite (dom_rel_helper rfe_Acq_E).\narewrite_id ⦗E⦘.\nrewrite seq_id_l.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ Frfe ⨾ ⦗E⦘ ⨾ ⦗FAcq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ Frfe ⨾ ⦗E⦘ ⨾ ⦗FAcq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite <- id_inter.\nrewrite (dom_rel_helper rfe_Acq_E).\narewrite_id ⦗E⦘.\nrewrite seq_id_l.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite (dom_rel_helper rfe_Acq_E).\narewrite_id ⦗E⦘.\nrewrite seq_id_l.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ ⦗I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗E⦘ ⨾ ⦗I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite_id ⦗E⦘.\nrewrite seq_id_l.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite seq_id_l.\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗C ∪₁ I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Grelease ⨾ ⦗C ∪₁ I⦘ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb","hypotheses":"","proofString":"sin_rewrite release_CI_de.\nbasic_solver."},{"statement":"∅₂ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb.","conclusion":"∅₂ ⨾ Frfe ⨾ ⦗E ∩₁ FAcq⦘ ⊆ Gsb","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊)\n  ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊)\n  ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite rt_rf_rmw, !seqA.\nrewrite (rtE (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)).\nrelsf; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb rstWF).\narewrite_id ⦗FW⦘.\narewrite_id ⦗FF⦘.\narewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver.\ntransitivity (fun (x y : actid) => False); [|basic_solver].\nrewrite ct_end, !seqA.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\nby unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease).\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt.\nrewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⨾ Grfi ⨾ ⦗Acq⦘\n⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⨾ Grfi ⨾ ⦗Acq⦘\n⊆ Gsb","hypotheses":"","proofString":"rewrite (rtE (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)).\nrelsf; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb rstWF).\narewrite_id ⦗FW⦘.\narewrite_id ⦗FF⦘.\narewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver.\ntransitivity (fun (x y : actid) => False); [|basic_solver].\nrewrite ct_end, !seqA.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\nby unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease).\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt.\nrewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊\n            ⨾ (⦗fun _ : actid => True⦘ ∪ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺)\n              ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊\n            ⨾ (⦗fun _ : actid => True⦘ ∪ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺)\n              ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"relsf; unionL.\narewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb rstWF).\narewrite_id ⦗FW⦘.\narewrite_id ⦗FF⦘.\narewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver.\ntransitivity (fun (x y : actid) => False); [|basic_solver].\nrewrite ct_end, !seqA.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\nby unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease).\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt.\nrewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite (Grfi ⊆ Gsb).\nrewrite (rmw_in_sb rstWF).\narewrite_id ⦗FW⦘.\narewrite_id ⦗FF⦘.\narewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Gsb ⨾ Grmw)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Gsb ⨾ Grmw)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"rewrite (rmw_in_sb rstWF).\narewrite_id ⦗FW⦘.\narewrite_id ⦗FF⦘.\narewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite_id ⦗FW⦘.\narewrite_id ⦗FF⦘.\narewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗fun _ : actid => True⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗fun _ : actid => True⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗fun _ : actid => True⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗fun _ : actid => True⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite_id ⦗FF⦘.\narewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗fun _ : actid => True⦘ ⨾ Gsb)^?\n    ⨾ ⦗fun _ : actid => True⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗fun _ : actid => True⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗fun _ : actid => True⦘ ⨾ Gsb)^?\n    ⨾ ⦗fun _ : actid => True⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗fun _ : actid => True⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"arewrite ((Gsb ∩ Fsame_loc)^? ⊆ Gsb^?) by basic_solver.\ngeneralize (@sb_trans rstG); ins; relsf.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗fun _ : actid => True⦘ ⨾ Gsb)^?\n    ⨾ ⦗fun _ : actid => True⦘\n      ⨾ Gsb^? ⨾ ⦗fun _ : actid => True⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗fun _ : actid => True⦘ ⨾ Gsb)^?\n    ⨾ ⦗fun _ : actid => True⦘\n      ⨾ Gsb^? ⨾ ⦗fun _ : actid => True⦘ ⨾ (Gsb ⨾ Gsb)＊ ⨾ Gsb ⨾ ⦗Acq⦘ ⊆ Gsb","hypotheses":"","proofString":"generalize (@sb_trans rstG); ins; relsf.\nbasic_solver."},{"statement":"(H : transitive Gsb) : ⦗(E0 ∩₁ FE \\₁ C) ∩₁ (E0 ∩₁ FE \\₁ I)⦘ ⨾ ⦗FRel⦘ ⨾ Gsb ⨾ ⦗FAcq⦘ ⊆ Gsb.","conclusion":"⦗(E0 ∩₁ FE \\₁ C) ∩₁ (E0 ∩₁ FE \\₁ I)⦘ ⨾ ⦗FRel⦘ ⨾ Gsb ⨾ ⦗FAcq⦘ ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺ ⨾ Grfi ⨾ ⦗Acq⦘\n⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺ ⨾ Grfi ⨾ ⦗Acq⦘\n⊆ Gsb","hypotheses":"","proofString":"transitivity (fun (x y : actid) => False); [|basic_solver].\nrewrite ct_end, !seqA.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\nby unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease).\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt.\nrewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺ ⨾ Grfi ⨾ ⦗Acq⦘\n⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊ ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)⁺ ⨾ Grfi ⨾ ⦗Acq⦘\n⊆ ∅₂","hypotheses":"","proofString":"rewrite ct_end, !seqA.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\nby unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease).\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt.\nrewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊\n            ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n              ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ Gsb)^?\n    ⨾ ⦗W⦘\n      ⨾ (Gsb ∩ Gsame_loc)^?\n        ⨾ ⦗W⦘\n          ⨾ (Grfi ⨾ Grmw)＊\n            ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n              ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"","proofString":"arewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊ ⊆ Grelease).\narewrite (Grfi ⊆ Grf).\nby unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease).\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt.\nrewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊\n⊆ Grelease.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grfi ⨾ Grmw)＊\n⊆ Grelease","hypotheses":"","proofString":"arewrite (Grfi ⊆ Grf).\nby unfold imm_s_hb.release, imm_s_hb.rs."},{"statement":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊\n⊆ Grelease.","conclusion":"⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊\n⊆ Grelease","hypotheses":"","proofString":"by unfold imm_s_hb.release, imm_s_hb.rs."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease\n  ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n    ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease\n  ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n    ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"","proofString":"arewrite (Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease).\nunfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt.\nrewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease.","conclusion":"Grelease ⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊ ⊆ Grelease","hypotheses":"","proofString":"unfold imm_s_hb.release, imm_s_hb.rs.\narewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt."},{"statement":"(⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊)\n⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"(⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊)\n⨾ (Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"arewrite (Grfe ⊆ Grf).\narewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt."},{"statement":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"arewrite (Grfi ⊆ Grf).\nrewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt."},{"statement":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw ⨾ (Grf ⨾ Grmw)＊)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘\n    ⨾ (Gsb ∩ Gsame_loc)^?\n      ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw ⨾ (Grf ⨾ Grmw)＊)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt."},{"statement":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw) ⨾ (Grf ⨾ Grmw)＊)＊\n⊆ ((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n  ⨾ (Grf ⨾ Grmw)＊.","conclusion":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw) ⨾ (Grf ⨾ Grmw)＊)＊\n⊆ ((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n  ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"rewrite <- ct_begin.\nrewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt."},{"statement":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw)⁺)＊\n⊆ ((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n  ⨾ (Grf ⨾ Grmw)＊.","conclusion":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ ((Grf ⨾ Grmw)⁺)＊\n⊆ ((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n  ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"rewrite rt_of_ct.\nrewrite !seqA.\nby rewrite rt_rt."},{"statement":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ (Grf ⨾ Grmw)＊\n⊆ ((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n  ⨾ (Grf ⨾ Grmw)＊.","conclusion":"(((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n ⨾ (Grf ⨾ Grmw)＊) ⨾ (Grf ⨾ Grmw)＊\n⊆ ((((⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^?) ⨾ ⦗W⦘) ⨾ (Gsb ∩ Gsame_loc)^?) ⨾ ⦗W⦘)\n  ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"rewrite !seqA.\nby rewrite rt_rt."},{"statement":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊.","conclusion":"⦗Rel⦘\n⨾ (⦗F⦘ ⨾ Gsb)^?\n  ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊ ⨾ (Grf ⨾ Grmw)＊\n⊆ ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ Gsb)^? ⨾ ⦗W⦘ ⨾ (Gsb ∩ Gsame_loc)^? ⨾ ⦗W⦘ ⨾ (Grf ⨾ Grmw)＊","hypotheses":"","proofString":"by rewrite rt_rt."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"","proofString":"rewrite (dom_rel_helper dom_rfe_rmw_ct_rfi_Acq_in_I).\narewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ ⦗I⦘ ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ ⦗I⦘ ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"","proofString":"arewrite (I ⊆₁ C ∪₁ I) at 2.\nsin_rewrite release_CI_de.\nbasic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ ⦗C ∪₁ I⦘ ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Grelease ⨾ ⦗C ∪₁ I⦘ ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"","proofString":"sin_rewrite release_CI_de.\nbasic_solver."},{"statement":"∅₂ ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂.","conclusion":"∅₂ ⨾ Grfe ⨾ Grmw ⨾ (Grfi ⨾ Grmw)＊ ⨾ Grfi ⨾ ⦗Acq⦘ ⊆ ∅₂","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"rewrite (dom_l (wf_swE rstWF)).\nrewrite (dom_l (wf_swD rstWF)).\narewrite (⦗(FF ∪₁ FW) ∩₁ FRel⦘ ⊆ ⦗FF ∩₁ FRel⦘ ∪ ⦗FW ∩₁ FRel⦘) by basic_solver.\nrelsf; unionL.\nrewrite (sub_sb_in SUB) at 1.\narewrite (FRel ⊆₁ FAcq/Rel) by mode_solver.\ngeneralize sb_F_E; unfolder; ins; desf; exfalso.\nassert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12.\narewrite (⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL.\ngeneralize sw_de, (@sb_trans rstG); basic_solver 21.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"rewrite (dom_l (wf_swD rstWF)).\narewrite (⦗(FF ∪₁ FW) ∩₁ FRel⦘ ⊆ ⦗FF ∩₁ FRel⦘ ∪ ⦗FW ∩₁ FRel⦘) by basic_solver.\nrelsf; unionL.\nrewrite (sub_sb_in SUB) at 1.\narewrite (FRel ⊆₁ FAcq/Rel) by mode_solver.\ngeneralize sb_F_E; unfolder; ins; desf; exfalso.\nassert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12.\narewrite (⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL.\ngeneralize sw_de, (@sb_trans rstG); basic_solver 21.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ ⦗(F ∪₁ W) ∩₁ Rel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ ⦗(F ∪₁ W) ∩₁ Rel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"arewrite (⦗(FF ∪₁ FW) ∩₁ FRel⦘ ⊆ ⦗FF ∩₁ FRel⦘ ∪ ⦗FW ∩₁ FRel⦘) by basic_solver.\nrelsf; unionL.\nrewrite (sub_sb_in SUB) at 1.\narewrite (FRel ⊆₁ FAcq/Rel) by mode_solver.\ngeneralize sb_F_E; unfolder; ins; desf; exfalso.\nassert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12.\narewrite (⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL.\ngeneralize sw_de, (@sb_trans rstG); basic_solver 21.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ (⦗FF ∩₁ FRel⦘ ∪ ⦗FW ∩₁ FRel⦘) ⨾ Gsw\n⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ (⦗FF ∩₁ FRel⦘ ∪ ⦗FW ∩₁ FRel⦘) ⨾ Gsw\n⊆ Gsb","hypotheses":"","proofString":"relsf; unionL.\nrewrite (sub_sb_in SUB) at 1.\narewrite (FRel ⊆₁ FAcq/Rel) by mode_solver.\ngeneralize sb_F_E; unfolder; ins; desf; exfalso.\nassert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12.\narewrite (⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL.\ngeneralize sw_de, (@sb_trans rstG); basic_solver 21.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ ⦗FF ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ ⦗FF ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"rewrite (sub_sb_in SUB) at 1.\narewrite (FRel ⊆₁ FAcq/Rel) by mode_solver.\ngeneralize sb_F_E; unfolder; ins; desf; exfalso.\nassert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"arewrite (FRel ⊆₁ FAcq/Rel) by mode_solver.\ngeneralize sb_F_E; unfolder; ins; desf; exfalso.\nassert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗E⦘ ⨾ ⦗FF ∩₁ FAcq/Rel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"generalize sb_F_E; unfolder; ins; desf; exfalso.\nassert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12."},{"statement":"(H : forall x0 : actid,\n(exists y0 : actid,\n   Fsb x0 y0 /\\ (is_f Flab y0 /\\ is_ra Flab y0) /\\ (E0 ∩₁ FE) y0) ->\nC x0 \\/ I x0) (x y : actid) (H0 : (E0 ∩₁ FE) x) (H9 : ~ C x) (H7 : (E0 ∩₁ FE) x) (H8 : ~ I x) (z0 : actid) (H1 : Fsb x z0) (H6 : is_ra Flab z0) (H5 : is_f Flab z0) (H4 : (E0 ∩₁ FE) z0) (H3 : Gsw z0 y) : False.","conclusion":"False","hypotheses":"(H : forall x0 : actid,\n(exists y0 : actid,\n   Fsb x0 y0 /\\ (is_f Flab y0 /\\ is_ra Flab y0) /\\ (E0 ∩₁ FE) y0) ->\nC x0 \\/ I x0) (x y : actid) (H0 : (E0 ∩₁ FE) x) (H9 : ~ C x) (H7 : (E0 ∩₁ FE) x) (H8 : ~ I x) (z0 : actid) (H1 : Fsb x z0) (H6 : is_ra Flab z0) (H5 : is_f Flab z0) (H4 : (E0 ∩₁ FE) z0) (H3 : Gsw z0 y)","proofString":"assert (~ (C x \\/ I x)) by tauto.\nbasic_solver 12."},{"statement":"(H : forall x0 : actid,\n(exists y0 : actid,\n   Fsb x0 y0 /\\ (is_f Flab y0 /\\ is_ra Flab y0) /\\ (E0 ∩₁ FE) y0) ->\nC x0 \\/ I x0) (x y : actid) (H0 : (E0 ∩₁ FE) x) (H9 : ~ C x) (H7 : (E0 ∩₁ FE) x) (H8 : ~ I x) (z0 : actid) (H1 : Fsb x z0) (H6 : is_ra Flab z0) (H5 : is_f Flab z0) (H4 : (E0 ∩₁ FE) z0) (H3 : Gsw z0 y) (H2 : ~ (C x \\/ I x)) : False.","conclusion":"False","hypotheses":"(H : forall x0 : actid,\n(exists y0 : actid,\n   Fsb x0 y0 /\\ (is_f Flab y0 /\\ is_ra Flab y0) /\\ (E0 ∩₁ FE) y0) ->\nC x0 \\/ I x0) (x y : actid) (H0 : (E0 ∩₁ FE) x) (H9 : ~ C x) (H7 : (E0 ∩₁ FE) x) (H8 : ~ I x) (z0 : actid) (H1 : Fsb x z0) (H6 : is_ra Flab z0) (H5 : is_f Flab z0) (H4 : (E0 ∩₁ FE) z0) (H3 : Gsw z0 y) (H2 : ~ (C x \\/ I x))","proofString":"basic_solver 12."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗E⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"arewrite (⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘).\nby unfolder; ins; desf; tauto.\nrelsf; unionL.\ngeneralize sw_de, (@sb_trans rstG); basic_solver 21.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘.","conclusion":"⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘","hypotheses":"","proofString":"by unfolder; ins; desf; tauto."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Gsb ⨾ (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘) ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘\n⨾ Gsb ⨾ (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗C ∪₁ I⦘) ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"relsf; unionL.\ngeneralize sw_de, (@sb_trans rstG); basic_solver 21.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw\n⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw\n⊆ Gsb","hypotheses":"","proofString":"generalize sw_de, (@sb_trans rstG); basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗C ∪₁ I⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗C ∪₁ I⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"rewrite (sub_sb_in SUB) at 1.\ngeneralize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗C ∪₁ I⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗C ∪₁ I⦘ ⨾ ⦗FW ∩₁ FRel⦘ ⨾ Gsw ⊆ Gsb","hypotheses":"","proofString":"generalize RELCOV (dom_sb_covered WF TCOH ICOH); unfolder; ins; desf; exfalso; basic_solver 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (Gsb ∪ Gsw)⁺ ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (Gsb ∪ Gsw)⁺ ⊆ Gsb","hypotheses":"","proofString":"rewrite path_union.\ngeneralize (@sb_trans rstG); ins; relsf; unionL.\nbasic_solver 12.\napply ct_ind_right with (P:= fun r => ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ r ⨾ Gsb^?).\neauto with hahn.\nrewrite !seqA; sin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf.\nintros k H1.\narewrite (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘).\nbasic_solver.\nsin_rewrite H1.\narewrite (Gsb ⊆ Gsb^?) at 1.\nsin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (Gsb⁺ ∪ (Gsb＊ ⨾ Gsw)⁺ ⨾ Gsb＊) ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (Gsb⁺ ∪ (Gsb＊ ⨾ Gsw)⁺ ⨾ Gsb＊) ⊆ Gsb","hypotheses":"","proofString":"generalize (@sb_trans rstG); ins; relsf; unionL.\nbasic_solver 12.\napply ct_ind_right with (P:= fun r => ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ r ⨾ Gsb^?).\neauto with hahn.\nrewrite !seqA; sin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf.\nintros k H1.\narewrite (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘).\nbasic_solver.\nsin_rewrite H1.\narewrite (Gsb ⊆ Gsb^?) at 1.\nsin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) : ⦗(E0 ∩₁ FE \\₁ C) ∩₁ (E0 ∩₁ FE \\₁ I)⦘ ⨾ Gsb ⊆ Gsb.","conclusion":"⦗(E0 ∩₁ FE \\₁ C) ∩₁ (E0 ∩₁ FE \\₁ I)⦘ ⨾ Gsb ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"basic_solver 12."},{"statement":"(H : transitive Gsb) : ⦗(E0 ∩₁ FE \\₁ C) ∩₁ (E0 ∩₁ FE \\₁ I)⦘ ⨾ (Gsb^? ⨾ Gsw)⁺ ⨾ Gsb^? ⊆ Gsb.","conclusion":"⦗(E0 ∩₁ FE \\₁ C) ∩₁ (E0 ∩₁ FE \\₁ I)⦘ ⨾ (Gsb^? ⨾ Gsw)⁺ ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"apply ct_ind_right with (P:= fun r => ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ r ⨾ Gsb^?).\neauto with hahn.\nrewrite !seqA; sin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf.\nintros k H1.\narewrite (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘).\nbasic_solver.\nsin_rewrite H1.\narewrite (Gsb ⊆ Gsb^?) at 1.\nsin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) : good_ctx (fun r : relation actid => ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ r ⨾ Gsb^?).","conclusion":"good_ctx (fun r : relation actid => ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ r ⨾ Gsb^?)","hypotheses":"(H : transitive Gsb)","proofString":"eauto with hahn."},{"statement":"(H : transitive Gsb) : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (Gsb^? ⨾ Gsw) ⨾ Gsb^? ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (Gsb^? ⨾ Gsw) ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"rewrite !seqA; sin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) : Gsb ⨾ Gsb^? ⊆ Gsb.","conclusion":"Gsb ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"generalize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) : forall k : relation actid,\n⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb ->\n⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (k ⨾ Gsb^? ⨾ Gsw) ⨾ Gsb^? ⊆ Gsb.","conclusion":"forall k : relation actid,\n⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb ->\n⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (k ⨾ Gsb^? ⨾ Gsw) ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb)","proofString":"intros k H1.\narewrite (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘).\nbasic_solver.\nsin_rewrite H1.\narewrite (Gsb ⊆ Gsb^?) at 1.\nsin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb) : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (k ⨾ Gsb^? ⨾ Gsw) ⨾ Gsb^? ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ (k ⨾ Gsb^? ⨾ Gsw) ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb)","proofString":"arewrite (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘).\nbasic_solver.\nsin_rewrite H1.\narewrite (Gsb ⊆ Gsb^?) at 1.\nsin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb) : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘","hypotheses":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb)","proofString":"basic_solver."},{"statement":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb) : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⨾ Gsw ⨾ Gsb^?\n⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⨾ Gsw ⨾ Gsb^?\n⊆ Gsb","hypotheses":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb)","proofString":"sin_rewrite H1.\narewrite (Gsb ⊆ Gsb^?) at 1.\nsin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb) : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ Gsw ⨾ Gsb^? ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ Gsw ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb)","proofString":"arewrite (Gsb ⊆ Gsb^?) at 1.\nsin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb) : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb^? ⨾ Gsw ⨾ Gsb^? ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb^? ⨾ Gsw ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb)","proofString":"sin_rewrite sb_sw_de.\ngeneralize (@sb_trans rstG); ins; relsf."},{"statement":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb) : Gsb ⨾ Gsb^? ⊆ Gsb.","conclusion":"Gsb ⨾ Gsb^? ⊆ Gsb","hypotheses":"(H : transitive Gsb) (k : relation actid) (H1 : ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ k ⨾ Gsb^? ⊆ Gsb)","proofString":"generalize (@sb_trans rstG); ins; relsf."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘","hypotheses":"","proofString":"basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Ghb ⨾ (rst_sc ⨾ Ghb)^?\n⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Ghb ⨾ (rst_sc ⨾ Ghb)^?\n⊆ Gsb","hypotheses":"","proofString":"sin_rewrite hb_de.\ncase_refl _; [basic_solver|].\nrewrite (dom_l (wf_scD WF_SC_rst)).\nrewrite (dom_l (wf_scE WF_SC_rst)).\nrewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ (rst_sc ⨾ Ghb)^? ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ (rst_sc ⨾ Ghb)^? ⊆ Gsb","hypotheses":"","proofString":"case_refl _; [basic_solver|].\nrewrite (dom_l (wf_scD WF_SC_rst)).\nrewrite (dom_l (wf_scE WF_SC_rst)).\nrewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ rst_sc ⨾ Ghb ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ rst_sc ⨾ Ghb ⊆ Gsb","hypotheses":"","proofString":"rewrite (dom_l (wf_scD WF_SC_rst)).\nrewrite (dom_l (wf_scE WF_SC_rst)).\nrewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ (⦗F ∩₁ Sc⦘ ⨾ rst_sc) ⨾ Ghb ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ (⦗F ∩₁ Sc⦘ ⨾ rst_sc) ⨾ Ghb ⊆ Gsb","hypotheses":"","proofString":"rewrite (dom_l (wf_scE WF_SC_rst)).\nrewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc) ⨾ Ghb ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc) ⨾ Ghb ⊆ Gsb","hypotheses":"","proofString":"rewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb","hypotheses":"","proofString":"arewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_sb_in SUB) at 1.\ngeneralize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘.","conclusion":"⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘","hypotheses":"","proofString":"generalize E_F_Sc_in_C; basic_solver."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Gsb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb","hypotheses":"","proofString":"rewrite (sub_sb_in SUB) at 1.\ngeneralize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb.","conclusion":"⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb","hypotheses":"","proofString":"generalize (dom_sb_covered WF TCOH ICOH).\nunfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"dom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C ->\n⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb.","conclusion":"dom_rel (Fsb ⨾ ⦗C⦘) ⊆₁ C ->\n⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Fsb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⊆ Gsb","hypotheses":"","proofString":"unfolder; ins; desf.\nexfalso; eauto 21."},{"statement":"(H : forall x0 : actid, (exists y0 : actid, Fsb x0 y0 /\\ C y0) -> C x0) (x y : actid) (H0 : (E0 ∩₁ FE) x) (H8 : ~ C x) (H6 : (E0 ∩₁ FE) x) (H7 : ~ I x) (z0 : actid) (H1 : Fsb x z0) (H5 : C z0) (z1 : actid) (H3 : rst_sc z0 z1) (H4 : Ghb z1 y) : Gsb x y.","conclusion":"Gsb x y","hypotheses":"(H : forall x0 : actid, (exists y0 : actid, Fsb x0 y0 /\\ C y0) -> C x0) (x y : actid) (H0 : (E0 ∩₁ FE) x) (H8 : ~ C x) (H6 : (E0 ∩₁ FE) x) (H7 : ~ I x) (z0 : actid) (H1 : Fsb x z0) (H5 : C z0) (z1 : actid) (H3 : rst_sc z0 z1) (H4 : Ghb z1 y)","proofString":"exfalso; eauto 21."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗E⦘ ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗E⦘ ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite (⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗E ∩₁ C ∪₁ E ∩₁ I⦘).\nunfolder.\nins.\ndesf.\ntauto.\nrelsf; unionL; splits; [|generalize w_covered_issued; basic_solver| basic_solver].\nrewrite <- !dom_eqv1.\nsin_rewrite hb_de.\nrewrite (dom_l (@wf_sbE rstG)), !seqA.\nrewrite sb_tid_init'; relsf; unionL; splits.\nrewrite <- set_interA, (set_interC W).\nseq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence.\nunfolder; ins.\neapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗E ∩₁ C ∪₁ E ∩₁ I⦘.","conclusion":"⦗E⦘ ⊆ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗E ∩₁ C ∪₁ E ∩₁ I⦘","hypotheses":"","proofString":"unfolder.\nins.\ndesf.\ntauto."},{"statement":"forall x y : actid,\nx = y /\\ E x ->\nx = y /\\ ((E x /\\ ~ C x) /\\ E x /\\ ~ I x \\/ E x /\\ C x \\/ E x /\\ I x).","conclusion":"forall x y : actid,\nx = y /\\ E x ->\nx = y /\\ ((E x /\\ ~ C x) /\\ E x /\\ ~ I x \\/ E x /\\ C x \\/ E x /\\ I x)","hypotheses":"","proofString":"ins.\ndesf.\ntauto."},{"statement":"(x y : actid) (H : x = y /\\ (E0 ∩₁ FE) x) : x = y /\\\n(((E0 ∩₁ FE) x /\\ ~ C x) /\\ (E0 ∩₁ FE) x /\\ ~ I x \\/\n (E0 ∩₁ FE) x /\\ C x \\/ (E0 ∩₁ FE) x /\\ I x).","conclusion":"x = y /\\\n(((E0 ∩₁ FE) x /\\ ~ C x) /\\ (E0 ∩₁ FE) x /\\ ~ I x \\/\n (E0 ∩₁ FE) x /\\ C x \\/ (E0 ∩₁ FE) x /\\ I x)","hypotheses":"(x y : actid) (H : x = y /\\ (E0 ∩₁ FE) x)","proofString":"desf.\ntauto."},{"statement":"(y : actid) (H0 : (E0 ∩₁ FE) y) : y = y /\\\n(((E0 ∩₁ FE) y /\\ ~ C y) /\\ (E0 ∩₁ FE) y /\\ ~ I y \\/\n (E0 ∩₁ FE) y /\\ C y \\/ (E0 ∩₁ FE) y /\\ I y).","conclusion":"y = y /\\\n(((E0 ∩₁ FE) y /\\ ~ C y) /\\ (E0 ∩₁ FE) y /\\ ~ I y \\/\n (E0 ∩₁ FE) y /\\ C y \\/ (E0 ∩₁ FE) y /\\ I y)","hypotheses":"(y : actid) (H0 : (E0 ∩₁ FE) y)","proofString":"tauto."},{"statement":"dom_rel\n  (⦗W⦘\n   ⨾ (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗E ∩₁ C ∪₁ E ∩₁ I⦘)\n     ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel\n  (⦗W⦘\n   ⨾ (⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ∪ ⦗E ∩₁ C ∪₁ E ∩₁ I⦘)\n     ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"relsf; unionL; splits; [|generalize w_covered_issued; basic_solver| basic_solver].\nrewrite <- !dom_eqv1.\nsin_rewrite hb_de.\nrewrite (dom_l (@wf_sbE rstG)), !seqA.\nrewrite sb_tid_init'; relsf; unionL; splits.\nrewrite <- set_interA, (set_interC W).\nseq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence.\nunfolder; ins.\neapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"W ∩₁ ((E \\₁ C) ∩₁ (E \\₁ I) ∩₁ dom_rel (Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘)) ⊆₁ I.","conclusion":"W ∩₁ ((E \\₁ C) ∩₁ (E \\₁ I) ∩₁ dom_rel (Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘)) ⊆₁ I","hypotheses":"","proofString":"rewrite <- !dom_eqv1.\nsin_rewrite hb_de.\nrewrite (dom_l (@wf_sbE rstG)), !seqA.\nrewrite sb_tid_init'; relsf; unionL; splits.\nrewrite <- set_interA, (set_interC W).\nseq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence.\nunfolder; ins.\neapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗(E \\₁ C) ∩₁ (E \\₁ I)⦘ ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"sin_rewrite hb_de.\nrewrite (dom_l (@wf_sbE rstG)), !seqA.\nrewrite sb_tid_init'; relsf; unionL; splits.\nrewrite <- set_interA, (set_interC W).\nseq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence.\nunfolder; ins.\neapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"dom_rel (⦗W⦘ ⨾ Gsb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ Gsb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (@wf_sbE rstG)), !seqA.\nrewrite sb_tid_init'; relsf; unionL; splits.\nrewrite <- set_interA, (set_interC W).\nseq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence.\nunfolder; ins.\neapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"dom_rel (⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (⦗W⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite sb_tid_init'; relsf; unionL; splits.\nrewrite <- set_interA, (set_interC W).\nseq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence.\nunfolder; ins.\neapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"W ∩₁ (E ∩₁ dom_rel (Gsb ∩ same_tid ⨾ ⦗I ∩₁ NTid_ thread⦘)) ⊆₁ I.","conclusion":"W ∩₁ (E ∩₁ dom_rel (Gsb ∩ same_tid ⨾ ⦗I ∩₁ NTid_ thread⦘)) ⊆₁ I","hypotheses":"","proofString":"rewrite <- set_interA, (set_interC W).\nseq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence."},{"statement":"E ∩₁ W ∩₁ dom_rel (Gsb ∩ same_tid ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"E ∩₁ W ∩₁ dom_rel (Gsb ∩ same_tid ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"seq_rewrite <- IT_new_co.\nunfold same_tid in *.\nunfolder; ins; desf; congruence."},{"statement":"(I ∪₁ E ∩₁ W ∩₁ Tid_ thread)\n∩₁ dom_rel (Gsb ∩ same_tid ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"(I ∪₁ E ∩₁ W ∩₁ Tid_ thread)\n∩₁ dom_rel (Gsb ∩ same_tid ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"unfold same_tid in *.\nunfolder; ins; desf; congruence."},{"statement":"(I ∪₁ E ∩₁ W ∩₁ Tid_ thread)\n∩₁ dom_rel (Gsb ∩ (fun x y : actid => tid x = tid y) ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ I.","conclusion":"(I ∪₁ E ∩₁ W ∩₁ Tid_ thread)\n∩₁ dom_rel (Gsb ∩ (fun x y : actid => tid x = tid y) ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"unfolder; ins; desf; congruence."},{"statement":"W ∩₁ (E ∩₁ dom_rel ((⦗Init⦘ ⨾ Gsb) ⨾ ⦗I ∩₁ NTid_ thread⦘)) ⊆₁ I.","conclusion":"W ∩₁ (E ∩₁ dom_rel ((⦗Init⦘ ⨾ Gsb) ⨾ ⦗I ∩₁ NTid_ thread⦘)) ⊆₁ I","hypotheses":"","proofString":"unfolder; ins.\neapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"(x : actid) (H : is_w Flab x /\\\n(E0 ∩₁ FE) x /\\\n(exists y : actid, is_init x /\\ Gsb x y /\\ I y /\\ tid y <> thread)) : I x.","conclusion":"I x","hypotheses":"(x : actid) (H : is_w Flab x /\\\n(E0 ∩₁ FE) x /\\\n(exists y : actid, is_init x /\\ Gsb x y /\\ I y /\\ tid y <> thread))","proofString":"eapply init_issued; eauto.\ndesf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"(x : actid) (H : is_w Flab x /\\\n(E0 ∩₁ FE) x /\\\n(exists y : actid, is_init x /\\ Gsb x y /\\ I y /\\ tid y <> thread)) : (Init ∩₁ FE) x.","conclusion":"(Init ∩₁ FE) x","hypotheses":"(x : actid) (H : is_w Flab x /\\\n(E0 ∩₁ FE) x /\\\n(exists y : actid, is_init x /\\ Gsb x y /\\ I y /\\ tid y <> thread))","proofString":"desf.\nsplit; auto.\nby apply (sub_E_in SUB)."},{"statement":"(x : actid) (H : is_w Flab x) (H0 : (E0 ∩₁ FE) x) (y : actid) (H1 : is_init x) (H2 : Gsb x y) (H3 : I y) (H4 : tid y <> thread) : (Init ∩₁ FE) x.","conclusion":"(Init ∩₁ FE) x","hypotheses":"(x : actid) (H : is_w Flab x) (H0 : (E0 ∩₁ FE) x) (y : actid) (H1 : is_init x) (H2 : Gsb x y) (H3 : I y) (H4 : tid y <> thread)","proofString":"split; auto.\nby apply (sub_E_in SUB)."},{"statement":"(x : actid) (H : is_w Flab x) (H0 : (E0 ∩₁ FE) x) (y : actid) (H1 : is_init x) (H2 : Gsb x y) (H3 : I y) (H4 : tid y <> thread) : FE x.","conclusion":"FE x","hypotheses":"(x : actid) (H : is_w Flab x) (H0 : (E0 ∩₁ FE) x) (y : actid) (H1 : is_init x) (H2 : Gsb x y) (H3 : I y) (H4 : tid y <> thread)","proofString":"by apply (sub_E_in SUB)."},{"statement":"W ∩₁ dom_rel (Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"W ∩₁ dom_rel (Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"generalize W_hb_to_I_NTid; basic_solver 21."},{"statement":"W ∩₁ dom_rel (Ghb ⨾ (rst_sc ⨾ Ghb) ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"W ∩₁ dom_rel (Ghb ⨾ (rst_sc ⨾ Ghb) ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !seqA.\nrewrite (dom_l (wf_scD WF_SC_rst)).\nrewrite (dom_l (wf_scE WF_SC_rst)).\nrewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_hb_in SUB).\nsin_rewrite hb_C.\ngeneralize w_covered_issued; basic_solver 21."},{"statement":"W ∩₁ dom_rel (Ghb ⨾ rst_sc ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"W ∩₁ dom_rel (Ghb ⨾ rst_sc ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_scD WF_SC_rst)).\nrewrite (dom_l (wf_scE WF_SC_rst)).\nrewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_hb_in SUB).\nsin_rewrite hb_C.\ngeneralize w_covered_issued; basic_solver 21."},{"statement":"W ∩₁ dom_rel (Ghb ⨾ (⦗F ∩₁ Sc⦘ ⨾ rst_sc) ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"W ∩₁ dom_rel (Ghb ⨾ (⦗F ∩₁ Sc⦘ ⨾ rst_sc) ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_scE WF_SC_rst)).\nrewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_hb_in SUB).\nsin_rewrite hb_C.\ngeneralize w_covered_issued; basic_solver 21."},{"statement":"W ∩₁ dom_rel (Ghb ⨾ (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc) ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ I.","conclusion":"W ∩₁ dom_rel (Ghb ⨾ (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc) ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite !seqA.\narewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_hb_in SUB).\nsin_rewrite hb_C.\ngeneralize w_covered_issued; basic_solver 21."},{"statement":"W ∩₁ dom_rel (Ghb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ I.","conclusion":"W ∩₁ dom_rel (Ghb ⨾ ⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⨾ rst_sc ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite (⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘).\ngeneralize E_F_Sc_in_C; basic_solver.\nrewrite (sub_hb_in SUB).\nsin_rewrite hb_C.\ngeneralize w_covered_issued; basic_solver 21."},{"statement":"⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘.","conclusion":"⦗F ∩₁ Sc⦘ ⨾ ⦗E⦘ ⊆ ⦗C⦘","hypotheses":"","proofString":"generalize E_F_Sc_in_C; basic_solver."},{"statement":"W ∩₁ dom_rel (Ghb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"W ∩₁ dom_rel (Ghb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Ghb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (sub_hb_in SUB).\nsin_rewrite hb_C.\ngeneralize w_covered_issued; basic_solver 21."},{"statement":"W ∩₁ dom_rel (Fhb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Fhb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"W ∩₁ dom_rel (Fhb ⨾ ⦗C⦘ ⨾ rst_sc ⨾ Fhb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"sin_rewrite hb_C.\ngeneralize w_covered_issued; basic_solver 21."},{"statement":"W ∩₁ dom_rel ((⦗C⦘ ⨾ Ghb) ⨾ rst_sc ⨾ Fhb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"W ∩₁ dom_rel ((⦗C⦘ ⨾ Ghb) ⨾ rst_sc ⨾ Fhb ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"generalize w_covered_issued; basic_solver 21."},{"statement":"dom_rel (Gdetour ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Gdetour ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (sub_detour_in SUB).\nrewrite E_E0; unfold E0.\nrewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\narewrite (Fdetour ⊆ Fdetour  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_detourD WF)).\nrewrite (init_w WF).\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)        ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite E_E0; unfold E0.\nrewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\narewrite (Fdetour ⊆ Fdetour  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_detourD WF)).\nrewrite (init_w WF).\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)        ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel\n  (Fdetour\n   ⨾ ⦗(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n       ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Fdetour\n   ⨾ ⦗(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n       ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\narewrite (Fdetour ⊆ Fdetour  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_detourD WF)).\nrewrite (init_w WF).\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)        ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel\n  (Fdetour\n   ⨾ ⦗C ∩₁ NTid_ thread ∪₁ I ∩₁ NTid_ thread\n      ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Fdetour\n   ⨾ ⦗C ∩₁ NTid_ thread ∪₁ I ∩₁ NTid_ thread\n      ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\narewrite (Fdetour ⊆ Fdetour  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_detourD WF)).\nrewrite (init_w WF).\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)        ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21."},{"statement":"dom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"generalize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21."},{"statement":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"ie_unfolder.\nbasic_solver 21."},{"statement":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (Fdetour ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗I ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗FW ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗FW ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘)\n⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite (Fdetour ⊆ Fdetour  ⨾  ⦗set_compl Init⦘).\nrewrite (dom_r (wf_detourD WF)).\nrewrite (init_w WF).\nunfolder; ins; desf; splits; eauto.\nintro; type_solver.\nunfolder; ins; desf.\napply sb_tid_init in H1; desf."},{"statement":"Fdetour ⊆ Fdetour ⨾ ⦗set_compl Init⦘.","conclusion":"Fdetour ⊆ Fdetour ⨾ ⦗set_compl Init⦘","hypotheses":"","proofString":"rewrite (dom_r (wf_detourD WF)).\nrewrite (init_w WF).\nunfolder; ins; desf; splits; eauto.\nintro; type_solver."},{"statement":"Fdetour ⨾ ⦗FR⦘ ⊆ (Fdetour ⨾ ⦗FR⦘) ⨾ ⦗set_compl Init⦘.","conclusion":"Fdetour ⨾ ⦗FR⦘ ⊆ (Fdetour ⨾ ⦗FR⦘) ⨾ ⦗set_compl Init⦘","hypotheses":"","proofString":"rewrite (init_w WF).\nunfolder; ins; desf; splits; eauto.\nintro; type_solver."},{"statement":"Fdetour ⨾ ⦗FR⦘ ⊆ (Fdetour ⨾ ⦗FR⦘) ⨾ ⦗set_compl FW⦘.","conclusion":"Fdetour ⨾ ⦗FR⦘ ⊆ (Fdetour ⨾ ⦗FR⦘) ⨾ ⦗set_compl FW⦘","hypotheses":"","proofString":"unfolder; ins; desf; splits; eauto.\nintro; type_solver."},{"statement":"(x y : actid) (H : Fdetour x y) (H0 : is_r Flab y) : ~ is_w Flab y.","conclusion":"~ is_w Flab y","hypotheses":"(x y : actid) (H : Fdetour x y) (H0 : is_r Flab y)","proofString":"intro; type_solver."},{"statement":"dom_rel\n  (Fdetour\n   ⨾ ⦗set_compl Init⦘\n     ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Fdetour\n   ⨾ ⦗set_compl Init⦘\n     ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ NTid_ thread⦘) ⊆₁ I","hypotheses":"","proofString":"unfolder; ins; desf.\napply sb_tid_init in H1; desf."},{"statement":"(x y : actid) (H : Fdetour x y) (H0 : ~ is_init y) (y0 : actid) (H1 : Fsb y y0) (H5 : S y0) (H2 : tid y <> tid y0) : I x.","conclusion":"I x","hypotheses":"(x y : actid) (H : Fdetour x y) (H0 : ~ is_init y) (y0 : actid) (H1 : Fsb y y0) (H5 : S y0) (H2 : tid y <> tid y0)","proofString":"apply sb_tid_init in H1; desf."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘)\n⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)        ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘)\n⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread⦘)\n⊆₁ I","hypotheses":"","proofString":"arewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)        ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘).","conclusion":"dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ NTid_ thread ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ dom_rel ((Fdetour ∪ Frfe) ⨾ Fppo ⨾ ⦗I⦘).","conclusion":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ dom_rel ((Fdetour ∪ Frfe) ⨾ Fppo ⨾ ⦗I⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (Gdetour ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Gdetour ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (sub_detour_in SUB).\nrewrite E_E0; unfold E0.\nrewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\nrewrite set_interA.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)       ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nerewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗E ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite E_E0; unfold E0.\nrewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\nrewrite set_interA.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)       ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nerewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel\n  (Fdetour\n   ⨾ ⦗(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n       ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Fdetour\n   ⨾ ⦗(C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n       ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !set_inter_union_l.\nrewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\nrewrite set_interA.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)       ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nerewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel\n  (Fdetour\n   ⨾ ⦗C ∩₁ R ∩₁ Acq ∪₁ I ∩₁ R ∩₁ Acq\n      ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ R ∩₁ Acq\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel\n  (Fdetour\n   ⨾ ⦗C ∩₁ R ∩₁ Acq ∪₁ I ∩₁ R ∩₁ Acq\n      ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ R ∩₁ Acq\n      ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite !id_union; relsf; unionL; splits.\nrewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21.\nrewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver.\nrewrite set_interA.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20.\nrewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)       ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nerewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_l (wf_detourD WF)), detour_in_sb.\ngeneralize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21."},{"statement":"dom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"generalize w_covered_issued, dom_sb_covered.\nie_unfolder.\nbasic_solver 21."},{"statement":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"ie_unfolder.\nbasic_solver 21."},{"statement":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"(forall (G : execution) (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 ->\n (fun x : actid => is_w (lab G) x) ∩₁ covered T0 ⊆₁ issued T0) ->\n(forall G : execution,\n Wf G ->\n forall (sc0 : relation actid) (T0 : trav_label -> Prop),\n tls_coherent G T0 ->\n iord_coherent G sc0 T0 -> dom_rel (sb G ⨾ ⦗covered T0⦘) ⊆₁ covered T0) ->\ndom_rel ((⦗FW⦘ ⨾ Fsb) ⨾ ⦗C ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"basic_solver 21."},{"statement":"dom_rel (Fdetour ⨾ ⦗I ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗I ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (dom_r (wf_detourD WF)) at 1.\nerewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗I ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗I ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite issuedW at 1; eauto.\ntype_solver."},{"statement":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗FW ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗FR⦘) ⨾ ⦗FW ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite set_interA.\nrewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ (R ∩₁ Acq)⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ∩₁ (R ∩₁ Acq)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite set_interC.\nrewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel (Fdetour ⨾ ⦗R ∩₁ Acq ∩₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗R ∩₁ Acq ∩₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite id_inter.\nrewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel (Fdetour ⨾ ⦗R ∩₁ Acq⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗R ∩₁ Acq⦘ ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite <- !seqA.\nrewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)⦘)\n⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite crE.\nrewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel\n  ((Fdetour ⨾ ⦗R ∩₁ Acq⦘)\n   ⨾ (⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel\n  ((Fdetour ⨾ ⦗R ∩₁ Acq⦘)\n   ⨾ (⦗fun _ : actid => True⦘ ∪ Fsb) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite seq_union_l, seq_id_l.\nrewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel\n  ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ (⦗Tid_ thread ∩₁ S⦘ ∪ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘))\n⊆₁ I.","conclusion":"dom_rel\n  ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ (⦗Tid_ thread ∩₁ S⦘ ∪ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘))\n⊆₁ I","hypotheses":"","proofString":"rewrite !seq_union_r, dom_union.\nunionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘)\n∪₁ dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"unionL.\nerewrite reservedW; eauto.\ntype_solver.\nrewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite reservedW; eauto.\ntype_solver."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗Tid_ thread ∩₁ FW⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ ⦗Tid_ thread ∩₁ FW⦘) ⊆₁ I","hypotheses":"","proofString":"type_solver."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I.","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite <- (rcoh_dr_R_acq_I ); eauto.\nrewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘).","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ dom_rel ((Fdetour ∪ Frfe) ⨾ (Frmw ⨾ Frfi)＊ ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘)","hypotheses":"","proofString":"rewrite rtE.\nbasic_solver 20."},{"statement":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ dom_rel\n     ((Fdetour ∪ Frfe)\n      ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi)⁺) ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘).","conclusion":"dom_rel ((Fdetour ⨾ ⦗R ∩₁ Acq⦘) ⨾ Fsb ⨾ ⦗Tid_ thread ∩₁ S⦘)\n⊆₁ dom_rel\n     ((Fdetour ∪ Frfe)\n      ⨾ (⦗fun _ : actid => True⦘ ∪ (Frmw ⨾ Frfi)⁺) ⨾ ⦗FR ∩₁ FAcq⦘ ⨾ Fsb ⨾ ⦗S⦘)","hypotheses":"","proofString":"basic_solver 20."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite (rmw_in_ppo WF).\narewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)       ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nerewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq⦘) ⊆₁ I","hypotheses":"","proofString":"arewrite    (dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘)       ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)).\nbasic_solver.\nrewrite dom_rel_eqv_dom_rel.\nerewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘).","conclusion":"dom_rel (Fppo ⨾ ⦗NTid_ thread ∩₁ I⦘) ∩₁ R ∩₁ Acq ⊆₁ dom_rel (Fppo ⨾ ⦗I⦘)","hypotheses":"","proofString":"basic_solver."},{"statement":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗I⦘)⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ ⦗dom_rel (Fppo ⨾ ⦗I⦘)⦘) ⊆₁ I","hypotheses":"","proofString":"rewrite dom_rel_eqv_dom_rel.\nerewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I.","conclusion":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ I","hypotheses":"","proofString":"erewrite <- dom_detour_rfe_ppo_issued at 2; eauto.\nbasic_solver 10."},{"statement":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ dom_rel ((Fdetour ∪ Frfe) ⨾ Fppo ⨾ ⦗I⦘).","conclusion":"dom_rel (Fdetour ⨾ Fppo ⨾ ⦗I⦘) ⊆₁ dom_rel ((Fdetour ∪ Frfe) ⨾ Fppo ⨾ ⦗I⦘)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T.","conclusion":"dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T","hypotheses":"","proofString":"etransitivity; [|now apply ICOH].\napply dom_rel_mori.\nhahn_frame_r.\napply sub_iord; eauto using SUB."},{"statement":"dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ dom_rel (iord Gf sc ⨾ ⦗T⦘).","conclusion":"dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ dom_rel (iord Gf sc ⨾ ⦗T⦘)","hypotheses":"","proofString":"apply dom_rel_mori.\nhahn_frame_r.\napply sub_iord; eauto using SUB."},{"statement":"iord rstG rst_sc ⨾ ⦗T⦘ ⊆ iord Gf sc ⨾ ⦗T⦘.","conclusion":"iord rstG rst_sc ⨾ ⦗T⦘ ⊆ iord Gf sc ⨾ ⦗T⦘","hypotheses":"","proofString":"hahn_frame_r.\napply sub_iord; eauto using SUB."},{"statement":"iord rstG rst_sc ⊆ iord Gf sc.","conclusion":"iord rstG rst_sc ⊆ iord Gf sc","hypotheses":"","proofString":"apply sub_iord; eauto using SUB."},{"statement":"restr_rel E0 (⦗FE⦘ ⨾ ext_sb ⨾ ⦗FE⦘) ≡ ⦗E⦘ ⨾ ext_sb ⨾ ⦗E⦘.","conclusion":"restr_rel E0 (⦗FE⦘ ⨾ ext_sb ⨾ ⦗FE⦘) ≡ ⦗E⦘ ⨾ ext_sb ⨾ ⦗E⦘","hypotheses":"","proofString":"rewrite <- !restr_relE, restr_restr.\nrewrite set_inter_absorb_l; [| apply E0_in_Gf].\nrewrite E_E0.\ndone."},{"statement":"restr_rel (FE ∩₁ E0) ext_sb ≡ restr_rel E ext_sb.","conclusion":"restr_rel (FE ∩₁ E0) ext_sb ≡ restr_rel E ext_sb","hypotheses":"","proofString":"rewrite set_inter_absorb_l; [| apply E0_in_Gf].\nrewrite E_E0.\ndone."},{"statement":"restr_rel E0 ext_sb ≡ restr_rel E ext_sb.","conclusion":"restr_rel E0 ext_sb ≡ restr_rel E ext_sb","hypotheses":"","proofString":"rewrite E_E0.\ndone."},{"statement":"restr_rel E0 ext_sb ≡ restr_rel E0 ext_sb.","conclusion":"restr_rel E0 ext_sb ≡ restr_rel E0 ext_sb","hypotheses":"","proofString":"done."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread.","conclusion":"forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T)","proofString":"intros e NIe DOM.\ndestruct DOM as [s [SB_ [Ts Ss]]%seq_eqv_r].\ndestruct SB_ as [-> | SB]; [done| ].\nrewrite <- Ts.\neapply (@ninit_sb_same_tid Gf); eauto.\napply seq_eqv_l.\nsplit; auto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (DOM : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e) : tid e = thread.","conclusion":"tid e = thread","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (DOM : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e)","proofString":"destruct DOM as [s [SB_ [Ts Ss]]%seq_eqv_r].\ndestruct SB_ as [-> | SB]; [done| ].\nrewrite <- Ts.\neapply (@ninit_sb_same_tid Gf); eauto.\napply seq_eqv_l.\nsplit; auto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB_ : Fsb^? e s) (Ts : tid s = thread) (Ss : S s) : tid e = thread.","conclusion":"tid e = thread","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB_ : Fsb^? e s) (Ts : tid s = thread) (Ss : S s)","proofString":"destruct SB_ as [-> | SB]; [done| ].\nrewrite <- Ts.\neapply (@ninit_sb_same_tid Gf); eauto.\napply seq_eqv_l.\nsplit; auto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s) : tid e = thread.","conclusion":"tid e = thread","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s)","proofString":"rewrite <- Ts.\neapply (@ninit_sb_same_tid Gf); eauto.\napply seq_eqv_l.\nsplit; auto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s) : tid e = tid s.","conclusion":"tid e = tid s","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s)","proofString":"eapply (@ninit_sb_same_tid Gf); eauto.\napply seq_eqv_l.\nsplit; auto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s) : (⦗set_compl Init⦘ ⨾ Fsb) e s.","conclusion":"(⦗set_compl Init⦘ ⨾ Fsb) e s","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s)","proofString":"apply seq_eqv_l.\nsplit; auto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s) : set_compl Init e /\\ Fsb e s.","conclusion":"set_compl Init e /\\ Fsb e s","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (e : actid) (NIe : ~ is_init e) (s : actid) (SB : Fsb e s) (Ts : tid s = thread) (Ss : S s)","proofString":"split; auto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel (iord rstG rst_sc ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread).","conclusion":"dom_rel (iord rstG rst_sc ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"unionR left -> left.\nrewrite iord_no_reserve.\nrewrite iord_no_reserve in ICOH'.\ngeneralize ICOH'.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel (iord rstG rst_sc ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve.","conclusion":"dom_rel (iord rstG rst_sc ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"rewrite iord_no_reserve.\nrewrite iord_no_reserve in ICOH'.\ngeneralize ICOH'.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘) ⊆₁ T \\₁ action ↓₁ eq ta_reserve.","conclusion":"dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘) ⊆₁ T \\₁ action ↓₁ eq ta_reserve","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"rewrite iord_no_reserve in ICOH'.\ngeneralize ICOH'.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc) ⨾ ⦗T⦘)\n⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘) ⊆₁ T \\₁ action ↓₁ eq ta_reserve.","conclusion":"dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘) ⊆₁ T \\₁ action ↓₁ eq ta_reserve","hypotheses":"(ICOH' : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc) ⨾ ⦗T⦘)\n⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"generalize ICOH'.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc) ⨾ ⦗T⦘)\n⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc) ⨾ ⦗T⦘)\n⊆₁ T ->\ndom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘) ⊆₁ T \\₁ action ↓₁ eq ta_reserve.","conclusion":"dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc) ⨾ ⦗T⦘)\n⊆₁ T ->\ndom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗T \\₁ action ↓₁ eq ta_reserve⦘) ⊆₁ T \\₁ action ↓₁ eq ta_reserve","hypotheses":"(ICOH' : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc) ⨾ ⦗T⦘)\n⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"basic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread).","conclusion":"dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"rewrite set_pair_alt.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗fst ↓₁ eq ta_reserve ∩₁ snd ↓₁ (I ∪₁ S ∩₁ Tid_ thread)⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ fst ↓₁ eq ta_reserve ∩₁ snd ↓₁ (I ∪₁ S ∩₁ Tid_ thread).","conclusion":"dom_rel\n  (restr_rel (set_compl (action ↓₁ eq ta_reserve)) (iord rstG rst_sc)\n   ⨾ ⦗fst ↓₁ eq ta_reserve ∩₁ snd ↓₁ (I ∪₁ S ∩₁ Tid_ thread)⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ fst ↓₁ eq ta_reserve ∩₁ snd ↓₁ (I ∪₁ S ∩₁ Tid_ thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"basic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel\n  (restr_rel (event ↓₁ (E \\₁ Init))\n     (SB rstG rst_sc ∪ RF rstG ∪ FWBOB rstG ∪ AR rstG rst_sc ∪ IPROP rstG\n      ∪ PROP rstG rst_sc)\n   ⨾ ⦗eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread).","conclusion":"dom_rel\n  (restr_rel (event ↓₁ (E \\₁ Init))\n     (SB rstG rst_sc ∪ RF rstG ∪ FWBOB rstG ∪ AR rstG rst_sc ∪ IPROP rstG\n      ∪ PROP rstG rst_sc)\n   ⨾ ⦗eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"rewrite restr_relE, !seqA.\niord_dom_unfolder.\napply path_ut_first in d6.\nred in d6.\nrename b into e1, a0 into e2.\ndes.\nleft.\nright.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver.\ndestruct d6 as [c [SB_ [c' [SC REL]]]].\nenough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver.\ndo 2 left.\nsplit; vauto.\napply tls_set_alt.\ndo 2 (red in d; desc).\nunfold set_union in d.\ndes; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver.\ndo 2 left.\nsplit; vauto.\napply tls_set_alt.\napply seq_eqv_lr in d9.\ndesc.\ndo 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) : dom_rel\n  (⦗event ↓₁ (E \\₁ Init)⦘\n   ⨾ (SB rstG rst_sc ∪ RF rstG ∪ FWBOB rstG ∪ AR rstG rst_sc ∪ IPROP rstG\n      ∪ PROP rstG rst_sc)\n     ⨾ ⦗event ↓₁ (E \\₁ Init)⦘\n       ⨾ ⦗eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread).","conclusion":"dom_rel\n  (⦗event ↓₁ (E \\₁ Init)⦘\n   ⨾ (SB rstG rst_sc ∪ RF rstG ∪ FWBOB rstG ∪ AR rstG rst_sc ∪ IPROP rstG\n      ∪ PROP rstG rst_sc)\n     ⨾ ⦗event ↓₁ (E \\₁ Init)⦘\n       ⨾ ⦗eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve⦘)\n⊆₁ T \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread) \\₁ action ↓₁ eq ta_reserve\n   ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread)","proofString":"iord_dom_unfolder.\napply path_ut_first in d6.\nred in d6.\nrename b into e1, a0 into e2.\ndes.\nleft.\nright.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver.\ndestruct d6 as [c [SB_ [c' [SC REL]]]].\nenough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver.\ndo 2 left.\nsplit; vauto.\napply tls_set_alt.\ndo 2 (red in d; desc).\nunfold set_union in d.\ndes; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver.\ndo 2 left.\nsplit; vauto.\napply tls_set_alt.\napply seq_eqv_lr in d9.\ndesc.\ndo 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d6 : (fun x y : actid => Gsb x y \\/ rst_sc x y)⁺ b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d7 : tid a0 <> thread) : (T (ta_cover, b) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I b \\/ S b /\\ tid b = thread).","conclusion":"(T (ta_cover, b) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I b \\/ S b /\\ tid b = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d6 : (fun x y : actid => Gsb x y \\/ rst_sc x y)⁺ b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d7 : tid a0 <> thread)","proofString":"apply path_ut_first in d6.\nred in d6.\nrename b into e1, a0 into e2.\ndes.\nleft.\nright.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver.\ndestruct d6 as [c [SB_ [c' [SC REL]]]].\nenough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d6 : (Gsb⁺ ∪ Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d7 : tid a0 <> thread) : (T (ta_cover, b) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I b \\/ S b /\\ tid b = thread).","conclusion":"(T (ta_cover, b) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I b \\/ S b /\\ tid b = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d6 : (Gsb⁺ ∪ Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d7 : tid a0 <> thread)","proofString":"red in d6.\nrename b into e1, a0 into e2.\ndes.\nleft.\nright.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver.\ndestruct d6 as [c [SB_ [c' [SC REL]]]].\nenough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d6 : Gsb⁺ b a0 \\/ (Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d7 : tid a0 <> thread) : (T (ta_cover, b) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I b \\/ S b /\\ tid b = thread).","conclusion":"(T (ta_cover, b) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I b \\/ S b /\\ tid b = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d6 : Gsb⁺ b a0 \\/ (Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d7 : tid a0 <> thread)","proofString":"rename b into e1, a0 into e2.\ndes.\nleft.\nright.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver.\ndestruct d6 as [c [SB_ [c' [SC REL]]]].\nenough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2 \\/ (Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread).","conclusion":"(T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2 \\/ (Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"des.\nleft.\nright.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver.\ndestruct d6 as [c [SB_ [c' [SC REL]]]].\nenough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread).","conclusion":"(T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"left.\nright.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n(ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\nta_reserve <> ta_cover.","conclusion":"T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n(ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\nta_reserve <> ta_cover","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"right.\nsplits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\nta_reserve <> ta_cover.","conclusion":"(ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\nta_reserve <> ta_cover","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"splits; vauto.\nreplace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : tid e1 <> thread.","conclusion":"tid e1 <> thread","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"replace (tid e1) with (tid e2); [congruence| ].\napply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : tid e2 = tid e1.","conclusion":"tid e2 = tid e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb⁺ e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"apply clos_trans_of_transitiveD in d6; [| apply sb_trans].\nsymmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : tid e2 = tid e1.","conclusion":"tid e2 = tid e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"symmetry.\neapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : tid e1 = tid e2.","conclusion":"tid e1 = tid e2","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"eapply (@ninit_sb_same_tid Gf).\napply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (⦗set_compl Init⦘ ⨾ Fsb) e1 e2.","conclusion":"(⦗set_compl Init⦘ ⨾ Fsb) e1 e2","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Gsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"apply Gsb_Fsb_restr in d6.\nred in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : restr_rel E0 Fsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (⦗set_compl Init⦘ ⨾ Fsb) e1 e2.","conclusion":"(⦗set_compl Init⦘ ⨾ Fsb) e1 e2","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : restr_rel E0 Fsb e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"red in d6.\ndesc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Fsb e1 e2 /\\ E0 e1 /\\ E0 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (⦗set_compl Init⦘ ⨾ Fsb) e1 e2.","conclusion":"(⦗set_compl Init⦘ ⨾ Fsb) e1 e2","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Fsb e1 e2 /\\ E0 e1 /\\ E0 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"desc.\nbasic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Fsb e1 e2) (d2 : E0 e1) (d8 : E0 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (⦗set_compl Init⦘ ⨾ Fsb) e1 e2.","conclusion":"(⦗set_compl Init⦘ ⨾ Fsb) e1 e2","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : Fsb e1 e2) (d2 : E0 e1) (d8 : E0 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"basic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : (Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread).","conclusion":"(T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (d6 : (Gsb＊ ⨾ rst_sc ⨾ (Gsb ∪ rst_sc)＊) e1 e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"destruct d6 as [c [SB_ [c' [SC REL]]]].\nenough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : (T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread).","conclusion":"(T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"enough (covered T c) as Cc.\napply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10.\nred in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : (T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread).","conclusion":"(T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"apply clos_refl_trans_of_transitive in SB_; [| apply sb_trans].\ndo 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : (T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread).","conclusion":"(T (ta_cover, e1) /\\ ta_reserve <> ta_cover \\/\n (ta_cover = ta_cover /\\ (E0 ∩₁ FE) e1 /\\ tid e1 <> thread) /\\\n ta_reserve <> ta_cover) \\/\nta_reserve = ta_cover /\\ (I e1 \\/ S e1 /\\ tid e1 = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"do 2 left.\nsplit; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : T (ta_cover, e1) /\\ ta_reserve <> ta_cover.","conclusion":"T (ta_cover, e1) /\\ ta_reserve <> ta_cover","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"split; auto.\napply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : T (ta_cover, e1).","conclusion":"T (ta_cover, e1)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"apply tls_set_alt.\ndestruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_cover)) e1.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_cover)) e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb^? e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"destruct SB_ as [-> | SB]; [done | ].\neapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Gsb e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_cover)) e1.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_cover)) e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Gsb e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"eapply dom_sb_covered; eauto.\napply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Gsb e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1.","conclusion":"dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Gsb e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"apply Gsb_Fsb_restr in SB.\nred in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : restr_rel E0 Fsb e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1.","conclusion":"dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : restr_rel E0 Fsb e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"red in SB.\ndesc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Fsb e1 c /\\ E0 e1 /\\ E0 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1.","conclusion":"dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Fsb e1 c /\\ E0 e1 /\\ E0 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"desc.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Fsb e1 c) (SB0 : E0 e1) (SB1 : E0 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c) : dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1.","conclusion":"dom_rel (Fsb ⨾ ⦗covered (fun t : trav_label => T t)⦘) e1","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB : Fsb e1 c) (SB0 : E0 e1) (SB1 : E0 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (Cc : C c)","proofString":"basic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : rst_sc c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"red in SC.\napply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : (⦗E0⦘ ⨾ sc ⨾ ⦗E0⦘) c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : (⦗E0⦘ ⨾ sc ⨾ ⦗E0⦘) c c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"apply seq_eqv_lr in SC.\ndesc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c /\\ sc c c' /\\ E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c /\\ sc c c' /\\ E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"desc.\neapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c) (SC0 : sc c c') (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c) (SC0 : sc c c') (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread)","proofString":"eapply wf_scD, seq_eqv_lr in SC0; eauto.\ndesc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c /\\ sc c c' /\\ (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c /\\ sc c c' /\\ (FF ∩₁ FSc) c')","proofString":"desc.\nred in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : E0 c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"red in SC.\nunfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"unfold set_union in SC.\ndes; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : ((C c \\/ I c) \\/ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) c) \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : ((C c \\/ I c) \\/ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) c) \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"des; auto.\neapply issuedW in SC; eauto.\ntype_solver.\ndestruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver.\ndestruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : I c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : I c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"eapply issuedW in SC; eauto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') (SC : is_w Flab c) : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') (SC : is_w Flab c)","proofString":"type_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"destruct SC as [s [SB__ [Ts Ss]]%seq_eqv_r].\ndestruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB__ : Fsb^? c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB__ : Fsb^? c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"destruct SB__ as [-> | SB].\neapply reservedW in Ss; eauto.\ntype_solver.\neapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (s : actid) (SB_ : Gsb＊ e1 s) (c' : actid) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC2 : sc s c') (SC0 : (FF ∩₁ FSc) s) (SC3 : (FF ∩₁ FSc) c') : C s.","conclusion":"C s","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (s : actid) (SB_ : Gsb＊ e1 s) (c' : actid) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC2 : sc s c') (SC0 : (FF ∩₁ FSc) s) (SC3 : (FF ∩₁ FSc) c')","proofString":"eapply reservedW in Ss; eauto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (s : actid) (SB_ : Gsb＊ e1 s) (c' : actid) (Ts : tid s = thread) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC2 : sc s c') (SC0 : (FF ∩₁ FSc) s) (SC3 : (FF ∩₁ FSc) c') (Ss : is_w Flab s) : C s.","conclusion":"C s","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (s : actid) (SB_ : Gsb＊ e1 s) (c' : actid) (Ts : tid s = thread) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC2 : sc s c') (SC0 : (FF ∩₁ FSc) s) (SC3 : (FF ∩₁ FSc) c') (Ss : is_w Flab s)","proofString":"type_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB : Fsb c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB : Fsb c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"eapply rcoh_F_sb_S; eauto.\neexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB : Fsb c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : dom_rel (⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) c.","conclusion":"dom_rel (⦗FF ∩₁ FAcq/Rel⦘ ⨾ Fsb ⨾ ⦗S⦘) c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB : Fsb c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"eexists.\napply seq_eqv_lr.\nsplits; eauto.\nmode_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB : Fsb c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : (FF ∩₁ FAcq/Rel) c.","conclusion":"(FF ∩₁ FAcq/Rel) c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' s : actid) (SB : Fsb c s) (Ts : tid s = thread) (Ss : S s) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"mode_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' : actid) (SC : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) c) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"destruct SC as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' x x0 : actid) (RMW : is_r Flab c /\\ Frmw c x0 /\\ is_w Flab x0) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c') : C c.","conclusion":"C c","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (e1 e2 : actid) (d : (E0 ∩₁ FE) e1) (d5 : ~ is_init e1) (c : actid) (SB_ : Gsb＊ e1 c) (c' x x0 : actid) (RMW : is_r Flab c /\\ Frmw c x0 /\\ is_w Flab x0) (SC1 : E0 c') (REL : (Gsb ∪ rst_sc)＊ c' e2) (d1 : (E0 ∩₁ FE) e2) (d4 : ~ is_init e2) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) e2) (d7 : tid e2 <> thread) (SC0 : (FF ∩₁ FSc) c) (SC2 : sc c c') (SC3 : (FF ∩₁ FSc) c')","proofString":"type_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (T (ta_issue, a0) /\\ ta_reserve <> ta_issue \\/\n (ta_cover = ta_issue /\\ (E0 ∩₁ FE) a0 /\\ tid a0 <> thread) /\\\n ta_reserve <> ta_issue) \\/\nta_reserve = ta_issue /\\ (I a0 \\/ S a0 /\\ tid a0 = thread).","conclusion":"(T (ta_issue, a0) /\\ ta_reserve <> ta_issue \\/\n (ta_cover = ta_issue /\\ (E0 ∩₁ FE) a0 /\\ tid a0 <> thread) /\\\n ta_reserve <> ta_issue) \\/\nta_reserve = ta_issue /\\ (I a0 \\/ S a0 /\\ tid a0 = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"do 2 left.\nsplit; vauto.\napply tls_set_alt.\ndo 2 (red in d; desc).\nunfold set_union in d.\ndes; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : T (ta_issue, a0) /\\ ta_reserve <> ta_issue.","conclusion":"T (ta_issue, a0) /\\ ta_reserve <> ta_issue","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"split; vauto.\napply tls_set_alt.\ndo 2 (red in d; desc).\nunfold set_union in d.\ndes; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : T (ta_issue, a0).","conclusion":"T (ta_issue, a0)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"apply tls_set_alt.\ndo 2 (red in d; desc).\nunfold set_union in d.\ndes; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"do 2 (red in d; desc).\nunfold set_union in d.\ndes; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)\n ∪₁ dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘)) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"unfold set_union in d.\ndes; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : ((C a0 \\/ I a0) \\/ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : ((C a0 \\/ I a0) \\/ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"des; auto.\neapply w_covered_issued; vauto.\ndestruct d6.\napply DOM_THREAD; basic_solver.\ndestruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : C a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : C a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"eapply w_covered_issued; vauto."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"destruct d6.\napply DOM_THREAD; basic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) : tid a0 = thread.","conclusion":"tid a0 = thread","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0)","proofString":"apply DOM_THREAD; basic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (d : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"destruct d as [? [? [RMW%wf_rmwD%seq_eqv_lr _]]]; auto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (x x0 : actid) (RMW : is_r Flab a0 /\\ Frmw a0 x0 /\\ is_w Flab x0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) a0","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (a0 : actid) (d10 : is_w Flab a0) (d5 : ~ is_init a0) (x x0 : actid) (RMW : is_r Flab a0 /\\ Frmw a0 x0 /\\ is_w Flab x0) (d2 : FE a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"type_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (T (ta_issue, b) /\\ ta_reserve <> ta_issue \\/\n (ta_cover = ta_issue /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_issue) \\/\nta_reserve = ta_issue /\\ (I b \\/ S b /\\ tid b = thread).","conclusion":"(T (ta_issue, b) /\\ ta_reserve <> ta_issue \\/\n (ta_cover = ta_issue /\\ (E0 ∩₁ FE) b /\\ tid b <> thread) /\\\n ta_reserve <> ta_issue) \\/\nta_reserve = ta_issue /\\ (I b \\/ S b /\\ tid b = thread)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"do 2 left.\nsplit; vauto.\napply tls_set_alt.\napply seq_eqv_lr in d9.\ndesc.\ndo 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : T (ta_issue, b) /\\ ta_reserve <> ta_issue.","conclusion":"T (ta_issue, b) /\\ ta_reserve <> ta_issue","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"split; vauto.\napply tls_set_alt.\napply seq_eqv_lr in d9.\ndesc.\ndo 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : T (ta_issue, b).","conclusion":"T (ta_issue, b)","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"apply tls_set_alt.\napply seq_eqv_lr in d9.\ndesc.\ndo 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : (⦗E0⦘ ⨾ Frf ⨾ ⦗E0⦘) b a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"apply seq_eqv_lr in d9.\ndesc.\ndo 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b /\\ Frf b a0 /\\ E0 a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b /\\ Frf b a0 /\\ E0 a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"desc.\ndo 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : E0 a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : E0 a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"do 2 (red in d7; desc).\nunfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)) a0 \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : (C ∪₁ I ∪₁ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘)) a0 \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"unfold set_union in d7.\ndes.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : ((C a0 \\/ I a0) \\/ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : ((C a0 \\/ I a0) \\/ dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) \\/\ndom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"des.\neapply dom_rf_covered; basic_solver 10.\napply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver.\ndestruct d6.\napply DOM_THREAD; basic_solver.\neapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : C a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : C a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"eapply dom_rf_covered; basic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : I a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : I a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"apply wf_rfD, seq_eqv_lr in d2; eauto.\neapply issuedW in d7; eauto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : is_w Flab b /\\ Frf b a0 /\\ is_r Flab a0) (d7 : I a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : is_w Flab b /\\ Frf b a0 /\\ is_r Flab a0) (d7 : I a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"eapply issuedW in d7; eauto.\ntype_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : is_w Flab b /\\ Frf b a0 /\\ is_r Flab a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) (d7 : is_w Flab a0) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : is_w Flab b /\\ Frf b a0 /\\ is_r Flab a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) (d7 : is_w Flab a0)","proofString":"type_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"destruct d6.\napply DOM_THREAD; basic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) : tid a0 = thread.","conclusion":"tid a0 = thread","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0)","proofString":"apply DOM_THREAD; basic_solver."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : (event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b.","conclusion":"(event ↑₁ ((fun t : trav_label => T t) ∩₁ action ↓₁ eq ta_issue)) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"eapply rfrmw_I_in_I; eauto.\ndestruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : dom_rel (Frf ⨾ Frmw ⨾ ⦗issued (fun t : trav_label => T t)⦘) b.","conclusion":"dom_rel (Frf ⨾ Frmw ⨾ ⦗issued (fun t : trav_label => T t)⦘) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (d7 : dom_rel (Frmw ⨾ ⦗NTid_ thread ∩₁ I⦘) a0) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"destruct d7 as [? [RMW%wf_rmwD%seq_eqv_lr [NT II]]%seq_eqv_r]; auto.\nbasic_solver 10."},{"statement":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (x : actid) (RMW : is_r Flab a0 /\\ Frmw a0 x /\\ is_w Flab x) (NT : tid x <> thread) (II : I x) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread) : dom_rel (Frf ⨾ Frmw ⨾ ⦗issued (fun t : trav_label => T t)⦘) b.","conclusion":"dom_rel (Frf ⨾ Frmw ⨾ ⦗issued (fun t : trav_label => T t)⦘) b","hypotheses":"(ICOH' : dom_rel (iord rstG rst_sc ⨾ ⦗T⦘) ⊆₁ T) (DOM_THREAD : forall e : actid,\n~ is_init e -> dom_rel (Fsb^? ⨾ ⦗Tid_ thread ∩₁ S⦘) e -> tid e = thread) (b a0 : actid) (d : (E0 ∩₁ FE) b) (d5 : ~ is_init b) (d10 : is_w Flab b) (d9 : E0 b) (d2 : Frf b a0) (x : actid) (RMW : is_r Flab a0 /\\ Frmw a0 x /\\ is_w Flab x) (NT : tid x <> thread) (II : I x) (d1 : (E0 ∩₁ FE) a0) (d4 : ~ is_init a0) (d3 : ta_reserve <> ta_cover) (d0 : (E0 ∩₁ FE) a0) (d6 : tid a0 <> thread)","proofString":"basic_solver 10."},{"statement":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n(E ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n   (FE ∩₁ Init).","conclusion":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n(E ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n   (FE ∩₁ Init)","hypotheses":"","proofString":"rewrite sub_is_ta_propagate_to_G; eauto using SUB.\nnow rewrite E_E0, E0_in_Gf."},{"statement":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n(E ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n   (FE ∩₁ Init).","conclusion":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n(E ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n   (FE ∩₁ Init)","hypotheses":"","proofString":"now rewrite E_E0, E0_in_Gf."},{"statement":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n(FE ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init).","conclusion":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n(FE ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init)","hypotheses":"","proofString":"rewrite sub_is_ta_propagate_to_G with (G':=rstG); eauto using SUB.\napply set_pair_mori; eauto with hahn.\narewrite (FE ∩₁ Init ⊆₁ (Init ∩₁ FE) ∩₁ Init).\nclear; basic_solver.\nnow rewrite INIT."},{"statement":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n(FE ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n   (E ∩₁ Init).","conclusion":"(eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n(FE ∩₁ Init)\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) <*>\n   (E ∩₁ Init)","hypotheses":"","proofString":"apply set_pair_mori; eauto with hahn.\narewrite (FE ∩₁ Init ⊆₁ (Init ∩₁ FE) ∩₁ Init).\nclear; basic_solver.\nnow rewrite INIT."},{"statement":"FE ∩₁ Init ⊆₁ E ∩₁ Init.","conclusion":"FE ∩₁ Init ⊆₁ E ∩₁ Init","hypotheses":"","proofString":"arewrite (FE ∩₁ Init ⊆₁ (Init ∩₁ FE) ∩₁ Init).\nclear; basic_solver.\nnow rewrite INIT."},{"statement":"FE ∩₁ Init ⊆₁ Init ∩₁ FE ∩₁ Init.","conclusion":"FE ∩₁ Init ⊆₁ Init ∩₁ FE ∩₁ Init","hypotheses":"","proofString":"clear; basic_solver."},{"statement":"Init ∩₁ FE ∩₁ Init ⊆₁ E ∩₁ Init.","conclusion":"Init ∩₁ FE ∩₁ Init ⊆₁ E ∩₁ Init","hypotheses":"","proofString":"now rewrite INIT."},{"statement":"I ⊆₁ E ∩₁ W.","conclusion":"I ⊆₁ E ∩₁ W","hypotheses":"","proofString":"generalize I_in_E issuedW.\nbasic_solver 10."},{"statement":"I ⊆₁ E ->\n(forall G : execution,\n Wf G ->\n forall T0 : trav_label -> Prop,\n tls_coherent G T0 -> issued T0 ⊆₁ (fun x : actid => is_w (lab G) x)) ->\nI ⊆₁ E ∩₁ W.","conclusion":"I ⊆₁ E ->\n(forall G : execution,\n Wf G ->\n forall T0 : trav_label -> Prop,\n tls_coherent G T0 -> issued T0 ⊆₁ (fun x : actid => is_w (lab G) x)) ->\nI ⊆₁ E ∩₁ W","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W.","conclusion":"I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"apply set_subset_union_l.\nsplits; auto.\napply set_subset_inter_r.\nsplits; auto.\nrewrite <- tid_S_in_E.\nclear.\nbasic_solver.\nrewrite reservedW; eauto.\nclear.\nbasic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : I ⊆₁ E ∩₁ W /\\ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W.","conclusion":"I ⊆₁ E ∩₁ W /\\ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"splits; auto.\napply set_subset_inter_r.\nsplits; auto.\nrewrite <- tid_S_in_E.\nclear.\nbasic_solver.\nrewrite reservedW; eauto.\nclear.\nbasic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : S ∩₁ Tid_ thread ⊆₁ E ∩₁ W.","conclusion":"S ∩₁ Tid_ thread ⊆₁ E ∩₁ W","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"apply set_subset_inter_r.\nsplits; auto.\nrewrite <- tid_S_in_E.\nclear.\nbasic_solver.\nrewrite reservedW; eauto.\nclear.\nbasic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : S ∩₁ Tid_ thread ⊆₁ E /\\ S ∩₁ Tid_ thread ⊆₁ W.","conclusion":"S ∩₁ Tid_ thread ⊆₁ E /\\ S ∩₁ Tid_ thread ⊆₁ W","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"splits; auto.\nrewrite <- tid_S_in_E.\nclear.\nbasic_solver.\nrewrite reservedW; eauto.\nclear.\nbasic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : S ∩₁ Tid_ thread ⊆₁ E.","conclusion":"S ∩₁ Tid_ thread ⊆₁ E","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"rewrite <- tid_S_in_E.\nclear.\nbasic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : S ∩₁ Tid_ thread ⊆₁ Tid_ thread ∩₁ S.","conclusion":"S ∩₁ Tid_ thread ⊆₁ Tid_ thread ∩₁ S","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"clear.\nbasic_solver."},{"statement":"S ∩₁ Tid_ thread ⊆₁ Tid_ thread ∩₁ S.","conclusion":"S ∩₁ Tid_ thread ⊆₁ Tid_ thread ∩₁ S","hypotheses":"","proofString":"basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : S ∩₁ Tid_ thread ⊆₁ W.","conclusion":"S ∩₁ Tid_ thread ⊆₁ W","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"rewrite reservedW; eauto.\nclear.\nbasic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) : FW ∩₁ Tid_ thread ⊆₁ W.","conclusion":"FW ∩₁ Tid_ thread ⊆₁ W","hypotheses":"(IEW : I ⊆₁ E ∩₁ W)","proofString":"clear.\nbasic_solver."},{"statement":"FW ∩₁ Tid_ thread ⊆₁ W.","conclusion":"FW ∩₁ Tid_ thread ⊆₁ W","hypotheses":"","proofString":"basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : init_tls rstG ⊆₁ certT rstG T thread.","conclusion":"init_tls rstG ⊆₁ certT rstG T thread","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite <- init_tls_eq_rstG.\nnow apply init_tls_in_certT."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : init_tls Gf ⊆₁ certT rstG T thread.","conclusion":"init_tls Gf ⊆₁ certT rstG T thread","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"now apply init_tls_in_certT."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : certT rstG T thread\n⊆₁ event ↓₁ (Init ∪₁ set_compl Init) ∩₁ certT rstG T thread.","conclusion":"certT rstG T thread\n⊆₁ event ↓₁ (Init ∪₁ set_compl Init) ∩₁ certT rstG T thread","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfolder; ins; desf; tauto."},{"statement":"certT rstG T thread\n⊆₁ event ↓₁ (Init ∪₁ set_compl Init) ∩₁ certT rstG T thread.","conclusion":"certT rstG T thread\n⊆₁ event ↓₁ (Init ∪₁ set_compl Init) ∩₁ certT rstG T thread","hypotheses":"","proofString":"unfolder; ins; desf; tauto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init).","conclusion":"event ↓₁ Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"event ↓₁ Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init).","conclusion":"event ↓₁ Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init)","hypotheses":"","proofString":"unfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"event ↓₁ Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E ∩₁ NTid_ thread) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)\n      a /\\ (E ∩₁ Init) b).","conclusion":"event ↓₁ Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E ∩₁ NTid_ thread) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)\n      a /\\ (E ∩₁ Init) b)","hypotheses":"","proofString":"unfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"forall x : trav_label,\nis_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ E b /\\ tid b <> thread) ->\nlet (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ E b /\\ is_init b.","conclusion":"forall x : trav_label,\nis_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ E b /\\ tid b <> thread) ->\nlet (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ E b /\\ is_init b","hypotheses":"","proofString":"ins.\ndo 2 desf.\nsplits; auto."},{"statement":"(x : trav_label) (H : is_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ tid b <> thread)) : let (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ (E0 ∩₁ FE) b /\\ is_init b.","conclusion":"let (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ (E0 ∩₁ FE) b /\\ is_init b","hypotheses":"(x : trav_label) (H : is_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ tid b <> thread))","proofString":"do 2 desf.\nsplits; auto."},{"statement":"(a : actid) (H : is_init (event (ta_cover, a))) (H1 : (E0 ∩₁ FE) a) (H2 : tid a <> thread) : (((ta_cover = ta_cover \\/ ta_issue = ta_cover) \\/ ta_reserve = ta_cover) \\/\n is_ta_propagate_to_G rstG ta_cover) /\\ (E0 ∩₁ FE) a /\\ true.","conclusion":"(((ta_cover = ta_cover \\/ ta_issue = ta_cover) \\/ ta_reserve = ta_cover) \\/\n is_ta_propagate_to_G rstG ta_cover) /\\ (E0 ∩₁ FE) a /\\ true","hypotheses":"(a : actid) (H : is_init (event (ta_cover, a))) (H1 : (E0 ∩₁ FE) a) (H2 : tid a <> thread)","proofString":"splits; auto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)) ⊆₁ init_tls rstG.","conclusion":"event ↓₁ Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)) ⊆₁ init_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unfold init_tls.\nrewrite ISTEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init).","conclusion":"event ↓₁ Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite ISTEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init ∩₁ (eq ta_reserve <*> (E ∩₁ W))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init).","conclusion":"event ↓₁ Init ∩₁ (eq ta_reserve <*> (E ∩₁ W))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"event ↓₁ Init ∩₁ (eq ta_reserve <*> (E ∩₁ W))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init).","conclusion":"event ↓₁ Init ∩₁ (eq ta_reserve <*> (E ∩₁ W))\n⊆₁ (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n   (E ∩₁ Init)","hypotheses":"","proofString":"unfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"event ↓₁ Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_reserve = a /\\ (E ∩₁ W) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)\n      a /\\ (E ∩₁ Init) b).","conclusion":"event ↓₁ Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_reserve = a /\\ (E ∩₁ W) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)\n      a /\\ (E ∩₁ Init) b)","hypotheses":"","proofString":"unfolder.\nins.\ndo 2 desf.\nsplits; auto."},{"statement":"forall x : trav_label,\nis_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ E b /\\ is_w Glab b) ->\nlet (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ E b /\\ is_init b.","conclusion":"forall x : trav_label,\nis_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ E b /\\ is_w Glab b) ->\nlet (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ E b /\\ is_init b","hypotheses":"","proofString":"ins.\ndo 2 desf.\nsplits; auto."},{"statement":"(x : trav_label) (H : is_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ (E0 ∩₁ FE) b /\\ is_w Flab b)) : let (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ (E0 ∩₁ FE) b /\\ is_init b.","conclusion":"let (a, b) := x in\n(((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G rstG a) /\\ (E0 ∩₁ FE) b /\\ is_init b","hypotheses":"(x : trav_label) (H : is_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ (E0 ∩₁ FE) b /\\ is_w Flab b))","proofString":"do 2 desf.\nsplits; auto."},{"statement":"(a : actid) (H : is_init (event (ta_reserve, a))) (H1 : (E0 ∩₁ FE) a) (H2 : is_w Flab a) : (((ta_cover = ta_reserve \\/ ta_issue = ta_reserve) \\/ ta_reserve = ta_reserve) \\/\n is_ta_propagate_to_G rstG ta_reserve) /\\ (E0 ∩₁ FE) a /\\ true.","conclusion":"(((ta_cover = ta_reserve \\/ ta_issue = ta_reserve) \\/ ta_reserve = ta_reserve) \\/\n is_ta_propagate_to_G rstG ta_reserve) /\\ (E0 ∩₁ FE) a /\\ true","hypotheses":"(a : actid) (H : is_init (event (ta_reserve, a))) (H1 : (E0 ∩₁ FE) a) (H2 : is_w Flab a)","proofString":"splits; auto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init\n∩₁ ((init_tls Gf ∪₁ exec_tls Gf)\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG.","conclusion":"event ↓₁ Init\n∩₁ ((init_tls Gf ∪₁ exec_tls Gf)\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite set_inter_union_l.\nrewrite set_inter_union_r.\nunionL.\nrewrite init_tls_eq_rstG.\nclear.\nbasic_solver 10.\ntransitivity (event ↓₁ Init ∩₁ exec_tls Gf).\nclear.\nbasic_solver 10.\narewrite (event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ ∅).\nrewrite exec_tls_ENI.\nclear.\nbasic_solver 10.\nclear; basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init\n∩₁ (init_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))\n    ∪₁ exec_tls Gf\n       ∩₁ action\n          ↓₁ (eq ta_cover ∪₁ eq ta_issue\n              ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ init_tls rstG.","conclusion":"event ↓₁ Init\n∩₁ (init_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))\n    ∪₁ exec_tls Gf\n       ∩₁ action\n          ↓₁ (eq ta_cover ∪₁ eq ta_issue\n              ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ init_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite set_inter_union_r.\nunionL.\nrewrite init_tls_eq_rstG.\nclear.\nbasic_solver 10.\ntransitivity (event ↓₁ Init ∩₁ exec_tls Gf).\nclear.\nbasic_solver 10.\narewrite (event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ ∅).\nrewrite exec_tls_ENI.\nclear.\nbasic_solver 10.\nclear; basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init\n∩₁ (init_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n∪₁ event ↓₁ Init\n   ∩₁ (exec_tls Gf\n       ∩₁ action\n          ↓₁ (eq ta_cover ∪₁ eq ta_issue\n              ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ init_tls rstG.","conclusion":"event ↓₁ Init\n∩₁ (init_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n∪₁ event ↓₁ Init\n   ∩₁ (exec_tls Gf\n       ∩₁ action\n          ↓₁ (eq ta_cover ∪₁ eq ta_issue\n              ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ init_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unionL.\nrewrite init_tls_eq_rstG.\nclear.\nbasic_solver 10.\ntransitivity (event ↓₁ Init ∩₁ exec_tls Gf).\nclear.\nbasic_solver 10.\narewrite (event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ ∅).\nrewrite exec_tls_ENI.\nclear.\nbasic_solver 10.\nclear; basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init\n∩₁ (init_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG.","conclusion":"event ↓₁ Init\n∩₁ (init_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite init_tls_eq_rstG.\nclear.\nbasic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init\n∩₁ (init_tls rstG\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG.","conclusion":"event ↓₁ Init\n∩₁ (init_tls rstG\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nbasic_solver 10."},{"statement":"event ↓₁ Init\n∩₁ (init_tls rstG\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG.","conclusion":"event ↓₁ Init\n∩₁ (init_tls rstG\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init\n∩₁ (exec_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG.","conclusion":"event ↓₁ Init\n∩₁ (exec_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))) ⊆₁ \ninit_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"transitivity (event ↓₁ Init ∩₁ exec_tls Gf).\nclear.\nbasic_solver 10.\narewrite (event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ ∅).\nrewrite exec_tls_ENI.\nclear.\nbasic_solver 10.\nclear; basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init\n∩₁ (exec_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ event ↓₁ Init ∩₁ exec_tls Gf.","conclusion":"event ↓₁ Init\n∩₁ (exec_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ event ↓₁ Init ∩₁ exec_tls Gf","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nbasic_solver 10."},{"statement":"event ↓₁ Init\n∩₁ (exec_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ event ↓₁ Init ∩₁ exec_tls Gf.","conclusion":"event ↓₁ Init\n∩₁ (exec_tls Gf\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n⊆₁ event ↓₁ Init ∩₁ exec_tls Gf","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ init_tls rstG.","conclusion":"event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ init_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"arewrite (event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ ∅).\nrewrite exec_tls_ENI.\nclear.\nbasic_solver 10.\nclear; basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ ∅.","conclusion":"event ↓₁ Init ∩₁ exec_tls Gf ⊆₁ ∅","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite exec_tls_ENI.\nclear.\nbasic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ Init ∩₁ event ↓₁ (FE \\₁ Init) ⊆₁ ∅.","conclusion":"event ↓₁ Init ∩₁ event ↓₁ (FE \\₁ Init) ⊆₁ ∅","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nbasic_solver 10."},{"statement":"event ↓₁ Init ∩₁ event ↓₁ (FE \\₁ Init) ⊆₁ ∅.","conclusion":"event ↓₁ Init ∩₁ event ↓₁ (FE \\₁ Init) ⊆₁ ∅","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : ∅ ⊆₁ init_tls rstG.","conclusion":"∅ ⊆₁ init_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear; basic_solver."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ certT rstG T thread ⊆₁ exec_tls rstG.","conclusion":"event ↓₁ set_compl Init ∩₁ certT rstG T thread ⊆₁ exec_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite certT_alt.\nunfold exec_tls.\nrewrite !set_unionA.\nrewrite !set_map_union.\nrewrite !set_inter_union_r.\nrewrite !set_unionA.\nrewrite !set_pair_union_l.\nunionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))\n    ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n    ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread)) ⊆₁ exec_tls rstG.","conclusion":"event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))\n    ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n    ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread)) ⊆₁ exec_tls rstG","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unfold exec_tls.\nrewrite !set_unionA.\nrewrite !set_map_union.\nrewrite !set_inter_union_r.\nrewrite !set_unionA.\nrewrite !set_pair_union_l.\nunionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))\n    ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n    ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n      ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ action\n       ↓₁ (eq ta_cover ∪₁ eq ta_issue\n           ∪₁ (fun ta : trav_action => is_ta_propagate ta))\n    ∪₁ eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n    ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G rstG) <*>\n      ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite !set_unionA.\nrewrite !set_map_union.\nrewrite !set_inter_union_r.\nrewrite !set_unionA.\nrewrite !set_pair_union_l.\nunionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ action\n       ↓₁ (eq ta_cover\n           ∪₁ (eq ta_issue ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n    ∪₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n        ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread)))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ action\n       ↓₁ (eq ta_cover\n           ∪₁ (eq ta_issue ∪₁ (fun ta : trav_action => is_ta_propagate ta)))\n    ∪₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n        ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread)))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite !set_map_union.\nrewrite !set_inter_union_r.\nrewrite !set_unionA.\nrewrite !set_pair_union_l.\nunionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ (action ↓₁ eq ta_cover\n        ∪₁ (action ↓₁ eq ta_issue\n            ∪₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta)))\n    ∪₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n        ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread)))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init\n∩₁ (T\n    ∩₁ (action ↓₁ eq ta_cover\n        ∪₁ (action ↓₁ eq ta_issue\n            ∪₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta)))\n    ∪₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread)\n        ∪₁ eq ta_cover <*> (E ∩₁ NTid_ thread)))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite !set_inter_union_r.\nrewrite !set_unionA.\nrewrite !set_pair_union_l.\nunionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n∪₁ (event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n    ∪₁ event ↓₁ set_compl Init\n       ∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta)))\n∪₁ (event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n    ∪₁ event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread)))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n∪₁ (event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n    ∪₁ event ↓₁ set_compl Init\n       ∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta)))\n∪₁ (event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n    ∪₁ event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread)))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite !set_unionA.\nrewrite !set_pair_union_l.\nunionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n∪₁ (event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n    ∪₁ (event ↓₁ set_compl Init\n        ∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n        ∪₁ (event ↓₁ set_compl Init\n            ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n            ∪₁ event ↓₁ set_compl Init\n               ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread)))))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n∪₁ (event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n    ∪₁ (event ↓₁ set_compl Init\n        ∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n        ∪₁ (event ↓₁ set_compl Init\n            ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n            ∪₁ event ↓₁ set_compl Init\n               ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread)))))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue ∪₁ (eq ta_reserve ∪₁ is_ta_propagate_to_G rstG)) <*>\n      ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite !set_pair_union_l.\nunionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n∪₁ (event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n    ∪₁ (event ↓₁ set_compl Init\n        ∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n        ∪₁ (event ↓₁ set_compl Init\n            ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n            ∪₁ event ↓₁ set_compl Init\n               ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread)))))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n∪₁ (event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n    ∪₁ (event ↓₁ set_compl Init\n        ∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n        ∪₁ (event ↓₁ set_compl Init\n            ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n            ∪₁ event ↓₁ set_compl Init\n               ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread)))))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unionL.\narewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto.\nunionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto.\nunionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\nunionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_cover)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"arewrite (T ∩₁ action ↓₁ eq ta_cover ⊆₁ eq ta_cover <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : T ∩₁ action ↓₁ eq ta_cover\n⊆₁ eq ta_cover <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_cover).","conclusion":"T ∩₁ action ↓₁ eq ta_cover\n⊆₁ eq ta_cover <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfold set_pair.\nbasic_solver 10."},{"statement":"T ∩₁ action ↓₁ eq ta_cover\n⊆₁ eq ta_cover <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_cover).","conclusion":"T ∩₁ action ↓₁ eq ta_cover\n⊆₁ eq ta_cover <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)","hypotheses":"","proofString":"unfold set_pair.\nbasic_solver 10."},{"statement":"T ∩₁ action ↓₁ eq ta_cover\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    ta_cover = a /\\ (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) b).","conclusion":"T ∩₁ action ↓₁ eq ta_cover\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    ta_cover = a /\\ (event ↑₁ (T ∩₁ action ↓₁ eq ta_cover)) b)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (eq ta_cover <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init\n∩₁ (eq ta_cover <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_cover))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite C_in_E.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> E)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> E)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto."},{"statement":"event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> E)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> E)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"","proofString":"unfold set_pair.\nunfolder.\nins.\ndo 2 desf.\neauto."},{"statement":"event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid => let (a, b) := ab in ta_cover = a /\\ E b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E \\₁ Init) b)\n   ∪₁ ((fun ab : trav_action * actid =>\n        let (a, b) := ab in ta_issue = a /\\ ((E \\₁ Init) ∩₁ W) b)\n       ∪₁ ((fun ab : trav_action * actid =>\n            let (a, b) := ab in ta_reserve = a /\\ ((E \\₁ Init) ∩₁ W) b)\n           ∪₁ (fun ab : trav_action * actid =>\n               let (a, b) := ab in\n               is_ta_propagate_to_G rstG a /\\ ((E \\₁ Init) ∩₁ W) b))).","conclusion":"event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid => let (a, b) := ab in ta_cover = a /\\ E b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E \\₁ Init) b)\n   ∪₁ ((fun ab : trav_action * actid =>\n        let (a, b) := ab in ta_issue = a /\\ ((E \\₁ Init) ∩₁ W) b)\n       ∪₁ ((fun ab : trav_action * actid =>\n            let (a, b) := ab in ta_reserve = a /\\ ((E \\₁ Init) ∩₁ W) b)\n           ∪₁ (fun ab : trav_action * actid =>\n               let (a, b) := ab in\n               is_ta_propagate_to_G rstG a /\\ ((E \\₁ Init) ∩₁ W) b)))","hypotheses":"","proofString":"unfolder.\nins.\ndo 2 desf.\neauto."},{"statement":"forall x : trav_label,\n~ is_init (event x) /\\ (let (a, b) := x in ta_cover = a /\\ E b) ->\n(let (a, b) := x in ta_cover = a /\\ E b /\\ ~ is_init b) \\/\n(let (a, b) := x in ta_issue = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b) \\/\n(let (a, b) := x in ta_reserve = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b) \\/\n(let (a, b) := x in\n is_ta_propagate_to_G rstG a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b).","conclusion":"forall x : trav_label,\n~ is_init (event x) /\\ (let (a, b) := x in ta_cover = a /\\ E b) ->\n(let (a, b) := x in ta_cover = a /\\ E b /\\ ~ is_init b) \\/\n(let (a, b) := x in ta_issue = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b) \\/\n(let (a, b) := x in ta_reserve = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b) \\/\n(let (a, b) := x in\n is_ta_propagate_to_G rstG a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b)","hypotheses":"","proofString":"ins.\ndo 2 desf.\neauto."},{"statement":"(x : trav_label) (H : ~ is_init (event x) /\\ (let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b)) : (let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ ~ is_init b) \\/\n(let (a, b) := x in\n ta_issue = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b) \\/\n(let (a, b) := x in\n ta_reserve = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b) \\/\n(let (a, b) := x in\n is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b).","conclusion":"(let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ ~ is_init b) \\/\n(let (a, b) := x in\n ta_issue = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b) \\/\n(let (a, b) := x in\n ta_reserve = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b) \\/\n(let (a, b) := x in\n is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b)","hypotheses":"(x : trav_label) (H : ~ is_init (event x) /\\ (let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b))","proofString":"do 2 desf.\neauto."},{"statement":"(a : actid) (H : ~ is_init (event (ta_cover, a))) (H1 : (E0 ∩₁ FE) a) : ta_cover = ta_cover /\\ (E0 ∩₁ FE) a /\\ ~ is_init a \\/\nta_issue = ta_cover /\\ ((E0 ∩₁ FE) a /\\ ~ is_init a) /\\ is_w Flab a \\/\nta_reserve = ta_cover /\\ ((E0 ∩₁ FE) a /\\ ~ is_init a) /\\ is_w Flab a \\/\nis_ta_propagate_to_G rstG ta_cover /\\\n((E0 ∩₁ FE) a /\\ ~ is_init a) /\\ is_w Flab a.","conclusion":"ta_cover = ta_cover /\\ (E0 ∩₁ FE) a /\\ ~ is_init a \\/\nta_issue = ta_cover /\\ ((E0 ∩₁ FE) a /\\ ~ is_init a) /\\ is_w Flab a \\/\nta_reserve = ta_cover /\\ ((E0 ∩₁ FE) a /\\ ~ is_init a) /\\ is_w Flab a \\/\nis_ta_propagate_to_G rstG ta_cover /\\\n((E0 ∩₁ FE) a /\\ ~ is_init a) /\\ is_w Flab a","hypotheses":"(a : actid) (H : ~ is_init (event (ta_cover, a))) (H1 : (E0 ∩₁ FE) a)","proofString":"eauto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unionR right -> left.\narewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init ∩₁ (T ∩₁ action ↓₁ eq ta_issue)\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"arewrite (T ∩₁ action ↓₁ eq ta_issue ⊆₁ eq ta_issue <*> (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))).\nclear.\nunfold set_pair.\nbasic_solver 10.\nrewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : T ∩₁ action ↓₁ eq ta_issue\n⊆₁ eq ta_issue <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"T ∩₁ action ↓₁ eq ta_issue\n⊆₁ eq ta_issue <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfold set_pair.\nbasic_solver 10."},{"statement":"T ∩₁ action ↓₁ eq ta_issue\n⊆₁ eq ta_issue <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_issue).","conclusion":"T ∩₁ action ↓₁ eq ta_issue\n⊆₁ eq ta_issue <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)","hypotheses":"","proofString":"unfold set_pair.\nbasic_solver 10."},{"statement":"T ∩₁ action ↓₁ eq ta_issue\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    ta_issue = a /\\ (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)) b).","conclusion":"T ∩₁ action ↓₁ eq ta_issue\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in\n    ta_issue = a /\\ (event ↑₁ (T ∩₁ action ↓₁ eq ta_issue)) b)","hypotheses":"","proofString":"basic_solver 10."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (eq ta_issue <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init\n∩₁ (eq ta_issue <*> event ↑₁ (T ∩₁ action ↓₁ eq ta_issue))\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite IEW.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (eq ta_issue <*> (E ∩₁ W))\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_issue <*> (E ∩₁ W))\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"event ↓₁ set_compl Init ∩₁ (eq ta_issue <*> (E ∩₁ W))\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_issue <*> (E ∩₁ W))\n⊆₁ eq ta_issue <*> ((E \\₁ Init) ∩₁ W)","hypotheses":"","proofString":"unfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_issue = a /\\ (E ∩₁ W) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_issue = a /\\ ((E \\₁ Init) ∩₁ W) b).","conclusion":"event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_issue = a /\\ (E ∩₁ W) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_issue = a /\\ ((E \\₁ Init) ∩₁ W) b)","hypotheses":"","proofString":"unfolder.\nins.\ndo 2 desf."},{"statement":"forall x : trav_action * actid,\n~ is_init (event x) /\\\n(let (a, b) := x in ta_issue = a /\\ E b /\\ is_w Glab b) ->\nlet (a, b) := x in ta_issue = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b.","conclusion":"forall x : trav_action * actid,\n~ is_init (event x) /\\\n(let (a, b) := x in ta_issue = a /\\ E b /\\ is_w Glab b) ->\nlet (a, b) := x in ta_issue = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b","hypotheses":"","proofString":"ins.\ndo 2 desf."},{"statement":"(x : trav_action * actid) (H : ~ is_init (event x) /\\\n(let (a, b) := x in ta_issue = a /\\ (E0 ∩₁ FE) b /\\ is_w Flab b)) : let (a, b) := x in\nta_issue = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b.","conclusion":"let (a, b) := x in\nta_issue = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b","hypotheses":"(x : trav_action * actid) (H : ~ is_init (event x) /\\\n(let (a, b) := x in ta_issue = a /\\ (E0 ∩₁ FE) b /\\ is_w Flab b))","proofString":"do 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init\n∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unionR right -> right -> right.\nunfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n⊆₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init\n∩₁ (T ∩₁ action ↓₁ (fun ta : trav_action => is_ta_propagate ta))\n⊆₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unfolder.\nintros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : forall x : trav_action * actid,\n~ is_init (event x) /\\ T x /\\ is_ta_propagate (action x) ->\n(is_ta_propagate_to_G rstG <*>\n (fun x0 : actid => (E x0 /\\ ~ is_init x0) /\\ is_w Glab x0)) x.","conclusion":"forall x : trav_action * actid,\n~ is_init (event x) /\\ T x /\\ is_ta_propagate (action x) ->\n(is_ta_propagate_to_G rstG <*>\n (fun x0 : actid => (E x0 /\\ ~ is_init x0) /\\ is_w Glab x0)) x","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"intros [a e] [NINIT [TAE BB]]; ins.\nassert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) : is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e.","conclusion":"is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a)","proofString":"assert (is_ta_propagate_to_G Gf a) as PGF.\napply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf.\nassert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) : is_ta_propagate_to_G Gf a.","conclusion":"is_ta_propagate_to_G Gf a","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a)","proofString":"apply TCOH in TAE.\nunfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : (init_tls Gf ∪₁ exec_tls Gf) (a, e)) (BB : is_ta_propagate a) : is_ta_propagate_to_G Gf a.","conclusion":"is_ta_propagate_to_G Gf a","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : (init_tls Gf ∪₁ exec_tls Gf) (a, e)) (BB : is_ta_propagate a)","proofString":"unfold init_tls, exec_tls, set_pair in TAE.\nunfolder in TAE.\ndesf."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : ((fun ab : trav_action * actid =>\n  let (a0, b) := ab in\n  (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) a0 /\\\n  (FE ∩₁ Init) b)\n ∪₁ ((fun ab : trav_action * actid =>\n      let (a0, b) := ab in ta_cover = a0 /\\ (FE \\₁ Init) b)\n     ∪₁ (fun ab : trav_action * actid =>\n         let (a0, b) := ab in\n         (eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) a0 /\\\n         ((FE \\₁ Init) ∩₁ FW) b))) (a, e)) (BB : is_ta_propagate a) : is_ta_propagate_to_G Gf a.","conclusion":"is_ta_propagate_to_G Gf a","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : ((fun ab : trav_action * actid =>\n  let (a0, b) := ab in\n  (eq ta_cover ∪₁ eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) a0 /\\\n  (FE ∩₁ Init) b)\n ∪₁ ((fun ab : trav_action * actid =>\n      let (a0, b) := ab in ta_cover = a0 /\\ (FE \\₁ Init) b)\n     ∪₁ (fun ab : trav_action * actid =>\n         let (a0, b) := ab in\n         (eq ta_issue ∪₁ eq ta_reserve ∪₁ is_ta_propagate_to_G Gf) a0 /\\\n         ((FE \\₁ Init) ∩₁ FW) b))) (a, e)) (BB : is_ta_propagate a)","proofString":"unfolder in TAE.\ndesf."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : (((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G Gf a) /\\ FE e /\\ is_init e \\/\nta_cover = a /\\ FE e /\\ ~ is_init e \\/\n((ta_issue = a \\/ ta_reserve = a) \\/ is_ta_propagate_to_G Gf a) /\\\n(FE e /\\ ~ is_init e) /\\ is_w Flab e) (BB : is_ta_propagate a) : is_ta_propagate_to_G Gf a.","conclusion":"is_ta_propagate_to_G Gf a","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : (((ta_cover = a \\/ ta_issue = a) \\/ ta_reserve = a) \\/\n is_ta_propagate_to_G Gf a) /\\ FE e /\\ is_init e \\/\nta_cover = a /\\ FE e /\\ ~ is_init e \\/\n((ta_issue = a \\/ ta_reserve = a) \\/ is_ta_propagate_to_G Gf a) /\\\n(FE e /\\ ~ is_init e) /\\ is_w Flab e) (BB : is_ta_propagate a)","proofString":"desf."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) : is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e.","conclusion":"is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a)","proofString":"assert (propagated Gf T e) as PP.\nred.\nunfolder.\nexists (a, e).\nsplits; auto; ins.\nenough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) : propagated Gf T e.","conclusion":"propagated Gf T e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a)","proofString":"red.\nunfolder.\nexists (a, e).\nsplits; auto; ins."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) : (event ↑₁ (T ∩₁ action ↓₁ is_ta_propagate_to_G Gf)) e.","conclusion":"(event ↑₁ (T ∩₁ action ↓₁ is_ta_propagate_to_G Gf)) e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a)","proofString":"unfolder.\nexists (a, e).\nsplits; auto; ins."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) : exists y : trav_label,\n  (T y /\\ is_ta_propagate_to_G Gf (action y)) /\\ event y = e.","conclusion":"exists y : trav_label,\n  (T y /\\ is_ta_propagate_to_G Gf (action y)) /\\ event y = e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a)","proofString":"exists (a, e).\nsplits; auto; ins."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) : (T (a, e) /\\ is_ta_propagate_to_G Gf (action (a, e))) /\\ event (a, e) = e.","conclusion":"(T (a, e) /\\ is_ta_propagate_to_G Gf (action (a, e))) /\\ event (a, e) = e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a)","proofString":"splits; auto; ins."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) : is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e.","conclusion":"is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e)","proofString":"enough (E0 e) as E0E.\nunfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto.\nenough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (E0E : E0 e) : is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e.","conclusion":"is_ta_propagate_to_G rstG a /\\ ((E0 ∩₁ FE) e /\\ ~ is_init e) /\\ is_w Flab e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (E0E : E0 e)","proofString":"unfolder; splits; auto using E0_in_Gf.\neapply propagatedW; eauto."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (E0E : E0 e) : is_w Flab e.","conclusion":"is_w Flab e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (E0E : E0 e)","proofString":"eapply propagatedW; eauto."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) : E0 e.","conclusion":"E0 e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e)","proofString":"enough (issued T e) as ITE.\napply I_in_E in ITE.\nnow apply E_E0 in ITE.\neapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (ITE : I e) : E0 e.","conclusion":"E0 e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (ITE : I e)","proofString":"apply I_in_E in ITE.\nnow apply E_E0 in ITE."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (ITE : E e) : E0 e.","conclusion":"E0 e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) (ITE : E e)","proofString":"now apply E_E0 in ITE."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e) : I e.","conclusion":"I e","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (a : trav_action) (e : actid) (NINIT : ~ is_init e) (TAE : T (a, e)) (BB : is_ta_propagate a) (PGF : is_ta_propagate_to_G Gf a) (PP : propagated Gf T e)","proofString":"eapply propagated_in_issued; eauto."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unionR right -> right -> left.\nrewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n⊆₁ eq ta_reserve <*> ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (I ∪₁ S ∩₁ Tid_ thread))\n⊆₁ eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"rewrite ISTEW.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (E ∩₁ W))\n⊆₁ eq ta_reserve <*> ((E \\₁ Init) ∩₁ W).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_reserve <*> (E ∩₁ W))\n⊆₁ eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_reserve = a /\\ (E ∩₁ W) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_reserve = a /\\ ((E \\₁ Init) ∩₁ W) b).","conclusion":"event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_reserve = a /\\ (E ∩₁ W) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_reserve = a /\\ ((E \\₁ Init) ∩₁ W) b)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : forall x : trav_action * actid,\n~ is_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ E b /\\ is_w Glab b) ->\nlet (a, b) := x in ta_reserve = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b.","conclusion":"forall x : trav_action * actid,\n~ is_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ E b /\\ is_w Glab b) ->\nlet (a, b) := x in ta_reserve = a /\\ (E b /\\ ~ is_init b) /\\ is_w Glab b","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"ins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (x : trav_action * actid) (H : ~ is_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ (E0 ∩₁ FE) b /\\ is_w Flab b)) : let (a, b) := x in\nta_reserve = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b.","conclusion":"let (a, b) := x in\nta_reserve = a /\\ ((E0 ∩₁ FE) b /\\ ~ is_init b) /\\ is_w Flab b","hypotheses":"(IEW : I ⊆₁ E0 ∩₁ FE ∩₁ FW) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E0 ∩₁ FE ∩₁ FW) (x : trav_action * actid) (H : ~ is_init (event x) /\\\n(let (a, b) := x in ta_reserve = a /\\ (E0 ∩₁ FE) b /\\ is_w Flab b))","proofString":"do 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W))).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)\n   ∪₁ (eq ta_issue <*> ((E \\₁ Init) ∩₁ W)\n       ∪₁ (eq ta_reserve <*> ((E \\₁ Init) ∩₁ W)\n           ∪₁ is_ta_propagate_to_G rstG <*> ((E \\₁ Init) ∩₁ W)))","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"unionR left.\nclear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W) : event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)","hypotheses":"(IEW : I ⊆₁ E ∩₁ W) (ISTEW : I ∪₁ S ∩₁ Tid_ thread ⊆₁ E ∩₁ W)","proofString":"clear.\nunfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init).","conclusion":"event ↓₁ set_compl Init ∩₁ (eq ta_cover <*> (E ∩₁ NTid_ thread))\n⊆₁ eq ta_cover <*> (E \\₁ Init)","hypotheses":"","proofString":"unfold set_pair.\nunfolder.\nins.\ndo 2 desf."},{"statement":"event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E ∩₁ NTid_ thread) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E \\₁ Init) b).","conclusion":"event ↓₁ set_compl Init\n∩₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E ∩₁ NTid_ thread) b)\n⊆₁ (fun ab : trav_action * actid =>\n    let (a, b) := ab in ta_cover = a /\\ (E \\₁ Init) b)","hypotheses":"","proofString":"unfolder.\nins.\ndo 2 desf."},{"statement":"forall x : trav_action * actid,\n~ is_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ E b /\\ tid b <> thread) ->\nlet (a, b) := x in ta_cover = a /\\ E b /\\ ~ is_init b.","conclusion":"forall x : trav_action * actid,\n~ is_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ E b /\\ tid b <> thread) ->\nlet (a, b) := x in ta_cover = a /\\ E b /\\ ~ is_init b","hypotheses":"","proofString":"ins.\ndo 2 desf."},{"statement":"(x : trav_action * actid) (H : ~ is_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ tid b <> thread)) : let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ ~ is_init b.","conclusion":"let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ ~ is_init b","hypotheses":"(x : trav_action * actid) (H : ~ is_init (event x) /\\\n(let (a, b) := x in ta_cover = a /\\ (E0 ∩₁ FE) b /\\ tid b <> thread))","proofString":"do 2 desf."}]}