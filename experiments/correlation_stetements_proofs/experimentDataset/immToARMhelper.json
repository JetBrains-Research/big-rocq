[{"statement":"Lemma WF : Wf G.","proof":"apply CON.\n"},{"statement":"Lemma COMP : complete G.","proof":"apply CON.\n"},{"statement":"Lemma SC_PER_LOC : sc_per_loc G.","proof":"apply CON.\n"},{"statement":"Lemma rs_rfi_Q: rs ⨾ rfi ⨾ ⦗Q⦘ ⊆ sb ∩ same_loc ⨾ ⦗Q⦘ ∪ (obs ∪ dob ∪ aob ∪ boba')⁺  ⨾ ⦗Q⦘.","proof":"generalize (rs_in_co  WF SC_PER_LOC).\nunfold imm_hb.rs.\nintro X.\nrewrite rtE; relsf; unionL.\n{\nrewrite (rfi_in_sbloc' WF); generalize (@sb_same_loc_trans G).\nbasic_solver 12.\n}\n{\nie_unfolder.\nrewrite (rfi_in_sbloc WF).\nunionR left.\nbasic_solver 12.\n}\nrewrite !seqA, ct_end, !seqA.\narewrite (⦗W⦘ ⨾ ((sb ∩ same_loc)^? ⨾ rf ⨾ rmw)＊ ⊆ ⦗W⦘ ⨾ co^?).\nrevert X.\n{\nrelsf.\nunfolder; ins; desf; splits; eauto.\neapply X; eauto.\n}\nrewrite (dom_l (wf_rfD WF)) at 1; rewrite !seqA.\nsin_rewrite (co_sb_loc WF SC_PER_LOC).\nrewrite rmw_W_ex, !seqA, (rmw_in_fr  WF SC_PER_LOC COMP).\nsin_rewrite (rf_fr WF).\ngeneralize (co_trans WF); ins; relsf.\nrewrite coi_union_coe.\nrewrite !seq_union_l.\napply union_mori.\n{\narewrite_id ⦗W_ex⦘.\nrewrite seq_id_l.\nhahn_frame_r.\nrewrite (coi_in_sbloc' WF).\nrewrite (rfi_in_sbloc' WF).\napply transitiveI.\napply sb_same_loc_trans.\n}\nrewrite ct_begin, rtE, <- ct_step.\nunfold Arm.aob at 2.\nunfold Arm.obs at 1.\nbasic_solver 42.\n"},{"statement":"Lemma rs_prefix_co_in_ord :\n  ⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ co^? ⊆ ⦗L ∪₁ F^sy⦘ ⨾ (obs ∪ dob ∪ aob ∪ boba')＊.","proof":"arewrite (co^? ⊆ coi^? ⨾ obs^?).\n{\nrewrite coi_union_coe.\nrewrite cr_union_l.\narewrite (coe ⊆ obs).\nbasic_solver 10.\n}\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ coi^?  ⊆ ⦗L ∪₁ F^sy⦘ ⨾ boba'^?).\n{\ncase_refl _.\n2: rewrite coi_in_sb; generalize (@sb_trans G).\nall: unfold Arm.bob', Arm.bob; basic_solver 21.\n}\nhahn_frame.\narewrite (boba' ⊆ obs ∪ dob ∪ aob ∪ boba') at 1.\narewrite (obs   ⊆ obs ∪ dob ∪ aob ∪ boba') at 2.\nrewrite <- rt_cr.\nhahn_frame.\nby apply inclusion_r_rt.\n"},{"statement":"Lemma rfe_sb_Acq_in_ord :\n  rfe ⨾ ⦗R⦘ ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺ ⨾ ⦗Q ∪₁ F^ld ∪₁ F^sy⦘.","proof":"arewrite (⦗R⦘ ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘ ⊆ boba'^? ⨾ ⦗Q ∪₁ F^ld ∪₁ F^sy⦘).\n{\nunfold Arm.bob'.\nbasic_solver 21.\n}\nhahn_frame_r.\narewrite (boba' ⊆ obs ∪ dob ∪ aob ∪ boba') at 1.\narewrite (rfe ⊆ obs).\narewrite (obs ⊆ obs ∪ dob ∪ aob ∪ boba') at 1.\nrewrite <- ct_cr.\nhahn_frame_r.\napply ct_step.\n"},{"statement":"Lemma sw_in_ord :\n  sw ⊆ ⦗L⦘ ⨾ sb ∩ same_loc ⨾ ⦗Q⦘ ∪\n       ⦗L⦘ ⨾ sb ∩ same_loc ⨾ ⦗R⦘ ⨾ sb ⨾ ⦗F^ld⦘ ∪ \n       ⦗L∪₁F^sy⦘ ⨾ (obs ∪ dob ∪ aob ∪ boba')⁺ ⨾ ⦗Q ∪₁ F^ld ∪₁ F^sy⦘.","proof":"unfold imm_hb.sw, imm_hb.release.\nrewrite (dom_l (wf_rsD WF)), (dom_r (wf_rfeD WF)), !seqA; relsf.\nrewrite !seqA.\nunionL.\n2: {\nunionR right.\nrewrite (dom_l (wf_rfeD WF)), !seqA.\nsin_rewrite (rs_sb_loc WF SC_PER_LOC).\nsin_rewrite rs_prefix_co_in_ord.\nrewrite <- rt_ct.\nrewrite !seqA.\ndo 2 hahn_frame_l.\napply rfe_sb_Acq_in_ord.\n}\ncase_refl (sb ⨾ ⦗F⦘).\n{\nrewrite (dom_r (wf_rfiD WF)) at 1; rewrite !seqA.\narewrite (⦗R⦘ ⨾ ⦗Acq⦘ ⊆ ⦗Q⦘) by basic_solver.\nrewrite rs_rfi_Q; relsf; unionL.\n{\ncase_refl _.\n{\nbasic_solver 12.\n}\nunionR right.\narewrite (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗Q⦘ ⊆ sb^? ⨾ ⦗Q ∪₁ F^ld ∪₁ F^sy⦘).\n{\nbasic_solver 12.\n}\ngeneralize (@sb_trans G); ins; relsf.\nrewrite <- ct_step; unfold Arm.bob'; basic_solver 12.\n}\ncase_refl _.\n{\nbasic_solver 12.\n}\nunionR right.\narewrite (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb) ⨾ ⦗W⦘ ⊆ ⦗L ∪₁ F^sy⦘ ⨾ boba'^?).\n{\nunfold Arm.bob'.\nbasic_solver 21.\n}\narewrite (boba' ⊆ obs ∪ dob ∪ aob ∪ boba') at 1.\narewrite (Q ⊆₁ Q ∪₁ F^ld ∪₁ F^sy) at 1 by basic_solver.\nhahn_frame.\napply cr_ct.\n}\nsin_rewrite (rs_rfi WF SC_PER_LOC).\nrelsf.\nrewrite !seqA.\ngeneralize (@sb_trans G); ins; relsf; unionL.\n{\ncase_refl _.\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F^ld⦘) by mode_solver 12.\nbasic_solver 12.\nunionR right.\narewrite (⦗W⦘ ⨾ sb ∩ same_loc ⨾ ⦗R⦘ ⨾ sb ⨾ ⦗F⦘ ⨾ ⦗Acq⦘ ⊆ sb^? ⨾ ⦗Q ∪₁ F^ld ∪₁ F^sy⦘).\narewrite (⦗F⦘ ⨾ ⦗Acq⦘ ⊆ ⦗F^ld⦘) by mode_solver 12.\n{\ngeneralize (@sb_trans G).\nbasic_solver 12.\n}\nrewrite <- ct_step; unfold Arm.bob'; basic_solver 12.\n}\nunionR right.\nsin_rewrite rs_prefix_co_in_ord.\nrewrite <- rt_ct.\nrewrite !seqA.\ndo 2 hahn_frame_l.\narewrite (sb ⨾ ⦗F⦘ ⊆ (sb ⨾ ⦗F⦘)^?).\napply rfe_sb_Acq_in_ord.\n"},{"statement":"Lemma swe_in_ord :\n  sw \\ sb ⊆ ⦗L∪₁F^sy⦘ ⨾ (obs ∪ dob ∪ aob ∪ boba')⁺ ⨾ ⦗Q ∪₁ F^ld ∪₁ F^sy⦘.","proof":"rewrite sw_in_ord.\narewrite (sb ∩ same_loc ⨾ ⦗R⦘ ⨾ sb ⊆ sb).\n{\ngeneralize (@sb_trans G).\nbasic_solver.\n}\nrewrite !minus_union_l.\nunionL.\n3: by eauto with hahn.\ntransitivity (fun x y : actid => False).\nall: basic_solver.\n"},{"statement":"Lemma ct_sb_swe_in_ord :\n  (sb^? ⨾ (sw \\ sb))⁺ ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺ ⨾ ⦗Q ∪₁ F^ld ∪₁ F^sy⦘.","proof":"clear W_EX_ACQ_SB.\nsin_rewrite swe_in_ord.\nrewrite <- !seqA.\nrewrite inclusion_ct_seq_eqv_r.\nhahn_frame_r.\narewrite (sb^? ⨾ ⦗L ∪₁ F^sy⦘ ⊆ boba'^?).\n{\nrewrite !crE.\nrewrite seq_union_l, seq_id_l.\nunfold Arm.bob', Arm.bob.\nbasic_solver 20.\n}\narewrite (boba'^? ⨾ (obs ∪ dob ∪ aob ∪ boba')⁺ ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺).\n{\narewrite (boba'^? ⊆ (obs ∪ dob ∪ aob ∪ boba')＊) at 1.\napply rt_ct.\n}\napply ct_of_ct.\n"},{"statement":"Lemma hb_in_ord : hb ⊆ sb ∪ (obs ∪ dob ∪ aob ∪ boba')⁺.","proof":"rewrite hb_in_sb_swe.\nrewrite path_union.\ngeneralize (@sb_trans G); ins; relsf.\napply union_mori; [done|].\nrewrite ct_sb_swe_in_ord, !seqA.\narewrite (⦗Q ∪₁ F^ld ∪₁ F^sy⦘ ⨾ sb^? ⊆ boba'^?).\n{\nunfold Arm.bob', Arm.bob; basic_solver 14.\n}\narewrite (boba' ⊆ (obs ∪ dob ∪ aob ∪ boba')＊) at 2.\nrelsf.\n"},{"statement":"Lemma sbrel_in_ord : sb ⨾ ⦗L ∪₁ F^sy⦘ ⊆ boba'.","proof":"unfold Arm.bob', Arm.bob; basic_solver 14.\n"},{"statement":"Lemma COH: coherence G.","proof":"red.\nrewrite (eco_in_sb_obs_sb WF).\nrewrite <- !seqA, irreflexive_seqC, !seqA.\narewrite (sb^? ⨾ hb ⨾ sb^? ⊆ hb).\n{\nrewrite sb_in_hb.\nrewrite rewrite_trans_seq_cr_r; [|by apply hb_trans].\nrewrite rewrite_trans_seq_cr_l; [|by apply hb_trans].\ndone.\n}\narewrite (obs^? ⨾ obs^? ⊆ obs＊).\n{\nrewrite <- rt_cr.\nhahn_frame.\nby apply inclusion_r_rt.\n}\nrewrite hb_in_ord.\nrewrite seq_union_l.\napply irreflexive_union.\nsplit.\n2: {\narewrite (obs ⊆ obs ∪ dob ∪ aob ∪ boba') at 2.\nrewrite ct_rt.\napply (external_alt_bob' WF); auto.\n}\nrewrite obs_in_eco.\nrewrite rt_of_trans; [|by apply (eco_trans WF)].\nrewrite crE, seq_union_r, seq_id_r.\napply irreflexive_union.\nsplit.\n{\napply sb_irr.\n}\napply CON.\n"},{"statement":"Lemma psc_in_ord : sb^? ⨾ psc ⨾ sb^? ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺ .","proof":"unfold imm.psc.\nrewrite (eco_in_sb_obs_sb WF).\nrewrite !seqA.\narewrite (hb ⨾ sb^? ⊆ hb).\n{\nrewrite sb_in_hb.\napply rewrite_trans_seq_cr_r.\nby apply hb_trans.\n}\narewrite (sb^? ⨾ hb ⊆ hb).\n{\nrewrite sb_in_hb.\napply rewrite_trans_seq_cr_l.\nby apply hb_trans.\n}\narewrite (F ∩₁ Sc ⊆₁ F^sy) by mode_solver.\narewrite (sb^? ⨾ ⦗F^sy⦘ ⨾ hb ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺).\n{\nrewrite hb_in_ord.\nrewrite !seq_union_r.\nunionL.\n{\nrewrite <- ct_step.\nunionR right.\nunfold Arm.bob', Arm.bob.\nrewrite crE.\nrewrite !seq_union_l, seq_id_l.\nunionL.\n2: by eauto 10 with hahn.\nunionR left -> right.\nbasic_solver.\n}\nrewrite <- cr_ct at 2.\nhahn_frame_r.\ntransitivity boba'^?.\n2: basic_solver.\nunfold Arm.bob'.\nbasic_solver 10.\n}\narewrite (hb ⨾ ⦗F^sy⦘ ⨾ sb^? ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺).\n{\nrewrite hb_in_ord.\nrewrite !seq_union_l.\nunionL.\n{\nrewrite <- ct_step.\nunionR right.\nunfold Arm.bob', Arm.bob.\nrewrite crE.\nrewrite !seq_union_r, seq_id_r.\nunionL.\n2: by eauto 10 with hahn.\nunionR left -> left -> right.\nbasic_solver.\n}\nrewrite <- ct_cr at 2.\nhahn_frame_l.\ntransitivity boba'^?.\n2: basic_solver.\nunfold Arm.bob'.\nbasic_solver 10.\n}\narewrite (obs ⊆ obs ∪ dob ∪ aob ∪ boba') at 2.\narewrite (obs ⊆ obs ∪ dob ∪ aob ∪ boba') at 3.\nrewrite !cr_ct.\napply transitiveI.\napply transitive_ct.\n"},{"statement":"Lemma hb_f_sy_in_ord : hb ⨾ ⦗F^sy⦘ ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺.","proof":"rewrite hb_in_ord.\nrewrite !seq_union_l.\nunionL.\n2: {\nbasic_solver.\n}\narewrite !(sb ⨾ ⦗F^sy⦘⊆ boba').\nrewrite <- ct_step.\nbasic_solver 10.\n"},{"statement":"Lemma f_sy_hb_in_ord : ⦗F^sy⦘ ⨾ hb ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺.","proof":"rewrite hb_in_ord.\nrewrite !seq_union_r.\nunionL.\n2: {\nbasic_solver.\n}\narewrite !(⦗F^sy⦘ ⨾ sb ⊆ boba').\n2: {\nrewrite <- ct_step.\nbasic_solver 10.\n}\nunfold Arm.bob'.\nbasic_solver 10.\n"},{"statement":"Lemma sb_psc_f_sb_in_ord : sb^? ⨾ psc_f ⨾ sb^? ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺.","proof":"unfold imm.psc_f.\nrewrite crE with (r := eco ⨾ hb).\nrepeat (rewrite !seq_union_l, !seq_union_r).\nrewrite !seq_id_l, !seqA.\nunionL.\n2: {\ngeneralize psc_in_ord.\nunfold imm.psc.\nby rewrite !seqA.\n}\narewrite (⦗F ∩₁ Sc⦘ ⊆ ⦗F^sy⦘) by mode_solver.\narewrite !(sb^? ⨾ ⦗F^sy⦘⊆ boba'^? ⨾ ⦗F^sy⦘).\n{\nunfold Arm.bob'.\nbasic_solver 21.\n}\narewrite !(⦗F^sy⦘ ⨾ sb^? ⊆ ⦗F^sy⦘ ⨾ boba'^? ).\n{\nunfold Arm.bob'.\nbasic_solver 21.\n}\nsin_rewrite hb_f_sy_in_ord.\narewrite_id ⦗F^sy⦘.\nrewrite seq_id_l.\nset (X:= (obs ∪ dob ∪ aob ∪ boba')).\nassert (boba' ⊆ X⁺) as BB.\n{\nrewrite <- ct_step.\nunfold X.\nbasic_solver.\n}\nsin_rewrite !BB.\nrelsf.\n"},{"statement":"Lemma psc_f_in_ord : psc_f ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺.","proof":"arewrite (psc_f ⊆ sb^? ⨾ psc_f ⨾ sb^?) by basic_solver 10.\napply sb_psc_f_sb_in_ord.\n"},{"statement":"Lemma sc_sb_sc_in_boba' : ⦗Sc⦘ ⨾ sb ⨾ ⦗Sc⦘ ⊆ boba'.","proof":"arewrite (Sc ⊆₁ ((R ∪₁ F) ∪₁ W) ∩₁ Sc) at 1 by type_solver.\nrewrite set_inter_union_l, id_union, !seq_union_l.\nunionL.\n{\narewrite_id ⦗Sc⦘.\nrewrite seq_id_r.\nrewrite set_inter_union_l, id_union, !seq_union_l.\narewrite (⦗F ∩₁ Sc⦘ ⊆ ⦗F^sy⦘) by mode_solver.\narewrite (⦗R ∩₁ Sc⦘ ⊆ ⦗Q⦘) by mode_solver.\nunfold Arm.bob', Arm.bob.\nbasic_solver 10.\n}\narewrite (Sc ⊆₁ ((W ∪₁ F) ∪₁ R) ∩₁ Sc) at 2 by type_solver.\nrewrite set_inter_union_l, id_union, !seq_union_r.\nunionL.\n{\narewrite_id ⦗W ∩₁ Sc⦘.\nrewrite seq_id_l.\nrewrite set_inter_union_l, id_union, !seq_union_r.\narewrite (⦗F ∩₁ Sc⦘ ⊆ ⦗F^sy⦘) by mode_solver.\narewrite (⦗W ∩₁ Sc⦘ ⊆ ⦗L⦘) by mode_solver.\nunfold Arm.bob', Arm.bob.\nbasic_solver 20.\n}\narewrite (⦗W ∩₁ Sc⦘ ⊆ ⦗L⦘) by mode_solver.\nunfold Arm.bob', Arm.bob.\nbasic_solver 10.\n"},{"statement":"Lemma psc_base_in_ord : psc_base ⊆ (obs ∪ dob ∪ aob ∪ boba')⁺.","proof":"unfold imm.psc_base, imm.scb.\nrewrite coi_union_coe, fri_union_fre.\nrewrite coi_in_sb, fri_in_sb.\nrewrite sb_in_hb.\narewrite (hb \\ same_loc ⊆ hb).\nrepeat arewrite (hb ⨾ hb ⊆ hb).\narewrite (hb ∪ hb ∪ hb ∩ same_loc ⊆ hb).\narewrite (hb ∪ (hb ∪ coe) ∪ (hb ∪ fre) ⊆ hb ∪ obs).\n{\narewrite (coe ⊆ obs).\narewrite (fre ⊆ obs).\nunionL; eauto with hahn.\n}\nrewrite !seq_union_l, !seq_union_r.\narewrite ((⦗F⦘ ⨾ hb)^? ⨾ hb ⨾ (hb ⨾ ⦗F⦘)^? ⊆ hb).\n{\ngeneralize (@hb_trans G).\nbasic_solver.\n}\nassert (⦗Sc⦘ ⨾ (⦗F⦘ ⨾ hb)^? ⊆ (⦗F∩₁Sc⦘ ⨾ hb)^?) as AA by basic_solver 10.\nsin_rewrite !AA.\nassert ((hb ⨾ ⦗F⦘)^? ⨾ ⦗Sc⦘ ⊆ (hb ⨾ ⦗F∩₁Sc⦘)^?) as BB.\nby basic_solver 10.\nsin_rewrite !BB.\nassert (⦗F ∩₁ Sc⦘ ⊆ ⦗F^sy⦘) as CC by mode_solver.\nsin_rewrite !CC.\nrewrite f_sy_hb_in_ord, hb_f_sy_in_ord.\nrewrite hb_in_ord.\nrewrite !seq_union_l, !seq_union_r.\nset (X:= (obs ∪ dob ∪ aob ∪ boba')).\nunionL.\n3: {\narewrite (obs ⊆ X⁺).\nrelsf.\n}\n2: basic_solver.\nrewrite sc_sb_sc_in_boba'.\nby arewrite (boba' ⊆ X⁺).\n"},{"statement":"Lemma ppo_in_dob_helper : ⦗R⦘ ⨾ (data ∪ ctrl ∪ addr ⨾ sb^? ∪ rfi)⁺ ⨾ ⦗W⦘ ⊆ dob⁺ .","proof":"rewrite path_union1.\nassert (transitive rfi).\n{\napply transitiveI; rewrite (wf_rfiD WF).\ntype_solver.\n}\nrelsf; unionL.\n{\nrewrite (wf_rfiD WF).\ntype_solver.\n}\nrewrite !seqA.\narewrite_id (⦗R⦘ ⨾ rfi^?).\n{\nrewrite (wf_rfiD WF).\ntype_solver.\n}\nrels.\narewrite (data ∪ ctrl ∪ addr ⨾ sb^? ∪ (data ⨾ rfi ∪ ctrl ⨾ rfi ∪ addr ⨾ sb^? ⨾ rfi)                  ⊆ (data ∪ ctrl ∪ addr ⨾ sb^?) ⨾ rfi^?) by basic_solver 12.\nrelsf.\nrewrite unionA.\nrewrite path_ut_first.\narewrite (data ⨾ rfi^? ⊆ dob).\nrewrite (dob_in_sb WF) at 3.\nrewrite (ctrl_in_sb WF) at 2.\nrewrite (addr_in_sb WF) at 2.\narewrite (rfi ⊆ sb).\ngeneralize (@sb_trans G); ins; relsf.\nrewrite !seqA; relsf.\narewrite (ctrl ⨾ sb^? ⊆ ctrl).\ngeneralize (ctrl_sb WF); basic_solver 12.\narewrite (ctrl ⨾ ⦗W⦘⊆ dob).\nunfold Arm.dob; basic_solver 12.\narewrite ( addr ⨾ sb^? ⨾ ⦗W⦘⊆ dob).\nunfold Arm.dob; basic_solver 12.\nrewrite <- ct_end; basic_solver.\n"},{"statement":"Lemma bob_in_boba : bob ⊆ boba' ∪ sb ⨾ ⦗F^ld⦘.","proof":"unfold imm_bob.bob, imm_bob.fwbob, Arm.bob', Arm.bob.\nunionL.\n{\nbasic_solver 20.\n}\n{\narewrite (⦗L⦘ ⊆ ⦗L⦘ ⨾ ⦗W⦘) at 1 by basic_solver.\nrewrite (w_sb_loc_w_in_coi WF SC_PER_LOC); rels.\n}\n{\nmode_solver 22.\n}\n{\nmode_solver 22.\n}\nbasic_solver 15.\n"},{"statement":"Lemma W_ex_acq_sb_in_boba1 : ⦗W_ex_acq⦘ ⨾ sb ⨾ ⦗W⦘ ⊆ (sb ⨾ ⦗F^ld⦘ ∪ boba')⁺.","proof":"unfold Arm.bob'.\nsin_rewrite W_EX_ACQ_SB.\ncase_refl _.\nby type_solver 12.\nrewrite ct_begin.\nrewrite <- inclusion_t_rt, <- ct_step.\nbasic_solver 42.\n"},{"statement":"Lemma C_SC: acyclic (psc_f ∪ psc_base).","proof":"rewrite psc_base_in_ord, psc_f_in_ord.\nrewrite unionK.\nred.\nrewrite ct_of_ct.\napply (external_alt_bob' WF CON); auto.\n"}]