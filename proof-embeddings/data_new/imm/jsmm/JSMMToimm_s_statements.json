{"filePath":"/Users/Andrei.Kozyrev/MCS_Projects/coqpilotOther/big-rocq/dataset/imm/src/jsmm/JSMMToimm_s.v","fileSamples":[{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (Sc ⊆₁ Rel) at 1 by mode_solver.\narewrite (Sc ⊆₁ Acq) by mode_solver.\nunfold imm_s_hb.release, imm_s_hb.rs.\nrewrite !seqA.\nassert (⦗fun _ => True⦘ ⊆ (rf ⨾ rmw)＊) as HH      by basic_solver.\nrewrite <- HH.\nrewrite <- !inclusion_id_cr.\nrewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"arewrite (Sc ⊆₁ Acq) by mode_solver.\nunfold imm_s_hb.release, imm_s_hb.rs.\nrewrite !seqA.\nassert (⦗fun _ => True⦘ ⊆ (rf ⨾ rmw)＊) as HH      by basic_solver.\nrewrite <- HH.\nrewrite <- !inclusion_id_cr.\nrewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘ ⊆ release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘ ⊆ release ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"unfold imm_s_hb.release, imm_s_hb.rs.\nrewrite !seqA.\nassert (⦗fun _ => True⦘ ⊆ (rf ⨾ rmw)＊) as HH      by basic_solver.\nrewrite <- HH.\nrewrite <- !inclusion_id_cr.\nrewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊)\n  ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ (⦗Rel⦘ ⨾ (⦗F⦘ ⨾ sb)^? ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊)\n  ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"rewrite !seqA.\nassert (⦗fun _ => True⦘ ⊆ (rf ⨾ rmw)＊) as HH      by basic_solver.\nrewrite <- HH.\nrewrite <- !inclusion_id_cr.\nrewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"","proofString":"assert (⦗fun _ => True⦘ ⊆ (rf ⨾ rmw)＊) as HH      by basic_solver.\nrewrite <- HH.\nrewrite <- !inclusion_id_cr.\nrewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊) : ⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘ ⨾ (sb ∩ same_loc)^? ⨾ ⦗W⦘ ⨾ (rf ⨾ rmw)＊ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊)","proofString":"rewrite <- HH.\nrewrite <- !inclusion_id_cr.\nrewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊) : ⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘\n      ⨾ (sb ∩ same_loc)^?\n        ⨾ ⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ (⦗F⦘ ⨾ sb)^?\n    ⨾ ⦗W⦘\n      ⨾ (sb ∩ same_loc)^?\n        ⨾ ⦗W⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ rf ⨾ (sb ⨾ ⦗F⦘)^? ⨾ ⦗Acq⦘","hypotheses":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊)","proofString":"rewrite <- !inclusion_id_cr.\nrewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊) : ⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ ⦗fun _ : actid => True⦘\n    ⨾ ⦗W⦘\n      ⨾ ⦗fun _ : actid => True⦘\n        ⨾ ⦗W⦘\n          ⨾ ⦗fun _ : actid => True⦘ ⨾ rf ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘\n⊆ ⦗Rel⦘\n  ⨾ ⦗fun _ : actid => True⦘\n    ⨾ ⦗W⦘\n      ⨾ ⦗fun _ : actid => True⦘\n        ⨾ ⦗W⦘\n          ⨾ ⦗fun _ : actid => True⦘ ⨾ rf ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗Acq⦘","hypotheses":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊)","proofString":"rewrite !seq_id_l.\nrewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊) : ⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘ ⊆ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ rf ⨾ ⦗Acq⦘ ⊆ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ ⦗Acq⦘","hypotheses":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊)","proofString":"rewrite (dom_l (wf_rfD WF)) at 1.\nbasic_solver 10."},{"statement":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊) : ⦗Rel⦘ ⨾ (⦗W⦘ ⨾ rf) ⨾ ⦗Acq⦘ ⊆ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ ⦗Acq⦘.","conclusion":"⦗Rel⦘ ⨾ (⦗W⦘ ⨾ rf) ⨾ ⦗Acq⦘ ⊆ ⦗Rel⦘ ⨾ ⦗W⦘ ⨾ ⦗W⦘ ⨾ rf ⨾ ⦗Acq⦘","hypotheses":"(HH : ⦗fun _ : actid => True⦘ ⊆ (rf ⨾ rmw)＊)","proofString":"basic_solver 10."},{"statement":"(sb ∪ sw_js)⁺ ⊆ (sb ∪ sw)⁺.","conclusion":"(sb ∪ sw_js)⁺ ⊆ (sb ∪ sw)⁺","hypotheses":"","proofString":"by rewrite sw_js_in_sw."},{"statement":"hb_js ⊆ E × E.","conclusion":"hb_js ⊆ E × E","hypotheses":"","proofString":"rewrite hb_js_in_hb.\napply dom_helper_3.\nby apply wf_hbE."},{"statement":"hb ⊆ E × E.","conclusion":"hb ⊆ E × E","hypotheses":"","proofString":"apply dom_helper_3.\nby apply wf_hbE."},{"statement":"hb ≡ ⦗E⦘ ⨾ hb ⨾ ⦗E⦘.","conclusion":"hb ≡ ⦗E⦘ ⨾ hb ⨾ ⦗E⦘","hypotheses":"","proofString":"by apply wf_hbE."},{"statement":"sw_js ⊆ Sc × Sc.","conclusion":"sw_js ⊆ Sc × Sc","hypotheses":"","proofString":"unfold JSMM.sw.\nbasic_solver."},{"statement":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ Sc × Sc.","conclusion":"⦗Sc⦘ ⨾ rf ⨾ ⦗Sc⦘ ⊆ Sc × Sc","hypotheses":"","proofString":"basic_solver."}]}