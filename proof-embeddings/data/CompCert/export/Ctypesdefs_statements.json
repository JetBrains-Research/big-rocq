{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/export/Ctypesdefs.v","fileSamples":[{"statement":"\"\"%string = \"\"%string.","proofString":"auto."},{"statement":"(c : ascii) (s : string) (IHs : string_of_ident (ident_of_string s) = s) : string_of_ident (append_char_pos c (ident_of_string s)) = String c s.","proofString":"rewrite <- IHs at 2.\ndestruct c as [[] [] [] [] [] [] [] []]; reflexivity."},{"statement":"(c : ascii) (s : string) (IHs : string_of_ident (ident_of_string s) = s) : string_of_ident (append_char_pos c (ident_of_string s)) =\nString c (string_of_ident (ident_of_string s)).","proofString":"destruct c as [[] [] [] [] [] [] [] []]; reflexivity."},{"statement":"(s1 s2 : string) (H : ident_of_string s1 = ident_of_string s2) : s1 = s2.","proofString":"rewrite <- (string_of_ident_of_string s1), <- (string_of_ident_of_string s2).\ncongruence."},{"statement":"(s1 s2 : string) (H : ident_of_string s1 = ident_of_string s2) : string_of_ident (ident_of_string s1) = string_of_ident (ident_of_string s2).","proofString":"congruence."}]}