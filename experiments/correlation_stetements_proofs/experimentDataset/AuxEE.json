[{"statement":"Lemma co_E_E : co ⊆ E_E.","proof":"rewrite wf_coE; basic_solver.\n"},{"statement":"Lemma fr_E_E : fr ⊆ E_E.","proof":"rewrite wf_frE; basic_solver.\n"},{"statement":"Lemma furr_E_E_cr: furr G sc ⊆ E_E^?.","proof":"rewrite wf_furrE; eauto.\nrewrite crE.\napply union_mori; basic_solver 10.\n"},{"statement":"Lemma E_E_trans: transitive E_E.","proof":"unfold E_E.\nbasic_solver.\n"},{"statement":"Lemma sb_E_ENI: sb ⊆ E_ENI.","proof":"rewrite wf_sbE, no_sb_to_init.\nbasic_solver.\n"},{"statement":"Lemma co_E_ENI: co ⊆ E_ENI.","proof":"rewrite wf_coE, no_co_to_init; auto.\nbasic_solver.\n"},{"statement":"Lemma rf_E_ENI : rf ⊆ E_ENI.","proof":"rewrite wf_rfE, no_rf_to_init; auto.\nbasic_solver.\n"},{"statement":"Lemma fr_E_ENI: fr ⊆ E_ENI.","proof":"rewrite wf_frE, no_fr_to_init; auto.\nbasic_solver.\n"},{"statement":"Lemma no_ar_to_init': ar ⨾ ⦗is_init⦘ ≡ ∅₂.","proof":"split; [|basic_solver].\nunfold ar.\nrewrite (ar_int_in_sb WF).\nrewrite no_sb_to_init.\nrewrite wf_scD with (sc:=sc); eauto.\nrewrite (wf_rfeD WF).\nrewrite seq_union_l.\nunionL; [|basic_solver].\nrewrite (init_w WF).\ntype_solver 10.\n"},{"statement":"Lemma no_ar_to_init_alt:\n    ar ≡ ar ⨾ ⦗set_compl is_init⦘.","proof":"forward eapply no_ar_to_init'; eauto.\nbasic_solver 10.\nUnshelve.\nall: eauto.\n"},{"statement":"Lemma ar_E_ENI: ar ⊆ E_ENI.","proof":"rewrite wf_arE, no_ar_to_init_alt; auto.\nbasic_solver.\n"},{"statement":"Lemma sc_E_ENI: sc ⊆ E_ENI.","proof":"rewrite wf_scE, (@no_sc_to_init _ WF _ WFSC); eauto.\nbasic_solver.\n"},{"statement":"Lemma furr_E_ENI_cr: furr G sc ⊆ E_ENI^?.","proof":"rewrite furr_to_ninit, wf_furrE; auto.\nrewrite crE.\nunfold E_ENI.\nbasic_solver.\n"},{"statement":"Lemma E_ENI_trans: transitive E_ENI.","proof":"unfold E_ENI.\nbasic_solver.\n"},{"statement":"Lemma ar_rf_ppo_loc_ct_E_ENI: \n    (ar ∪ rf ⨾ ppo ∩ same_loc)⁺ ⊆ E_ENI.","proof":"rewrite inclusion_inter_l1, ppo_in_sb; auto.\nrewrite sb_E_ENI, rf_E_ENI, ar_E_ENI; auto.\nrepeat (rewrite ?(@rt_of_trans _ E_ENI), ?(@rewrite_trans _ E_ENI),             ?unionK, ?(@rewrite_trans _ E_ENI),             ?(@rewrite_trans_seq_cr_cr _ E_ENI), ?(@ct_of_trans _ E_ENI)           ); try by (subst; apply E_ENI_trans).\nbasic_solver.\n"}]