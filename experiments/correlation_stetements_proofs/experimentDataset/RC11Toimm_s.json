[{"statement":"Lemma s_imm_consistentimplies_rc11_consistent (WF: Wf G) \n      (COND: ⦗R \\₁ Acq⦘ ⨾ sb ⨾ ⦗W \\₁ Rel⦘ ⊆ sb ⨾ ⦗F ∩₁ Acq/Rel⦘ ⨾ sb ∪ ⦗R⦘ ⨾ deps ⨾ ⦗W⦘ ∪ rmw) sc\n      (IPC : imm_s.imm_psc_consistent G sc) :\n  rc11_consistent G.","proof":"cdes IPC.\ncdes IC.\nred.\nsplits; auto.\nrewrite rfi_union_rfe with (G:=G).\nunfold Execution.rfi; rewrite inclusion_inter_l2, <- unionA, unionK.\neapply acyclic_ud with (adom := W) (bdom := R); eauto using sb_acyclic.\n1-2: by destruct WF; unfold Execution.rfe; rewrite wf_rfD; eauto using minus_doma, minus_domb with hahn.\nassert (T:= @sb_trans G); relsf; clear T.\neapply irreflexive_inclusion, Cext; apply inclusion_t_t2.\nunfold imm_s.ar, imm_s_ppo.ar_int; unionL; eauto with hahn.\narewrite (R ≡₁ (R ∩₁ Acq) ∪₁ (R \\₁ Acq)).\nby unfolder; split; ins; desf; destruct (is_acq lab x); auto.\nrewrite id_union; relsf; unionL.\nby rewrite inclusion_seq_eqv_r at 1; unfold imm_bob.bob; auto 10 with hahn.\narewrite (W ≡₁ (W ∩₁ Rel) ∪₁ (W \\₁ Rel)) at 1.\nby unfolder; split; ins; desf; destruct (is_rel lab x); auto.\nrewrite id_union; relsf; unionL.\nby rewrite inclusion_seq_eqv_l at 1; unfold imm_bob.bob, imm_bob.fwbob; auto 10 with hahn.\nrewrite COND.\nsin_rewrite rmw_in_ppo; auto.\narewrite (⦗R⦘ ⨾ deps ⨾ ⦗W⦘ ⊆ ppo).\n{\nrewrite <- deps_rfi_in_ppo.\nsin_rewrite (ct_step deps).\nrewrite unionC, ct_unionE.\nbasic_solver.\n}\nunionL.\n{\nrewrite <- seq_eqvK, seqA, <- seqA.\napply inclusion_step2_ct; unfold imm_bob.bob, imm_bob.fwbob; auto 10 with hahn.\n}\nall: etransitivity; [|by apply ct_step].\nall: basic_solver 20.\n"}]