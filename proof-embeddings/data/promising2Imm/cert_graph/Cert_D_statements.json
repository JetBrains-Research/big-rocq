{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/promising2ToImm/src/cert_graph/Cert_D.v","fileSamples":[{"statement":"C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘) ∪₁ \ncodom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘) ⊆₁ E.","proofString":"arewrite ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗E⦘).\nrewrite (wf_rppoE WF) at 1.\nrewrite rtE.\nrewrite !seq_union_l, !seq_union_r, !seq_id_l.\napply union_mori; [done|].\nrewrite (dom_l (wf_dataE WF)) at 1.\nrewrite (dom_l (wf_rfiE WF)) at 1.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver.\nrewrite (wf_ppoE WF), (wf_rfiE WF), (wf_rfeE WF), C_in_E, I_in_E; eauto.\nbasic_solver."},{"statement":"(Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite (wf_rppoE WF) at 1.\nrewrite rtE.\nrewrite !seq_union_l, !seq_union_r, !seq_id_l.\napply union_mori; [done|].\nrewrite (dom_l (wf_dataE WF)) at 1.\nrewrite (dom_l (wf_rfiE WF)) at 1.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(Gdata ∪ Grfi ∪ Grmw)＊ ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite rtE.\nrewrite !seq_union_l, !seq_union_r, !seq_id_l.\napply union_mori; [done|].\nrewrite (dom_l (wf_dataE WF)) at 1.\nrewrite (dom_l (wf_rfiE WF)) at 1.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(⦗fun _ : actid => True⦘ ∪ (Gdata ∪ Grfi ∪ Grmw)⁺) ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ (Gdata ∪ Grfi ∪ Grmw)⁺) ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite !seq_union_l, !seq_union_r, !seq_id_l.\napply union_mori; [done|].\nrewrite (dom_l (wf_dataE WF)) at 1.\nrewrite (dom_l (wf_rfiE WF)) at 1.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘ ∪ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘ ∪ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"apply union_mori; [done|].\nrewrite (dom_l (wf_dataE WF)) at 1.\nrewrite (dom_l (wf_rfiE WF)) at 1.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite (dom_l (wf_dataE WF)) at 1.\nrewrite (dom_l (wf_rfiE WF)) at 1.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(⦗E⦘ ⨾ Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite (dom_l (wf_rfiE WF)) at 1.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(⦗E⦘ ⨾ Gdata ∪ ⦗E⦘ ⨾ Grfi ∪ Grmw)⁺ ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(⦗E⦘ ⨾ Gdata ∪ ⦗E⦘ ⨾ Grfi ∪ ⦗E⦘ ⨾ Grmw)⁺ ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite <- !seq_union_r.\nrewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw))⁺ ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"rewrite inclusion_ct_seq_eqv_l.\nbasic_solver."},{"statement":"(⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺) ⨾ ⦗E⦘ ⨾ Grppo ⨾ ⦗E⦘\n⊆ ⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗E⦘.","proofString":"basic_solver."},{"statement":"C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n∪₁ dom_rel (⦗E⦘ ⨾ (Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗E⦘ ⨾ ⦗S⦘)\n∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘) ⊆₁ E.","proofString":"rewrite (wf_ppoE WF), (wf_rfiE WF), (wf_rfeE WF), C_in_E, I_in_E; eauto.\nbasic_solver."},{"statement":"E ∪₁ E ∪₁ E ∩₁ NTid_ thread\n∪₁ dom_rel ((⦗E⦘ ⨾ Grfi ⨾ ⦗E⦘)^? ⨾ (⦗E⦘ ⨾ Gppo ⨾ ⦗E⦘) ⨾ ⦗E⦘)\n∪₁ dom_rel (⦗E⦘ ⨾ (Gdata ∪ ⦗E⦘ ⨾ Grfi ⨾ ⦗E⦘ ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗E⦘ ⨾ ⦗S⦘)\n∪₁ codom_rel (⦗E⦘ ⨾ ⦗E⦘ ⨾ Grfi ⨾ ⦗E⦘)\n∪₁ codom_rel ((⦗E⦘ ⨾ Grfe ⨾ ⦗E⦘) ⨾ ⦗R ∩₁ Acq⦘)\n∪₁ codom_rel (⦗E⦘ ⨾ Grfe ⨾ ⦗E⦘) ∩₁ dom_rel (Grmw ⨾ ⦗S⦘) ⊆₁ E.","proofString":"basic_solver."},{"statement":"S ⊆₁ W -> ⦗S⦘ ⊆ ⦗W⦘ ⨾ ⦗S⦘.","proofString":"basic_solver."},{"statement":"E ∩₁ NTid_ thread\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 10."},{"statement":"covered (certT G T thread) ⊆₁ D.","proofString":"rewrite covered_certT.\nrewrite C_in_D.\napply set_subset_union_l.\nsplit; [done| ].\nunfold D.\nbasic_solver 10."},{"statement":"C ∪₁ E ∩₁ NTid_ thread ⊆₁ D.","proofString":"rewrite C_in_D.\napply set_subset_union_l.\nsplit; [done| ].\nunfold D.\nbasic_solver 10."},{"statement":"D ∪₁ E ∩₁ NTid_ thread ⊆₁ D.","proofString":"apply set_subset_union_l.\nsplit; [done| ].\nunfold D.\nbasic_solver 10."},{"statement":"D ⊆₁ D /\\ E ∩₁ NTid_ thread ⊆₁ D.","proofString":"split; [done| ].\nunfold D.\nbasic_solver 10."},{"statement":"E ∩₁ NTid_ thread ⊆₁ D.","proofString":"unfold D.\nbasic_solver 10."},{"statement":"E ∩₁ NTid_ thread\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 10."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 21."},{"statement":"dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 21."},{"statement":"E ⊆₁ E ∩₁ Tid_ thread ∪₁ E ∩₁ NTid_ thread.","proofString":"clear; unfolder; ins; desf; tauto."},{"statement":"(E ∩₁ Tid_ thread ∪₁ E ∩₁ NTid_ thread) \\₁ D ⊆₁ Tid_ thread.","proofString":"rewrite E_ntid_in_D.\nclear; basic_solver."},{"statement":"(E ∩₁ Tid_ thread ∪₁ D) \\₁ D ⊆₁ Tid_ thread.","proofString":"clear; basic_solver."},{"statement":"C ⊆₁ C ∪₁ E ∩₁ NTid_ thread.","proofString":"basic_solver."},{"statement":"E ∩₁ NTid_ thread\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 10."},{"statement":"C ∪₁ E ∩₁ NTid_ thread ⊆₁ D.","proofString":"rewrite C_in_D, ENT_D.\nbasic_solver."},{"statement":"D ∪₁ D ⊆₁ D.","proofString":"basic_solver."},{"statement":"dom_rel (Gsb ⨾ ⦗covered (certT G T thread)⦘) ⊆₁ D.","proofString":"rewrite dom_sb_covered; eauto.\napply covered_cert_D."},{"statement":"covered (certT G T thread) ⊆₁ D.","proofString":"apply covered_cert_D."},{"statement":"dom_rel (Gaddr ⨾ ⦗E⦘) ⊆₁ D.","proofString":"rewrite E_to_S.\nrewrite id_union; relsf; unionL; splits.\nrewrite (addr_in_sb WF).\napply dom_sb_C_in_D.\nrewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\nsin_rewrite addr_sb_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gaddr ⨾ ⦗C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite id_union; relsf; unionL; splits.\nrewrite (addr_in_sb WF).\napply dom_sb_C_in_D.\nrewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\nsin_rewrite addr_sb_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gaddr ⨾ ⦗C⦘) ⊆₁ D.","proofString":"rewrite (addr_in_sb WF).\napply dom_sb_C_in_D."},{"statement":"dom_rel (Gsb ⨾ ⦗C⦘) ⊆₁ D.","proofString":"apply dom_sb_C_in_D."},{"statement":"dom_rel (Gaddr ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\nsin_rewrite addr_sb_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gaddr ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ D.","proofString":"rewrite S_W_S.\nsin_rewrite addr_sb_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gaddr ⨾ Gsb^? ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"sin_rewrite addr_sb_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘) ⊆₁ D.","proofString":"apply dom_rppo_S_in_D."},{"statement":"dom_rel (Gctrl ⨾ ⦗E⦘) ⊆₁ D.","proofString":"rewrite E_to_S.\nrewrite id_union; relsf; unionL; splits.\nrewrite (ctrl_in_sb WF).\napply dom_sb_C_in_D.\nrewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\narewrite (Gctrl ⨾ Gsb^? ⊆ Gctrl).\ngeneralize (ctrl_sb WF).\nbasic_solver 21.\nsin_rewrite ctrl_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gctrl ⨾ ⦗C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite id_union; relsf; unionL; splits.\nrewrite (ctrl_in_sb WF).\napply dom_sb_C_in_D.\nrewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\narewrite (Gctrl ⨾ Gsb^? ⊆ Gctrl).\ngeneralize (ctrl_sb WF).\nbasic_solver 21.\nsin_rewrite ctrl_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gctrl ⨾ ⦗C⦘) ⊆₁ D.","proofString":"rewrite (ctrl_in_sb WF).\napply dom_sb_C_in_D."},{"statement":"dom_rel (Gsb ⨾ ⦗C⦘) ⊆₁ D.","proofString":"apply dom_sb_C_in_D."},{"statement":"dom_rel (Gctrl ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\narewrite (Gctrl ⨾ Gsb^? ⊆ Gctrl).\ngeneralize (ctrl_sb WF).\nbasic_solver 21.\nsin_rewrite ctrl_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gctrl ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ D.","proofString":"rewrite S_W_S.\narewrite (Gctrl ⨾ Gsb^? ⊆ Gctrl).\ngeneralize (ctrl_sb WF).\nbasic_solver 21.\nsin_rewrite ctrl_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Gctrl ⨾ Gsb^? ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"arewrite (Gctrl ⨾ Gsb^? ⊆ Gctrl).\ngeneralize (ctrl_sb WF).\nbasic_solver 21.\nsin_rewrite ctrl_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"Gctrl ⨾ Gsb^? ⊆ Gctrl.","proofString":"generalize (ctrl_sb WF).\nbasic_solver 21."},{"statement":"Gctrl ⨾ Gsb ⊆ Gctrl -> Gctrl ⨾ Gsb^? ⊆ Gctrl.","proofString":"basic_solver 21."},{"statement":"dom_rel (Gctrl ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"sin_rewrite ctrl_W_in_rppo.\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘) ⊆₁ D.","proofString":"apply dom_rppo_S_in_D."},{"statement":"dom_rel (Grmw_dep ⨾ ⦗E⦘) ⊆₁ D.","proofString":"rewrite E_to_S.\nrewrite id_union; relsf; unionL; splits.\nrewrite (rmw_dep_in_sb WF).\napply dom_sb_C_in_D.\nrewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\nrewrite (dom_r (wf_rmw_depD WF)), !seqA.\narewrite (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘).\nclear.\ntype_solver.\nsin_rewrite (rmw_dep_sb_W_in_rppo WF).\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grmw_dep ⨾ ⦗C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite id_union; relsf; unionL; splits.\nrewrite (rmw_dep_in_sb WF).\napply dom_sb_C_in_D.\nrewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\nrewrite (dom_r (wf_rmw_depD WF)), !seqA.\narewrite (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘).\nclear.\ntype_solver.\nsin_rewrite (rmw_dep_sb_W_in_rppo WF).\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grmw_dep ⨾ ⦗C⦘) ⊆₁ D.","proofString":"rewrite (rmw_dep_in_sb WF).\napply dom_sb_C_in_D."},{"statement":"dom_rel (Gsb ⨾ ⦗C⦘) ⊆₁ D.","proofString":"apply dom_sb_C_in_D."},{"statement":"dom_rel (Grmw_dep ⨾ ⦗dom_rel (Gsb^? ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite S_W_S.\nrewrite (dom_r (wf_rmw_depD WF)), !seqA.\narewrite (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘).\nclear.\ntype_solver.\nsin_rewrite (rmw_dep_sb_W_in_rppo WF).\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grmw_dep ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ D.","proofString":"rewrite S_W_S.\nrewrite (dom_r (wf_rmw_depD WF)), !seqA.\narewrite (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘).\nclear.\ntype_solver.\nsin_rewrite (rmw_dep_sb_W_in_rppo WF).\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grmw_dep ⨾ Gsb^? ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"rewrite (dom_r (wf_rmw_depD WF)), !seqA.\narewrite (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘).\nclear.\ntype_solver.\nsin_rewrite (rmw_dep_sb_W_in_rppo WF).\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grmw_dep ⨾ ⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"arewrite (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘).\nclear.\ntype_solver.\nsin_rewrite (rmw_dep_sb_W_in_rppo WF).\napply dom_rppo_S_in_D."},{"statement":"⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘.","proofString":"clear.\ntype_solver."},{"statement":"⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⊆ Gsb ⨾ ⦗W⦘.","proofString":"type_solver."},{"statement":"dom_rel (Grmw_dep ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"sin_rewrite (rmw_dep_sb_W_in_rppo WF).\napply dom_rppo_S_in_D."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘) ⊆₁ D.","proofString":"apply dom_rppo_S_in_D."},{"statement":"dom_rel\n  (Grmw\n   ⨾ ⦗C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n      ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n      ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n      ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite !id_union; relsf; unionL; splits.\nrewrite (rmw_in_sb WF) at 1.\napply dom_sb_C_in_D.\nrewrite (rmw_in_ppo WF) at 1.\nunfold D.\nclear.\nbasic_solver 12.\nunfold D.\nunionR left -> left -> left -> left.\nunionR left -> right.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite (wf_rmwt WF) at 1.\nclear.\nunfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence.\nrewrite dom_rel_eqv_dom_rel.\nrewrite (rmw_in_ppo WF) at 1.\nrewrite (dom_r (@wf_ppoD G)) at 1.\nrewrite (dom_l (@wf_ppoD G)) at 2.\nunionR left -> left -> left -> left.\nunionR right.\ngeneralize (@ppo_rfi_ppo G).\nclear; type_solver 21.\nunionR left -> left -> left -> right.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- inclusion_t_rt at 2.\nrewrite ct_begin.\nclear; basic_solver 21.\nrewrite (dom_r (wf_rmwD WF)).\nrewrite (dom_r (wf_rfiD WF)).\nclear; type_solver.\nrewrite (dom_r (wf_rmwD WF)).\nclear; type_solver.\nrewrite (wf_rmwD WF).\nclear; type_solver."},{"statement":"dom_rel (Grmw ⨾ ⦗C⦘) ⊆₁ D.","proofString":"rewrite (rmw_in_sb WF) at 1.\napply dom_sb_C_in_D."},{"statement":"dom_rel (Gsb ⨾ ⦗C⦘) ⊆₁ D.","proofString":"apply dom_sb_C_in_D."},{"statement":"dom_rel (Grmw ⨾ ⦗I⦘) ⊆₁ D.","proofString":"rewrite (rmw_in_ppo WF) at 1.\nunfold D.\nclear.\nbasic_solver 12."},{"statement":"dom_rel (Gppo ⨾ ⦗I⦘) ⊆₁ D.","proofString":"unfold D.\nclear.\nbasic_solver 12."},{"statement":"dom_rel (Gppo ⨾ ⦗I⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"clear.\nbasic_solver 12."},{"statement":"dom_rel (Gppo ⨾ ⦗I⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 12."},{"statement":"dom_rel (Grmw ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ D.","proofString":"unfold D.\nunionR left -> left -> left -> left.\nunionR left -> right.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite (wf_rmwt WF) at 1.\nclear.\nunfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"dom_rel (Grmw ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"unionR left -> left -> left -> left.\nunionR left -> right.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite (wf_rmwt WF) at 1.\nclear.\nunfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"dom_rel (Grmw ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘).","proofString":"unionR left -> right.\nrewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite (wf_rmwt WF) at 1.\nclear.\nunfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"dom_rel (Grmw ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ E ∩₁ NTid_ thread.","proofString":"rewrite (dom_l (wf_rmwE WF)) at 1.\nrewrite (wf_rmwt WF) at 1.\nclear.\nunfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"dom_rel ((⦗E⦘ ⨾ Grmw) ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ E ∩₁ NTid_ thread.","proofString":"rewrite (wf_rmwt WF) at 1.\nclear.\nunfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"dom_rel ((⦗E⦘ ⨾ same_tid) ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ E ∩₁ NTid_ thread.","proofString":"clear.\nunfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"dom_rel ((⦗E⦘ ⨾ same_tid) ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ E ∩₁ NTid_ thread.","proofString":"unfold same_tid.\nunfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"dom_rel ((⦗E⦘ ⨾ (fun x y : actid => tid x = tid y)) ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ E ∩₁ NTid_ thread.","proofString":"unfolder.\nintros.\ndesf.\nsplit; congruence."},{"statement":"forall x : actid,\n(exists y : actid, E x /\\ tid x = tid y /\\ E y /\\ tid y <> thread) ->\nE x /\\ tid x <> thread.","proofString":"intros.\ndesf.\nsplit; congruence."},{"statement":"(x : actid) (H : exists y : actid, E x /\\ tid x = tid y /\\ E y /\\ tid y <> thread) : E x /\\ tid x <> thread.","proofString":"desf.\nsplit; congruence."},{"statement":"(x y : actid) (H : E x) (H0 : tid x = tid y) (H1 : E y) (H2 : tid y <> thread) : E x /\\ tid x <> thread.","proofString":"split; congruence."},{"statement":"dom_rel (Grmw ⨾ ⦗dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)⦘) ⊆₁ D.","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite (rmw_in_ppo WF) at 1.\nrewrite (dom_r (@wf_ppoD G)) at 1.\nrewrite (dom_l (@wf_ppoD G)) at 2.\nunionR left -> left -> left -> left.\nunionR right.\ngeneralize (@ppo_rfi_ppo G).\nclear; type_solver 21."},{"statement":"dom_rel (Grmw ⨾ Grfi^? ⨾ Gppo ⨾ ⦗I⦘) ⊆₁ D.","proofString":"rewrite (rmw_in_ppo WF) at 1.\nrewrite (dom_r (@wf_ppoD G)) at 1.\nrewrite (dom_l (@wf_ppoD G)) at 2.\nunionR left -> left -> left -> left.\nunionR right.\ngeneralize (@ppo_rfi_ppo G).\nclear; type_solver 21."},{"statement":"dom_rel (Gppo ⨾ Grfi^? ⨾ Gppo ⨾ ⦗I⦘) ⊆₁ D.","proofString":"rewrite (dom_r (@wf_ppoD G)) at 1.\nrewrite (dom_l (@wf_ppoD G)) at 2.\nunionR left -> left -> left -> left.\nunionR right.\ngeneralize (@ppo_rfi_ppo G).\nclear; type_solver 21."},{"statement":"dom_rel ((Gppo ⨾ ⦗W⦘) ⨾ Grfi^? ⨾ Gppo ⨾ ⦗I⦘) ⊆₁ D.","proofString":"rewrite (dom_l (@wf_ppoD G)) at 2.\nunionR left -> left -> left -> left.\nunionR right.\ngeneralize (@ppo_rfi_ppo G).\nclear; type_solver 21."},{"statement":"dom_rel ((Gppo ⨾ ⦗W⦘) ⨾ Grfi^? ⨾ (⦗R⦘ ⨾ Gppo) ⨾ ⦗I⦘) ⊆₁ D.","proofString":"unionR left -> left -> left -> left.\nunionR right.\ngeneralize (@ppo_rfi_ppo G).\nclear; type_solver 21."},{"statement":"dom_rel ((Gppo ⨾ ⦗W⦘) ⨾ Grfi^? ⨾ (⦗R⦘ ⨾ Gppo) ⨾ ⦗I⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘).","proofString":"unionR right.\ngeneralize (@ppo_rfi_ppo G).\nclear; type_solver 21."},{"statement":"dom_rel ((Gppo ⨾ ⦗W⦘) ⨾ Grfi^? ⨾ (⦗R⦘ ⨾ Gppo) ⨾ ⦗I⦘)\n⊆₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘).","proofString":"generalize (@ppo_rfi_ppo G).\nclear; type_solver 21."},{"statement":"Gppo ⨾ Grfi ⨾ Gppo ⊆ Gppo ->\ndom_rel ((Gppo ⨾ ⦗W⦘) ⨾ Grfi^? ⨾ (⦗R⦘ ⨾ Gppo) ⨾ ⦗I⦘)\n⊆₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘).","proofString":"clear; type_solver 21."},{"statement":"dom_rel (Grmw ⨾ ⦗dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"unionR left -> left -> left -> right.\nrewrite dom_rel_eqv_dom_rel.\nrewrite <- inclusion_t_rt at 2.\nrewrite ct_begin.\nclear; basic_solver 21."},{"statement":"dom_rel (Grmw ⨾ ⦗dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite dom_rel_eqv_dom_rel.\nrewrite <- inclusion_t_rt at 2.\nrewrite ct_begin.\nclear; basic_solver 21."},{"statement":"dom_rel (Grmw ⨾ (Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite <- inclusion_t_rt at 2.\nrewrite ct_begin.\nclear; basic_solver 21."},{"statement":"dom_rel (Grmw ⨾ (Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)⁺ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite ct_begin.\nclear; basic_solver 21."},{"statement":"dom_rel (Grmw ⨾ (Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n⊆₁ dom_rel (((Gdata ∪ Grfi ∪ Grmw) ⨾ (Gdata ∪ Grfi ∪ Grmw)＊) ⨾ Grppo ⨾ ⦗S⦘).","proofString":"clear; basic_solver 21."},{"statement":"dom_rel (Grmw ⨾ ⦗codom_rel (⦗I⦘ ⨾ Grfi)⦘) ⊆₁ D.","proofString":"rewrite (dom_r (wf_rmwD WF)).\nrewrite (dom_r (wf_rfiD WF)).\nclear; type_solver."},{"statement":"dom_rel ((Grmw ⨾ ⦗W⦘) ⨾ ⦗codom_rel (⦗I⦘ ⨾ Grfi)⦘) ⊆₁ D.","proofString":"rewrite (dom_r (wf_rfiD WF)).\nclear; type_solver."},{"statement":"dom_rel ((Grmw ⨾ ⦗W⦘) ⨾ ⦗codom_rel (⦗I⦘ ⨾ Grfi ⨾ ⦗R⦘)⦘) ⊆₁ D.","proofString":"clear; type_solver."},{"statement":"dom_rel (Grmw ⨾ ⦗codom_rel Grfe ∩₁ (R ∩₁ Acq)⦘) ⊆₁ D.","proofString":"rewrite (dom_r (wf_rmwD WF)).\nclear; type_solver."},{"statement":"dom_rel ((Grmw ⨾ ⦗W⦘) ⨾ ⦗codom_rel Grfe ∩₁ (R ∩₁ Acq)⦘) ⊆₁ D.","proofString":"clear; type_solver."},{"statement":"dom_rel (Grmw ⨾ ⦗codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite (wf_rmwD WF).\nclear; type_solver."},{"statement":"dom_rel\n  ((⦗R⦘ ⨾ Grmw ⨾ ⦗W⦘)\n   ⨾ ⦗codom_rel Grfe ∩₁ dom_rel ((⦗R⦘ ⨾ Grmw ⨾ ⦗W⦘) ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"clear; type_solver."},{"statement":"GR_ex ∩₁ (C ∪₁ dom_rel (Gsb^? ⨾ ⦗S⦘)) ⊆₁ D.","proofString":"rewrite set_inter_union_r.\nunionL.\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite <- dom_eqv1.\narewrite (⦗S⦘ ⊆ ⦗W⦘ ⨾ ⦗S⦘).\nrewrite <- S_in_W.\nclear.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_l, seq_union_r, dom_union.\nunionL.\ntype_solver.\nsin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"GR_ex ∩₁ C ∪₁ GR_ex ∩₁ dom_rel (Gsb^? ⨾ ⦗S⦘) ⊆₁ D.","proofString":"unionL.\nrewrite <- C_in_D.\nclear.\nbasic_solver.\nrewrite <- dom_eqv1.\narewrite (⦗S⦘ ⊆ ⦗W⦘ ⨾ ⦗S⦘).\nrewrite <- S_in_W.\nclear.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_l, seq_union_r, dom_union.\nunionL.\ntype_solver.\nsin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"GR_ex ∩₁ C ⊆₁ D.","proofString":"rewrite <- C_in_D.\nclear.\nbasic_solver."},{"statement":"GR_ex ∩₁ C ⊆₁ C.","proofString":"clear.\nbasic_solver."},{"statement":"GR_ex ∩₁ C ⊆₁ C.","proofString":"basic_solver."},{"statement":"GR_ex ∩₁ dom_rel (Gsb^? ⨾ ⦗S⦘) ⊆₁ D.","proofString":"rewrite <- dom_eqv1.\narewrite (⦗S⦘ ⊆ ⦗W⦘ ⨾ ⦗S⦘).\nrewrite <- S_in_W.\nclear.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_l, seq_union_r, dom_union.\nunionL.\ntype_solver.\nsin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗S⦘) ⊆₁ D.","proofString":"arewrite (⦗S⦘ ⊆ ⦗W⦘ ⨾ ⦗S⦘).\nrewrite <- S_in_W.\nclear.\nbasic_solver.\nrewrite crE.\nrewrite seq_union_l, seq_union_r, dom_union.\nunionL.\ntype_solver.\nsin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"⦗S⦘ ⊆ ⦗W⦘ ⨾ ⦗S⦘.","proofString":"rewrite <- S_in_W.\nclear.\nbasic_solver."},{"statement":"⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗S⦘.","proofString":"clear.\nbasic_solver."},{"statement":"⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗S⦘.","proofString":"basic_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb^? ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"rewrite crE.\nrewrite seq_union_l, seq_union_r, dom_union.\nunionL.\ntype_solver.\nsin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ (⦗fun _ : actid => True⦘ ∪ Gsb) ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"rewrite seq_union_l, seq_union_r, dom_union.\nunionL.\ntype_solver.\nsin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗W⦘ ⨾ ⦗S⦘)\n∪₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"unionL.\ntype_solver.\nsin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"type_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"sin_rewrite R_ex_sb_W_in_rppo.\nunfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘) ⊆₁ D.","proofString":"unfold D.\nrewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"rewrite rtE.\nclear.\nbasic_solver 20."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel\n        ((⦗fun _ : actid => True⦘ ∪ (Gdata ∪ Grfi ∪ Grmw)⁺) ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"clear.\nbasic_solver 20."},{"statement":"dom_rel (Grppo ⨾ ⦗S⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel\n        ((⦗fun _ : actid => True⦘ ∪ (Gdata ∪ Grfi ∪ Grmw)⁺) ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 20."},{"statement":"dom_rel\n  (⦗GR_ex⦘\n   ⨾ Gsb\n     ⨾ ⦗W⦘\n       ⨾ ⦗C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n          ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n          ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n          ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite !id_union, !seq_union_r, !dom_union.\nunionL; splits.\nrewrite <- dom_sb_C_in_D.\nbasic_solver.\nrewrite I_in_S at 1.\nunfold D.\nunfold rppo.\nunionR left -> left -> left -> right.\nrewrite rtE.\nbasic_solver 21.\nunionR left -> left -> left -> left.\nunionR left -> right.\nrewrite (dom_l (@wf_sbE G)) at 1.\narewrite ((GR_ex) ⊆₁ set_compl Init).\nrewrite (init_w WF), R_ex_in_R; type_solver.\ngeneralize (@ninit_sb_same_tid G).\nunfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto.\nunionR left -> left -> left -> right.\narewrite (Grfi ⊆ Gsb) at 1.\nrewrite (ppo_in_sb WF) at 1.\nrewrite I_in_S.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\ngeneralize (@sb_trans G); basic_solver 21.\nunionR left -> left -> left -> right.\narewrite (Grfi ⊆ Gsb) at 1.\nrewrite (data_in_sb WF) at 1.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rppo_in_sb WF) at 1.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32.\nrewrite (dom_r (wf_rfiD WF)).\ntype_solver.\nunfold D.\nrewrite (dom_r (wf_rmwD WF)).\ntype_solver.\nrewrite (wf_rmwD WF).\nclear; type_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗C⦘) ∪₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗I⦘)\n∪₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ NTid_ thread⦘)\n∪₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)⦘)\n∪₁ dom_rel\n     (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘)\n∪₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel (⦗I⦘ ⨾ Grfi)⦘)\n∪₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)⦘)\n∪₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)⦘)\n⊆₁ D.","proofString":"unionL; splits.\nrewrite <- dom_sb_C_in_D.\nbasic_solver.\nrewrite I_in_S at 1.\nunfold D.\nunfold rppo.\nunionR left -> left -> left -> right.\nrewrite rtE.\nbasic_solver 21.\nunionR left -> left -> left -> left.\nunionR left -> right.\nrewrite (dom_l (@wf_sbE G)) at 1.\narewrite ((GR_ex) ⊆₁ set_compl Init).\nrewrite (init_w WF), R_ex_in_R; type_solver.\ngeneralize (@ninit_sb_same_tid G).\nunfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto.\nunionR left -> left -> left -> right.\narewrite (Grfi ⊆ Gsb) at 1.\nrewrite (ppo_in_sb WF) at 1.\nrewrite I_in_S.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\ngeneralize (@sb_trans G); basic_solver 21.\nunionR left -> left -> left -> right.\narewrite (Grfi ⊆ Gsb) at 1.\nrewrite (data_in_sb WF) at 1.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rppo_in_sb WF) at 1.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32.\nrewrite (dom_r (wf_rfiD WF)).\ntype_solver.\nunfold D.\nrewrite (dom_r (wf_rmwD WF)).\ntype_solver.\nrewrite (wf_rmwD WF).\nclear; type_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗C⦘) ⊆₁ D.","proofString":"rewrite <- dom_sb_C_in_D.\nbasic_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗C⦘) ⊆₁ dom_rel (Gsb ⨾ ⦗C⦘).","proofString":"basic_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗I⦘) ⊆₁ D.","proofString":"rewrite I_in_S at 1.\nunfold D.\nunfold rppo.\nunionR left -> left -> left -> right.\nrewrite rtE.\nbasic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘) ⊆₁ D.","proofString":"unfold D.\nunfold rppo.\nunionR left -> left -> left -> right.\nrewrite rtE.\nbasic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"unfold rppo.\nunionR left -> left -> left -> right.\nrewrite rtE.\nbasic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel\n        ((Gdata ∪ Grfi ∪ Grmw)＊\n         ⨾ ((Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grmw_dep ⨾ Gsb ∪ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘)\n           ⨾ ⦗S⦘) ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"unionR left -> left -> left -> right.\nrewrite rtE.\nbasic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘)\n⊆₁ dom_rel\n     ((Gdata ∪ Grfi ∪ Grmw)＊\n      ⨾ ((Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grmw_dep ⨾ Gsb ∪ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘)\n        ⨾ ⦗S⦘).","proofString":"rewrite rtE.\nbasic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗S⦘)\n⊆₁ dom_rel\n     ((⦗fun _ : actid => True⦘ ∪ (Gdata ∪ Grfi ∪ Grmw)⁺)\n      ⨾ ((Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grmw_dep ⨾ Gsb ∪ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘)\n        ⨾ ⦗S⦘).","proofString":"basic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ D.","proofString":"unionR left -> left -> left -> left.\nunionR left -> right.\nrewrite (dom_l (@wf_sbE G)) at 1.\narewrite ((GR_ex) ⊆₁ set_compl Init).\nrewrite (init_w WF), R_ex_in_R; type_solver.\ngeneralize (@ninit_sb_same_tid G).\nunfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘).","proofString":"unionR left -> right.\nrewrite (dom_l (@wf_sbE G)) at 1.\narewrite ((GR_ex) ⊆₁ set_compl Init).\nrewrite (init_w WF), R_ex_in_R; type_solver.\ngeneralize (@ninit_sb_same_tid G).\nunfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ NTid_ thread⦘) ⊆₁ E ∩₁ NTid_ thread.","proofString":"rewrite (dom_l (@wf_sbE G)) at 1.\narewrite ((GR_ex) ⊆₁ set_compl Init).\nrewrite (init_w WF), R_ex_in_R; type_solver.\ngeneralize (@ninit_sb_same_tid G).\nunfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ (⦗E⦘ ⨾ Gsb) ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ E ∩₁ NTid_ thread.","proofString":"arewrite ((GR_ex) ⊆₁ set_compl Init).\nrewrite (init_w WF), R_ex_in_R; type_solver.\ngeneralize (@ninit_sb_same_tid G).\nunfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto."},{"statement":"GR_ex ⊆₁ set_compl Init.","proofString":"rewrite (init_w WF), R_ex_in_R; type_solver."},{"statement":"dom_rel (⦗set_compl Init⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ E ∩₁ NTid_ thread.","proofString":"generalize (@ninit_sb_same_tid G).\nunfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto."},{"statement":"⦗set_compl Init⦘ ⨾ Gsb ⊆ same_tid ->\ndom_rel (⦗set_compl Init⦘ ⨾ ⦗E⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗E ∩₁ NTid_ thread⦘)\n⊆₁ E ∩₁ NTid_ thread.","proofString":"unfold same_tid; unfolder; ins; desf; splits; eauto.\nerewrite H; eauto."},{"statement":"(H : forall x0 y0 : actid, ~ is_init x0 /\\ Gsb x0 y0 -> tid x0 = tid y0) (x y : actid) (H0 : ~ is_init x) (H5 : E x) (H1 : Gsb x y) (H2 : is_w Glab y) (H3 : E y) (H4 : tid y <> thread) : tid x <> thread.","proofString":"erewrite H; eauto."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)⦘) ⊆₁ D.","proofString":"unionR left -> left -> left -> right.\narewrite (Grfi ⊆ Gsb) at 1.\nrewrite (ppo_in_sb WF) at 1.\nrewrite I_in_S.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"arewrite (Grfi ⊆ Gsb) at 1.\nrewrite (ppo_in_sb WF) at 1.\nrewrite I_in_S.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ Gppo ⨾ ⦗I⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite (ppo_in_sb WF) at 1.\nrewrite I_in_S.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ Gsb ⨾ ⦗I⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite I_in_S.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ Gsb ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"arewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘.","proofString":"by generalize S_in_W; basic_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ Gsb ⨾ ⦗S⦘ ⨾ ⦗W⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"unfold rppo.\ngeneralize (@sb_trans G); basic_solver 21."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ Gsb ⨾ ⦗S⦘ ⨾ ⦗W⦘)⦘)\n⊆₁ dom_rel\n     ((Gdata ∪ Grfi ∪ Grmw)＊\n      ⨾ ((Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grmw_dep ⨾ Gsb ∪ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘)\n        ⨾ ⦗S⦘).","proofString":"generalize (@sb_trans G); basic_solver 21."},{"statement":"dom_rel\n  (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘)\n⊆₁ D.","proofString":"unionR left -> left -> left -> right.\narewrite (Grfi ⊆ Gsb) at 1.\nrewrite (data_in_sb WF) at 1.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rppo_in_sb WF) at 1.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel\n  (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"arewrite (Grfi ⊆ Gsb) at 1.\nrewrite (data_in_sb WF) at 1.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rppo_in_sb WF) at 1.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel\n  (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gdata ∪ Gsb ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite (data_in_sb WF) at 1.\nrewrite (rmw_in_sb WF) at 1.\nrewrite (rppo_in_sb WF) at 1.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gsb ∪ Gsb ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite (rmw_in_sb WF) at 1.\nrewrite (rppo_in_sb WF) at 1.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gsb ∪ Gsb ∪ Gsb)＊ ⨾ Grppo ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"rewrite (rppo_in_sb WF) at 1.\narewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gsb ∪ Gsb ∪ Gsb)＊ ⨾ Gsb ⨾ ⦗S⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"arewrite (⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘) at 1.\nby generalize S_in_W; basic_solver.\nunfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"⦗S⦘ ⊆ ⦗S⦘ ⨾ ⦗W⦘.","proofString":"by generalize S_in_W; basic_solver."},{"statement":"dom_rel\n  (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gsb ∪ Gsb ∪ Gsb)＊ ⨾ Gsb ⨾ ⦗S⦘ ⨾ ⦗W⦘)⦘)\n⊆₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘).","proofString":"unfold rppo.\narewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel\n  (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel ((Gsb ∪ Gsb ∪ Gsb)＊ ⨾ Gsb ⨾ ⦗S⦘ ⨾ ⦗W⦘)⦘)\n⊆₁ dom_rel\n     ((Gdata ∪ Grfi ∪ Grmw)＊\n      ⨾ ((Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grmw_dep ⨾ Gsb ∪ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘)\n        ⨾ ⦗S⦘).","proofString":"arewrite ((Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?).\nby generalize (@sb_trans G); ins; relsf.\nrewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"(Gsb ∪ Gsb ∪ Gsb)＊ ⊆ Gsb^?.","proofString":"by generalize (@sb_trans G); ins; relsf."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ Gsb ⨾ ⦗S⦘ ⨾ ⦗W⦘)⦘)\n⊆₁ dom_rel\n     ((Gdata ∪ Grfi ∪ Grmw)＊\n      ⨾ (Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grmw_dep ⨾ Gsb ∪ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘ ⨾ ⦗S⦘).","proofString":"rewrite rtE.\ngeneralize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗dom_rel (Gsb^? ⨾ Gsb ⨾ ⦗S⦘ ⨾ ⦗W⦘)⦘)\n⊆₁ dom_rel\n     ((⦗fun _ : actid => True⦘ ∪ (Gdata ∪ Grfi ∪ Grmw)⁺)\n      ⨾ (Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grmw_dep ⨾ Gsb ∪ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘ ⨾ ⦗S⦘).","proofString":"generalize (@sb_trans G); basic_solver 32."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel (⦗I⦘ ⨾ Grfi)⦘) ⊆₁ D.","proofString":"rewrite (dom_r (wf_rfiD WF)).\ntype_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel (⦗I⦘ ⨾ Grfi ⨾ ⦗R⦘)⦘) ⊆₁ D.","proofString":"type_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)⦘) ⊆₁ D.","proofString":"unfold D.\nrewrite (dom_r (wf_rmwD WF)).\ntype_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"rewrite (dom_r (wf_rmwD WF)).\ntype_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)⦘)\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw ⨾ ⦗W⦘)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel ((Grmw ⨾ ⦗W⦘) ⨾ ⦗S⦘).","proofString":"type_solver."},{"statement":"dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"rewrite (wf_rmwD WF).\nclear; type_solver."},{"statement":"dom_rel\n  (⦗GR_ex⦘\n   ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗codom_rel Grfe ∩₁ dom_rel ((⦗R⦘ ⨾ Grmw ⨾ ⦗W⦘) ⨾ ⦗S⦘)⦘) ⊆₁ D.","proofString":"clear; type_solver."},{"statement":"dom_rel (⦗GR_ex \\₁ dom_rel Grmw⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘)\n⊆₁ dom_rel (⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘).","proofString":"basic_solver 10."},{"statement":"dom_rel (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘) ⊆₁ dom_rel (Gsb ⨾ ⦗C⦘).","proofString":"rewrite (dom_r (@wf_sbE G)).\ngeneralize F_in_C.\nbasic_solver 10."},{"statement":"dom_rel ((Gsb ⨾ ⦗E⦘) ⨾ ⦗F ∩₁ Acq/Rel⦘) ⊆₁ dom_rel ((Gsb ⨾ ⦗E⦘) ⨾ ⦗C⦘).","proofString":"generalize F_in_C.\nbasic_solver 10."},{"statement":"E ∩₁ F ∩₁ Acq/Rel ⊆₁ C ->\ndom_rel ((Gsb ⨾ ⦗E⦘) ⨾ ⦗F ∩₁ Acq/Rel⦘) ⊆₁ dom_rel ((Gsb ⨾ ⦗E⦘) ⨾ ⦗C⦘).","proofString":"basic_solver 10."},{"statement":"dom_rel (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘) ⊆₁ D.","proofString":"apply dom_sb_F_AcqRel_in_D."},{"statement":"dom_rel (Gsb ⨾ ⦗F ∩₁ Acq/Rel⦘) ⊆₁ D.","proofString":"apply dom_sb_F_AcqRel_in_D."},{"statement":"R ∩₁ Acq ∩₁ codom_rel Grfe\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"clear.\nbasic_solver 21."},{"statement":"R ∩₁ Acq ∩₁ codom_rel Grfe\n⊆₁ C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n   ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘)\n   ∪₁ codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n   ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘).","proofString":"basic_solver 21."},{"statement":"dom_rel ((Grfi ∪ Grfe) ⨾ ⦗D⦘) ⊆₁ D.","proofString":"relsf; unionL; splits.\napply dom_rfi_D.\nrevert Grfe_E.\ngeneralize I_in_D.\nclear.\nbasic_solver."},{"statement":"dom_rel (Grfi ⨾ ⦗D⦘) ⊆₁ D.","proofString":"apply dom_rfi_D."},{"statement":"dom_rel (Grfe ⨾ ⦗D⦘) ⊆₁ D.","proofString":"revert Grfe_E.\ngeneralize I_in_D.\nclear.\nbasic_solver."},{"statement":"dom_rel Grfe ⊆₁ I -> dom_rel (Grfe ⨾ ⦗D⦘) ⊆₁ D.","proofString":"generalize I_in_D.\nclear.\nbasic_solver."},{"statement":"I ⊆₁ D -> dom_rel Grfe ⊆₁ I -> dom_rel (Grfe ⨾ ⦗D⦘) ⊆₁ D.","proofString":"clear.\nbasic_solver."},{"statement":"I ⊆₁ D -> dom_rel Grfe ⊆₁ I -> dom_rel (Grfe ⨾ ⦗D⦘) ⊆₁ D.","proofString":"basic_solver."},{"statement":"forall x : actid, (exists y : actid, Grfi x y /\\ ~ D y) -> tid x = thread.","proofString":"intros x [y [RFI ND]].\ndestruct (classic (I x)) as [IX|NIX].\nexfalso.\napply ND.\ndo 2 red.\nleft.\nleft.\nright.\nbasic_solver 10.\ndestruct RFI as [RF SB].\napply (wf_rfE WF) in RF.\nunfolder in RF.\ndesf.\nassert (~ is_init x) as NINX.\nintros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split.\napply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) : tid x = thread.","proofString":"destruct (classic (I x)) as [IX|NIX].\nexfalso.\napply ND.\ndo 2 red.\nleft.\nleft.\nright.\nbasic_solver 10.\ndestruct RFI as [RF SB].\napply (wf_rfE WF) in RF.\nunfolder in RF.\ndesf.\nassert (~ is_init x) as NINX.\nintros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split.\napply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (IX : I x) : tid x = thread.","proofString":"exfalso.\napply ND.\ndo 2 red.\nleft.\nleft.\nright.\nbasic_solver 10."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (IX : I x) : False.","proofString":"apply ND.\ndo 2 red.\nleft.\nleft.\nright.\nbasic_solver 10."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (IX : I x) : D y.","proofString":"do 2 red.\nleft.\nleft.\nright.\nbasic_solver 10."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (IX : I x) : (C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘) ∪₁ \n codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)) y \\/\n(codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)) y.","proofString":"left.\nleft.\nright.\nbasic_solver 10."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (IX : I x) : (C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘) ∪₁ \n codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)) y.","proofString":"left.\nright.\nbasic_solver 10."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (IX : I x) : (C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘) ∪₁ \n codom_rel (⦗I⦘ ⨾ Grfi)) y.","proofString":"right.\nbasic_solver 10."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (IX : I x) : codom_rel (⦗I⦘ ⨾ Grfi) y.","proofString":"basic_solver 10."},{"statement":"(x y : actid) (RFI : Grfi x y) (ND : ~ D y) (NIX : ~ I x) : tid x = thread.","proofString":"destruct RFI as [RF SB].\napply (wf_rfE WF) in RF.\nunfolder in RF.\ndesf.\nassert (~ is_init x) as NINX.\nintros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split.\napply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (RF : Grf x y) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) : tid x = thread.","proofString":"apply (wf_rfE WF) in RF.\nunfolder in RF.\ndesf.\nassert (~ is_init x) as NINX.\nintros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split.\napply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (RF : (⦗E⦘ ⨾ Grf ⨾ ⦗E⦘) x y) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) : tid x = thread.","proofString":"unfolder in RF.\ndesf.\nassert (~ is_init x) as NINX.\nintros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split.\napply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) (RF : E x /\\ Grf x y /\\ E y) : tid x = thread.","proofString":"desf.\nassert (~ is_init x) as NINX.\nintros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split.\napply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) : tid x = thread.","proofString":"assert (~ is_init x) as NINX.\nintros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split.\napply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) : ~ is_init x.","proofString":"intros II.\napply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split."},{"statement":"(x y : actid) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (II : is_init x) : False.","proofString":"apply NIX.\neapply issued_certT.\neapply init_issued; eauto.\nby split."},{"statement":"(x y : actid) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (II : is_init x) : I x.","proofString":"eapply issued_certT.\neapply init_issued; eauto.\nby split."},{"statement":"(x y : actid) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (II : is_init x) : (Init ∩₁ E) x.","proofString":"by split."},{"statement":"(x y : actid) (SB : Gsb x y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) : tid x = thread.","proofString":"apply sb_tid_init in SB.\ndesf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y \\/ is_init x) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) : tid x = thread.","proofString":"desf.\napply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) : tid x = thread.","proofString":"apply NNPP.\nintros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) : ~ tid x <> thread.","proofString":"intros NTX.\nassert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) : False.","proofString":"assert (tid y <> thread) as NTY.\nintros HH.\napply NTX.\nby rewrite <- HH.\napply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) : tid y <> thread.","proofString":"intros HH.\napply NTX.\nby rewrite <- HH."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) (HH : tid y = thread) : False.","proofString":"apply NTX.\nby rewrite <- HH."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) (HH : tid y = thread) : tid x = thread.","proofString":"by rewrite <- HH."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) (NTY : tid y <> thread) : False.","proofString":"apply ND.\nred.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) (NTY : tid y <> thread) : D y.","proofString":"red.\ndo 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) (NTY : tid y <> thread) : (C ∪₁ I ∪₁ E ∩₁ NTid_ thread ∪₁ dom_rel (Grfi^? ⨾ Gppo ⨾ ⦗I⦘)\n ∪₁ dom_rel ((Gdata ∪ Grfi ∪ Grmw)＊ ⨾ Grppo ⨾ ⦗S⦘) ∪₁ \n codom_rel (⦗I⦘ ⨾ Grfi) ∪₁ codom_rel (Grfe ⨾ ⦗R ∩₁ Acq⦘)\n ∪₁ codom_rel Grfe ∩₁ dom_rel (Grmw ⨾ ⦗S⦘)) y.","proofString":"do 5 left.\nright.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) (NTY : tid y <> thread) : (C ∪₁ I ∪₁ E ∩₁ NTid_ thread) y.","proofString":"right.\nby split."},{"statement":"(x y : actid) (SB : tid x = tid y) (ND : ~ D y) (NIX : ~ I x) (RF : E x) (RF0 : Grf x y) (RF1 : E y) (NINX : ~ is_init x) (NTX : tid x <> thread) (NTY : tid y <> thread) : (E ∩₁ NTid_ thread) y.","proofString":"by split."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺ ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂ ->\ndom_rel\n  ((Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺ ⨾ ⦗D⦘)\n⊆₁ D.","proofString":"by unfolder; ins; desf; eapply H; eauto."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺ ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (inclusion_t_rt).\napply rt_ind_right with (P:= fun r =>  r ⨾ ⦗D⦘).\nby eauto with hahn.\nbasic_solver.\nintros k H; rewrite !seqA.\nrelsf; unionL.\nrewrite (dom_rel_helper dom_data_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_ctrl_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_addr_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rfi_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rmw_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_frmw_in_D); rewrite !seqA; sin_rewrite H; basic_solver."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)＊ ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"apply rt_ind_right with (P:= fun r =>  r ⨾ ⦗D⦘).\nby eauto with hahn.\nbasic_solver.\nintros k H; rewrite !seqA.\nrelsf; unionL.\nrewrite (dom_rel_helper dom_data_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_ctrl_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_addr_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rfi_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rmw_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_frmw_in_D); rewrite !seqA; sin_rewrite H; basic_solver."},{"statement":"good_ctx (fun r : relation actid => r ⨾ ⦗D⦘).","proofString":"by eauto with hahn."},{"statement":"⦗fun _ : actid => True⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"basic_solver."},{"statement":"forall k : relation actid,\nk ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂ ->\n(k ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)) ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"intros k H; rewrite !seqA.\nrelsf; unionL.\nrewrite (dom_rel_helper dom_data_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_ctrl_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_addr_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rfi_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rmw_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_frmw_in_D); rewrite !seqA; sin_rewrite H; basic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂) : k ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?) ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"relsf; unionL.\nrewrite (dom_rel_helper dom_data_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_ctrl_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_addr_in_D); rewrite !seqA; sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rfi_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_rmw_D); sin_rewrite H; basic_solver.\nrewrite (dom_rel_helper dom_frmw_in_D); rewrite !seqA; sin_rewrite H; basic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂) : k ⨾ Gdata ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_data_D); sin_rewrite H; basic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂) : k ⨾ Gctrl ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_ctrl_in_D); rewrite !seqA; sin_rewrite H; basic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂) : k ⨾ (Gaddr ⨾ Gsb^?) ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_addr_in_D); rewrite !seqA; sin_rewrite H; basic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂) : k ⨾ Grfi ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_rfi_D); sin_rewrite H; basic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂) : k ⨾ Grmw ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_rmw_D); sin_rewrite H; basic_solver."},{"statement":"(k : relation actid) (H : k ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂) : k ⨾ (Grmw_dep ⨾ Gsb^?) ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_frmw_in_D); rewrite !seqA; sin_rewrite H; basic_solver."},{"statement":"Gppo ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂ -> dom_rel (Gppo ⨾ ⦗D⦘) ⊆₁ D.","proofString":"by unfolder; ins; desf; eapply H; eauto."},{"statement":"Gppo ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"unfold ppo.\narewrite_id ⦗R⦘.\nrels.\nrewrite path_ut_first.\nrewrite !seqA.\narewrite (Gsb ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw        ∪ Grmw_dep ⨾ Gsb^? ∪ ⦗GR_ex⦘ ⨾ Gsb)＊ ⊆ Gsb).\narewrite_id ⦗GR_ex⦘.\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf.\nrelsf; unionL.\narewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver.\nrewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"(⦗R⦘\n ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n    ∪ ⦗GR_ex⦘ ⨾ Gsb)⁺ ⨾ ⦗W⦘) ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"arewrite_id ⦗R⦘.\nrels.\nrewrite path_ut_first.\nrewrite !seqA.\narewrite (Gsb ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw        ∪ Grmw_dep ⨾ Gsb^? ∪ ⦗GR_ex⦘ ⨾ Gsb)＊ ⊆ Gsb).\narewrite_id ⦗GR_ex⦘.\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf.\nrelsf; unionL.\narewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver.\nrewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"⦗fun _ : actid => True⦘\n⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n   ∪ ⦗GR_ex⦘ ⨾ Gsb)⁺ ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rels.\nrewrite path_ut_first.\nrewrite !seqA.\narewrite (Gsb ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw        ∪ Grmw_dep ⨾ Gsb^? ∪ ⦗GR_ex⦘ ⨾ Gsb)＊ ⊆ Gsb).\narewrite_id ⦗GR_ex⦘.\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf.\nrelsf; unionL.\narewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver.\nrewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n ∪ ⦗GR_ex⦘ ⨾ Gsb)⁺ ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite path_ut_first.\nrewrite !seqA.\narewrite (Gsb ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw        ∪ Grmw_dep ⨾ Gsb^? ∪ ⦗GR_ex⦘ ⨾ Gsb)＊ ⊆ Gsb).\narewrite_id ⦗GR_ex⦘.\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf.\nrelsf; unionL.\narewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver.\nrewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"((Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺\n ∪ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)＊\n   ⨾ (⦗GR_ex⦘ ⨾ Gsb)\n     ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n        ∪ ⦗GR_ex⦘ ⨾ Gsb)＊) ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite !seqA.\narewrite (Gsb ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw        ∪ Grmw_dep ⨾ Gsb^? ∪ ⦗GR_ex⦘ ⨾ Gsb)＊ ⊆ Gsb).\narewrite_id ⦗GR_ex⦘.\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf.\nrelsf; unionL.\narewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver.\nrewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"((Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺\n ∪ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)＊\n   ⨾ ⦗GR_ex⦘\n     ⨾ Gsb\n       ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n          ∪ ⦗GR_ex⦘ ⨾ Gsb)＊) ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"arewrite (Gsb ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw        ∪ Grmw_dep ⨾ Gsb^? ∪ ⦗GR_ex⦘ ⨾ Gsb)＊ ⊆ Gsb).\narewrite_id ⦗GR_ex⦘.\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf.\nrelsf; unionL.\narewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver.\nrewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"Gsb\n⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n   ∪ ⦗GR_ex⦘ ⨾ Gsb)＊ ⊆ Gsb.","proofString":"arewrite_id ⦗GR_ex⦘.\nrewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf."},{"statement":"Gsb\n⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n   ∪ ⦗fun _ : actid => True⦘ ⨾ Gsb)＊ ⊆ Gsb.","proofString":"rewrite (data_in_sb WF), (addr_in_sb WF), (ctrl_in_sb WF).\nrewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf."},{"statement":"Gsb\n⨾ (Gsb ∪ Gsb ∪ Gsb ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?\n   ∪ ⦗fun _ : actid => True⦘ ⨾ Gsb)＊ ⊆ Gsb.","proofString":"rewrite (rmw_dep_in_sb WF), (rmw_in_sb WF).\narewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf."},{"statement":"Gsb\n⨾ (Gsb ∪ Gsb ∪ Gsb ⨾ Gsb^? ∪ Grfi ∪ Gsb ∪ Gsb ⨾ Gsb^?\n   ∪ ⦗fun _ : actid => True⦘ ⨾ Gsb)＊ ⊆ Gsb.","proofString":"arewrite (Grfi ⊆ Gsb).\ngeneralize (@sb_trans G); ins; relsf."},{"statement":"Gsb\n⨾ (Gsb ∪ Gsb ∪ Gsb ⨾ Gsb^? ∪ Gsb ∪ Gsb ∪ Gsb ⨾ Gsb^?\n   ∪ ⦗fun _ : actid => True⦘ ⨾ Gsb)＊ ⊆ Gsb.","proofString":"generalize (@sb_trans G); ins; relsf."},{"statement":"((Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺\n ∪ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)＊\n   ⨾ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"relsf; unionL.\narewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver.\nrewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺ ⨾ ⦗W⦘ ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"arewrite_id ⦗W⦘.\nrels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺\n⨾ ⦗fun _ : actid => True⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rels.\nrewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺ ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver."},{"statement":"⦗D⦘ ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺ ⨾ ⦗D⦘\n⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"basic_solver."},{"statement":"((Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)＊\n ⨾ ⦗GR_ex⦘ ⨾ Gsb) ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite !seqA.\nrewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)＊\n⨾ ⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite (dom_rel_helper dom_R_ex_sb_D).\nrewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"(Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)＊\n⨾ ⦗D⦘ ⨾ ⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"rewrite rtE; relsf.\nseq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"⦗D⦘ ⨾ ⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘\n∪ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺\n  ⨾ ⦗D⦘ ⨾ ⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"seq_rewrite (dom_rel_helper dom_ppo_D_helper).\nbasic_solver 12."},{"statement":"⦗D⦘ ⨾ ⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘\n∪ (⦗D⦘\n   ⨾ (Gdata ∪ Gctrl ∪ Gaddr ⨾ Gsb^? ∪ Grfi ∪ Grmw ∪ Grmw_dep ⨾ Gsb^?)⁺ ⨾ ⦗D⦘)\n  ⨾ ⦗GR_ex⦘ ⨾ Gsb ⨾ ⦗W⦘ ⨾ ⦗D⦘ ⊆ ⦗D⦘ ⨾ ⊤₂.","proofString":"basic_solver 12."},{"statement":"dom_rel (Gppo ⨾ ⦗D⦘) ⊆₁ D.","proofString":"apply dom_ppo_D."},{"statement":"dom_rel ((⦗fun _ : actid => True⦘ ∪ Gar_int⁺) ⨾ ⦗I⦘) ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"generalize I_in_D, dom_ar_int_D.\nclear.\nbasic_solver."},{"statement":"I ⊆₁ D ->\ndom_rel (Gar_int⁺ ⨾ ⦗I⦘) ⊆₁ D ∪₁ R ∩₁ Acq ->\ndom_rel ((⦗fun _ : actid => True⦘ ∪ Gar_int⁺) ⨾ ⦗I⦘) ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"clear.\nbasic_solver."},{"statement":"I ⊆₁ D ->\ndom_rel (Gar_int⁺ ⨾ ⦗I⦘) ⊆₁ D ∪₁ R ∩₁ Acq ->\ndom_rel ((⦗fun _ : actid => True⦘ ∪ Gar_int⁺) ⨾ ⦗I⦘) ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"basic_solver."},{"statement":"dom_rel (Gsb＊ ⨾ ⦗C⦘) ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"rewrite rt_of_trans; [|by apply sb_trans].\nrewrite crE.\nrelsf.\nrewrite dom_sb_C_in_D, C_in_D.\nbasic_solver."},{"statement":"dom_rel (Gsb^? ⨾ ⦗C⦘) ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"rewrite crE.\nrelsf.\nrewrite dom_sb_C_in_D, C_in_D.\nbasic_solver."},{"statement":"dom_rel ((⦗fun _ : actid => True⦘ ∪ Gsb) ⨾ ⦗C⦘) ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"relsf.\nrewrite dom_sb_C_in_D, C_in_D.\nbasic_solver."},{"statement":"C ⊆₁ D ∪₁ R ∩₁ Acq /\\ dom_rel (Gsb ⨾ ⦗C⦘) ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"rewrite dom_sb_C_in_D, C_in_D.\nbasic_solver."},{"statement":"D ⊆₁ D ∪₁ R ∩₁ Acq /\\ D ⊆₁ D ∪₁ R ∩₁ Acq.","proofString":"basic_solver."}]}