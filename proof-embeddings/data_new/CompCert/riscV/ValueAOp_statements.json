{"filePath":"/Users/andrei/MCS_Projects/coqPilotOther/CompCert/riscV/ValueAOp.v","fileSamples":[{"statement":"(cond : condition) (m : mem) : cmatch (eval_condition cond nil m) (eval_static_condition cond nil).","conclusion":"cmatch (eval_condition cond nil m) (eval_static_condition cond nil)","hypotheses":"(cond : condition) (m : mem)","proofString":"destruct cond; auto with va."},{"statement":"(id : ident) (ofs : ptrofs) : vmatch bc (Genv.symbol_address ge id ofs) (Ifptr (Gl id ofs)).","conclusion":"vmatch bc (Genv.symbol_address ge id ofs) (Ifptr (Gl id ofs))","hypotheses":"(id : ident) (ofs : ptrofs)","proofString":"unfold Genv.symbol_address.\ndestruct (Genv.find_symbol ge id) as [b|] eqn:F.\nconstructor.\nconstructor.\napply GENV; auto.\nconstructor."},{"statement":"(id : ident) (ofs : ptrofs) : vmatch bc\n  match Genv.find_symbol ge id with\n  | Some b => Vptr b ofs\n  | None => Vundef\n  end (Ifptr (Gl id ofs)).","conclusion":"vmatch bc\n  match Genv.find_symbol ge id with\n  | Some b => Vptr b ofs\n  | None => Vundef\n  end (Ifptr (Gl id ofs))","hypotheses":"(id : ident) (ofs : ptrofs)","proofString":"destruct (Genv.find_symbol ge id) as [b|] eqn:F.\nconstructor.\nconstructor.\napply GENV; auto.\nconstructor."},{"statement":"(id : ident) (ofs : ptrofs) (b : block) (F : Genv.find_symbol ge id = Some b) : vmatch bc (Vptr b ofs) (Ifptr (Gl id ofs)).","conclusion":"vmatch bc (Vptr b ofs) (Ifptr (Gl id ofs))","hypotheses":"(id : ident) (ofs : ptrofs) (b : block) (F : Genv.find_symbol ge id = Some b)","proofString":"constructor.\nconstructor.\napply GENV; auto."},{"statement":"(id : ident) (ofs : ptrofs) (b : block) (F : Genv.find_symbol ge id = Some b) : pmatch bc b ofs (Gl id ofs).","conclusion":"pmatch bc b ofs (Gl id ofs)","hypotheses":"(id : ident) (ofs : ptrofs) (b : block) (F : Genv.find_symbol ge id = Some b)","proofString":"constructor.\napply GENV; auto."},{"statement":"(id : ident) (ofs : ptrofs) (b : block) (F : Genv.find_symbol ge id = Some b) : bc b = BCglob id.","conclusion":"bc b = BCglob id","hypotheses":"(id : ident) (ofs : ptrofs) (b : block) (F : Genv.find_symbol ge id = Some b)","proofString":"apply GENV; auto."},{"statement":"(id : ident) (ofs : ptrofs) (F : Genv.find_symbol ge id = None) : vmatch bc Vundef (Ifptr (Gl id ofs)).","conclusion":"vmatch bc Vundef (Ifptr (Gl id ofs))","hypotheses":"(id : ident) (ofs : ptrofs) (F : Genv.find_symbol ge id = None)","proofString":"constructor."}]}